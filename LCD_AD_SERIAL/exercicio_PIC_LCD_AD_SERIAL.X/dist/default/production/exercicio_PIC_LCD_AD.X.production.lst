

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Nov 19 09:37:47 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           ; Version 1.41
    66                           ; Generated 25/01/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  002F42                     __pidataBANK0:
   102                           	opt stack 0
   103                           
   104                           ;initializer for _qtdDias_mes
   105  002F42  0000               	dw	0
   106  002F44  001F               	dw	31
   107  002F46  001C               	dw	28
   108  002F48  001F               	dw	31
   109  002F4A  001E               	dw	30
   110  002F4C  001F               	dw	31
   111  002F4E  001E               	dw	30
   112  002F50  001F               	dw	31
   113  002F52  001F               	dw	31
   114  002F54  001E               	dw	30
   115  002F56  001F               	dw	31
   116  002F58  001E               	dw	30
   117  002F5A  001F               	dw	31
   118                           
   119                           	psect	smallconst
   120  000800                     __psmallconst:
   121                           	opt stack 0
   122  000800  00                 	db	0
   123  000801                     _dpowers:
   124                           	opt stack 0
   125  000801  0001               	dw	1
   126  000803  000A               	dw	10
   127  000805  0064               	dw	100
   128  000807  03E8               	dw	1000
   129  000809  2710               	dw	10000
   130  00080B                     __end_of_dpowers:
   131                           	opt stack 0
   132  0000                     _TMR0	set	4054
   133  0000                     _TRISBbits	set	3987
   134  0000                     _PORTB	set	3969
   135  0000                     _LATBbits	set	3978
   136  0000                     _ADRESL	set	4035
   137  0000                     _ADRESH	set	4036
   138  0000                     _ADCON0bits	set	4034
   139  0000                     _PIR1bits	set	3998
   140  0000                     _TRISDbits	set	3989
   141  0000                     _TRISB	set	3987
   142  0000                     _TRISCbits	set	3988
   143  0000                     _TXSTA	set	4012
   144  0000                     _RCSTA	set	4011
   145  0000                     _SPBRG	set	4015
   146  0000                     _PORTAbits	set	3968
   147  0000                     _TRISA	set	3986
   148  0000                     _TRISAbits	set	3986
   149  0000                     _INTCONbits	set	4082
   150  0000                     _T0CONbits	set	4053
   151  0000                     _PORTCbits	set	3970
   152  0000                     _RCREG	set	4014
   153  0000                     _TXREG	set	4013
   154  0000                     _PORTDbits	set	3971
   155  0000                     _ADCON1	set	4033
   156  0000                     _ADCON0	set	4034
   157  0000                     _ADCON2	set	4032
   158  0000                     _TMR0IF	set	32658
   159  0000                     _PEIE	set	32662
   160  0000                     _RCIE	set	31981
   161  0000                     _RCIP	set	31997
   162  0000                     _RCIF	set	31989
   163  0000                     _TXIF	set	31988
   164  00080B                     STR_4:
   165  00080B  25                 	db	37
   166  00080C  64                 	db	100	;'d'
   167  00080D  25                 	db	37
   168  00080E  64                 	db	100	;'d'
   169  00080F  3A                 	db	58	;':'
   170  000810  25                 	db	37
   171  000811  64                 	db	100	;'d'
   172  000812  25                 	db	37
   173  000813  64                 	db	100	;'d'
   174  000814  3A                 	db	58	;':'
   175  000815  25                 	db	37
   176  000816  64                 	db	100	;'d'
   177  000817  25                 	db	37
   178  000818  64                 	db	100	;'d'
   179  000819  20                 	db	32
   180  00081A  20                 	db	32
   181  00081B  20                 	db	32
   182  00081C  20                 	db	32
   183  00081D  20                 	db	32
   184  00081E  20                 	db	32
   185  00081F  20                 	db	32
   186  000820  20                 	db	32
   187  000821  00                 	db	0
   188  000822                     STR_2:
   189  000822  48                 	db	72	;'H'
   190  000823  4F                 	db	79	;'O'
   191  000824  52                 	db	82	;'R'
   192  000825  41                 	db	65	;'A'
   193  000826  3A                 	db	58	;':'
   194  000827  20                 	db	32
   195  000828  25                 	db	37
   196  000829  64                 	db	100	;'d'
   197  00082A  25                 	db	37
   198  00082B  64                 	db	100	;'d'
   199  00082C  3A                 	db	58	;':'
   200  00082D  25                 	db	37
   201  00082E  64                 	db	100	;'d'
   202  00082F  25                 	db	37
   203  000830  64                 	db	100	;'d'
   204  000831  3A                 	db	58	;':'
   205  000832  25                 	db	37
   206  000833  64                 	db	100	;'d'
   207  000834  25                 	db	37
   208  000835  64                 	db	100	;'d'
   209  000836  20                 	db	32
   210  000837  00                 	db	0
   211  000838                     STR_3:
   212  000838  44                 	db	68	;'D'
   213  000839  41                 	db	65	;'A'
   214  00083A  54                 	db	84	;'T'
   215  00083B  41                 	db	65	;'A'
   216  00083C  3A                 	db	58	;':'
   217  00083D  20                 	db	32
   218  00083E  25                 	db	37
   219  00083F  64                 	db	100	;'d'
   220  000840  25                 	db	37
   221  000841  64                 	db	100	;'d'
   222  000842  3A                 	db	58	;':'
   223  000843  25                 	db	37
   224  000844  64                 	db	100	;'d'
   225  000845  25                 	db	37
   226  000846  64                 	db	100	;'d'
   227  000847  3A                 	db	58	;':'
   228  000848  25                 	db	37
   229  000849  64                 	db	100	;'d'
   230  00084A  25                 	db	37
   231  00084B  64                 	db	100	;'d'
   232  00084C  20                 	db	32
   233  00084D  00                 	db	0
   234  00084E                     STR_8:
   235  00084E  25                 	db	37
   236  00084F  64                 	db	100	;'d'
   237  000850  20                 	db	32
   238  000851  25                 	db	37
   239  000852  64                 	db	100	;'d'
   240  000853  20                 	db	32
   241  000854  25                 	db	37
   242  000855  64                 	db	100	;'d'
   243  000856  20                 	db	32
   244  000857  20                 	db	32
   245  000858  20                 	db	32
   246  000859  20                 	db	32
   247  00085A  20                 	db	32
   248  00085B  20                 	db	32
   249  00085C  20                 	db	32
   250  00085D  20                 	db	32
   251  00085E  20                 	db	32
   252  00085F  20                 	db	32
   253  000860  20                 	db	32
   254  000861  00                 	db	0
   255  000862                     STR_7:
   256  000862  53                 	db	83	;'S'
   257  000863  45                 	db	69	;'E'
   258  000864  52                 	db	82	;'R'
   259  000865  49                 	db	73	;'I'
   260  000866  41                 	db	65	;'A'
   261  000867  4C                 	db	76	;'L'
   262  000868  3A                 	db	58	;':'
   263  000869  20                 	db	32
   264  00086A  20                 	db	32
   265  00086B  20                 	db	32
   266  00086C  20                 	db	32
   267  00086D  20                 	db	32
   268  00086E  20                 	db	32
   269  00086F  20                 	db	32
   270  000870  20                 	db	32
   271  000871  20                 	db	32
   272  000872  00                 	db	0
   273  000873                     STR_6:
   274  000873  54                 	db	84	;'T'
   275  000874  45                 	db	69	;'E'
   276  000875  4D                 	db	77	;'M'
   277  000876  50                 	db	80	;'P'
   278  000877  45                 	db	69	;'E'
   279  000878  52                 	db	82	;'R'
   280  000879  41                 	db	65	;'A'
   281  00087A  54                 	db	84	;'T'
   282  00087B  55                 	db	85	;'U'
   283  00087C  52                 	db	82	;'R'
   284  00087D  41                 	db	65	;'A'
   285  00087E  3A                 	db	58	;':'
   286  00087F  20                 	db	32
   287  000880  20                 	db	32
   288  000881  20                 	db	32
   289  000882  20                 	db	32
   290  000883  00                 	db	0
   291  000884                     STR_5:
   292  000884  44                 	db	68	;'D'
   293  000885  45                 	db	69	;'E'
   294  000886  53                 	db	83	;'S'
   295  000887  50                 	db	80	;'P'
   296  000888  45                 	db	69	;'E'
   297  000889  52                 	db	82	;'R'
   298  00088A  54                 	db	84	;'T'
   299  00088B  41                 	db	65	;'A'
   300  00088C  44                 	db	68	;'D'
   301  00088D  4F                 	db	79	;'O'
   302  00088E  52                 	db	82	;'R'
   303  00088F  3A                 	db	58	;':'
   304  000890  20                 	db	32
   305  000891  20                 	db	32
   306  000892  20                 	db	32
   307  000893  20                 	db	32
   308  000894  00                 	db	0
   309  000895                     STR_1:
   310  000895  25                 	db	37
   311  000896  64                 	db	100	;'d'
   312  000897  2C                 	db	44
   313  000898  25                 	db	37
   314  000899  64                 	db	100	;'d'
   315  00089A  20                 	db	32
   316  00089B  6F                 	db	111	;'o'
   317  00089C  43                 	db	67	;'C'
   318  00089D  20                 	db	32
   319  00089E  20                 	db	32
   320  00089F  20                 	db	32
   321  0008A0  20                 	db	32
   322  0008A1  20                 	db	32
   323  0008A2  20                 	db	32
   324  0008A3  20                 	db	32
   325  0008A4  20                 	db	32
   326  0008A5  00                 	db	0
   327                           
   328                           ; #config settings
   329  0008A6  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           	psect	cinit
   332  002CF6                     __pcinit:
   333                           	opt stack 0
   334  002CF6                     start_initialization:
   335                           	opt stack 0
   336  002CF6                     __initialization:
   337                           	opt stack 0
   338                           
   339                           ; Initialize objects allocated to BANK0 (26 bytes)
   340                           ; load TBLPTR registers with __pidataBANK0
   341  002CF6  0E42               	movlw	low __pidataBANK0
   342  002CF8  6EF6               	movwf	tblptrl,c
   343  002CFA  0E2F               	movlw	high __pidataBANK0
   344  002CFC  6EF7               	movwf	tblptrh,c
   345  002CFE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   346  002D00  6EF8               	movwf	tblptru,c
   347  002D02  EE00  F0E1         	lfsr	0,__pdataBANK0
   348  002D06  EE10 F01A          	lfsr	1,26
   349  002D0A                     copy_data0:
   350  002D0A  0009               	tblrd		*+
   351  002D0C  CFF5 FFEE          	movff	tablat,postinc0
   352  002D10  50E5               	movf	postdec1,w,c
   353  002D12  50E1               	movf	fsr1l,w,c
   354  002D14  E1FA               	bnz	copy_data0
   355                           
   356                           ; Clear objects allocated to BANK0 (58 bytes)
   357  002D16  EE00  F0A7         	lfsr	0,__pbssBANK0
   358  002D1A  0E3A               	movlw	58
   359  002D1C                     clear_0:
   360  002D1C  6AEE               	clrf	postinc0,c
   361  002D1E  06E8               	decf	wreg,f,c
   362  002D20  E1FD               	bnz	clear_0
   363                           
   364                           ; Clear objects allocated to COMRAM (14 bytes)
   365  002D22  EE00  F042         	lfsr	0,__pbssCOMRAM
   366  002D26  0E0E               	movlw	14
   367  002D28                     clear_1:
   368  002D28  6AEE               	clrf	postinc0,c
   369  002D2A  06E8               	decf	wreg,f,c
   370  002D2C  E1FD               	bnz	clear_1
   371  002D2E                     end_of_initialization:
   372                           	opt stack 0
   373  002D2E                     __end_of__initialization:
   374                           	opt stack 0
   375  002D2E  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   376  002D30  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   377  002D32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   378  002D34  6EF8               	movwf	tblptru,c
   379  002D36  0100               	movlb	0
   380  002D38  EF28  F00D         	goto	_main	;jump to C main() function
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	bssCOMRAM
   391  000042                     __pbssCOMRAM:
   392                           	opt stack 0
   393  000042                     _BUFF_RESP:
   394                           	opt stack 0
   395  000042                     	ds	3
   396  000045                     _numero_entrada_terminal:
   397                           	opt stack 0
   398  000045                     	ds	2
   399  000047                     _controle_tempo_despertar:
   400                           	opt stack 0
   401  000047                     	ds	2
   402  000049                     _cursor:
   403                           	opt stack 0
   404  000049                     	ds	2
   405  00004B                     _ADCResult:
   406                           	opt stack 0
   407  00004B                     	ds	2
   408  00004D                     _serial_data:
   409                           	opt stack 0
   410  00004D                     	ds	1
   411  00004E                     _despertar:
   412                           	opt stack 0
   413  00004E                     	ds	1
   414  00004F                     _flag_time:
   415                           	opt stack 0
   416  00004F                     	ds	1
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1l	equ	0xFE1
   425                           
   426                           	psect	bssBANK0
   427  0000A7                     __pbssBANK0:
   428                           	opt stack 0
   429  0000A7                     _BUFF_COM:
   430                           	opt stack 0
   431  0000A7                     	ds	3
   432  0000AA                     _valor_tensao:
   433                           	opt stack 0
   434  0000AA                     	ds	3
   435  0000AD                     _errno:
   436                           	opt stack 0
   437  0000AD                     	ds	2
   438  0000AF                     _ESTADO_COMUNICACAO:
   439                           	opt stack 0
   440  0000AF                     	ds	2
   441  0000B1                     _contador:
   442                           	opt stack 0
   443  0000B1                     	ds	2
   444  0000B3                     _tela_exibida:
   445                           	opt stack 0
   446  0000B3                     	ds	2
   447  0000B5                     _str:
   448                           	opt stack 0
   449  0000B5                     	ds	16
   450  0000C5                     _temperatura_display:
   451                           	opt stack 0
   452  0000C5                     	ds	10
   453  0000CF                     _Calendario:
   454                           	opt stack 0
   455  0000CF                     	ds	6
   456  0000D5                     _Despertador:
   457                           	opt stack 0
   458  0000D5                     	ds	6
   459  0000DB                     _Relogio:
   460                           	opt stack 0
   461  0000DB                     	ds	6
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           postdec1	equ	0xFE5
   469                           fsr1l	equ	0xFE1
   470                           
   471                           	psect	dataBANK0
   472  0000E1                     __pdataBANK0:
   473                           	opt stack 0
   474  0000E1                     _qtdDias_mes:
   475                           	opt stack 0
   476  0000E1                     	ds	26
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	cstackBANK0
   487  000060                     __pcstackBANK0:
   488                           	opt stack 0
   489  000060                     ?_floor:
   490                           	opt stack 0
   491  000060                     floor@x:
   492                           	opt stack 0
   493                           
   494                           ; 3 bytes @ 0x0
   495  000060                     	ds	3
   496  000063                     floor@i:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0x3
   500  000063                     	ds	3
   501  000066                     floor@expon:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x6
   505  000066                     	ds	2
   506  000068                     convert_float_to_char@valor:
   507                           	opt stack 0
   508                           
   509                           ; 3 bytes @ 0x8
   510  000068                     	ds	3
   511  00006B                     convert_float_to_char@f2:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0xB
   515  00006B                     	ds	3
   516  00006E                     convert_float_to_char@i1:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0xE
   520  00006E                     	ds	2
   521  000070                     convert_float_to_char@i2:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x10
   525  000070                     	ds	2
   526  000072                     convert_float_to_char@f1:
   527                           	opt stack 0
   528                           
   529                           ; 3 bytes @ 0x12
   530  000072                     	ds	3
   531  000075                     exibir_lcd@Relogio:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x15
   535  000075                     	ds	2
   536  000077                     exibir_lcd@Despertador:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x17
   540  000077                     	ds	2
   541  000079                     exibir_lcd@Calendario:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x19
   545  000079                     	ds	2
   546  00007B                     ??_exibir_lcd:
   547                           
   548                           ; 1 bytes @ 0x1B
   549  00007B                     	ds	2
   550  00007D                     exibir_lcd@str:
   551                           	opt stack 0
   552                           
   553                           ; 16 bytes @ 0x1D
   554  00007D                     	ds	16
   555  00008D                     exibir_lcd@g:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x2D
   559  00008D                     	ds	2
   560  00008F                     exibir_lcd@h:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x2F
   564  00008F                     	ds	2
   565  000091                     exibir_lcd@i:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x31
   569  000091                     	ds	2
   570  000093                     exibir_lcd@j:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x33
   574  000093                     	ds	2
   575  000095                     exibir_lcd@k:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x35
   579  000095                     	ds	2
   580  000097                     exibir_lcd@l:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x37
   584  000097                     	ds	2
   585  000099                     exibir_lcd@a:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x39
   589  000099                     	ds	2
   590  00009B                     exibir_lcd@b:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x3B
   594  00009B                     	ds	2
   595  00009D                     exibir_lcd@c:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x3D
   599  00009D                     	ds	2
   600  00009F                     exibir_lcd@d:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x3F
   604  00009F                     	ds	2
   605  0000A1                     exibir_lcd@e:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x41
   609  0000A1                     	ds	2
   610  0000A3                     exibir_lcd@f:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x43
   614  0000A3                     	ds	2
   615  0000A5                     ??_main:
   616                           
   617                           ; 1 bytes @ 0x45
   618  0000A5                     	ds	2
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           
   628                           	psect	cstackCOMRAM
   629  000001                     __pcstackCOMRAM:
   630                           	opt stack 0
   631  000001                     ??_pic_isr:
   632  000001                     
   633                           ; 2 bytes @ 0x0
   634  000001                     	ds	14
   635  00000F                     ??_SetChanADC:
   636  00000F                     ??_Delay10KTCYx:
   637  00000F                     ??_trata_comando:
   638  00000F                     ?_ReadADC:
   639                           	opt stack 0
   640  00000F                     ?___awmod:
   641                           	opt stack 0
   642  00000F                     ?___lwdiv:
   643                           	opt stack 0
   644  00000F                     ?___ftpack:
   645                           	opt stack 0
   646  00000F                     ?___ftneg:
   647                           	opt stack 0
   648  00000F                     Delay10TCYx@unit:
   649                           	opt stack 0
   650  00000F                     Delay1KTCYx@unit:
   651                           	opt stack 0
   652  00000F                     tratar_relogio@Relogio:
   653                           	opt stack 0
   654  00000F                     controla_despertador@Despertador:
   655                           	opt stack 0
   656  00000F                     tx_data@cont:
   657                           	opt stack 0
   658  00000F                     ___awmod@dividend:
   659                           	opt stack 0
   660  00000F                     ___lwdiv@dividend:
   661                           	opt stack 0
   662  00000F                     ___ftpack@arg:
   663                           	opt stack 0
   664  00000F                     frexp@value:
   665                           	opt stack 0
   666  00000F                     ___ftge@ff1:
   667                           	opt stack 0
   668  00000F                     ___ftneg@f1:
   669                           	opt stack 0
   670                           
   671                           ; 3 bytes @ 0xE
   672  00000F                     	ds	1
   673  000010                     ??_SetDDRamAddr:
   674  000010                     SetChanADC@channel:
   675                           	opt stack 0
   676  000010                     WriteCmdXLCD@cmd:
   677                           	opt stack 0
   678  000010                     WriteDataXLCD@data:
   679                           	opt stack 0
   680  000010                     Delay10KTCYx@unit:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0xF
   684  000010                     	ds	1
   685  000011                     ??_ReadADC:
   686  000011                     ??_maquina_estado:
   687  000011                     tratar_relogio@Calendario:
   688                           	opt stack 0
   689  000011                     putrsXLCD@buffer:
   690                           	opt stack 0
   691  000011                     ___awmod@divisor:
   692                           	opt stack 0
   693  000011                     ___lwdiv@divisor:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x10
   697  000011                     	ds	1
   698  000012                     ___ftpack@exp:
   699                           	opt stack 0
   700  000012                     frexp@eptr:
   701                           	opt stack 0
   702  000012                     ___ftge@ff2:
   703                           	opt stack 0
   704                           
   705                           ; 3 bytes @ 0x11
   706  000012                     	ds	1
   707  000013                     ??_tratar_relogio:
   708  000013                     SetDDRamAddr@DDaddr:
   709                           	opt stack 0
   710  000013                     ___awmod@counter:
   711                           	opt stack 0
   712  000013                     ___ftpack@sign:
   713                           	opt stack 0
   714  000013                     checa_botao@Relogio:
   715                           	opt stack 0
   716  000013                     ___lwdiv@quotient:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x12
   720  000013                     	ds	1
   721  000014                     ??___ftpack:
   722  000014                     ??_frexp:
   723  000014                     OpenXLCD@lcdtype:
   724                           	opt stack 0
   725  000014                     ___awmod@sign:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x13
   729  000014                     	ds	1
   730  000015                     ??___ftge:
   731  000015                     ?___awdiv:
   732                           	opt stack 0
   733  000015                     ___lwdiv@counter:
   734                           	opt stack 0
   735  000015                     checa_botao@Despertador:
   736                           	opt stack 0
   737  000015                     ___awdiv@dividend:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x14
   741  000015                     	ds	1
   742  000016                     ?___lwmod:
   743                           	opt stack 0
   744  000016                     ___lwmod@dividend:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x15
   748  000016                     	ds	1
   749  000017                     ?___ftadd:
   750                           	opt stack 0
   751  000017                     ?___lwtoft:
   752                           	opt stack 0
   753  000017                     checa_botao@Calendario:
   754                           	opt stack 0
   755  000017                     ___awdiv@divisor:
   756                           	opt stack 0
   757  000017                     ___lwtoft@c:
   758                           	opt stack 0
   759  000017                     ___ftadd@f1:
   760                           	opt stack 0
   761                           
   762                           ; 3 bytes @ 0x16
   763  000017                     	ds	1
   764  000018                     ___lwmod@divisor:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x17
   768  000018                     	ds	1
   769  000019                     ??_checa_botao:
   770  000019                     ___awdiv@counter:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x18
   774  000019                     	ds	1
   775  00001A                     ?___ftmul:
   776                           	opt stack 0
   777  00001A                     ___awdiv@sign:
   778                           	opt stack 0
   779  00001A                     ___lwmod@counter:
   780                           	opt stack 0
   781  00001A                     ___ftadd@f2:
   782                           	opt stack 0
   783  00001A                     ___ftmul@f1:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0x19
   787  00001A                     	ds	1
   788  00001B                     ?_sprintf:
   789                           	opt stack 0
   790  00001B                     sprintf@sp:
   791                           	opt stack 0
   792  00001B                     ___awdiv@quotient:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x1A
   796  00001B                     	ds	2
   797  00001D                     ??___ftadd:
   798  00001D                     sprintf@f:
   799                           	opt stack 0
   800  00001D                     ___ftmul@f2:
   801                           	opt stack 0
   802                           
   803                           ; 3 bytes @ 0x1C
   804  00001D                     	ds	3
   805  000020                     ??___ftmul:
   806  000020                     ___ftadd@sign:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x1F
   810  000020                     	ds	1
   811  000021                     ___ftadd@exp2:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x20
   815  000021                     	ds	1
   816  000022                     ___ftadd@exp1:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x21
   820  000022                     	ds	1
   821  000023                     ___ftmul@exp:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x22
   825  000023                     	ds	1
   826  000024                     ___ftmul@f3_as_product:
   827                           	opt stack 0
   828                           
   829                           ; 3 bytes @ 0x23
   830  000024                     	ds	3
   831  000027                     ___ftmul@cntr:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x26
   835  000027                     	ds	1
   836  000028                     ___ftmul@sign:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x27
   840  000028                     	ds	1
   841  000029                     ?___ftdiv:
   842                           	opt stack 0
   843  000029                     ?___fttol:
   844                           	opt stack 0
   845  000029                     ___ftdiv@f1:
   846                           	opt stack 0
   847  000029                     ___fttol@f1:
   848                           	opt stack 0
   849                           
   850                           ; 3 bytes @ 0x28
   851  000029                     	ds	2
   852  00002B                     ??_sprintf:
   853                           
   854                           ; 1 bytes @ 0x2A
   855  00002B                     	ds	1
   856  00002C                     sprintf@ap:
   857                           	opt stack 0
   858  00002C                     ___ftdiv@f2:
   859                           	opt stack 0
   860                           
   861                           ; 3 bytes @ 0x2B
   862  00002C                     	ds	1
   863  00002D                     ??___fttol:
   864                           
   865                           ; 1 bytes @ 0x2C
   866  00002D                     	ds	1
   867  00002E                     sprintf@flag:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x2D
   871  00002E                     	ds	1
   872  00002F                     ??___ftdiv:
   873  00002F                     sprintf@prec:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x2E
   877  00002F                     	ds	1
   878  000030                     sprintf@val:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x2F
   882  000030                     	ds	2
   883  000032                     sprintf@c:
   884                           	opt stack 0
   885  000032                     ___ftdiv@cntr:
   886                           	opt stack 0
   887  000032                     ___fttol@sign1:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x31
   891  000032                     	ds	1
   892  000033                     ___ftdiv@f3:
   893                           	opt stack 0
   894  000033                     ___fttol@lval:
   895                           	opt stack 0
   896                           
   897                           ; 4 bytes @ 0x32
   898  000033                     	ds	3
   899  000036                     ___ftdiv@exp:
   900                           	opt stack 0
   901                           
   902                           ; 1 bytes @ 0x35
   903  000036                     	ds	1
   904  000037                     ___ftdiv@sign:
   905                           	opt stack 0
   906  000037                     ___fttol@exp1:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x36
   910  000037                     	ds	1
   911  000038                     ?___altoft:
   912                           	opt stack 0
   913  000038                     convert@i:
   914                           	opt stack 0
   915  000038                     ___altoft@c:
   916                           	opt stack 0
   917                           
   918                           ; 4 bytes @ 0x37
   919  000038                     	ds	4
   920  00003C                     ??___altoft:
   921                           
   922                           ; 1 bytes @ 0x3B
   923  00003C                     	ds	4
   924  000040                     ___altoft@exp:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x3F
   928  000040                     	ds	1
   929  000041                     ___altoft@sign:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x40
   933  000041                     	ds	1
   934  000042                     tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           
   943                           ; 1 bytes @ 0x41
   944 ;;
   945 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   946 ;;
   947 ;; *************** function _main *****************
   948 ;; Defined at:
   949 ;;		line 22 in file "exercicio_PIC_LCD_AD.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   963 ;;      Params:         0       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       2       0       0       0       0       0       0       0
   966 ;;      Totals:         0       2       0       0       0       0       0       0       0
   967 ;;Total ram usage:        2 bytes
   968 ;; Hardware stack levels required when called:    8
   969 ;; This function calls:
   970 ;;		_WriteCmdXLCD
   971 ;;		_checa_botao
   972 ;;		_convert
   973 ;;		_exibir_lcd
   974 ;;		_init_ADC
   975 ;;		_init_XLCD
   976 ;;		_maquina_estado
   977 ;;		_pisca_cursor
   978 ;;		_tratar_relogio
   979 ;; This function is called by:
   980 ;;		Startup code after reset
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text0
   985  001A50                     __ptext0:
   986                           	opt stack 0
   987  001A50                     _main:
   988                           	opt stack 23
   989                           
   990                           ;exercicio_PIC_LCD_AD.c: 24: Relogio.segundo=0;
   991                           
   992                           ;incstack = 0
   993  001A50  0E00               	movlw	0
   994  001A52  0100               	movlb	0	; () banked
   995  001A54  6FDE               	movwf	(_Relogio+3)& (0+255),b
   996  001A56  0E00               	movlw	0
   997  001A58  6FDD               	movwf	(_Relogio+2)& (0+255),b
   998                           
   999                           ;exercicio_PIC_LCD_AD.c: 25: Relogio.minuto=0;
  1000  001A5A  0E00               	movlw	0
  1001  001A5C  0100               	movlb	0	; () banked
  1002  001A5E  6FDC               	movwf	(_Relogio+1)& (0+255),b
  1003  001A60  0E00               	movlw	0
  1004  001A62  6FDB               	movwf	_Relogio& (0+255),b
  1005                           
  1006                           ;exercicio_PIC_LCD_AD.c: 26: Relogio.hora=0;
  1007  001A64  0E00               	movlw	0
  1008  001A66  0100               	movlb	0	; () banked
  1009  001A68  6FE0               	movwf	(_Relogio+5)& (0+255),b
  1010  001A6A  0E00               	movlw	0
  1011  001A6C  6FDF               	movwf	(_Relogio+4)& (0+255),b
  1012                           
  1013                           ;exercicio_PIC_LCD_AD.c: 28: Despertador.segundo=5;
  1014  001A6E  0E00               	movlw	0
  1015  001A70  0100               	movlb	0	; () banked
  1016  001A72  6FD8               	movwf	(_Despertador+3)& (0+255),b
  1017  001A74  0E05               	movlw	5
  1018  001A76  6FD7               	movwf	(_Despertador+2)& (0+255),b
  1019                           
  1020                           ;exercicio_PIC_LCD_AD.c: 29: Despertador.minuto=0;
  1021  001A78  0E00               	movlw	0
  1022  001A7A  0100               	movlb	0	; () banked
  1023  001A7C  6FD6               	movwf	(_Despertador+1)& (0+255),b
  1024  001A7E  0E00               	movlw	0
  1025  001A80  6FD5               	movwf	_Despertador& (0+255),b
  1026                           
  1027                           ;exercicio_PIC_LCD_AD.c: 30: Despertador.hora=0;
  1028  001A82  0E00               	movlw	0
  1029  001A84  0100               	movlb	0	; () banked
  1030  001A86  6FDA               	movwf	(_Despertador+5)& (0+255),b
  1031  001A88  0E00               	movlw	0
  1032  001A8A  6FD9               	movwf	(_Despertador+4)& (0+255),b
  1033                           
  1034                           ;exercicio_PIC_LCD_AD.c: 32: Calendario.dia=1;
  1035  001A8C  0E00               	movlw	0
  1036  001A8E  0100               	movlb	0	; () banked
  1037  001A90  6FD0               	movwf	(_Calendario+1)& (0+255),b
  1038  001A92  0E01               	movlw	1
  1039  001A94  6FCF               	movwf	_Calendario& (0+255),b
  1040                           
  1041                           ;exercicio_PIC_LCD_AD.c: 33: Calendario.mes=1;
  1042  001A96  0E00               	movlw	0
  1043  001A98  0100               	movlb	0	; () banked
  1044  001A9A  6FD2               	movwf	(_Calendario+3)& (0+255),b
  1045  001A9C  0E01               	movlw	1
  1046  001A9E  6FD1               	movwf	(_Calendario+2)& (0+255),b
  1047                           
  1048                           ;exercicio_PIC_LCD_AD.c: 34: Calendario.ano=19;
  1049  001AA0  0E00               	movlw	0
  1050  001AA2  0100               	movlb	0	; () banked
  1051  001AA4  6FD4               	movwf	(_Calendario+5)& (0+255),b
  1052  001AA6  0E13               	movlw	19
  1053  001AA8  6FD3               	movwf	(_Calendario+4)& (0+255),b
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;exercicio_PIC_LCD_AD.c: 36: T0CONbits.TMR0ON=1;
  1057  001AAA  8ED5               	bsf	4053,7,c	;volatile
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;exercicio_PIC_LCD_AD.c: 38: INTCONbits.TMR0IE=1;
  1061  001AAC  8AF2               	bsf	intcon,5,c	;volatile
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;exercicio_PIC_LCD_AD.c: 39: INTCONbits.TMR0IF=0;
  1065  001AAE  94F2               	bcf	intcon,2,c	;volatile
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;exercicio_PIC_LCD_AD.c: 42: T0CONbits.T08BIT=0;
  1069  001AB0  9CD5               	bcf	4053,6,c	;volatile
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;exercicio_PIC_LCD_AD.c: 43: T0CONbits.PSA=0;
  1073  001AB2  96D5               	bcf	4053,3,c	;volatile
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;exercicio_PIC_LCD_AD.c: 44: T0CONbits.T0PS0=1;
  1077  001AB4  80D5               	bsf	4053,0,c	;volatile
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;exercicio_PIC_LCD_AD.c: 45: T0CONbits.T0PS1=0;
  1081  001AB6  92D5               	bcf	4053,1,c	;volatile
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;exercicio_PIC_LCD_AD.c: 46: T0CONbits.T0PS2=1;
  1085  001AB8  84D5               	bsf	4053,2,c	;volatile
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;exercicio_PIC_LCD_AD.c: 47: T0CONbits.T0CS=0;
  1089  001ABA  9AD5               	bcf	4053,5,c	;volatile
  1090                           
  1091                           ;exercicio_PIC_LCD_AD.c: 49: TMR0=2535;
  1092  001ABC  0E09               	movlw	9
  1093  001ABE  6ED7               	movwf	4055,c	;volatile
  1094  001AC0  0EE7               	movlw	231
  1095  001AC2  6ED6               	movwf	4054,c	;volatile
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;exercicio_PIC_LCD_AD.c: 51: T0CONbits.TMR0ON=1;
  1099  001AC4  8ED5               	bsf	4053,7,c	;volatile
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;exercicio_PIC_LCD_AD.c: 54: INTCONbits.GIEH=1;
  1103  001AC6  8EF2               	bsf	intcon,7,c	;volatile
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;exercicio_PIC_LCD_AD.c: 55: INTCONbits.GIEL=1;
  1107  001AC8  8CF2               	bsf	intcon,6,c	;volatile
  1108                           
  1109                           ;exercicio_PIC_LCD_AD.c: 59: ADCON1 = 15;
  1110  001ACA  0E0F               	movlw	15
  1111  001ACC  6EC1               	movwf	4033,c	;volatile
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;exercicio_PIC_LCD_AD.c: 60: TRISAbits.RA1 = 1;
  1115  001ACE  8292               	bsf	3986,1,c	;volatile
  1116                           
  1117                           ;exercicio_PIC_LCD_AD.c: 61: TRISA = 1;
  1118  001AD0  0E01               	movlw	1
  1119  001AD2  6E92               	movwf	3986,c	;volatile
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;exercicio_PIC_LCD_AD.c: 62: PORTAbits.AN1 = 0;
  1123  001AD4  9280               	bcf	3968,1,c	;volatile
  1124                           
  1125                           ;exercicio_PIC_LCD_AD.c: 63: SPBRG=(((20000000/64)/9600)-1);
  1126  001AD6  0E1F               	movlw	31
  1127  001AD8  6EAF               	movwf	4015,c	;volatile
  1128                           
  1129                           ;exercicio_PIC_LCD_AD.c: 64: RCSTA = 0b10010000;
  1130  001ADA  0E90               	movlw	144
  1131  001ADC  6EAB               	movwf	4011,c	;volatile
  1132                           
  1133                           ;exercicio_PIC_LCD_AD.c: 65: TXSTA = 0b00100000;
  1134  001ADE  0E20               	movlw	32
  1135  001AE0  6EAC               	movwf	4012,c	;volatile
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;exercicio_PIC_LCD_AD.c: 66: TRISCbits.RC6 = 0;
  1139  001AE2  9C94               	bcf	3988,6,c	;volatile
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;exercicio_PIC_LCD_AD.c: 67: TRISCbits.RC7 = 1;
  1143  001AE4  8E94               	bsf	3988,7,c	;volatile
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;exercicio_PIC_LCD_AD.c: 69: RCIF = 0;
  1147  001AE6  9A9E               	bcf	3998,5,c	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;exercicio_PIC_LCD_AD.c: 70: RCIP = 0;
  1151  001AE8  9A9F               	bcf	3999,5,c	;volatile
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;exercicio_PIC_LCD_AD.c: 71: RCIE = 1;
  1155  001AEA  8A9D               	bsf	3997,5,c	;volatile
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;exercicio_PIC_LCD_AD.c: 72: PEIE = 1;
  1159  001AEC  8CF2               	bsf	intcon,6,c	;volatile
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;exercicio_PIC_LCD_AD.c: 75: init_XLCD();
  1163  001AEE  EC92  F017         	call	_init_XLCD	;wreg free
  1164                           
  1165                           ;exercicio_PIC_LCD_AD.c: 76: init_ADC();
  1166  001AF2  ECD4  F017         	call	_init_ADC	;wreg free
  1167                           
  1168                           ;exercicio_PIC_LCD_AD.c: 81: TRISAbits.TRISA1=0;
  1169  001AF6  9292               	bcf	3986,1,c	;volatile
  1170                           
  1171                           ;exercicio_PIC_LCD_AD.c: 82: TRISAbits.TRISA2=0;
  1172  001AF8  9492               	bcf	3986,2,c	;volatile
  1173                           
  1174                           ;exercicio_PIC_LCD_AD.c: 85: TRISB=0x00;
  1175  001AFA  0E00               	movlw	0
  1176  001AFC  6E93               	movwf	3987,c	;volatile
  1177                           
  1178                           ;exercicio_PIC_LCD_AD.c: 88: TRISDbits.TRISD0=1;
  1179  001AFE  8095               	bsf	3989,0,c	;volatile
  1180                           
  1181                           ;exercicio_PIC_LCD_AD.c: 89: TRISDbits.TRISD1=1;
  1182  001B00  8295               	bsf	3989,1,c	;volatile
  1183                           
  1184                           ;exercicio_PIC_LCD_AD.c: 90: TRISDbits.TRISD2=1;
  1185  001B02  8495               	bsf	3989,2,c	;volatile
  1186                           
  1187                           ;exercicio_PIC_LCD_AD.c: 91: TRISDbits.TRISD3=1;
  1188  001B04  8695               	bsf	3989,3,c	;volatile
  1189  001B06                     l4404:
  1190                           
  1191                           ;exercicio_PIC_LCD_AD.c: 94: checa_botao(&Relogio, &Despertador, &Calendario);
  1192  001B06  0EDB               	movlw	low _Relogio
  1193  001B08  6E13               	movwf	checa_botao@Relogio,c
  1194  001B0A  0E00               	movlw	high _Relogio
  1195  001B0C  6E14               	movwf	checa_botao@Relogio+1,c
  1196  001B0E  0ED5               	movlw	low _Despertador
  1197  001B10  6E15               	movwf	checa_botao@Despertador,c
  1198  001B12  0E00               	movlw	high _Despertador
  1199  001B14  6E16               	movwf	checa_botao@Despertador+1,c
  1200  001B16  0ECF               	movlw	low _Calendario
  1201  001B18  6E17               	movwf	checa_botao@Calendario,c
  1202  001B1A  0E00               	movlw	high _Calendario
  1203  001B1C  6E18               	movwf	checa_botao@Calendario+1,c
  1204  001B1E  EC54  F004         	call	_checa_botao	;wreg free
  1205                           
  1206                           ;exercicio_PIC_LCD_AD.c: 95: convert();
  1207  001B22  EC37  F014         	call	_convert	;wreg free
  1208                           
  1209                           ;exercicio_PIC_LCD_AD.c: 96: maquina_estado();
  1210  001B26  ECBF  F016         	call	_maquina_estado	;wreg free
  1211                           
  1212                           ;exercicio_PIC_LCD_AD.c: 100: if(flag_time==1){
  1213  001B2A  044F               	decf	_flag_time,w,c
  1214  001B2C  A4D8               	btfss	status,2,c
  1215  001B2E  D03B               	goto	l4432
  1216                           
  1217                           ;exercicio_PIC_LCD_AD.c: 101: tratar_relogio(&Relogio, &Calendario);
  1218  001B30  0EDB               	movlw	low _Relogio
  1219  001B32  6E0F               	movwf	tratar_relogio@Relogio,c
  1220  001B34  0E00               	movlw	high _Relogio
  1221  001B36  6E10               	movwf	tratar_relogio@Relogio+1,c
  1222  001B38  0ECF               	movlw	low _Calendario
  1223  001B3A  6E11               	movwf	tratar_relogio@Calendario,c
  1224  001B3C  0E00               	movlw	high _Calendario
  1225  001B3E  6E12               	movwf	tratar_relogio@Calendario+1,c
  1226  001B40  EC81  F00B         	call	_tratar_relogio	;wreg free
  1227                           
  1228                           ;exercicio_PIC_LCD_AD.c: 104: WriteCmdXLCD(0x0C);
  1229  001B44  0E0C               	movlw	12
  1230  001B46  ECFD  F016         	call	_WriteCmdXLCD
  1231                           
  1232                           ;exercicio_PIC_LCD_AD.c: 105: exibir_lcd(&Relogio, &Despertador, &Calendario);
  1233  001B4A  0EDB               	movlw	low _Relogio
  1234  001B4C  0100               	movlb	0	; () banked
  1235  001B4E  6F75               	movwf	exibir_lcd@Relogio& (0+255),b
  1236  001B50  0E00               	movlw	high _Relogio
  1237  001B52  0100               	movlb	0	; () banked
  1238  001B54  6F76               	movwf	(exibir_lcd@Relogio+1)& (0+255),b
  1239  001B56  0ED5               	movlw	low _Despertador
  1240  001B58  0100               	movlb	0	; () banked
  1241  001B5A  6F77               	movwf	exibir_lcd@Despertador& (0+255),b
  1242  001B5C  0E00               	movlw	high _Despertador
  1243  001B5E  0100               	movlb	0	; () banked
  1244  001B60  6F78               	movwf	(exibir_lcd@Despertador+1)& (0+255),b
  1245  001B62  0ECF               	movlw	low _Calendario
  1246  001B64  0100               	movlb	0	; () banked
  1247  001B66  6F79               	movwf	exibir_lcd@Calendario& (0+255),b
  1248  001B68  0E00               	movlw	high _Calendario
  1249  001B6A  0100               	movlb	0	; () banked
  1250  001B6C  6F7A               	movwf	(exibir_lcd@Calendario+1)& (0+255),b
  1251  001B6E  ECF0  F007         	call	_exibir_lcd	;wreg free
  1252                           
  1253                           ;exercicio_PIC_LCD_AD.c: 106: WriteCmdXLCD(0x0F);
  1254  001B72  0E0F               	movlw	15
  1255  001B74  ECFD  F016         	call	_WriteCmdXLCD
  1256                           
  1257                           ;exercicio_PIC_LCD_AD.c: 108: pisca_cursor();
  1258  001B78  EC27  F010         	call	_pisca_cursor	;wreg free
  1259                           
  1260                           ;exercicio_PIC_LCD_AD.c: 111: PORTAbits.RA2=1;
  1261  001B7C  8480               	bsf	3968,2,c	;volatile
  1262                           
  1263                           ;exercicio_PIC_LCD_AD.c: 112: _delay((unsigned long)((70)*(20000000/4000.0)));
  1264  001B7E  0E02               	movlw	2
  1265  001B80  0100               	movlb	0	; () banked
  1266  001B82  6FA6               	movwf	(??_main+1)& (0+255),b
  1267  001B84  0EC7               	movlw	199
  1268  001B86  0100               	movlb	0	; () banked
  1269  001B88  6FA5               	movwf	??_main& (0+255),b
  1270  001B8A  0E88               	movlw	136
  1271  001B8C                     u5087:
  1272  001B8C  2EE8               	decfsz	wreg,f,c
  1273  001B8E  D7FE               	bra	u5087
  1274  001B90  2FA5               	decfsz	??_main& (0+255),f,b
  1275  001B92  D7FC               	bra	u5087
  1276  001B94  2FA6               	decfsz	(??_main+1)& (0+255),f,b
  1277  001B96  D7FA               	bra	u5087
  1278  001B98  F000               	nop	
  1279                           
  1280                           ;exercicio_PIC_LCD_AD.c: 113: PORTAbits.RA2=0;
  1281  001B9A  9480               	bcf	3968,2,c	;volatile
  1282                           
  1283                           ;exercicio_PIC_LCD_AD.c: 114: if(despertar==1) controle_tempo_despertar++;
  1284  001B9C  044E               	decf	_despertar,w,c
  1285  001B9E  A4D8               	btfss	status,2,c
  1286  001BA0  D002               	goto	l4432
  1287  001BA2  4A47               	infsnz	_controle_tempo_despertar,f,c
  1288  001BA4  2A48               	incf	_controle_tempo_despertar+1,f,c
  1289  001BA6                     l4432:
  1290                           
  1291                           ;exercicio_PIC_LCD_AD.c: 115: }
  1292                           ;exercicio_PIC_LCD_AD.c: 118: if(Relogio.segundo==Despertador.segundo
  1293                           ;exercicio_PIC_LCD_AD.c: 119: && Relogio.minuto==Despertador.minuto
  1294                           ;exercicio_PIC_LCD_AD.c: 120: && Relogio.hora==Despertador.hora){
  1295  001BA6  0100               	movlb	0	; () banked
  1296  001BA8  51D7               	movf	(_Despertador+2)& (0+255),w,b
  1297  001BAA  0100               	movlb	0	; () banked
  1298  001BAC  19DD               	xorwf	(_Relogio+2)& (0+255),w,b
  1299  001BAE  E11E               	bnz	l4440
  1300  001BB0  0100               	movlb	0	; () banked
  1301  001BB2  51D8               	movf	(_Despertador+3)& (0+255),w,b
  1302  001BB4  0100               	movlb	0	; () banked
  1303  001BB6  19DE               	xorwf	(_Relogio+3)& (0+255),w,b
  1304  001BB8  A4D8               	btfss	status,2,c
  1305  001BBA  D018               	goto	l4440
  1306                           
  1307                           ; BSR set to: 0
  1308  001BBC  0100               	movlb	0	; () banked
  1309  001BBE  51D5               	movf	_Despertador& (0+255),w,b
  1310  001BC0  0100               	movlb	0	; () banked
  1311  001BC2  19DB               	xorwf	_Relogio& (0+255),w,b
  1312  001BC4  E113               	bnz	l4440
  1313  001BC6  0100               	movlb	0	; () banked
  1314  001BC8  51D6               	movf	(_Despertador+1)& (0+255),w,b
  1315  001BCA  0100               	movlb	0	; () banked
  1316  001BCC  19DC               	xorwf	(_Relogio+1)& (0+255),w,b
  1317  001BCE  A4D8               	btfss	status,2,c
  1318  001BD0  D00D               	goto	l4440
  1319                           
  1320                           ; BSR set to: 0
  1321  001BD2  0100               	movlb	0	; () banked
  1322  001BD4  51D9               	movf	(_Despertador+4)& (0+255),w,b
  1323  001BD6  0100               	movlb	0	; () banked
  1324  001BD8  19DF               	xorwf	(_Relogio+4)& (0+255),w,b
  1325  001BDA  E108               	bnz	l4440
  1326  001BDC  0100               	movlb	0	; () banked
  1327  001BDE  51DA               	movf	(_Despertador+5)& (0+255),w,b
  1328  001BE0  0100               	movlb	0	; () banked
  1329  001BE2  19E0               	xorwf	(_Relogio+5)& (0+255),w,b
  1330  001BE4  A4D8               	btfss	status,2,c
  1331  001BE6  D002               	goto	l4440
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;exercicio_PIC_LCD_AD.c: 121: despertar=1;
  1335  001BE8  0E01               	movlw	1
  1336  001BEA  6E4E               	movwf	_despertar,c
  1337  001BEC                     l4440:
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;exercicio_PIC_LCD_AD.c: 122: }
  1341                           ;exercicio_PIC_LCD_AD.c: 123: if(despertar==1 && controle_tempo_despertar<10){
  1342  001BEC  044E               	decf	_despertar,w,c
  1343  001BEE  A4D8               	btfss	status,2,c
  1344  001BF0  D008               	goto	l4446
  1345                           
  1346                           ; BSR set to: 0
  1347  001BF2  BE48               	btfsc	_controle_tempo_despertar+1,7,c
  1348  001BF4  D005               	goto	l4444
  1349  001BF6  5048               	movf	_controle_tempo_despertar+1,w,c
  1350  001BF8  E104               	bnz	l4446
  1351  001BFA  0E0A               	movlw	10
  1352  001BFC  5C47               	subwf	_controle_tempo_despertar,w,c
  1353  001BFE  A0D8               	btfss	status,0,c
  1354  001C00                     l4444:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;exercicio_PIC_LCD_AD.c: 124: PORTAbits.RA1=1;
  1358  001C00  8280               	bsf	3968,1,c	;volatile
  1359  001C02                     l4446:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;exercicio_PIC_LCD_AD.c: 125: }
  1363                           ;exercicio_PIC_LCD_AD.c: 126: if(controle_tempo_despertar==10){
  1364  001C02  0E0A               	movlw	10
  1365  001C04  1847               	xorwf	_controle_tempo_despertar,w,c
  1366  001C06  1048               	iorwf	_controle_tempo_despertar+1,w,c
  1367  001C08  A4D8               	btfss	status,2,c
  1368  001C0A  D77D               	goto	l4404
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;exercicio_PIC_LCD_AD.c: 127: controle_tempo_despertar=0;
  1372  001C0C  0E00               	movlw	0
  1373  001C0E  6E48               	movwf	_controle_tempo_despertar+1,c
  1374  001C10  0E00               	movlw	0
  1375  001C12  6E47               	movwf	_controle_tempo_despertar,c
  1376                           
  1377                           ;exercicio_PIC_LCD_AD.c: 128: despertar=0;
  1378  001C14  0E00               	movlw	0
  1379  001C16  6E4E               	movwf	_despertar,c
  1380                           
  1381                           ; BSR set to: 0
  1382                           
  1383                           ; BSR set to: 0
  1384  001C18  D776               	goto	l4404
  1385  001C1A                     __end_of_main:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           intcon	equ	0xFF2
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           postdec1	equ	0xFE5
  1395                           fsr1l	equ	0xFE1
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _tratar_relogio *****************
  1399 ;; Defined at:
  1400 ;;		line 3 in file "relogio.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  Relogio         2   14[COMRAM] PTR struct .
  1403 ;;		 -> Relogio(6), 
  1404 ;;  Calendario      2   16[COMRAM] PTR struct .
  1405 ;;		 -> Calendario(6), 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1417 ;;      Params:         4       0       0       0       0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1419 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1420 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1421 ;;Total ram usage:       11 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text1
  1432  001702                     __ptext1:
  1433                           	opt stack 0
  1434  001702                     _tratar_relogio:
  1435                           	opt stack 29
  1436                           
  1437                           ;relogio.c: 5: Relogio->segundo++;
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;incstack = 0
  1441  001702  EE20 F002          	lfsr	2,2
  1442  001706  500F               	movf	tratar_relogio@Relogio,w,c
  1443  001708  26D9               	addwf	fsr2l,f,c
  1444  00170A  5010               	movf	tratar_relogio@Relogio+1,w,c
  1445  00170C  22DA               	addwfc	fsr2h,f,c
  1446  00170E  2ADE               	incf	postinc2,f,c
  1447  001710  0E00               	movlw	0
  1448  001712  22DD               	addwfc	postdec2,f,c
  1449                           
  1450                           ;relogio.c: 7: if(Relogio->segundo>59){
  1451  001714  EE20 F002          	lfsr	2,2
  1452  001718  500F               	movf	tratar_relogio@Relogio,w,c
  1453  00171A  26D9               	addwf	fsr2l,f,c
  1454  00171C  5010               	movf	tratar_relogio@Relogio+1,w,c
  1455  00171E  22DA               	addwfc	fsr2h,f,c
  1456  001720  0E01               	movlw	1
  1457  001722  BEDB               	btfsc	plusw2,7,c
  1458  001724  D018               	goto	l206
  1459  001726  0E01               	movlw	1
  1460  001728  50DB               	movf	plusw2,w,c
  1461  00172A  E104               	bnz	u4090
  1462  00172C  0E3C               	movlw	60
  1463  00172E  5CDE               	subwf	postinc2,w,c
  1464  001730  A0D8               	btfss	status,0,c
  1465  001732  D011               	goto	l206
  1466  001734                     u4090:
  1467                           
  1468                           ;relogio.c: 8: Relogio->minuto++;
  1469  001734  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1470  001738  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1471  00173C  2ADE               	incf	postinc2,f,c
  1472  00173E  0E00               	movlw	0
  1473  001740  22DD               	addwfc	postdec2,f,c
  1474                           
  1475                           ;relogio.c: 9: Relogio->segundo=0;
  1476  001742  EE20 F002          	lfsr	2,2
  1477  001746  500F               	movf	tratar_relogio@Relogio,w,c
  1478  001748  26D9               	addwf	fsr2l,f,c
  1479  00174A  5010               	movf	tratar_relogio@Relogio+1,w,c
  1480  00174C  22DA               	addwfc	fsr2h,f,c
  1481  00174E  0E00               	movlw	0
  1482  001750  6EDE               	movwf	postinc2,c
  1483  001752  0E00               	movlw	0
  1484  001754  6EDD               	movwf	postdec2,c
  1485  001756                     l206:
  1486                           
  1487                           ;relogio.c: 10: }
  1488                           ;relogio.c: 11: if(Relogio->segundo<0){
  1489  001756  EE20 F002          	lfsr	2,2
  1490  00175A  500F               	movf	tratar_relogio@Relogio,w,c
  1491  00175C  26D9               	addwf	fsr2l,f,c
  1492  00175E  5010               	movf	tratar_relogio@Relogio+1,w,c
  1493  001760  22DA               	addwfc	fsr2h,f,c
  1494  001762  0E01               	movlw	1
  1495  001764  AEDB               	btfss	plusw2,7,c
  1496  001766  D011               	goto	l207
  1497                           
  1498                           ;relogio.c: 12: Relogio->segundo=59;
  1499  001768  EE20 F002          	lfsr	2,2
  1500  00176C  500F               	movf	tratar_relogio@Relogio,w,c
  1501  00176E  26D9               	addwf	fsr2l,f,c
  1502  001770  5010               	movf	tratar_relogio@Relogio+1,w,c
  1503  001772  22DA               	addwfc	fsr2h,f,c
  1504  001774  0E3B               	movlw	59
  1505  001776  6EDE               	movwf	postinc2,c
  1506  001778  0E00               	movlw	0
  1507  00177A  6EDD               	movwf	postdec2,c
  1508                           
  1509                           ;relogio.c: 13: Relogio->minuto--;
  1510  00177C  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1511  001780  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1512  001784  06DE               	decf	postinc2,f,c
  1513  001786  0E00               	movlw	0
  1514  001788  5ADD               	subwfb	postdec2,f,c
  1515  00178A                     l207:
  1516                           
  1517                           ;relogio.c: 14: }
  1518                           ;relogio.c: 16: if(Relogio->minuto>59){
  1519  00178A  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1520  00178E  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1521  001792  0E01               	movlw	1
  1522  001794  BEDB               	btfsc	plusw2,7,c
  1523  001796  D018               	goto	l3716
  1524  001798  0E01               	movlw	1
  1525  00179A  50DB               	movf	plusw2,w,c
  1526  00179C  E104               	bnz	u4110
  1527  00179E  0E3C               	movlw	60
  1528  0017A0  5CDE               	subwf	postinc2,w,c
  1529  0017A2  A0D8               	btfss	status,0,c
  1530  0017A4  D011               	goto	l3716
  1531  0017A6                     u4110:
  1532                           
  1533                           ;relogio.c: 17: Relogio->hora++;
  1534  0017A6  EE20 F004          	lfsr	2,4
  1535  0017AA  500F               	movf	tratar_relogio@Relogio,w,c
  1536  0017AC  26D9               	addwf	fsr2l,f,c
  1537  0017AE  5010               	movf	tratar_relogio@Relogio+1,w,c
  1538  0017B0  22DA               	addwfc	fsr2h,f,c
  1539  0017B2  2ADE               	incf	postinc2,f,c
  1540  0017B4  0E00               	movlw	0
  1541  0017B6  22DD               	addwfc	postdec2,f,c
  1542                           
  1543                           ;relogio.c: 18: Relogio->minuto=0;
  1544  0017B8  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1545  0017BC  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1546  0017C0  0E00               	movlw	0
  1547  0017C2  6EDE               	movwf	postinc2,c
  1548  0017C4  0E00               	movlw	0
  1549  0017C6  6EDD               	movwf	postdec2,c
  1550  0017C8                     l3716:
  1551                           
  1552                           ;relogio.c: 19: }
  1553                           ;relogio.c: 20: if(Relogio->minuto<0){
  1554  0017C8  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1555  0017CC  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1556  0017D0  0E01               	movlw	1
  1557  0017D2  AEDB               	btfss	plusw2,7,c
  1558  0017D4  D011               	goto	l3722
  1559                           
  1560                           ;relogio.c: 21: Relogio->minuto=59;
  1561  0017D6  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1562  0017DA  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1563  0017DE  0E3B               	movlw	59
  1564  0017E0  6EDE               	movwf	postinc2,c
  1565  0017E2  0E00               	movlw	0
  1566  0017E4  6EDD               	movwf	postdec2,c
  1567                           
  1568                           ;relogio.c: 22: Relogio->hora--;
  1569  0017E6  EE20 F004          	lfsr	2,4
  1570  0017EA  500F               	movf	tratar_relogio@Relogio,w,c
  1571  0017EC  26D9               	addwf	fsr2l,f,c
  1572  0017EE  5010               	movf	tratar_relogio@Relogio+1,w,c
  1573  0017F0  22DA               	addwfc	fsr2h,f,c
  1574  0017F2  06DE               	decf	postinc2,f,c
  1575  0017F4  0E00               	movlw	0
  1576  0017F6  5ADD               	subwfb	postdec2,f,c
  1577  0017F8                     l3722:
  1578                           
  1579                           ;relogio.c: 23: }
  1580                           ;relogio.c: 25: if(Relogio->hora>23){
  1581  0017F8  EE20 F004          	lfsr	2,4
  1582  0017FC  500F               	movf	tratar_relogio@Relogio,w,c
  1583  0017FE  26D9               	addwf	fsr2l,f,c
  1584  001800  5010               	movf	tratar_relogio@Relogio+1,w,c
  1585  001802  22DA               	addwfc	fsr2h,f,c
  1586  001804  0E01               	movlw	1
  1587  001806  BEDB               	btfsc	plusw2,7,c
  1588  001808  D018               	goto	l210
  1589  00180A  0E01               	movlw	1
  1590  00180C  50DB               	movf	plusw2,w,c
  1591  00180E  E104               	bnz	u4130
  1592  001810  0E18               	movlw	24
  1593  001812  5CDE               	subwf	postinc2,w,c
  1594  001814  A0D8               	btfss	status,0,c
  1595  001816  D011               	goto	l210
  1596  001818                     u4130:
  1597                           
  1598                           ;relogio.c: 26: Calendario->dia++;
  1599  001818  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1600  00181C  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1601  001820  2ADE               	incf	postinc2,f,c
  1602  001822  0E00               	movlw	0
  1603  001824  22DD               	addwfc	postdec2,f,c
  1604                           
  1605                           ;relogio.c: 27: Relogio->hora=0;
  1606  001826  EE20 F004          	lfsr	2,4
  1607  00182A  500F               	movf	tratar_relogio@Relogio,w,c
  1608  00182C  26D9               	addwf	fsr2l,f,c
  1609  00182E  5010               	movf	tratar_relogio@Relogio+1,w,c
  1610  001830  22DA               	addwfc	fsr2h,f,c
  1611  001832  0E00               	movlw	0
  1612  001834  6EDE               	movwf	postinc2,c
  1613  001836  0E00               	movlw	0
  1614  001838  6EDD               	movwf	postdec2,c
  1615  00183A                     l210:
  1616                           
  1617                           ;relogio.c: 28: }
  1618                           ;relogio.c: 29: if(Relogio->hora<0){
  1619  00183A  EE20 F004          	lfsr	2,4
  1620  00183E  500F               	movf	tratar_relogio@Relogio,w,c
  1621  001840  26D9               	addwf	fsr2l,f,c
  1622  001842  5010               	movf	tratar_relogio@Relogio+1,w,c
  1623  001844  22DA               	addwfc	fsr2h,f,c
  1624  001846  0E01               	movlw	1
  1625  001848  AEDB               	btfss	plusw2,7,c
  1626  00184A  D011               	goto	l3728
  1627                           
  1628                           ;relogio.c: 30: Relogio->hora=23;
  1629  00184C  EE20 F004          	lfsr	2,4
  1630  001850  500F               	movf	tratar_relogio@Relogio,w,c
  1631  001852  26D9               	addwf	fsr2l,f,c
  1632  001854  5010               	movf	tratar_relogio@Relogio+1,w,c
  1633  001856  22DA               	addwfc	fsr2h,f,c
  1634  001858  0E17               	movlw	23
  1635  00185A  6EDE               	movwf	postinc2,c
  1636  00185C  0E00               	movlw	0
  1637  00185E  6EDD               	movwf	postdec2,c
  1638                           
  1639                           ;relogio.c: 31: Calendario->dia--;
  1640  001860  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1641  001864  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1642  001868  06DE               	decf	postinc2,f,c
  1643  00186A  0E00               	movlw	0
  1644  00186C  5ADD               	subwfb	postdec2,f,c
  1645  00186E                     l3728:
  1646                           
  1647                           ;relogio.c: 32: }
  1648                           ;relogio.c: 34: if(Calendario->dia>qtdDias_mes[Calendario->mes]){
  1649  00186E  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1650  001872  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1651  001876  EE10 F002          	lfsr	1,2
  1652  00187A  5011               	movf	tratar_relogio@Calendario,w,c
  1653  00187C  26E1               	addwf	fsr1l,f,c
  1654  00187E  5012               	movf	tratar_relogio@Calendario+1,w,c
  1655  001880  22E2               	addwfc	fsr1h,f,c
  1656  001882  CFE6 F015          	movff	postinc1,??_tratar_relogio+2
  1657  001886  CFE5 F016          	movff	postdec1,??_tratar_relogio+3
  1658  00188A  90D8               	bcf	status,0,c
  1659  00188C  3615               	rlcf	??_tratar_relogio+2,f,c
  1660  00188E  3616               	rlcf	??_tratar_relogio+3,f,c
  1661  001890  0EE1               	movlw	low _qtdDias_mes
  1662  001892  2415               	addwf	??_tratar_relogio+2,w,c
  1663  001894  6EE1               	movwf	fsr1l,c
  1664  001896  0E00               	movlw	high _qtdDias_mes
  1665  001898  2016               	addwfc	??_tratar_relogio+3,w,c
  1666  00189A  6EE2               	movwf	fsr1h,c
  1667  00189C  50DE               	movf	postinc2,w,c
  1668  00189E  5CE6               	subwf	postinc1,w,c
  1669  0018A0  50E6               	movf	postinc1,w,c
  1670  0018A2  0A80               	xorlw	128
  1671  0018A4  6E19               	movwf	(??_tratar_relogio+6)& (0+255),c
  1672  0018A6  50DE               	movf	postinc2,w,c
  1673  0018A8  0A80               	xorlw	128
  1674  0018AA  5819               	subwfb	(??_tratar_relogio+6)& (0+255),w,c
  1675  0018AC  B0D8               	btfsc	status,0,c
  1676  0018AE  D011               	goto	l3734
  1677                           
  1678                           ;relogio.c: 35: Calendario->mes++;
  1679  0018B0  EE20 F002          	lfsr	2,2
  1680  0018B4  5011               	movf	tratar_relogio@Calendario,w,c
  1681  0018B6  26D9               	addwf	fsr2l,f,c
  1682  0018B8  5012               	movf	tratar_relogio@Calendario+1,w,c
  1683  0018BA  22DA               	addwfc	fsr2h,f,c
  1684  0018BC  2ADE               	incf	postinc2,f,c
  1685  0018BE  0E00               	movlw	0
  1686  0018C0  22DD               	addwfc	postdec2,f,c
  1687                           
  1688                           ;relogio.c: 36: Calendario->dia=1;
  1689  0018C2  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1690  0018C6  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1691  0018CA  0E01               	movlw	1
  1692  0018CC  6EDE               	movwf	postinc2,c
  1693  0018CE  0E00               	movlw	0
  1694  0018D0  6EDD               	movwf	postdec2,c
  1695  0018D2                     l3734:
  1696                           
  1697                           ;relogio.c: 37: }
  1698                           ;relogio.c: 38: if(Calendario->dia<1){
  1699  0018D2  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1700  0018D6  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1701  0018DA  0E01               	movlw	1
  1702  0018DC  BEDB               	btfsc	plusw2,7,c
  1703  0018DE  D006               	goto	l3736
  1704  0018E0  0E01               	movlw	1
  1705  0018E2  50DB               	movf	plusw2,w,c
  1706  0018E4  E127               	bnz	l3740
  1707  0018E6  04DE               	decf	postinc2,w,c
  1708  0018E8  B0D8               	btfsc	status,0,c
  1709  0018EA  D024               	goto	l3740
  1710  0018EC                     l3736:
  1711                           
  1712                           ;relogio.c: 39: Calendario->mes--;
  1713  0018EC  EE20 F002          	lfsr	2,2
  1714  0018F0  5011               	movf	tratar_relogio@Calendario,w,c
  1715  0018F2  26D9               	addwf	fsr2l,f,c
  1716  0018F4  5012               	movf	tratar_relogio@Calendario+1,w,c
  1717  0018F6  22DA               	addwfc	fsr2h,f,c
  1718  0018F8  06DE               	decf	postinc2,f,c
  1719  0018FA  0E00               	movlw	0
  1720  0018FC  5ADD               	subwfb	postdec2,f,c
  1721                           
  1722                           ;relogio.c: 40: Calendario->dia=qtdDias_mes[Calendario->mes];
  1723  0018FE  EE20 F002          	lfsr	2,2
  1724  001902  5011               	movf	tratar_relogio@Calendario,w,c
  1725  001904  26D9               	addwf	fsr2l,f,c
  1726  001906  5012               	movf	tratar_relogio@Calendario+1,w,c
  1727  001908  22DA               	addwfc	fsr2h,f,c
  1728  00190A  CFDE F013          	movff	postinc2,??_tratar_relogio
  1729  00190E  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1730  001912  90D8               	bcf	status,0,c
  1731  001914  3613               	rlcf	??_tratar_relogio,f,c
  1732  001916  3614               	rlcf	??_tratar_relogio+1,f,c
  1733  001918  0EE1               	movlw	low _qtdDias_mes
  1734  00191A  2413               	addwf	??_tratar_relogio,w,c
  1735  00191C  6ED9               	movwf	fsr2l,c
  1736  00191E  0E00               	movlw	high _qtdDias_mes
  1737  001920  2014               	addwfc	??_tratar_relogio+1,w,c
  1738  001922  6EDA               	movwf	fsr2h,c
  1739  001924  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1740  001928  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1741  00192C  CFDE FFE6          	movff	postinc2,postinc1
  1742  001930  CFDD FFE5          	movff	postdec2,postdec1
  1743  001934                     l3740:
  1744                           
  1745                           ;relogio.c: 41: }
  1746                           ;relogio.c: 43: if(Calendario->mes>12){
  1747  001934  EE20 F002          	lfsr	2,2
  1748  001938  5011               	movf	tratar_relogio@Calendario,w,c
  1749  00193A  26D9               	addwf	fsr2l,f,c
  1750  00193C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1751  00193E  22DA               	addwfc	fsr2h,f,c
  1752  001940  0E01               	movlw	1
  1753  001942  BEDB               	btfsc	plusw2,7,c
  1754  001944  D01A               	goto	l214
  1755  001946  0E01               	movlw	1
  1756  001948  50DB               	movf	plusw2,w,c
  1757  00194A  E104               	bnz	u4170
  1758  00194C  0E0D               	movlw	13
  1759  00194E  5CDE               	subwf	postinc2,w,c
  1760  001950  A0D8               	btfss	status,0,c
  1761  001952  D013               	goto	l214
  1762  001954                     u4170:
  1763                           
  1764                           ;relogio.c: 44: Calendario->ano++;
  1765  001954  EE20 F004          	lfsr	2,4
  1766  001958  5011               	movf	tratar_relogio@Calendario,w,c
  1767  00195A  26D9               	addwf	fsr2l,f,c
  1768  00195C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1769  00195E  22DA               	addwfc	fsr2h,f,c
  1770  001960  2ADE               	incf	postinc2,f,c
  1771  001962  0E00               	movlw	0
  1772  001964  22DD               	addwfc	postdec2,f,c
  1773                           
  1774                           ;relogio.c: 45: Calendario->mes=1;
  1775  001966  EE20 F002          	lfsr	2,2
  1776  00196A  5011               	movf	tratar_relogio@Calendario,w,c
  1777  00196C  26D9               	addwf	fsr2l,f,c
  1778  00196E  5012               	movf	tratar_relogio@Calendario+1,w,c
  1779  001970  22DA               	addwfc	fsr2h,f,c
  1780  001972  0E01               	movlw	1
  1781  001974  6EDE               	movwf	postinc2,c
  1782  001976  0E00               	movlw	0
  1783  001978  6EDD               	movwf	postdec2,c
  1784  00197A                     l214:
  1785                           
  1786                           ;relogio.c: 46: }
  1787                           ;relogio.c: 47: if(Calendario->mes<1){
  1788  00197A  EE20 F002          	lfsr	2,2
  1789  00197E  5011               	movf	tratar_relogio@Calendario,w,c
  1790  001980  26D9               	addwf	fsr2l,f,c
  1791  001982  5012               	movf	tratar_relogio@Calendario+1,w,c
  1792  001984  22DA               	addwfc	fsr2h,f,c
  1793  001986  0E01               	movlw	1
  1794  001988  BEDB               	btfsc	plusw2,7,c
  1795  00198A  D006               	goto	l3744
  1796  00198C  0E01               	movlw	1
  1797  00198E  50DB               	movf	plusw2,w,c
  1798  001990  E131               	bnz	l3750
  1799  001992  04DE               	decf	postinc2,w,c
  1800  001994  B0D8               	btfsc	status,0,c
  1801  001996  D02E               	goto	l3750
  1802  001998                     l3744:
  1803                           
  1804                           ;relogio.c: 48: Calendario->mes=12;
  1805  001998  EE20 F002          	lfsr	2,2
  1806  00199C  5011               	movf	tratar_relogio@Calendario,w,c
  1807  00199E  26D9               	addwf	fsr2l,f,c
  1808  0019A0  5012               	movf	tratar_relogio@Calendario+1,w,c
  1809  0019A2  22DA               	addwfc	fsr2h,f,c
  1810  0019A4  0E0C               	movlw	12
  1811  0019A6  6EDE               	movwf	postinc2,c
  1812  0019A8  0E00               	movlw	0
  1813  0019AA  6EDD               	movwf	postdec2,c
  1814                           
  1815                           ;relogio.c: 49: Calendario->dia=qtdDias_mes[Calendario->mes];
  1816  0019AC  EE20 F002          	lfsr	2,2
  1817  0019B0  5011               	movf	tratar_relogio@Calendario,w,c
  1818  0019B2  26D9               	addwf	fsr2l,f,c
  1819  0019B4  5012               	movf	tratar_relogio@Calendario+1,w,c
  1820  0019B6  22DA               	addwfc	fsr2h,f,c
  1821  0019B8  CFDE F013          	movff	postinc2,??_tratar_relogio
  1822  0019BC  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1823  0019C0  90D8               	bcf	status,0,c
  1824  0019C2  3613               	rlcf	??_tratar_relogio,f,c
  1825  0019C4  3614               	rlcf	??_tratar_relogio+1,f,c
  1826  0019C6  0EE1               	movlw	low _qtdDias_mes
  1827  0019C8  2413               	addwf	??_tratar_relogio,w,c
  1828  0019CA  6ED9               	movwf	fsr2l,c
  1829  0019CC  0E00               	movlw	high _qtdDias_mes
  1830  0019CE  2014               	addwfc	??_tratar_relogio+1,w,c
  1831  0019D0  6EDA               	movwf	fsr2h,c
  1832  0019D2  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1833  0019D6  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1834  0019DA  CFDE FFE6          	movff	postinc2,postinc1
  1835  0019DE  CFDD FFE5          	movff	postdec2,postdec1
  1836                           
  1837                           ;relogio.c: 50: Calendario->ano--;
  1838  0019E2  EE20 F004          	lfsr	2,4
  1839  0019E6  5011               	movf	tratar_relogio@Calendario,w,c
  1840  0019E8  26D9               	addwf	fsr2l,f,c
  1841  0019EA  5012               	movf	tratar_relogio@Calendario+1,w,c
  1842  0019EC  22DA               	addwfc	fsr2h,f,c
  1843  0019EE  06DE               	decf	postinc2,f,c
  1844  0019F0  0E00               	movlw	0
  1845  0019F2  5ADD               	subwfb	postdec2,f,c
  1846  0019F4                     l3750:
  1847                           
  1848                           ;relogio.c: 51: }
  1849                           ;relogio.c: 53: if(Calendario->ano>=100){
  1850  0019F4  EE20 F004          	lfsr	2,4
  1851  0019F8  5011               	movf	tratar_relogio@Calendario,w,c
  1852  0019FA  26D9               	addwf	fsr2l,f,c
  1853  0019FC  5012               	movf	tratar_relogio@Calendario+1,w,c
  1854  0019FE  22DA               	addwfc	fsr2h,f,c
  1855  001A00  0E01               	movlw	1
  1856  001A02  BEDB               	btfsc	plusw2,7,c
  1857  001A04  D011               	goto	l216
  1858  001A06  0E01               	movlw	1
  1859  001A08  50DB               	movf	plusw2,w,c
  1860  001A0A  E104               	bnz	u4190
  1861  001A0C  0E64               	movlw	100
  1862  001A0E  5CDE               	subwf	postinc2,w,c
  1863  001A10  A0D8               	btfss	status,0,c
  1864  001A12  D00A               	goto	l216
  1865  001A14                     u4190:
  1866                           
  1867                           ;relogio.c: 54: Calendario->ano=00;
  1868  001A14  EE20 F004          	lfsr	2,4
  1869  001A18  5011               	movf	tratar_relogio@Calendario,w,c
  1870  001A1A  26D9               	addwf	fsr2l,f,c
  1871  001A1C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1872  001A1E  22DA               	addwfc	fsr2h,f,c
  1873  001A20  0E00               	movlw	0
  1874  001A22  6EDE               	movwf	postinc2,c
  1875  001A24  0E00               	movlw	0
  1876  001A26  6EDD               	movwf	postdec2,c
  1877  001A28                     l216:
  1878                           
  1879                           ;relogio.c: 55: }
  1880                           ;relogio.c: 56: if(Calendario->ano<0){
  1881  001A28  EE20 F004          	lfsr	2,4
  1882  001A2C  5011               	movf	tratar_relogio@Calendario,w,c
  1883  001A2E  26D9               	addwf	fsr2l,f,c
  1884  001A30  5012               	movf	tratar_relogio@Calendario+1,w,c
  1885  001A32  22DA               	addwfc	fsr2h,f,c
  1886  001A34  0E01               	movlw	1
  1887  001A36  AEDB               	btfss	plusw2,7,c
  1888  001A38  0012               	return	
  1889                           
  1890                           ;relogio.c: 57: Calendario->ano=99;
  1891  001A3A  EE20 F004          	lfsr	2,4
  1892  001A3E  5011               	movf	tratar_relogio@Calendario,w,c
  1893  001A40  26D9               	addwf	fsr2l,f,c
  1894  001A42  5012               	movf	tratar_relogio@Calendario+1,w,c
  1895  001A44  22DA               	addwfc	fsr2h,f,c
  1896  001A46  0E63               	movlw	99
  1897  001A48  6EDE               	movwf	postinc2,c
  1898  001A4A  0E00               	movlw	0
  1899  001A4C  6EDD               	movwf	postdec2,c
  1900  001A4E  0012               	return	
  1901  001A50                     __end_of_tratar_relogio:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           intcon	equ	0xFF2
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           postinc1	equ	0xFE6
  1911                           postdec1	equ	0xFE5
  1912                           fsr1h	equ	0xFE2
  1913                           fsr1l	equ	0xFE1
  1914                           postinc2	equ	0xFDE
  1915                           postdec2	equ	0xFDD
  1916                           plusw2	equ	0xFDB
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _pisca_cursor *****************
  1922 ;; Defined at:
  1923 ;;		line 170 in file "display_LCD.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    4
  1944 ;; This function calls:
  1945 ;;		_SetDDRamAddr
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text2
  1952  00204E                     __ptext2:
  1953                           	opt stack 0
  1954  00204E                     _pisca_cursor:
  1955                           	opt stack 26
  1956                           
  1957                           ;display_LCD.c: 171: if(tela_exibida==0){
  1958                           
  1959                           ;incstack = 0
  1960  00204E  0100               	movlb	0	; () banked
  1961  002050  51B3               	movf	_tela_exibida& (0+255),w,b
  1962  002052  0100               	movlb	0	; () banked
  1963  002054  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  1964  002056  A4D8               	btfss	status,2,c
  1965  002058  D05E               	goto	l3680
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;display_LCD.c: 172: if(cursor==0) SetDDRamAddr(0x06);
  1969  00205A  5049               	movf	_cursor,w,c
  1970  00205C  104A               	iorwf	_cursor+1,w,c
  1971  00205E  A4D8               	btfss	status,2,c
  1972  002060  D003               	goto	l3636
  1973                           
  1974                           ; BSR set to: 0
  1975  002062  0E06               	movlw	6
  1976  002064  EC29  F016         	call	_SetDDRamAddr
  1977  002068                     l3636:
  1978                           
  1979                           ;display_LCD.c: 173: if(cursor==1) SetDDRamAddr(0x07);
  1980  002068  0449               	decf	_cursor,w,c
  1981  00206A  104A               	iorwf	_cursor+1,w,c
  1982  00206C  A4D8               	btfss	status,2,c
  1983  00206E  D003               	goto	l3640
  1984  002070  0E07               	movlw	7
  1985  002072  EC29  F016         	call	_SetDDRamAddr
  1986  002076                     l3640:
  1987                           
  1988                           ;display_LCD.c: 174: if(cursor==2) SetDDRamAddr(0x09);
  1989  002076  0E02               	movlw	2
  1990  002078  1849               	xorwf	_cursor,w,c
  1991  00207A  104A               	iorwf	_cursor+1,w,c
  1992  00207C  A4D8               	btfss	status,2,c
  1993  00207E  D003               	goto	l3644
  1994  002080  0E09               	movlw	9
  1995  002082  EC29  F016         	call	_SetDDRamAddr
  1996  002086                     l3644:
  1997                           
  1998                           ;display_LCD.c: 175: if(cursor==3) SetDDRamAddr(0x0A);
  1999  002086  0E03               	movlw	3
  2000  002088  1849               	xorwf	_cursor,w,c
  2001  00208A  104A               	iorwf	_cursor+1,w,c
  2002  00208C  A4D8               	btfss	status,2,c
  2003  00208E  D003               	goto	l3648
  2004  002090  0E0A               	movlw	10
  2005  002092  EC29  F016         	call	_SetDDRamAddr
  2006  002096                     l3648:
  2007                           
  2008                           ;display_LCD.c: 176: if(cursor==4) SetDDRamAddr(0x0C);
  2009  002096  0E04               	movlw	4
  2010  002098  1849               	xorwf	_cursor,w,c
  2011  00209A  104A               	iorwf	_cursor+1,w,c
  2012  00209C  A4D8               	btfss	status,2,c
  2013  00209E  D003               	goto	l3652
  2014  0020A0  0E0C               	movlw	12
  2015  0020A2  EC29  F016         	call	_SetDDRamAddr
  2016  0020A6                     l3652:
  2017                           
  2018                           ;display_LCD.c: 177: if(cursor==5) SetDDRamAddr(0x0D);
  2019  0020A6  0E05               	movlw	5
  2020  0020A8  1849               	xorwf	_cursor,w,c
  2021  0020AA  104A               	iorwf	_cursor+1,w,c
  2022  0020AC  A4D8               	btfss	status,2,c
  2023  0020AE  D003               	goto	l3656
  2024  0020B0  0E0D               	movlw	13
  2025  0020B2  EC29  F016         	call	_SetDDRamAddr
  2026  0020B6                     l3656:
  2027                           
  2028                           ;display_LCD.c: 178: if(cursor==6) SetDDRamAddr(0x46);
  2029  0020B6  0E06               	movlw	6
  2030  0020B8  1849               	xorwf	_cursor,w,c
  2031  0020BA  104A               	iorwf	_cursor+1,w,c
  2032  0020BC  A4D8               	btfss	status,2,c
  2033  0020BE  D003               	goto	l3660
  2034  0020C0  0E46               	movlw	70
  2035  0020C2  EC29  F016         	call	_SetDDRamAddr
  2036  0020C6                     l3660:
  2037                           
  2038                           ;display_LCD.c: 179: if(cursor==7) SetDDRamAddr(0x47);
  2039  0020C6  0E07               	movlw	7
  2040  0020C8  1849               	xorwf	_cursor,w,c
  2041  0020CA  104A               	iorwf	_cursor+1,w,c
  2042  0020CC  A4D8               	btfss	status,2,c
  2043  0020CE  D003               	goto	l3664
  2044  0020D0  0E47               	movlw	71
  2045  0020D2  EC29  F016         	call	_SetDDRamAddr
  2046  0020D6                     l3664:
  2047                           
  2048                           ;display_LCD.c: 180: if(cursor==8) SetDDRamAddr(0x49);
  2049  0020D6  0E08               	movlw	8
  2050  0020D8  1849               	xorwf	_cursor,w,c
  2051  0020DA  104A               	iorwf	_cursor+1,w,c
  2052  0020DC  A4D8               	btfss	status,2,c
  2053  0020DE  D003               	goto	l3668
  2054  0020E0  0E49               	movlw	73
  2055  0020E2  EC29  F016         	call	_SetDDRamAddr
  2056  0020E6                     l3668:
  2057                           
  2058                           ;display_LCD.c: 181: if(cursor==9) SetDDRamAddr(0x4A);
  2059  0020E6  0E09               	movlw	9
  2060  0020E8  1849               	xorwf	_cursor,w,c
  2061  0020EA  104A               	iorwf	_cursor+1,w,c
  2062  0020EC  A4D8               	btfss	status,2,c
  2063  0020EE  D003               	goto	l3672
  2064  0020F0  0E4A               	movlw	74
  2065  0020F2  EC29  F016         	call	_SetDDRamAddr
  2066  0020F6                     l3672:
  2067                           
  2068                           ;display_LCD.c: 182: if(cursor==10) SetDDRamAddr(0x4C);
  2069  0020F6  0E0A               	movlw	10
  2070  0020F8  1849               	xorwf	_cursor,w,c
  2071  0020FA  104A               	iorwf	_cursor+1,w,c
  2072  0020FC  A4D8               	btfss	status,2,c
  2073  0020FE  D003               	goto	l3676
  2074  002100  0E4C               	movlw	76
  2075  002102  EC29  F016         	call	_SetDDRamAddr
  2076  002106                     l3676:
  2077                           
  2078                           ;display_LCD.c: 183: if(cursor==11) SetDDRamAddr(0x4D);
  2079  002106  0E0B               	movlw	11
  2080  002108  1849               	xorwf	_cursor,w,c
  2081  00210A  104A               	iorwf	_cursor+1,w,c
  2082  00210C  A4D8               	btfss	status,2,c
  2083  00210E  D003               	goto	l3680
  2084  002110  0E4D               	movlw	77
  2085  002112  EC29  F016         	call	_SetDDRamAddr
  2086  002116                     l3680:
  2087                           
  2088                           ;display_LCD.c: 184: }
  2089                           ;display_LCD.c: 186: if(tela_exibida==1){
  2090  002116  0100               	movlb	0	; () banked
  2091  002118  05B3               	decf	_tela_exibida& (0+255),w,b
  2092  00211A  0100               	movlb	0	; () banked
  2093  00211C  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  2094  00211E  A4D8               	btfss	status,2,c
  2095  002120  0012               	return	
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;display_LCD.c: 187: if(cursor==0) SetDDRamAddr(0x40);
  2099  002122  5049               	movf	_cursor,w,c
  2100  002124  104A               	iorwf	_cursor+1,w,c
  2101  002126  A4D8               	btfss	status,2,c
  2102  002128  D003               	goto	l3686
  2103                           
  2104                           ; BSR set to: 0
  2105  00212A  0E40               	movlw	64
  2106  00212C  EC29  F016         	call	_SetDDRamAddr
  2107  002130                     l3686:
  2108                           
  2109                           ;display_LCD.c: 188: if(cursor==1) SetDDRamAddr(0x41);
  2110  002130  0449               	decf	_cursor,w,c
  2111  002132  104A               	iorwf	_cursor+1,w,c
  2112  002134  A4D8               	btfss	status,2,c
  2113  002136  D003               	goto	l3690
  2114  002138  0E41               	movlw	65
  2115  00213A  EC29  F016         	call	_SetDDRamAddr
  2116  00213E                     l3690:
  2117                           
  2118                           ;display_LCD.c: 189: if(cursor==2) SetDDRamAddr(0x43);
  2119  00213E  0E02               	movlw	2
  2120  002140  1849               	xorwf	_cursor,w,c
  2121  002142  104A               	iorwf	_cursor+1,w,c
  2122  002144  A4D8               	btfss	status,2,c
  2123  002146  D003               	goto	l3694
  2124  002148  0E43               	movlw	67
  2125  00214A  EC29  F016         	call	_SetDDRamAddr
  2126  00214E                     l3694:
  2127                           
  2128                           ;display_LCD.c: 190: if(cursor==3) SetDDRamAddr(0x44);
  2129  00214E  0E03               	movlw	3
  2130  002150  1849               	xorwf	_cursor,w,c
  2131  002152  104A               	iorwf	_cursor+1,w,c
  2132  002154  A4D8               	btfss	status,2,c
  2133  002156  D003               	goto	l3698
  2134  002158  0E44               	movlw	68
  2135  00215A  EC29  F016         	call	_SetDDRamAddr
  2136  00215E                     l3698:
  2137                           
  2138                           ;display_LCD.c: 191: if(cursor==4) SetDDRamAddr(0x46);
  2139  00215E  0E04               	movlw	4
  2140  002160  1849               	xorwf	_cursor,w,c
  2141  002162  104A               	iorwf	_cursor+1,w,c
  2142  002164  A4D8               	btfss	status,2,c
  2143  002166  D003               	goto	l3702
  2144  002168  0E46               	movlw	70
  2145  00216A  EC29  F016         	call	_SetDDRamAddr
  2146  00216E                     l3702:
  2147                           
  2148                           ;display_LCD.c: 192: if(cursor==5) SetDDRamAddr(0x47);
  2149  00216E  0E05               	movlw	5
  2150  002170  1849               	xorwf	_cursor,w,c
  2151  002172  104A               	iorwf	_cursor+1,w,c
  2152  002174  A4D8               	btfss	status,2,c
  2153  002176  0012               	return	
  2154  002178  0E47               	movlw	71
  2155  00217A  EC29  F016         	call	_SetDDRamAddr
  2156  00217E  0012               	return	
  2157  002180                     __end_of_pisca_cursor:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postinc1	equ	0xFE6
  2167                           postdec1	equ	0xFE5
  2168                           fsr1h	equ	0xFE2
  2169                           fsr1l	equ	0xFE1
  2170                           postinc2	equ	0xFDE
  2171                           postdec2	equ	0xFDD
  2172                           plusw2	equ	0xFDB
  2173                           fsr2h	equ	0xFDA
  2174                           fsr2l	equ	0xFD9
  2175                           status	equ	0xFD8
  2176                           
  2177 ;; *************** function _maquina_estado *****************
  2178 ;; Defined at:
  2179 ;;		line 87 in file "serial.h"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2195 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2196 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    2
  2200 ;; This function calls:
  2201 ;;		_trata_comando
  2202 ;;		_tx_data
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text3
  2209  002D7E                     __ptext3:
  2210                           	opt stack 0
  2211  002D7E                     _maquina_estado:
  2212                           	opt stack 28
  2213                           
  2214                           ;serial.h: 88: switch(ESTADO_COMUNICACAO){
  2215                           
  2216                           ;incstack = 0
  2217  002D7E  D00B               	goto	l3766
  2218  002D80                     l3758:
  2219                           
  2220                           ;serial.h: 90: trata_comando();
  2221  002D80  EC55  F017         	call	_trata_comando	;wreg free
  2222                           
  2223                           ;serial.h: 91: break;
  2224  002D84  0012               	return	
  2225  002D86                     l3760:
  2226                           
  2227                           ;serial.h: 94: tx_data();
  2228  002D86  EC39  F017         	call	_tx_data	;wreg free
  2229                           
  2230                           ;serial.h: 95: ESTADO_COMUNICACAO = '0';
  2231  002D8A  0E00               	movlw	0
  2232  002D8C  0100               	movlb	0	; () banked
  2233  002D8E  6FB0               	movwf	(_ESTADO_COMUNICACAO+1)& (0+255),b
  2234  002D90  0E30               	movlw	48
  2235  002D92  6FAF               	movwf	_ESTADO_COMUNICACAO& (0+255),b
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;serial.h: 100: };
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;serial.h: 99: break;
  2242                           
  2243                           ;serial.h: 98: case '0':
  2244                           
  2245                           ;serial.h: 96: break;
  2246  002D94  0012               	return	
  2247  002D96                     l3766:
  2248  002D96  C0AF  F011         	movff	_ESTADO_COMUNICACAO,??_maquina_estado
  2249  002D9A  C0B0  F012         	movff	_ESTADO_COMUNICACAO+1,??_maquina_estado+1
  2250                           
  2251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2252                           ; Switch size 1, requested type "space"
  2253                           ; Number of cases is 1, Range of values is 0 to 0
  2254                           ; switch strategies available:
  2255                           ; Name         Instructions Cycles
  2256                           ; simple_byte            4     3 (average)
  2257                           ;	Chosen strategy is simple_byte
  2258  002D9E  5012               	movf	??_maquina_estado+1,w,c
  2259  002DA0  0A00               	xorlw	0	; case 0
  2260  002DA2  A4D8               	btfss	status,2,c
  2261  002DA4  0012               	return	
  2262                           
  2263                           ; Switch size 1, requested type "space"
  2264                           ; Number of cases is 3, Range of values is 48 to 50
  2265                           ; switch strategies available:
  2266                           ; Name         Instructions Cycles
  2267                           ; simple_byte           10     6 (average)
  2268                           ;	Chosen strategy is simple_byte
  2269  002DA6  5011               	movf	??_maquina_estado,w,c
  2270  002DA8  0A30               	xorlw	48	; case 48
  2271  002DAA  B4D8               	btfsc	status,2,c
  2272  002DAC  0012               	return	
  2273  002DAE  0A01               	xorlw	1	; case 49
  2274  002DB0  B4D8               	btfsc	status,2,c
  2275  002DB2  D7E6               	goto	l3758
  2276  002DB4  0A03               	xorlw	3	; case 50
  2277  002DB6  A4D8               	btfss	status,2,c
  2278  002DB8  0012               	return	
  2279  002DBA  D7E5               	goto	l3760
  2280  002DBC                     __end_of_maquina_estado:
  2281                           	opt stack 0
  2282                           tblptru	equ	0xFF8
  2283                           tblptrh	equ	0xFF7
  2284                           tblptrl	equ	0xFF6
  2285                           tablat	equ	0xFF5
  2286                           intcon	equ	0xFF2
  2287                           postinc0	equ	0xFEE
  2288                           wreg	equ	0xFE8
  2289                           postinc1	equ	0xFE6
  2290                           postdec1	equ	0xFE5
  2291                           fsr1h	equ	0xFE2
  2292                           fsr1l	equ	0xFE1
  2293                           postinc2	equ	0xFDE
  2294                           postdec2	equ	0xFDD
  2295                           plusw2	equ	0xFDB
  2296                           fsr2h	equ	0xFDA
  2297                           fsr2l	equ	0xFD9
  2298                           status	equ	0xFD8
  2299                           
  2300 ;; *************** function _tx_data *****************
  2301 ;; Defined at:
  2302 ;;		line 45 in file "serial.h"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  cont            2   14[COMRAM] int 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        2 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_maquina_estado
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text4
  2331  002E72                     __ptext4:
  2332                           	opt stack 0
  2333  002E72                     _tx_data:
  2334                           	opt stack 28
  2335  002E72                     l338:
  2336  002E72  A89E               	btfss	3998,4,c	;volatile
  2337  002E74  D7FE               	goto	l338
  2338                           
  2339                           ;serial.h: 49: for (cont=0; cont<3; cont++) {
  2340  002E76  0E00               	movlw	0
  2341  002E78  6E10               	movwf	tx_data@cont+1,c
  2342  002E7A  0E00               	movlw	0
  2343  002E7C  6E0F               	movwf	tx_data@cont,c
  2344  002E7E                     l3204:
  2345  002E7E  BE10               	btfsc	tx_data@cont+1,7,c
  2346  002E80  D006               	goto	l343
  2347  002E82  5010               	movf	tx_data@cont+1,w,c
  2348  002E84  E111               	bnz	l346
  2349  002E86  0E03               	movlw	3
  2350  002E88  5C0F               	subwf	tx_data@cont,w,c
  2351  002E8A  B0D8               	btfsc	status,0,c
  2352  002E8C  0012               	return	
  2353  002E8E                     l343:
  2354  002E8E  A89E               	btfss	3998,4,c	;volatile
  2355  002E90  D7FE               	goto	l343
  2356                           
  2357                           ;serial.h: 51: TXREG = BUFF_RESP[cont];
  2358  002E92  0E42               	movlw	low _BUFF_RESP
  2359  002E94  240F               	addwf	tx_data@cont,w,c
  2360  002E96  6ED9               	movwf	fsr2l,c
  2361  002E98  0E00               	movlw	high _BUFF_RESP
  2362  002E9A  2010               	addwfc	tx_data@cont+1,w,c
  2363  002E9C  6EDA               	movwf	fsr2h,c
  2364  002E9E  50DF               	movf	indf2,w,c
  2365  002EA0  6EAD               	movwf	4013,c	;volatile
  2366  002EA2  4A0F               	infsnz	tx_data@cont,f,c
  2367  002EA4  2A10               	incf	tx_data@cont+1,f,c
  2368  002EA6  D7EB               	goto	l3204
  2369  002EA8                     l346:
  2370  002EA8  0012               	return		;funcret
  2371  002EAA                     __end_of_tx_data:
  2372                           	opt stack 0
  2373                           tblptru	equ	0xFF8
  2374                           tblptrh	equ	0xFF7
  2375                           tblptrl	equ	0xFF6
  2376                           tablat	equ	0xFF5
  2377                           intcon	equ	0xFF2
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           postinc1	equ	0xFE6
  2381                           postdec1	equ	0xFE5
  2382                           fsr1h	equ	0xFE2
  2383                           fsr1l	equ	0xFE1
  2384                           indf2	equ	0xFDF
  2385                           postinc2	equ	0xFDE
  2386                           postdec2	equ	0xFDD
  2387                           plusw2	equ	0xFDB
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _trata_comando *****************
  2393 ;; Defined at:
  2394 ;;		line 73 in file "serial.h"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2410 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2411 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2412 ;;Total ram usage:        2 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_maquina_estado
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text5
  2423  002EAA                     __ptext5:
  2424                           	opt stack 0
  2425  002EAA                     _trata_comando:
  2426                           	opt stack 28
  2427                           
  2428                           ;serial.h: 76: PORTCbits.RC0=1;
  2429                           
  2430                           ;incstack = 0
  2431  002EAA  8082               	bsf	3970,0,c	;volatile
  2432                           
  2433                           ;serial.h: 77: _delay((unsigned long)((180)*(20000000/4000.0)));
  2434  002EAC  0E05               	movlw	5
  2435  002EAE  6E10               	movwf	(??_trata_comando+1)& (0+255),c
  2436  002EB0  0E91               	movlw	145
  2437  002EB2  6E0F               	movwf	??_trata_comando& (0+255),c
  2438  002EB4  0ED0               	movlw	208
  2439  002EB6                     u5097:
  2440  002EB6  2EE8               	decfsz	wreg,f,c
  2441  002EB8  D7FE               	bra	u5097
  2442  002EBA  2E0F               	decfsz	??_trata_comando& (0+255),f,c
  2443  002EBC  D7FC               	bra	u5097
  2444  002EBE  2E10               	decfsz	(??_trata_comando+1)& (0+255),f,c
  2445  002EC0  D7FA               	bra	u5097
  2446                           
  2447                           ;serial.h: 78: PORTCbits.RC0=0;
  2448  002EC2  9082               	bcf	3970,0,c	;volatile
  2449                           
  2450                           ;serial.h: 80: BUFF_RESP[0] = BUFF_COM[0];
  2451  002EC4  C0A7  F042         	movff	_BUFF_COM,_BUFF_RESP
  2452                           
  2453                           ;serial.h: 81: BUFF_RESP[1] = BUFF_COM[1];
  2454  002EC8  C0A8  F043         	movff	_BUFF_COM+1,_BUFF_RESP+1
  2455                           
  2456                           ;serial.h: 82: BUFF_RESP[2] = BUFF_COM[2];
  2457  002ECC  C0A9  F044         	movff	_BUFF_COM+2,_BUFF_RESP+2
  2458                           
  2459                           ;serial.h: 84: ESTADO_COMUNICACAO = '2';
  2460  002ED0  0E00               	movlw	0
  2461  002ED2  0100               	movlb	0	; () banked
  2462  002ED4  6FB0               	movwf	(_ESTADO_COMUNICACAO+1)& (0+255),b
  2463  002ED6  0E32               	movlw	50
  2464  002ED8  6FAF               	movwf	_ESTADO_COMUNICACAO& (0+255),b
  2465                           
  2466                           ; BSR set to: 0
  2467  002EDA  0012               	return		;funcret
  2468  002EDC                     __end_of_trata_comando:
  2469                           	opt stack 0
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           intcon	equ	0xFF2
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           postinc1	equ	0xFE6
  2478                           postdec1	equ	0xFE5
  2479                           fsr1h	equ	0xFE2
  2480                           fsr1l	equ	0xFE1
  2481                           indf2	equ	0xFDF
  2482                           postinc2	equ	0xFDE
  2483                           postdec2	equ	0xFDD
  2484                           plusw2	equ	0xFDB
  2485                           fsr2h	equ	0xFDA
  2486                           fsr2l	equ	0xFD9
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function _init_XLCD *****************
  2490 ;; Defined at:
  2491 ;;		line 18 in file "display_LCD.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      void 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2505 ;;      Params:         0       0       0       0       0       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2508 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2509 ;;Total ram usage:        0 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    5
  2512 ;; This function calls:
  2513 ;;		_BusyXLCD
  2514 ;;		_OpenXLCD
  2515 ;;		_WriteCmdXLCD
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text6
  2522  002F24                     __ptext6:
  2523                           	opt stack 0
  2524  002F24                     _init_XLCD:
  2525                           	opt stack 25
  2526                           
  2527                           ;display_LCD.c: 19: OpenXLCD(0b00101100&0b00111000);
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;incstack = 0
  2531  002F24  0E28               	movlw	40
  2532  002F26  ECE5  F013         	call	_OpenXLCD
  2533  002F2A                     l3380:
  2534  002F2A  EC1C  F017         	call	_BusyXLCD	;wreg free
  2535  002F2E  0900               	iorlw	0
  2536  002F30  A4D8               	btfss	status,2,c
  2537  002F32  D7FB               	goto	l3380
  2538                           
  2539                           ;display_LCD.c: 21: WriteCmdXLCD(0x06);
  2540  002F34  0E06               	movlw	6
  2541  002F36  ECFD  F016         	call	_WriteCmdXLCD
  2542                           
  2543                           ;display_LCD.c: 22: WriteCmdXLCD(0x0C);
  2544  002F3A  0E0C               	movlw	12
  2545  002F3C  ECFD  F016         	call	_WriteCmdXLCD
  2546  002F40  0012               	return		;funcret
  2547  002F42                     __end_of_init_XLCD:
  2548                           	opt stack 0
  2549                           tblptru	equ	0xFF8
  2550                           tblptrh	equ	0xFF7
  2551                           tblptrl	equ	0xFF6
  2552                           tablat	equ	0xFF5
  2553                           intcon	equ	0xFF2
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           postinc1	equ	0xFE6
  2557                           postdec1	equ	0xFE5
  2558                           fsr1h	equ	0xFE2
  2559                           fsr1l	equ	0xFE1
  2560                           indf2	equ	0xFDF
  2561                           postinc2	equ	0xFDE
  2562                           postdec2	equ	0xFDD
  2563                           plusw2	equ	0xFDB
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _OpenXLCD *****************
  2569 ;; Defined at:
  2570 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  lcdtype         1    wreg     unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  lcdtype         1   19[COMRAM] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2587 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2588 ;;Total ram usage:        1 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    4
  2591 ;; This function calls:
  2592 ;;		_BusyXLCD
  2593 ;;		_Delay10KTCYx
  2594 ;;		_DelayPORXLCD
  2595 ;;		_SetDDRamAddr
  2596 ;;		_WriteCmdXLCD
  2597 ;; This function is called by:
  2598 ;;		_init_XLCD
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text7
  2603  0027CA                     __ptext7:
  2604                           	opt stack 0
  2605  0027CA                     _OpenXLCD:
  2606                           	opt stack 25
  2607                           
  2608                           ;incstack = 0
  2609                           ;OpenXLCD@lcdtype stored from wreg
  2610  0027CA  6E14               	movwf	OpenXLCD@lcdtype,c
  2611  0027CC  0EF0               	movlw	240
  2612  0027CE  1681               	andwf	3969,f,c	;volatile
  2613  0027D0  0EF0               	movlw	240
  2614  0027D2  1693               	andwf	3987,f,c	;volatile
  2615  0027D4  9C93               	bcf	3987,6,c	;volatile
  2616  0027D6  9A93               	bcf	3987,5,c	;volatile
  2617  0027D8  9893               	bcf	3987,4,c	;volatile
  2618  0027DA  9C8A               	bcf	3978,6,c	;volatile
  2619  0027DC  9A8A               	bcf	3978,5,c	;volatile
  2620  0027DE  988A               	bcf	3978,4,c	;volatile
  2621  0027E0  ECE8  F017         	call	_DelayPORXLCD	;wreg free
  2622  0027E4  0E30               	movlw	48
  2623  0027E6  ECFD  F016         	call	_WriteCmdXLCD
  2624  0027EA  0E05               	movlw	5
  2625  0027EC  ECAE  F017         	call	_Delay10KTCYx
  2626  0027F0  0E30               	movlw	48
  2627  0027F2  ECFD  F016         	call	_WriteCmdXLCD
  2628  0027F6  0E01               	movlw	1
  2629  0027F8  ECAE  F017         	call	_Delay10KTCYx
  2630  0027FC  0E32               	movlw	50
  2631  0027FE  ECFD  F016         	call	_WriteCmdXLCD
  2632  002802                     l3148:
  2633  002802  EC1C  F017         	call	_BusyXLCD	;wreg free
  2634  002806  0900               	iorlw	0
  2635  002808  A4D8               	btfss	status,2,c
  2636  00280A  D7FB               	goto	l3148
  2637  00280C                     l3150:
  2638  00280C  EC1C  F017         	call	_BusyXLCD	;wreg free
  2639  002810  0900               	iorlw	0
  2640  002812  A4D8               	btfss	status,2,c
  2641  002814  D7FB               	goto	l3150
  2642  002816  5014               	movf	OpenXLCD@lcdtype,w,c
  2643  002818  ECFD  F016         	call	_WriteCmdXLCD
  2644  00281C                     l3154:
  2645  00281C  EC1C  F017         	call	_BusyXLCD	;wreg free
  2646  002820  0900               	iorlw	0
  2647  002822  A4D8               	btfss	status,2,c
  2648  002824  D7FB               	goto	l3154
  2649  002826  0E08               	movlw	8
  2650  002828  ECFD  F016         	call	_WriteCmdXLCD
  2651  00282C                     l3158:
  2652  00282C  EC1C  F017         	call	_BusyXLCD	;wreg free
  2653  002830  0900               	iorlw	0
  2654  002832  A4D8               	btfss	status,2,c
  2655  002834  D7FB               	goto	l3158
  2656  002836  0E0F               	movlw	15
  2657  002838  ECFD  F016         	call	_WriteCmdXLCD
  2658  00283C                     l3162:
  2659  00283C  EC1C  F017         	call	_BusyXLCD	;wreg free
  2660  002840  0900               	iorlw	0
  2661  002842  A4D8               	btfss	status,2,c
  2662  002844  D7FB               	goto	l3162
  2663  002846  0E01               	movlw	1
  2664  002848  ECFD  F016         	call	_WriteCmdXLCD
  2665  00284C                     l3166:
  2666  00284C  EC1C  F017         	call	_BusyXLCD	;wreg free
  2667  002850  0900               	iorlw	0
  2668  002852  A4D8               	btfss	status,2,c
  2669  002854  D7FB               	goto	l3166
  2670  002856  0E04               	movlw	4
  2671  002858  ECFD  F016         	call	_WriteCmdXLCD
  2672  00285C                     l3170:
  2673  00285C  EC1C  F017         	call	_BusyXLCD	;wreg free
  2674  002860  0900               	iorlw	0
  2675  002862  A4D8               	btfss	status,2,c
  2676  002864  D7FB               	goto	l3170
  2677  002866  0E80               	movlw	128
  2678  002868  EC29  F016         	call	_SetDDRamAddr
  2679  00286C  0012               	return	
  2680  00286E                     __end_of_OpenXLCD:
  2681                           	opt stack 0
  2682                           tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           intcon	equ	0xFF2
  2687                           postinc0	equ	0xFEE
  2688                           wreg	equ	0xFE8
  2689                           postinc1	equ	0xFE6
  2690                           postdec1	equ	0xFE5
  2691                           fsr1h	equ	0xFE2
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           postinc2	equ	0xFDE
  2695                           postdec2	equ	0xFDD
  2696                           plusw2	equ	0xFDB
  2697                           fsr2h	equ	0xFDA
  2698                           fsr2l	equ	0xFD9
  2699                           status	equ	0xFD8
  2700                           
  2701 ;; *************** function _DelayPORXLCD *****************
  2702 ;; Defined at:
  2703 ;;		line 7 in file "display_LCD.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2717 ;;      Params:         0       0       0       0       0       0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2720 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2721 ;;Total ram usage:        0 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    2
  2724 ;; This function calls:
  2725 ;;		_Delay1KTCYx
  2726 ;; This function is called by:
  2727 ;;		_OpenXLCD
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text8
  2732  002FD0                     __ptext8:
  2733                           	opt stack 0
  2734  002FD0                     _DelayPORXLCD:
  2735                           	opt stack 26
  2736                           
  2737                           ;display_LCD.c: 8: Delay1KTCYx(180);
  2738                           
  2739                           ;incstack = 0
  2740  002FD0  0EB4               	movlw	180
  2741  002FD2  ECC4  F017         	call	_Delay1KTCYx
  2742  002FD6  0012               	return	
  2743  002FD8                     __end_of_DelayPORXLCD:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           intcon	equ	0xFF2
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           postinc1	equ	0xFE6
  2753                           postdec1	equ	0xFE5
  2754                           fsr1h	equ	0xFE2
  2755                           fsr1l	equ	0xFE1
  2756                           indf2	equ	0xFDF
  2757                           postinc2	equ	0xFDE
  2758                           postdec2	equ	0xFDD
  2759                           plusw2	equ	0xFDB
  2760                           fsr2h	equ	0xFDA
  2761                           fsr2l	equ	0xFD9
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _Delay1KTCYx *****************
  2765 ;; Defined at:
  2766 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  unit            1    wreg     unsigned char 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  unit            1   14[COMRAM] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0
  2781 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2783 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2784 ;;Total ram usage:        1 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    1
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_DelayPORXLCD
  2791 ;;		_DelayXLCD
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text9
  2796  002F88                     __ptext9:
  2797                           	opt stack 0
  2798  002F88                     _Delay1KTCYx:
  2799                           	opt stack 26
  2800                           
  2801                           ;incstack = 0
  2802                           ;Delay1KTCYx@unit stored from wreg
  2803  002F88  6E0F               	movwf	Delay1KTCYx@unit,c
  2804  002F8A  0EC8               	movlw	200
  2805  002F8C                     u5107:
  2806  002F8C  D000               	nop2	
  2807  002F8E  2EE8               	decfsz	wreg,f,c
  2808  002F90  D7FD               	bra	u5107
  2809  002F92  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  2810  002F94  D7FA               	goto	l2776
  2811  002F96  0012               	return	
  2812  002F98                     __end_of_Delay1KTCYx:
  2813                           	opt stack 0
  2814                           tblptru	equ	0xFF8
  2815                           tblptrh	equ	0xFF7
  2816                           tblptrl	equ	0xFF6
  2817                           tablat	equ	0xFF5
  2818                           intcon	equ	0xFF2
  2819                           postinc0	equ	0xFEE
  2820                           wreg	equ	0xFE8
  2821                           postinc1	equ	0xFE6
  2822                           postdec1	equ	0xFE5
  2823                           fsr1h	equ	0xFE2
  2824                           fsr1l	equ	0xFE1
  2825                           indf2	equ	0xFDF
  2826                           postinc2	equ	0xFDE
  2827                           postdec2	equ	0xFDD
  2828                           plusw2	equ	0xFDB
  2829                           fsr2h	equ	0xFDA
  2830                           fsr2l	equ	0xFD9
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _Delay10KTCYx *****************
  2834 ;; Defined at:
  2835 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  unit            1    wreg     unsigned char 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  unit            1   15[COMRAM] unsigned char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0
  2850 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2851 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2852 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2853 ;;Total ram usage:        2 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_OpenXLCD
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text10
  2864  002F5C                     __ptext10:
  2865                           	opt stack 0
  2866  002F5C                     _Delay10KTCYx:
  2867                           	opt stack 27
  2868                           
  2869                           ;incstack = 0
  2870                           ;Delay10KTCYx@unit stored from wreg
  2871  002F5C  6E10               	movwf	Delay10KTCYx@unit,c
  2872  002F5E  0E0D               	movlw	13
  2873  002F60  6E0F               	movwf	??_Delay10KTCYx& (0+255),c
  2874  002F62  0EFC               	movlw	252
  2875  002F64                     u5117:
  2876  002F64  2EE8               	decfsz	wreg,f,c
  2877  002F66  D7FE               	bra	u5117
  2878  002F68  2E0F               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2879  002F6A  D7FC               	bra	u5117
  2880  002F6C  2E10               	decfsz	Delay10KTCYx@unit,f,c
  2881  002F6E  D7F7               	goto	l3042
  2882  002F70  0012               	return	
  2883  002F72                     __end_of_Delay10KTCYx:
  2884                           	opt stack 0
  2885                           tblptru	equ	0xFF8
  2886                           tblptrh	equ	0xFF7
  2887                           tblptrl	equ	0xFF6
  2888                           tablat	equ	0xFF5
  2889                           intcon	equ	0xFF2
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           postinc1	equ	0xFE6
  2893                           postdec1	equ	0xFE5
  2894                           fsr1h	equ	0xFE2
  2895                           fsr1l	equ	0xFE1
  2896                           indf2	equ	0xFDF
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           plusw2	equ	0xFDB
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _init_ADC *****************
  2905 ;; Defined at:
  2906 ;;		line 3 in file "ad.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    1
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_main
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text11
  2935  002FA8                     __ptext11:
  2936                           	opt stack 0
  2937  002FA8                     _init_ADC:
  2938                           	opt stack 29
  2939                           
  2940                           ;ad.c: 4: ADCON2=0b10101110;
  2941                           
  2942                           ;incstack = 0
  2943  002FA8  0EAE               	movlw	174
  2944  002FAA  6EC0               	movwf	4032,c	;volatile
  2945                           
  2946                           ;ad.c: 5: ADCON0=0b00000011;
  2947  002FAC  0E03               	movlw	3
  2948  002FAE  6EC2               	movwf	4034,c	;volatile
  2949                           
  2950                           ;ad.c: 6: ADCON1=0b00001101;
  2951  002FB0  0E0D               	movlw	13
  2952  002FB2  6EC1               	movwf	4033,c	;volatile
  2953  002FB4  0012               	return		;funcret
  2954  002FB6                     __end_of_init_ADC:
  2955                           	opt stack 0
  2956                           tblptru	equ	0xFF8
  2957                           tblptrh	equ	0xFF7
  2958                           tblptrl	equ	0xFF6
  2959                           tablat	equ	0xFF5
  2960                           intcon	equ	0xFF2
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postinc1	equ	0xFE6
  2964                           postdec1	equ	0xFE5
  2965                           fsr1h	equ	0xFE2
  2966                           fsr1l	equ	0xFE1
  2967                           indf2	equ	0xFDF
  2968                           postinc2	equ	0xFDE
  2969                           postdec2	equ	0xFDD
  2970                           plusw2	equ	0xFDB
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _exibir_lcd *****************
  2976 ;; Defined at:
  2977 ;;		line 25 in file "display_LCD.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  Relogio         2   21[BANK0 ] PTR struct .
  2980 ;;		 -> Relogio(6), 
  2981 ;;  Despertador     2   23[BANK0 ] PTR struct .
  2982 ;;		 -> Despertador(6), 
  2983 ;;  Calendario      2   25[BANK0 ] PTR struct .
  2984 ;;		 -> Calendario(6), 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  str            16   29[BANK0 ] unsigned char [16]
  2987 ;;  f               2   67[BANK0 ] int 
  2988 ;;  e               2   65[BANK0 ] int 
  2989 ;;  d               2   63[BANK0 ] int 
  2990 ;;  c               2   61[BANK0 ] int 
  2991 ;;  b               2   59[BANK0 ] int 
  2992 ;;  a               2   57[BANK0 ] int 
  2993 ;;  l               2   55[BANK0 ] int 
  2994 ;;  k               2   53[BANK0 ] int 
  2995 ;;  j               2   51[BANK0 ] int 
  2996 ;;  i               2   49[BANK0 ] int 
  2997 ;;  h               2   47[BANK0 ] int 
  2998 ;;  g               2   45[BANK0 ] int 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3008 ;;      Params:         0       6       0       0       0       0       0       0       0
  3009 ;;      Locals:         0      40       0       0       0       0       0       0       0
  3010 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3011 ;;      Totals:         0      48       0       0       0       0       0       0       0
  3012 ;;Total ram usage:       48 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    7
  3015 ;; This function calls:
  3016 ;;		_SetDDRamAddr
  3017 ;;		___awdiv
  3018 ;;		___awmod
  3019 ;;		_convert_float_to_char
  3020 ;;		_gambiarra
  3021 ;;		_putrsXLCD
  3022 ;;		_sprintf
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text12
  3029  000FE0                     __ptext12:
  3030                           	opt stack 0
  3031  000FE0                     _exibir_lcd:
  3032                           	opt stack 23
  3033                           
  3034                           ;display_LCD.c: 27: int a, b, c, d, e, f, g, h, i, j, k, l;
  3035                           ;display_LCD.c: 28: char str[16];
  3036                           ;display_LCD.c: 31: if(tela_exibida==0){
  3037                           
  3038                           ;incstack = 0
  3039  000FE0  0100               	movlb	0	; () banked
  3040  000FE2  51B3               	movf	_tela_exibida& (0+255),w,b
  3041  000FE4  0100               	movlb	0	; () banked
  3042  000FE6  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3043  000FE8  A4D8               	btfss	status,2,c
  3044  000FEA  D236               	goto	l4314
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;display_LCD.c: 32: a=((Relogio->hora)/10)-(((Relogio->hora)%10)/10);
  3048  000FEC  0100               	movlb	0	; () banked
  3049  000FEE  EE20 F004          	lfsr	2,4
  3050  000FF2  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  3051  000FF4  26D9               	addwf	fsr2l,f,c
  3052  000FF6  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  3053  000FF8  22DA               	addwfc	fsr2h,f,c
  3054  000FFA  CFDE F015          	movff	postinc2,___awdiv@dividend
  3055  000FFE  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3056  001002  0E00               	movlw	0
  3057  001004  6E18               	movwf	___awdiv@divisor+1,c
  3058  001006  0E0A               	movlw	10
  3059  001008  6E17               	movwf	___awdiv@divisor,c
  3060  00100A  ECCD  F014         	call	___awdiv	;wreg free
  3061  00100E  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3062  001012  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3063  001016  0E00               	movlw	0
  3064  001018  6E12               	movwf	___awmod@divisor+1,c
  3065  00101A  0E0A               	movlw	10
  3066  00101C  6E11               	movwf	___awmod@divisor,c
  3067  00101E  0100               	movlb	0	; () banked
  3068  001020  EE20 F004          	lfsr	2,4
  3069  001024  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  3070  001026  26D9               	addwf	fsr2l,f,c
  3071  001028  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  3072  00102A  22DA               	addwfc	fsr2h,f,c
  3073  00102C  CFDE F00F          	movff	postinc2,___awmod@dividend
  3074  001030  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3075  001034  ECC3  F015         	call	___awmod	;wreg free
  3076  001038  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3077  00103C  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3078  001040  0E00               	movlw	0
  3079  001042  6E18               	movwf	___awdiv@divisor+1,c
  3080  001044  0E0A               	movlw	10
  3081  001046  6E17               	movwf	___awdiv@divisor,c
  3082  001048  ECCD  F014         	call	___awdiv	;wreg free
  3083  00104C  1E15               	comf	?___awdiv,f,c
  3084  00104E  1E16               	comf	?___awdiv+1,f,c
  3085  001050  4A15               	infsnz	?___awdiv,f,c
  3086  001052  2A16               	incf	?___awdiv+1,f,c
  3087  001054  5015               	movf	?___awdiv,w,c
  3088  001056  0100               	movlb	0	; () banked
  3089  001058  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3090  00105A  0100               	movlb	0	; () banked
  3091  00105C  6F99               	movwf	exibir_lcd@a& (0+255),b
  3092  00105E  5016               	movf	?___awdiv+1,w,c
  3093  001060  0100               	movlb	0	; () banked
  3094  001062  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3095  001064  0100               	movlb	0	; () banked
  3096  001066  6F9A               	movwf	(exibir_lcd@a+1)& (0+255),b
  3097                           
  3098                           ;display_LCD.c: 33: b=Relogio->hora%10;
  3099  001068  0100               	movlb	0	; () banked
  3100  00106A  EE20 F004          	lfsr	2,4
  3101  00106E  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  3102  001070  26D9               	addwf	fsr2l,f,c
  3103  001072  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  3104  001074  22DA               	addwfc	fsr2h,f,c
  3105  001076  CFDE F00F          	movff	postinc2,___awmod@dividend
  3106  00107A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3107  00107E  0E00               	movlw	0
  3108  001080  6E12               	movwf	___awmod@divisor+1,c
  3109  001082  0E0A               	movlw	10
  3110  001084  6E11               	movwf	___awmod@divisor,c
  3111  001086  ECC3  F015         	call	___awmod	;wreg free
  3112  00108A  C00F  F09B         	movff	?___awmod,exibir_lcd@b
  3113  00108E  C010  F09C         	movff	?___awmod+1,exibir_lcd@b+1
  3114                           
  3115                           ;display_LCD.c: 34: c=((Relogio->minuto)/10)-(((Relogio->minuto)%10)/10);
  3116  001092  C075  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  3117  001096  C076  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  3118  00109A  CFDE F015          	movff	postinc2,___awdiv@dividend
  3119  00109E  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3120  0010A2  0E00               	movlw	0
  3121  0010A4  6E18               	movwf	___awdiv@divisor+1,c
  3122  0010A6  0E0A               	movlw	10
  3123  0010A8  6E17               	movwf	___awdiv@divisor,c
  3124  0010AA  ECCD  F014         	call	___awdiv	;wreg free
  3125  0010AE  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3126  0010B2  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3127  0010B6  0E00               	movlw	0
  3128  0010B8  6E12               	movwf	___awmod@divisor+1,c
  3129  0010BA  0E0A               	movlw	10
  3130  0010BC  6E11               	movwf	___awmod@divisor,c
  3131  0010BE  C075  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  3132  0010C2  C076  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  3133  0010C6  CFDE F00F          	movff	postinc2,___awmod@dividend
  3134  0010CA  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3135  0010CE  ECC3  F015         	call	___awmod	;wreg free
  3136  0010D2  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3137  0010D6  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3138  0010DA  0E00               	movlw	0
  3139  0010DC  6E18               	movwf	___awdiv@divisor+1,c
  3140  0010DE  0E0A               	movlw	10
  3141  0010E0  6E17               	movwf	___awdiv@divisor,c
  3142  0010E2  ECCD  F014         	call	___awdiv	;wreg free
  3143  0010E6  1E15               	comf	?___awdiv,f,c
  3144  0010E8  1E16               	comf	?___awdiv+1,f,c
  3145  0010EA  4A15               	infsnz	?___awdiv,f,c
  3146  0010EC  2A16               	incf	?___awdiv+1,f,c
  3147  0010EE  5015               	movf	?___awdiv,w,c
  3148  0010F0  0100               	movlb	0	; () banked
  3149  0010F2  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3150  0010F4  0100               	movlb	0	; () banked
  3151  0010F6  6F9D               	movwf	exibir_lcd@c& (0+255),b
  3152  0010F8  5016               	movf	?___awdiv+1,w,c
  3153  0010FA  0100               	movlb	0	; () banked
  3154  0010FC  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3155  0010FE  0100               	movlb	0	; () banked
  3156  001100  6F9E               	movwf	(exibir_lcd@c+1)& (0+255),b
  3157                           
  3158                           ;display_LCD.c: 35: d=Relogio->minuto%10;
  3159  001102  C075  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  3160  001106  C076  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  3161  00110A  CFDE F00F          	movff	postinc2,___awmod@dividend
  3162  00110E  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3163  001112  0E00               	movlw	0
  3164  001114  6E12               	movwf	___awmod@divisor+1,c
  3165  001116  0E0A               	movlw	10
  3166  001118  6E11               	movwf	___awmod@divisor,c
  3167  00111A  ECC3  F015         	call	___awmod	;wreg free
  3168  00111E  C00F  F09F         	movff	?___awmod,exibir_lcd@d
  3169  001122  C010  F0A0         	movff	?___awmod+1,exibir_lcd@d+1
  3170                           
  3171                           ;display_LCD.c: 36: e=((Relogio->segundo)/10)-(((Relogio->segundo)%10)/10);
  3172  001126  0100               	movlb	0	; () banked
  3173  001128  EE20 F002          	lfsr	2,2
  3174  00112C  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  3175  00112E  26D9               	addwf	fsr2l,f,c
  3176  001130  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  3177  001132  22DA               	addwfc	fsr2h,f,c
  3178  001134  CFDE F015          	movff	postinc2,___awdiv@dividend
  3179  001138  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3180  00113C  0E00               	movlw	0
  3181  00113E  6E18               	movwf	___awdiv@divisor+1,c
  3182  001140  0E0A               	movlw	10
  3183  001142  6E17               	movwf	___awdiv@divisor,c
  3184  001144  ECCD  F014         	call	___awdiv	;wreg free
  3185  001148  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3186  00114C  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3187  001150  0E00               	movlw	0
  3188  001152  6E12               	movwf	___awmod@divisor+1,c
  3189  001154  0E0A               	movlw	10
  3190  001156  6E11               	movwf	___awmod@divisor,c
  3191  001158  0100               	movlb	0	; () banked
  3192  00115A  EE20 F002          	lfsr	2,2
  3193  00115E  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  3194  001160  26D9               	addwf	fsr2l,f,c
  3195  001162  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  3196  001164  22DA               	addwfc	fsr2h,f,c
  3197  001166  CFDE F00F          	movff	postinc2,___awmod@dividend
  3198  00116A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3199  00116E  ECC3  F015         	call	___awmod	;wreg free
  3200  001172  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3201  001176  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3202  00117A  0E00               	movlw	0
  3203  00117C  6E18               	movwf	___awdiv@divisor+1,c
  3204  00117E  0E0A               	movlw	10
  3205  001180  6E17               	movwf	___awdiv@divisor,c
  3206  001182  ECCD  F014         	call	___awdiv	;wreg free
  3207  001186  1E15               	comf	?___awdiv,f,c
  3208  001188  1E16               	comf	?___awdiv+1,f,c
  3209  00118A  4A15               	infsnz	?___awdiv,f,c
  3210  00118C  2A16               	incf	?___awdiv+1,f,c
  3211  00118E  5015               	movf	?___awdiv,w,c
  3212  001190  0100               	movlb	0	; () banked
  3213  001192  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3214  001194  0100               	movlb	0	; () banked
  3215  001196  6FA1               	movwf	exibir_lcd@e& (0+255),b
  3216  001198  5016               	movf	?___awdiv+1,w,c
  3217  00119A  0100               	movlb	0	; () banked
  3218  00119C  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3219  00119E  0100               	movlb	0	; () banked
  3220  0011A0  6FA2               	movwf	(exibir_lcd@e+1)& (0+255),b
  3221                           
  3222                           ;display_LCD.c: 37: f=Relogio->segundo%10;
  3223  0011A2  0100               	movlb	0	; () banked
  3224  0011A4  EE20 F002          	lfsr	2,2
  3225  0011A8  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  3226  0011AA  26D9               	addwf	fsr2l,f,c
  3227  0011AC  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  3228  0011AE  22DA               	addwfc	fsr2h,f,c
  3229  0011B0  CFDE F00F          	movff	postinc2,___awmod@dividend
  3230  0011B4  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3231  0011B8  0E00               	movlw	0
  3232  0011BA  6E12               	movwf	___awmod@divisor+1,c
  3233  0011BC  0E0A               	movlw	10
  3234  0011BE  6E11               	movwf	___awmod@divisor,c
  3235  0011C0  ECC3  F015         	call	___awmod	;wreg free
  3236  0011C4  C00F  F0A3         	movff	?___awmod,exibir_lcd@f
  3237  0011C8  C010  F0A4         	movff	?___awmod+1,exibir_lcd@f+1
  3238                           
  3239                           ;display_LCD.c: 38: sprintf(str, "HORA: %d%d:%d%d:%d%d ", a, b, c, d, e, f);
  3240  0011CC  0E7D               	movlw	low exibir_lcd@str
  3241  0011CE  6E1B               	movwf	sprintf@sp,c
  3242  0011D0  0E00               	movlw	high exibir_lcd@str
  3243  0011D2  6E1C               	movwf	sprintf@sp+1,c
  3244  0011D4  0E22               	movlw	low STR_2
  3245  0011D6  6E1D               	movwf	sprintf@f,c
  3246  0011D8  0E08               	movlw	high STR_2
  3247  0011DA  6E1E               	movwf	sprintf@f+1,c
  3248  0011DC  C099  F01F         	movff	exibir_lcd@a,?_sprintf+4
  3249  0011E0  C09A  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  3250  0011E4  C09B  F021         	movff	exibir_lcd@b,?_sprintf+6
  3251  0011E8  C09C  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  3252  0011EC  C09D  F023         	movff	exibir_lcd@c,?_sprintf+8
  3253  0011F0  C09E  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  3254  0011F4  C09F  F025         	movff	exibir_lcd@d,?_sprintf+10
  3255  0011F8  C0A0  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  3256  0011FC  C0A1  F027         	movff	exibir_lcd@e,?_sprintf+12
  3257  001200  C0A2  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  3258  001204  C0A3  F029         	movff	exibir_lcd@f,?_sprintf+14
  3259  001208  C0A4  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  3260  00120C  ECE3  F00E         	call	_sprintf	;wreg free
  3261                           
  3262                           ;display_LCD.c: 39: SetDDRamAddr(0x00);
  3263  001210  0E00               	movlw	0
  3264  001212  EC29  F016         	call	_SetDDRamAddr
  3265                           
  3266                           ;display_LCD.c: 40: putrsXLCD(str);
  3267  001216  0E7D               	movlw	low exibir_lcd@str
  3268  001218  6E11               	movwf	putrsXLCD@buffer,c
  3269  00121A  0E00               	movlw	high exibir_lcd@str
  3270  00121C  6E12               	movwf	putrsXLCD@buffer+1,c
  3271  00121E  ECFB  F015         	call	_putrsXLCD	;wreg free
  3272                           
  3273                           ;display_LCD.c: 44: g=((Calendario->dia)/10)-(((Calendario->dia)%10)/10);
  3274  001222  C079  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  3275  001226  C07A  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  3276  00122A  CFDE F015          	movff	postinc2,___awdiv@dividend
  3277  00122E  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3278  001232  0E00               	movlw	0
  3279  001234  6E18               	movwf	___awdiv@divisor+1,c
  3280  001236  0E0A               	movlw	10
  3281  001238  6E17               	movwf	___awdiv@divisor,c
  3282  00123A  ECCD  F014         	call	___awdiv	;wreg free
  3283  00123E  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3284  001242  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3285  001246  0E00               	movlw	0
  3286  001248  6E12               	movwf	___awmod@divisor+1,c
  3287  00124A  0E0A               	movlw	10
  3288  00124C  6E11               	movwf	___awmod@divisor,c
  3289  00124E  C079  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  3290  001252  C07A  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  3291  001256  CFDE F00F          	movff	postinc2,___awmod@dividend
  3292  00125A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3293  00125E  ECC3  F015         	call	___awmod	;wreg free
  3294  001262  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3295  001266  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3296  00126A  0E00               	movlw	0
  3297  00126C  6E18               	movwf	___awdiv@divisor+1,c
  3298  00126E  0E0A               	movlw	10
  3299  001270  6E17               	movwf	___awdiv@divisor,c
  3300  001272  ECCD  F014         	call	___awdiv	;wreg free
  3301  001276  1E15               	comf	?___awdiv,f,c
  3302  001278  1E16               	comf	?___awdiv+1,f,c
  3303  00127A  4A15               	infsnz	?___awdiv,f,c
  3304  00127C  2A16               	incf	?___awdiv+1,f,c
  3305  00127E  5015               	movf	?___awdiv,w,c
  3306  001280  0100               	movlb	0	; () banked
  3307  001282  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3308  001284  0100               	movlb	0	; () banked
  3309  001286  6F8D               	movwf	exibir_lcd@g& (0+255),b
  3310  001288  5016               	movf	?___awdiv+1,w,c
  3311  00128A  0100               	movlb	0	; () banked
  3312  00128C  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3313  00128E  0100               	movlb	0	; () banked
  3314  001290  6F8E               	movwf	(exibir_lcd@g+1)& (0+255),b
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;display_LCD.c: 45: h=Calendario->dia%10;
  3318  001292  C079  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  3319  001296  C07A  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  3320  00129A  CFDE F00F          	movff	postinc2,___awmod@dividend
  3321  00129E  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3322  0012A2  0E00               	movlw	0
  3323  0012A4  6E12               	movwf	___awmod@divisor+1,c
  3324  0012A6  0E0A               	movlw	10
  3325  0012A8  6E11               	movwf	___awmod@divisor,c
  3326  0012AA  ECC3  F015         	call	___awmod	;wreg free
  3327  0012AE  C00F  F08F         	movff	?___awmod,exibir_lcd@h
  3328  0012B2  C010  F090         	movff	?___awmod+1,exibir_lcd@h+1
  3329                           
  3330                           ;display_LCD.c: 46: i=((Calendario->mes)/10)-(((Calendario->mes)%10)/10);
  3331  0012B6  0100               	movlb	0	; () banked
  3332  0012B8  EE20 F002          	lfsr	2,2
  3333  0012BC  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3334  0012BE  26D9               	addwf	fsr2l,f,c
  3335  0012C0  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3336  0012C2  22DA               	addwfc	fsr2h,f,c
  3337  0012C4  CFDE F015          	movff	postinc2,___awdiv@dividend
  3338  0012C8  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3339  0012CC  0E00               	movlw	0
  3340  0012CE  6E18               	movwf	___awdiv@divisor+1,c
  3341  0012D0  0E0A               	movlw	10
  3342  0012D2  6E17               	movwf	___awdiv@divisor,c
  3343  0012D4  ECCD  F014         	call	___awdiv	;wreg free
  3344  0012D8  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3345  0012DC  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3346  0012E0  0E00               	movlw	0
  3347  0012E2  6E12               	movwf	___awmod@divisor+1,c
  3348  0012E4  0E0A               	movlw	10
  3349  0012E6  6E11               	movwf	___awmod@divisor,c
  3350  0012E8  0100               	movlb	0	; () banked
  3351  0012EA  EE20 F002          	lfsr	2,2
  3352  0012EE  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3353  0012F0  26D9               	addwf	fsr2l,f,c
  3354  0012F2  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3355  0012F4  22DA               	addwfc	fsr2h,f,c
  3356  0012F6  CFDE F00F          	movff	postinc2,___awmod@dividend
  3357  0012FA  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3358  0012FE  ECC3  F015         	call	___awmod	;wreg free
  3359  001302  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3360  001306  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3361  00130A  0E00               	movlw	0
  3362  00130C  6E18               	movwf	___awdiv@divisor+1,c
  3363  00130E  0E0A               	movlw	10
  3364  001310  6E17               	movwf	___awdiv@divisor,c
  3365  001312  ECCD  F014         	call	___awdiv	;wreg free
  3366  001316  1E15               	comf	?___awdiv,f,c
  3367  001318  1E16               	comf	?___awdiv+1,f,c
  3368  00131A  4A15               	infsnz	?___awdiv,f,c
  3369  00131C  2A16               	incf	?___awdiv+1,f,c
  3370  00131E  5015               	movf	?___awdiv,w,c
  3371  001320  0100               	movlb	0	; () banked
  3372  001322  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3373  001324  0100               	movlb	0	; () banked
  3374  001326  6F91               	movwf	exibir_lcd@i& (0+255),b
  3375  001328  5016               	movf	?___awdiv+1,w,c
  3376  00132A  0100               	movlb	0	; () banked
  3377  00132C  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3378  00132E  0100               	movlb	0	; () banked
  3379  001330  6F92               	movwf	(exibir_lcd@i+1)& (0+255),b
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;display_LCD.c: 47: j=Calendario->mes%10;
  3383  001332  0100               	movlb	0	; () banked
  3384  001334  EE20 F002          	lfsr	2,2
  3385  001338  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3386  00133A  26D9               	addwf	fsr2l,f,c
  3387  00133C  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3388  00133E  22DA               	addwfc	fsr2h,f,c
  3389  001340  CFDE F00F          	movff	postinc2,___awmod@dividend
  3390  001344  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3391  001348  0E00               	movlw	0
  3392  00134A  6E12               	movwf	___awmod@divisor+1,c
  3393  00134C  0E0A               	movlw	10
  3394  00134E  6E11               	movwf	___awmod@divisor,c
  3395  001350  ECC3  F015         	call	___awmod	;wreg free
  3396  001354  C00F  F093         	movff	?___awmod,exibir_lcd@j
  3397  001358  C010  F094         	movff	?___awmod+1,exibir_lcd@j+1
  3398                           
  3399                           ;display_LCD.c: 48: k=((Calendario->ano)/10)-(((Calendario->ano)%10)/10);
  3400  00135C  0100               	movlb	0	; () banked
  3401  00135E  EE20 F004          	lfsr	2,4
  3402  001362  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3403  001364  26D9               	addwf	fsr2l,f,c
  3404  001366  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3405  001368  22DA               	addwfc	fsr2h,f,c
  3406  00136A  CFDE F015          	movff	postinc2,___awdiv@dividend
  3407  00136E  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3408  001372  0E00               	movlw	0
  3409  001374  6E18               	movwf	___awdiv@divisor+1,c
  3410  001376  0E0A               	movlw	10
  3411  001378  6E17               	movwf	___awdiv@divisor,c
  3412  00137A  ECCD  F014         	call	___awdiv	;wreg free
  3413  00137E  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3414  001382  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3415  001386  0E00               	movlw	0
  3416  001388  6E12               	movwf	___awmod@divisor+1,c
  3417  00138A  0E0A               	movlw	10
  3418  00138C  6E11               	movwf	___awmod@divisor,c
  3419  00138E  0100               	movlb	0	; () banked
  3420  001390  EE20 F004          	lfsr	2,4
  3421  001394  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3422  001396  26D9               	addwf	fsr2l,f,c
  3423  001398  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3424  00139A  22DA               	addwfc	fsr2h,f,c
  3425  00139C  CFDE F00F          	movff	postinc2,___awmod@dividend
  3426  0013A0  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3427  0013A4  ECC3  F015         	call	___awmod	;wreg free
  3428  0013A8  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3429  0013AC  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3430  0013B0  0E00               	movlw	0
  3431  0013B2  6E18               	movwf	___awdiv@divisor+1,c
  3432  0013B4  0E0A               	movlw	10
  3433  0013B6  6E17               	movwf	___awdiv@divisor,c
  3434  0013B8  ECCD  F014         	call	___awdiv	;wreg free
  3435  0013BC  1E15               	comf	?___awdiv,f,c
  3436  0013BE  1E16               	comf	?___awdiv+1,f,c
  3437  0013C0  4A15               	infsnz	?___awdiv,f,c
  3438  0013C2  2A16               	incf	?___awdiv+1,f,c
  3439  0013C4  5015               	movf	?___awdiv,w,c
  3440  0013C6  0100               	movlb	0	; () banked
  3441  0013C8  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3442  0013CA  0100               	movlb	0	; () banked
  3443  0013CC  6F95               	movwf	exibir_lcd@k& (0+255),b
  3444  0013CE  5016               	movf	?___awdiv+1,w,c
  3445  0013D0  0100               	movlb	0	; () banked
  3446  0013D2  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3447  0013D4  0100               	movlb	0	; () banked
  3448  0013D6  6F96               	movwf	(exibir_lcd@k+1)& (0+255),b
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;display_LCD.c: 49: l=Calendario->ano%10;
  3452  0013D8  0100               	movlb	0	; () banked
  3453  0013DA  EE20 F004          	lfsr	2,4
  3454  0013DE  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3455  0013E0  26D9               	addwf	fsr2l,f,c
  3456  0013E2  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3457  0013E4  22DA               	addwfc	fsr2h,f,c
  3458  0013E6  CFDE F00F          	movff	postinc2,___awmod@dividend
  3459  0013EA  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3460  0013EE  0E00               	movlw	0
  3461  0013F0  6E12               	movwf	___awmod@divisor+1,c
  3462  0013F2  0E0A               	movlw	10
  3463  0013F4  6E11               	movwf	___awmod@divisor,c
  3464  0013F6  ECC3  F015         	call	___awmod	;wreg free
  3465  0013FA  C00F  F097         	movff	?___awmod,exibir_lcd@l
  3466  0013FE  C010  F098         	movff	?___awmod+1,exibir_lcd@l+1
  3467                           
  3468                           ;display_LCD.c: 50: sprintf(str, "DATA: %d%d:%d%d:%d%d ", g, h, i, j, k, l);
  3469  001402  0E7D               	movlw	low exibir_lcd@str
  3470  001404  6E1B               	movwf	sprintf@sp,c
  3471  001406  0E00               	movlw	high exibir_lcd@str
  3472  001408  6E1C               	movwf	sprintf@sp+1,c
  3473  00140A  0E38               	movlw	low STR_3
  3474  00140C  6E1D               	movwf	sprintf@f,c
  3475  00140E  0E08               	movlw	high STR_3
  3476  001410  6E1E               	movwf	sprintf@f+1,c
  3477  001412  C08D  F01F         	movff	exibir_lcd@g,?_sprintf+4
  3478  001416  C08E  F020         	movff	exibir_lcd@g+1,?_sprintf+5
  3479  00141A  C08F  F021         	movff	exibir_lcd@h,?_sprintf+6
  3480  00141E  C090  F022         	movff	exibir_lcd@h+1,?_sprintf+7
  3481  001422  C091  F023         	movff	exibir_lcd@i,?_sprintf+8
  3482  001426  C092  F024         	movff	exibir_lcd@i+1,?_sprintf+9
  3483  00142A  C093  F025         	movff	exibir_lcd@j,?_sprintf+10
  3484  00142E  C094  F026         	movff	exibir_lcd@j+1,?_sprintf+11
  3485  001432  C095  F027         	movff	exibir_lcd@k,?_sprintf+12
  3486  001436  C096  F028         	movff	exibir_lcd@k+1,?_sprintf+13
  3487  00143A  C097  F029         	movff	exibir_lcd@l,?_sprintf+14
  3488  00143E  C098  F02A         	movff	exibir_lcd@l+1,?_sprintf+15
  3489  001442  ECE3  F00E         	call	_sprintf	;wreg free
  3490                           
  3491                           ;display_LCD.c: 51: SetDDRamAddr(0x40);
  3492  001446  0E40               	movlw	64
  3493  001448  EC29  F016         	call	_SetDDRamAddr
  3494                           
  3495                           ;display_LCD.c: 52: putrsXLCD(str);
  3496  00144C  0E7D               	movlw	low exibir_lcd@str
  3497  00144E  6E11               	movwf	putrsXLCD@buffer,c
  3498  001450  0E00               	movlw	high exibir_lcd@str
  3499  001452  6E12               	movwf	putrsXLCD@buffer+1,c
  3500  001454  ECFB  F015         	call	_putrsXLCD	;wreg free
  3501  001458                     l4314:
  3502                           
  3503                           ;display_LCD.c: 53: }
  3504                           ;display_LCD.c: 56: if(tela_exibida==1){
  3505  001458  0100               	movlb	0	; () banked
  3506  00145A  05B3               	decf	_tela_exibida& (0+255),w,b
  3507  00145C  0100               	movlb	0	; () banked
  3508  00145E  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3509  001460  A4D8               	btfss	status,2,c
  3510  001462  D124               	goto	l4328
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;display_LCD.c: 57: a=((Despertador->hora)/10)-(((Despertador->hora)%10)/10);
  3514  001464  0100               	movlb	0	; () banked
  3515  001466  EE20 F004          	lfsr	2,4
  3516  00146A  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3517  00146C  26D9               	addwf	fsr2l,f,c
  3518  00146E  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3519  001470  22DA               	addwfc	fsr2h,f,c
  3520  001472  CFDE F015          	movff	postinc2,___awdiv@dividend
  3521  001476  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3522  00147A  0E00               	movlw	0
  3523  00147C  6E18               	movwf	___awdiv@divisor+1,c
  3524  00147E  0E0A               	movlw	10
  3525  001480  6E17               	movwf	___awdiv@divisor,c
  3526  001482  ECCD  F014         	call	___awdiv	;wreg free
  3527  001486  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3528  00148A  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3529  00148E  0E00               	movlw	0
  3530  001490  6E12               	movwf	___awmod@divisor+1,c
  3531  001492  0E0A               	movlw	10
  3532  001494  6E11               	movwf	___awmod@divisor,c
  3533  001496  0100               	movlb	0	; () banked
  3534  001498  EE20 F004          	lfsr	2,4
  3535  00149C  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3536  00149E  26D9               	addwf	fsr2l,f,c
  3537  0014A0  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3538  0014A2  22DA               	addwfc	fsr2h,f,c
  3539  0014A4  CFDE F00F          	movff	postinc2,___awmod@dividend
  3540  0014A8  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3541  0014AC  ECC3  F015         	call	___awmod	;wreg free
  3542  0014B0  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3543  0014B4  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3544  0014B8  0E00               	movlw	0
  3545  0014BA  6E18               	movwf	___awdiv@divisor+1,c
  3546  0014BC  0E0A               	movlw	10
  3547  0014BE  6E17               	movwf	___awdiv@divisor,c
  3548  0014C0  ECCD  F014         	call	___awdiv	;wreg free
  3549  0014C4  1E15               	comf	?___awdiv,f,c
  3550  0014C6  1E16               	comf	?___awdiv+1,f,c
  3551  0014C8  4A15               	infsnz	?___awdiv,f,c
  3552  0014CA  2A16               	incf	?___awdiv+1,f,c
  3553  0014CC  5015               	movf	?___awdiv,w,c
  3554  0014CE  0100               	movlb	0	; () banked
  3555  0014D0  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3556  0014D2  0100               	movlb	0	; () banked
  3557  0014D4  6F99               	movwf	exibir_lcd@a& (0+255),b
  3558  0014D6  5016               	movf	?___awdiv+1,w,c
  3559  0014D8  0100               	movlb	0	; () banked
  3560  0014DA  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3561  0014DC  0100               	movlb	0	; () banked
  3562  0014DE  6F9A               	movwf	(exibir_lcd@a+1)& (0+255),b
  3563                           
  3564                           ;display_LCD.c: 58: b=Despertador->hora%10;
  3565  0014E0  0100               	movlb	0	; () banked
  3566  0014E2  EE20 F004          	lfsr	2,4
  3567  0014E6  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3568  0014E8  26D9               	addwf	fsr2l,f,c
  3569  0014EA  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3570  0014EC  22DA               	addwfc	fsr2h,f,c
  3571  0014EE  CFDE F00F          	movff	postinc2,___awmod@dividend
  3572  0014F2  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3573  0014F6  0E00               	movlw	0
  3574  0014F8  6E12               	movwf	___awmod@divisor+1,c
  3575  0014FA  0E0A               	movlw	10
  3576  0014FC  6E11               	movwf	___awmod@divisor,c
  3577  0014FE  ECC3  F015         	call	___awmod	;wreg free
  3578  001502  C00F  F09B         	movff	?___awmod,exibir_lcd@b
  3579  001506  C010  F09C         	movff	?___awmod+1,exibir_lcd@b+1
  3580                           
  3581                           ;display_LCD.c: 59: c=((Despertador->minuto)/10)-(((Despertador->minuto)%10)/10);
  3582  00150A  C077  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3583  00150E  C078  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3584  001512  CFDE F015          	movff	postinc2,___awdiv@dividend
  3585  001516  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3586  00151A  0E00               	movlw	0
  3587  00151C  6E18               	movwf	___awdiv@divisor+1,c
  3588  00151E  0E0A               	movlw	10
  3589  001520  6E17               	movwf	___awdiv@divisor,c
  3590  001522  ECCD  F014         	call	___awdiv	;wreg free
  3591  001526  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3592  00152A  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3593  00152E  0E00               	movlw	0
  3594  001530  6E12               	movwf	___awmod@divisor+1,c
  3595  001532  0E0A               	movlw	10
  3596  001534  6E11               	movwf	___awmod@divisor,c
  3597  001536  C077  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3598  00153A  C078  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3599  00153E  CFDE F00F          	movff	postinc2,___awmod@dividend
  3600  001542  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3601  001546  ECC3  F015         	call	___awmod	;wreg free
  3602  00154A  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3603  00154E  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3604  001552  0E00               	movlw	0
  3605  001554  6E18               	movwf	___awdiv@divisor+1,c
  3606  001556  0E0A               	movlw	10
  3607  001558  6E17               	movwf	___awdiv@divisor,c
  3608  00155A  ECCD  F014         	call	___awdiv	;wreg free
  3609  00155E  1E15               	comf	?___awdiv,f,c
  3610  001560  1E16               	comf	?___awdiv+1,f,c
  3611  001562  4A15               	infsnz	?___awdiv,f,c
  3612  001564  2A16               	incf	?___awdiv+1,f,c
  3613  001566  5015               	movf	?___awdiv,w,c
  3614  001568  0100               	movlb	0	; () banked
  3615  00156A  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3616  00156C  0100               	movlb	0	; () banked
  3617  00156E  6F9D               	movwf	exibir_lcd@c& (0+255),b
  3618  001570  5016               	movf	?___awdiv+1,w,c
  3619  001572  0100               	movlb	0	; () banked
  3620  001574  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3621  001576  0100               	movlb	0	; () banked
  3622  001578  6F9E               	movwf	(exibir_lcd@c+1)& (0+255),b
  3623                           
  3624                           ;display_LCD.c: 60: d=Despertador->minuto%10;
  3625  00157A  C077  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3626  00157E  C078  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3627  001582  CFDE F00F          	movff	postinc2,___awmod@dividend
  3628  001586  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3629  00158A  0E00               	movlw	0
  3630  00158C  6E12               	movwf	___awmod@divisor+1,c
  3631  00158E  0E0A               	movlw	10
  3632  001590  6E11               	movwf	___awmod@divisor,c
  3633  001592  ECC3  F015         	call	___awmod	;wreg free
  3634  001596  C00F  F09F         	movff	?___awmod,exibir_lcd@d
  3635  00159A  C010  F0A0         	movff	?___awmod+1,exibir_lcd@d+1
  3636                           
  3637                           ;display_LCD.c: 61: e=((Despertador->segundo)/10)-(((Despertador->segundo)%10)/10);
  3638  00159E  0100               	movlb	0	; () banked
  3639  0015A0  EE20 F002          	lfsr	2,2
  3640  0015A4  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3641  0015A6  26D9               	addwf	fsr2l,f,c
  3642  0015A8  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3643  0015AA  22DA               	addwfc	fsr2h,f,c
  3644  0015AC  CFDE F015          	movff	postinc2,___awdiv@dividend
  3645  0015B0  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3646  0015B4  0E00               	movlw	0
  3647  0015B6  6E18               	movwf	___awdiv@divisor+1,c
  3648  0015B8  0E0A               	movlw	10
  3649  0015BA  6E17               	movwf	___awdiv@divisor,c
  3650  0015BC  ECCD  F014         	call	___awdiv	;wreg free
  3651  0015C0  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3652  0015C4  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3653  0015C8  0E00               	movlw	0
  3654  0015CA  6E12               	movwf	___awmod@divisor+1,c
  3655  0015CC  0E0A               	movlw	10
  3656  0015CE  6E11               	movwf	___awmod@divisor,c
  3657  0015D0  0100               	movlb	0	; () banked
  3658  0015D2  EE20 F002          	lfsr	2,2
  3659  0015D6  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3660  0015D8  26D9               	addwf	fsr2l,f,c
  3661  0015DA  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3662  0015DC  22DA               	addwfc	fsr2h,f,c
  3663  0015DE  CFDE F00F          	movff	postinc2,___awmod@dividend
  3664  0015E2  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3665  0015E6  ECC3  F015         	call	___awmod	;wreg free
  3666  0015EA  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3667  0015EE  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3668  0015F2  0E00               	movlw	0
  3669  0015F4  6E18               	movwf	___awdiv@divisor+1,c
  3670  0015F6  0E0A               	movlw	10
  3671  0015F8  6E17               	movwf	___awdiv@divisor,c
  3672  0015FA  ECCD  F014         	call	___awdiv	;wreg free
  3673  0015FE  1E15               	comf	?___awdiv,f,c
  3674  001600  1E16               	comf	?___awdiv+1,f,c
  3675  001602  4A15               	infsnz	?___awdiv,f,c
  3676  001604  2A16               	incf	?___awdiv+1,f,c
  3677  001606  5015               	movf	?___awdiv,w,c
  3678  001608  0100               	movlb	0	; () banked
  3679  00160A  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3680  00160C  0100               	movlb	0	; () banked
  3681  00160E  6FA1               	movwf	exibir_lcd@e& (0+255),b
  3682  001610  5016               	movf	?___awdiv+1,w,c
  3683  001612  0100               	movlb	0	; () banked
  3684  001614  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3685  001616  0100               	movlb	0	; () banked
  3686  001618  6FA2               	movwf	(exibir_lcd@e+1)& (0+255),b
  3687                           
  3688                           ;display_LCD.c: 62: f=Despertador->segundo%10;
  3689  00161A  0100               	movlb	0	; () banked
  3690  00161C  EE20 F002          	lfsr	2,2
  3691  001620  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3692  001622  26D9               	addwf	fsr2l,f,c
  3693  001624  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3694  001626  22DA               	addwfc	fsr2h,f,c
  3695  001628  CFDE F00F          	movff	postinc2,___awmod@dividend
  3696  00162C  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3697  001630  0E00               	movlw	0
  3698  001632  6E12               	movwf	___awmod@divisor+1,c
  3699  001634  0E0A               	movlw	10
  3700  001636  6E11               	movwf	___awmod@divisor,c
  3701  001638  ECC3  F015         	call	___awmod	;wreg free
  3702  00163C  C00F  F0A3         	movff	?___awmod,exibir_lcd@f
  3703  001640  C010  F0A4         	movff	?___awmod+1,exibir_lcd@f+1
  3704                           
  3705                           ;display_LCD.c: 64: sprintf(str, "%d%d:%d%d:%d%d        ", a, b, c, d, e, f);
  3706  001644  0E7D               	movlw	low exibir_lcd@str
  3707  001646  6E1B               	movwf	sprintf@sp,c
  3708  001648  0E00               	movlw	high exibir_lcd@str
  3709  00164A  6E1C               	movwf	sprintf@sp+1,c
  3710  00164C  0E0B               	movlw	low STR_4
  3711  00164E  6E1D               	movwf	sprintf@f,c
  3712  001650  0E08               	movlw	high STR_4
  3713  001652  6E1E               	movwf	sprintf@f+1,c
  3714  001654  C099  F01F         	movff	exibir_lcd@a,?_sprintf+4
  3715  001658  C09A  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  3716  00165C  C09B  F021         	movff	exibir_lcd@b,?_sprintf+6
  3717  001660  C09C  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  3718  001664  C09D  F023         	movff	exibir_lcd@c,?_sprintf+8
  3719  001668  C09E  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  3720  00166C  C09F  F025         	movff	exibir_lcd@d,?_sprintf+10
  3721  001670  C0A0  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  3722  001674  C0A1  F027         	movff	exibir_lcd@e,?_sprintf+12
  3723  001678  C0A2  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  3724  00167C  C0A3  F029         	movff	exibir_lcd@f,?_sprintf+14
  3725  001680  C0A4  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  3726  001684  ECE3  F00E         	call	_sprintf	;wreg free
  3727                           
  3728                           ;display_LCD.c: 65: SetDDRamAddr(0x00);
  3729  001688  0E00               	movlw	0
  3730  00168A  EC29  F016         	call	_SetDDRamAddr
  3731                           
  3732                           ;display_LCD.c: 66: putrsXLCD("DESPERTADOR:    ");
  3733  00168E  0E84               	movlw	low STR_5
  3734  001690  6E11               	movwf	putrsXLCD@buffer,c
  3735  001692  0E08               	movlw	high STR_5
  3736  001694  6E12               	movwf	putrsXLCD@buffer+1,c
  3737  001696  ECFB  F015         	call	_putrsXLCD	;wreg free
  3738                           
  3739                           ;display_LCD.c: 67: SetDDRamAddr(0x40);
  3740  00169A  0E40               	movlw	64
  3741  00169C  EC29  F016         	call	_SetDDRamAddr
  3742                           
  3743                           ;display_LCD.c: 68: putrsXLCD(str);
  3744  0016A0  0E7D               	movlw	low exibir_lcd@str
  3745  0016A2  6E11               	movwf	putrsXLCD@buffer,c
  3746  0016A4  0E00               	movlw	high exibir_lcd@str
  3747  0016A6  6E12               	movwf	putrsXLCD@buffer+1,c
  3748  0016A8  ECFB  F015         	call	_putrsXLCD	;wreg free
  3749  0016AC                     l4328:
  3750                           
  3751                           ;display_LCD.c: 69: }
  3752                           ;display_LCD.c: 72: if(tela_exibida==2){
  3753  0016AC  0E02               	movlw	2
  3754  0016AE  0100               	movlb	0	; () banked
  3755  0016B0  19B3               	xorwf	_tela_exibida& (0+255),w,b
  3756  0016B2  0100               	movlb	0	; () banked
  3757  0016B4  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3758  0016B6  A4D8               	btfss	status,2,c
  3759  0016B8  D01A               	goto	l4340
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;display_LCD.c: 73: convert_float_to_char(valor_tensao);
  3763  0016BA  C0AA  F068         	movff	_valor_tensao,convert_float_to_char@valor
  3764  0016BE  C0AB  F069         	movff	_valor_tensao+1,convert_float_to_char@valor+1
  3765  0016C2  C0AC  F06A         	movff	_valor_tensao+2,convert_float_to_char@valor+2
  3766  0016C6  EC2D  F012         	call	_convert_float_to_char	;wreg free
  3767                           
  3768                           ;display_LCD.c: 74: SetDDRamAddr(0x00);
  3769  0016CA  0E00               	movlw	0
  3770  0016CC  EC29  F016         	call	_SetDDRamAddr
  3771                           
  3772                           ;display_LCD.c: 75: putrsXLCD("TEMPERATURA:    ");
  3773  0016D0  0E73               	movlw	low STR_6
  3774  0016D2  6E11               	movwf	putrsXLCD@buffer,c
  3775  0016D4  0E08               	movlw	high STR_6
  3776  0016D6  6E12               	movwf	putrsXLCD@buffer+1,c
  3777  0016D8  ECFB  F015         	call	_putrsXLCD	;wreg free
  3778                           
  3779                           ;display_LCD.c: 76: SetDDRamAddr(0x40);
  3780  0016DC  0E40               	movlw	64
  3781  0016DE  EC29  F016         	call	_SetDDRamAddr
  3782                           
  3783                           ;display_LCD.c: 77: putrsXLCD(temperatura_display);
  3784  0016E2  0EC5               	movlw	low _temperatura_display
  3785  0016E4  6E11               	movwf	putrsXLCD@buffer,c
  3786  0016E6  0E00               	movlw	high _temperatura_display
  3787  0016E8  6E12               	movwf	putrsXLCD@buffer+1,c
  3788  0016EA  ECFB  F015         	call	_putrsXLCD	;wreg free
  3789  0016EE                     l4340:
  3790                           
  3791                           ;display_LCD.c: 78: }
  3792                           ;display_LCD.c: 81: if(tela_exibida==3){
  3793  0016EE  0E03               	movlw	3
  3794  0016F0  0100               	movlb	0	; () banked
  3795  0016F2  19B3               	xorwf	_tela_exibida& (0+255),w,b
  3796  0016F4  0100               	movlb	0	; () banked
  3797  0016F6  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3798  0016F8  A4D8               	btfss	status,2,c
  3799  0016FA  0012               	return	
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;display_LCD.c: 82: gambiarra();
  3803  0016FC  ECF0  F017         	call	_gambiarra	;wreg free
  3804  001700  0012               	return	
  3805  001702                     __end_of_exibir_lcd:
  3806                           	opt stack 0
  3807                           tblptru	equ	0xFF8
  3808                           tblptrh	equ	0xFF7
  3809                           tblptrl	equ	0xFF6
  3810                           tablat	equ	0xFF5
  3811                           intcon	equ	0xFF2
  3812                           postinc0	equ	0xFEE
  3813                           wreg	equ	0xFE8
  3814                           postinc1	equ	0xFE6
  3815                           postdec1	equ	0xFE5
  3816                           fsr1h	equ	0xFE2
  3817                           fsr1l	equ	0xFE1
  3818                           indf2	equ	0xFDF
  3819                           postinc2	equ	0xFDE
  3820                           postdec2	equ	0xFDD
  3821                           plusw2	equ	0xFDB
  3822                           fsr2h	equ	0xFDA
  3823                           fsr2l	equ	0xFD9
  3824                           status	equ	0xFD8
  3825                           
  3826 ;; *************** function _gambiarra *****************
  3827 ;; Defined at:
  3828 ;;		line 163 in file "exercicio_PIC_LCD_AD.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2   58[None  ] int 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    6
  3849 ;; This function calls:
  3850 ;;		_gambiarra_pro_serial
  3851 ;; This function is called by:
  3852 ;;		_exibir_lcd
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text13
  3857  002FE0                     __ptext13:
  3858                           	opt stack 0
  3859  002FE0                     _gambiarra:
  3860                           	opt stack 23
  3861                           
  3862                           ;exercicio_PIC_LCD_AD.c: 164: gambiarra_pro_serial();
  3863                           
  3864                           ;incstack = 0
  3865  002FE0  EC0F  F015         	call	_gambiarra_pro_serial	;wreg free
  3866  002FE4  0012               	return		;funcret
  3867  002FE6                     __end_of_gambiarra:
  3868                           	opt stack 0
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           intcon	equ	0xFF2
  3874                           postinc0	equ	0xFEE
  3875                           wreg	equ	0xFE8
  3876                           postinc1	equ	0xFE6
  3877                           postdec1	equ	0xFE5
  3878                           fsr1h	equ	0xFE2
  3879                           fsr1l	equ	0xFE1
  3880                           indf2	equ	0xFDF
  3881                           postinc2	equ	0xFDE
  3882                           postdec2	equ	0xFDD
  3883                           plusw2	equ	0xFDB
  3884                           fsr2h	equ	0xFDA
  3885                           fsr2l	equ	0xFD9
  3886                           status	equ	0xFD8
  3887                           
  3888 ;; *************** function _gambiarra_pro_serial *****************
  3889 ;; Defined at:
  3890 ;;		line 61 in file "serial.h"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3904 ;;      Params:         0       0       0       0       0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3907 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    5
  3911 ;; This function calls:
  3912 ;;		_SetDDRamAddr
  3913 ;;		_WriteCmdXLCD
  3914 ;;		_putrsXLCD
  3915 ;;		_sprintf
  3916 ;; This function is called by:
  3917 ;;		_gambiarra
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text14
  3922  002A1E                     __ptext14:
  3923                           	opt stack 0
  3924  002A1E                     _gambiarra_pro_serial:
  3925                           	opt stack 23
  3926                           
  3927                           ;serial.h: 64: WriteCmdXLCD(0x0C);
  3928                           
  3929                           ;incstack = 0
  3930  002A1E  0E0C               	movlw	12
  3931  002A20  ECFD  F016         	call	_WriteCmdXLCD
  3932                           
  3933                           ;serial.h: 65: SetDDRamAddr(0x00);
  3934  002A24  0E00               	movlw	0
  3935  002A26  EC29  F016         	call	_SetDDRamAddr
  3936                           
  3937                           ;serial.h: 66: sprintf(str, "SERIAL:         ");
  3938  002A2A  0EB5               	movlw	low _str
  3939  002A2C  6E1B               	movwf	sprintf@sp,c
  3940  002A2E  0E00               	movlw	high _str
  3941  002A30  6E1C               	movwf	sprintf@sp+1,c
  3942  002A32  0E62               	movlw	low STR_7
  3943  002A34  6E1D               	movwf	sprintf@f,c
  3944  002A36  0E08               	movlw	high STR_7
  3945  002A38  6E1E               	movwf	sprintf@f+1,c
  3946  002A3A  ECE3  F00E         	call	_sprintf	;wreg free
  3947                           
  3948                           ;serial.h: 67: putrsXLCD(str);
  3949  002A3E  0EB5               	movlw	low _str
  3950  002A40  6E11               	movwf	putrsXLCD@buffer,c
  3951  002A42  0E00               	movlw	high _str
  3952  002A44  6E12               	movwf	putrsXLCD@buffer+1,c
  3953  002A46  ECFB  F015         	call	_putrsXLCD	;wreg free
  3954                           
  3955                           ;serial.h: 68: SetDDRamAddr(0x40);
  3956  002A4A  0E40               	movlw	64
  3957  002A4C  EC29  F016         	call	_SetDDRamAddr
  3958                           
  3959                           ;serial.h: 69: sprintf(str, "%d %d %d           ", BUFF_RESP[1]-48, BUFF_RESP[2]-48, BUF
      +                          F_RESP[0]-48);
  3960  002A50  0EB5               	movlw	low _str
  3961  002A52  6E1B               	movwf	sprintf@sp,c
  3962  002A54  0E00               	movlw	high _str
  3963  002A56  6E1C               	movwf	sprintf@sp+1,c
  3964  002A58  0E4E               	movlw	low STR_8
  3965  002A5A  6E1D               	movwf	sprintf@f,c
  3966  002A5C  0E08               	movlw	high STR_8
  3967  002A5E  6E1E               	movwf	sprintf@f+1,c
  3968  002A60  0ED0               	movlw	208
  3969  002A62  2443               	addwf	_BUFF_RESP+1,w,c
  3970  002A64  6E1F               	movwf	?_sprintf+4,c
  3971  002A66  6A20               	clrf	?_sprintf+5,c
  3972  002A68  0EFF               	movlw	255
  3973  002A6A  2220               	addwfc	?_sprintf+5,f,c
  3974  002A6C  0ED0               	movlw	208
  3975  002A6E  2444               	addwf	_BUFF_RESP+2,w,c
  3976  002A70  6E21               	movwf	?_sprintf+6,c
  3977  002A72  6A22               	clrf	?_sprintf+7,c
  3978  002A74  0EFF               	movlw	255
  3979  002A76  2222               	addwfc	?_sprintf+7,f,c
  3980  002A78  0ED0               	movlw	208
  3981  002A7A  2442               	addwf	_BUFF_RESP,w,c
  3982  002A7C  6E23               	movwf	?_sprintf+8,c
  3983  002A7E  6A24               	clrf	?_sprintf+9,c
  3984  002A80  0EFF               	movlw	255
  3985  002A82  2224               	addwfc	?_sprintf+9,f,c
  3986  002A84  ECE3  F00E         	call	_sprintf	;wreg free
  3987                           
  3988                           ;serial.h: 70: putrsXLCD(str);
  3989  002A88  0EB5               	movlw	low _str
  3990  002A8A  6E11               	movwf	putrsXLCD@buffer,c
  3991  002A8C  0E00               	movlw	high _str
  3992  002A8E  6E12               	movwf	putrsXLCD@buffer+1,c
  3993  002A90  ECFB  F015         	call	_putrsXLCD	;wreg free
  3994  002A94  0012               	return		;funcret
  3995  002A96                     __end_of_gambiarra_pro_serial:
  3996                           	opt stack 0
  3997                           tblptru	equ	0xFF8
  3998                           tblptrh	equ	0xFF7
  3999                           tblptrl	equ	0xFF6
  4000                           tablat	equ	0xFF5
  4001                           intcon	equ	0xFF2
  4002                           postinc0	equ	0xFEE
  4003                           wreg	equ	0xFE8
  4004                           postinc1	equ	0xFE6
  4005                           postdec1	equ	0xFE5
  4006                           fsr1h	equ	0xFE2
  4007                           fsr1l	equ	0xFE1
  4008                           indf2	equ	0xFDF
  4009                           postinc2	equ	0xFDE
  4010                           postdec2	equ	0xFDD
  4011                           plusw2	equ	0xFDB
  4012                           fsr2h	equ	0xFDA
  4013                           fsr2l	equ	0xFD9
  4014                           status	equ	0xFD8
  4015                           
  4016 ;; *************** function _putrsXLCD *****************
  4017 ;; Defined at:
  4018 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  buffer          2   16[COMRAM] PTR const unsigned char 
  4021 ;;		 -> str(16), STR_6(17), STR_5(17), exibir_lcd@str(16), 
  4022 ;;		 -> temperatura_display(10), 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4034 ;;      Params:         2       0       0       0       0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4037 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    4
  4041 ;; This function calls:
  4042 ;;		_BusyXLCD
  4043 ;;		_WriteDataXLCD
  4044 ;; This function is called by:
  4045 ;;		_exibir_lcd
  4046 ;;		_gambiarra_pro_serial
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text15
  4051  002BF6                     __ptext15:
  4052                           	opt stack 0
  4053  002BF6                     _putrsXLCD:
  4054                           	opt stack 25
  4055                           
  4056                           ;incstack = 0
  4057  002BF6  D019               	goto	l2836
  4058  002BF8                     l2830:
  4059  002BF8  EC1C  F017         	call	_BusyXLCD	;wreg free
  4060  002BFC  0900               	iorlw	0
  4061  002BFE  A4D8               	btfss	status,2,c
  4062  002C00  D7FB               	goto	l2830
  4063  002C02  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  4064  002C06  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  4065  002C0A  6AF8               	clrf	tblptru,c
  4066  002C0C  0E07               	movlw	(high __ramtop+-1)
  4067  002C0E  64F7               	cpfsgt	tblptrh,c
  4068  002C10  D003               	bra	u2437
  4069  002C12  0008               	tblrd		*
  4070  002C14  50F5               	movf	tablat,w,c
  4071  002C16  D005               	bra	u2430
  4072  002C18                     u2437:
  4073  002C18  CFF6 FFE1          	movff	tblptrl,fsr1l
  4074  002C1C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4075  002C20  50E7               	movf	indf1,w,c
  4076  002C22                     u2430:
  4077  002C22  ECDE  F016         	call	_WriteDataXLCD
  4078  002C26  4A11               	infsnz	putrsXLCD@buffer,f,c
  4079  002C28  2A12               	incf	putrsXLCD@buffer+1,f,c
  4080  002C2A                     l2836:
  4081  002C2A  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  4082  002C2E  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  4083  002C32  6AF8               	clrf	tblptru,c
  4084  002C34  0E07               	movlw	(high __ramtop+-1)
  4085  002C36  64F7               	cpfsgt	tblptrh,c
  4086  002C38  D003               	bra	u2447
  4087  002C3A  0008               	tblrd		*
  4088  002C3C  50F5               	movf	tablat,w,c
  4089  002C3E  D005               	bra	u2440
  4090  002C40                     u2447:
  4091  002C40  CFF6 FFE1          	movff	tblptrl,fsr1l
  4092  002C44  CFF7 FFE2          	movff	tblptrh,fsr1h
  4093  002C48  50E7               	movf	indf1,w,c
  4094  002C4A                     u2440:
  4095  002C4A  0900               	iorlw	0
  4096  002C4C  B4D8               	btfsc	status,2,c
  4097  002C4E  0012               	return	
  4098  002C50  D7D3               	goto	l2830
  4099  002C52                     __end_of_putrsXLCD:
  4100                           	opt stack 0
  4101                           tblptru	equ	0xFF8
  4102                           tblptrh	equ	0xFF7
  4103                           tblptrl	equ	0xFF6
  4104                           tablat	equ	0xFF5
  4105                           intcon	equ	0xFF2
  4106                           postinc0	equ	0xFEE
  4107                           wreg	equ	0xFE8
  4108                           indf1	equ	0xFE7
  4109                           postinc1	equ	0xFE6
  4110                           postdec1	equ	0xFE5
  4111                           fsr1h	equ	0xFE2
  4112                           fsr1l	equ	0xFE1
  4113                           indf2	equ	0xFDF
  4114                           postinc2	equ	0xFDE
  4115                           postdec2	equ	0xFDD
  4116                           plusw2	equ	0xFDB
  4117                           fsr2h	equ	0xFDA
  4118                           fsr2l	equ	0xFD9
  4119                           status	equ	0xFD8
  4120                           
  4121 ;; *************** function _WriteDataXLCD *****************
  4122 ;; Defined at:
  4123 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  data            1    wreg     unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  data            1   15[COMRAM] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4137 ;;      Params:         0       0       0       0       0       0       0       0       0
  4138 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4140 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4141 ;;Total ram usage:        1 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    3
  4144 ;; This function calls:
  4145 ;;		_DelayFor18TCY
  4146 ;; This function is called by:
  4147 ;;		_putrsXLCD
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text16
  4152  002DBC                     __ptext16:
  4153                           	opt stack 0
  4154  002DBC                     _WriteDataXLCD:
  4155                           	opt stack 25
  4156                           
  4157                           ;incstack = 0
  4158                           ;WriteDataXLCD@data stored from wreg
  4159  002DBC  6E10               	movwf	WriteDataXLCD@data,c
  4160  002DBE  0EF0               	movlw	240
  4161  002DC0  1693               	andwf	3987,f,c	;volatile
  4162  002DC2  0EF0               	movlw	240
  4163  002DC4  1681               	andwf	3969,f,c	;volatile
  4164  002DC6  3810               	swapf	WriteDataXLCD@data,w,c
  4165  002DC8  0B0F               	andlw	15
  4166  002DCA  0B0F               	andlw	15
  4167  002DCC  1281               	iorwf	3969,f,c	;volatile
  4168  002DCE  8A8A               	bsf	3978,5,c	;volatile
  4169  002DD0  9C8A               	bcf	3978,6,c	;volatile
  4170  002DD2  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4171  002DD6  888A               	bsf	3978,4,c	;volatile
  4172  002DD8  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4173  002DDC  988A               	bcf	3978,4,c	;volatile
  4174  002DDE  0EF0               	movlw	240
  4175  002DE0  1681               	andwf	3969,f,c	;volatile
  4176  002DE2  5010               	movf	WriteDataXLCD@data,w,c
  4177  002DE4  0B0F               	andlw	15
  4178  002DE6  1281               	iorwf	3969,f,c	;volatile
  4179  002DE8  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4180  002DEC  888A               	bsf	3978,4,c	;volatile
  4181  002DEE  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4182  002DF2  988A               	bcf	3978,4,c	;volatile
  4183  002DF4  0E0F               	movlw	15
  4184  002DF6  1293               	iorwf	3987,f,c	;volatile
  4185  002DF8  0012               	return	
  4186  002DFA                     __end_of_WriteDataXLCD:
  4187                           	opt stack 0
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           intcon	equ	0xFF2
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           indf1	equ	0xFE7
  4196                           postinc1	equ	0xFE6
  4197                           postdec1	equ	0xFE5
  4198                           fsr1h	equ	0xFE2
  4199                           fsr1l	equ	0xFE1
  4200                           indf2	equ	0xFDF
  4201                           postinc2	equ	0xFDE
  4202                           postdec2	equ	0xFDD
  4203                           plusw2	equ	0xFDB
  4204                           fsr2h	equ	0xFDA
  4205                           fsr2l	equ	0xFD9
  4206                           status	equ	0xFD8
  4207                           
  4208 ;; *************** function _BusyXLCD *****************
  4209 ;; Defined at:
  4210 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      unsigned char 
  4217 ;; Registers used:
  4218 ;;		wreg, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    3
  4231 ;; This function calls:
  4232 ;;		_DelayFor18TCY
  4233 ;; This function is called by:
  4234 ;;		_init_XLCD
  4235 ;;		_OpenXLCD
  4236 ;;		_putrsXLCD
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text17
  4241  002E38                     __ptext17:
  4242                           	opt stack 0
  4243  002E38                     _BusyXLCD:
  4244                           	opt stack 25
  4245                           
  4246                           ;incstack = 0
  4247  002E38  8C8A               	bsf	3978,6,c	;volatile
  4248  002E3A  9A8A               	bcf	3978,5,c	;volatile
  4249  002E3C  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4250  002E40  888A               	bsf	3978,4,c	;volatile
  4251  002E42  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4252  002E46  A681               	btfss	3969,3,c	;volatile
  4253  002E48  D00A               	goto	l450
  4254  002E4A  988A               	bcf	3978,4,c	;volatile
  4255  002E4C  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4256  002E50  888A               	bsf	3978,4,c	;volatile
  4257  002E52  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4258  002E56  988A               	bcf	3978,4,c	;volatile
  4259  002E58  9C8A               	bcf	3978,6,c	;volatile
  4260  002E5A  0E01               	movlw	1
  4261  002E5C  0012               	return	
  4262  002E5E                     l450:
  4263  002E5E  988A               	bcf	3978,4,c	;volatile
  4264  002E60  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4265  002E64  888A               	bsf	3978,4,c	;volatile
  4266  002E66  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4267  002E6A  988A               	bcf	3978,4,c	;volatile
  4268  002E6C  9C8A               	bcf	3978,6,c	;volatile
  4269  002E6E  0E00               	movlw	0
  4270  002E70  0012               	return	
  4271  002E72                     __end_of_BusyXLCD:
  4272                           	opt stack 0
  4273                           tblptru	equ	0xFF8
  4274                           tblptrh	equ	0xFF7
  4275                           tblptrl	equ	0xFF6
  4276                           tablat	equ	0xFF5
  4277                           intcon	equ	0xFF2
  4278                           postinc0	equ	0xFEE
  4279                           wreg	equ	0xFE8
  4280                           indf1	equ	0xFE7
  4281                           postinc1	equ	0xFE6
  4282                           postdec1	equ	0xFE5
  4283                           fsr1h	equ	0xFE2
  4284                           fsr1l	equ	0xFE1
  4285                           indf2	equ	0xFDF
  4286                           postinc2	equ	0xFDE
  4287                           postdec2	equ	0xFDD
  4288                           plusw2	equ	0xFDB
  4289                           fsr2h	equ	0xFDA
  4290                           fsr2l	equ	0xFD9
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function _WriteCmdXLCD *****************
  4294 ;; Defined at:
  4295 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  cmd             1    wreg     unsigned char 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  cmd             1   15[COMRAM] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0
  4310 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4312 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4313 ;;Total ram usage:        1 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    3
  4316 ;; This function calls:
  4317 ;;		_DelayFor18TCY
  4318 ;; This function is called by:
  4319 ;;		_init_XLCD
  4320 ;;		_gambiarra_pro_serial
  4321 ;;		_main
  4322 ;;		_OpenXLCD
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text18
  4327  002DFA                     __ptext18:
  4328                           	opt stack 0
  4329  002DFA                     _WriteCmdXLCD:
  4330                           	opt stack 26
  4331                           
  4332                           ;incstack = 0
  4333                           ;WriteCmdXLCD@cmd stored from wreg
  4334  002DFA  6E10               	movwf	WriteCmdXLCD@cmd,c
  4335  002DFC  0EF0               	movlw	240
  4336  002DFE  1693               	andwf	3987,f,c	;volatile
  4337  002E00  0EF0               	movlw	240
  4338  002E02  1681               	andwf	3969,f,c	;volatile
  4339  002E04  3810               	swapf	WriteCmdXLCD@cmd,w,c
  4340  002E06  0B0F               	andlw	15
  4341  002E08  0B0F               	andlw	15
  4342  002E0A  1281               	iorwf	3969,f,c	;volatile
  4343  002E0C  9C8A               	bcf	3978,6,c	;volatile
  4344  002E0E  9A8A               	bcf	3978,5,c	;volatile
  4345  002E10  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4346  002E14  888A               	bsf	3978,4,c	;volatile
  4347  002E16  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4348  002E1A  988A               	bcf	3978,4,c	;volatile
  4349  002E1C  0EF0               	movlw	240
  4350  002E1E  1681               	andwf	3969,f,c	;volatile
  4351  002E20  5010               	movf	WriteCmdXLCD@cmd,w,c
  4352  002E22  0B0F               	andlw	15
  4353  002E24  1281               	iorwf	3969,f,c	;volatile
  4354  002E26  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4355  002E2A  888A               	bsf	3978,4,c	;volatile
  4356  002E2C  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4357  002E30  988A               	bcf	3978,4,c	;volatile
  4358  002E32  0E0F               	movlw	15
  4359  002E34  1293               	iorwf	3987,f,c	;volatile
  4360  002E36  0012               	return	
  4361  002E38                     __end_of_WriteCmdXLCD:
  4362                           	opt stack 0
  4363                           tblptru	equ	0xFF8
  4364                           tblptrh	equ	0xFF7
  4365                           tblptrl	equ	0xFF6
  4366                           tablat	equ	0xFF5
  4367                           intcon	equ	0xFF2
  4368                           postinc0	equ	0xFEE
  4369                           wreg	equ	0xFE8
  4370                           indf1	equ	0xFE7
  4371                           postinc1	equ	0xFE6
  4372                           postdec1	equ	0xFE5
  4373                           fsr1h	equ	0xFE2
  4374                           fsr1l	equ	0xFE1
  4375                           indf2	equ	0xFDF
  4376                           postinc2	equ	0xFDE
  4377                           postdec2	equ	0xFDD
  4378                           plusw2	equ	0xFDB
  4379                           fsr2h	equ	0xFDA
  4380                           fsr2l	equ	0xFD9
  4381                           status	equ	0xFD8
  4382                           
  4383 ;; *************** function _SetDDRamAddr *****************
  4384 ;; Defined at:
  4385 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  DDaddr          1    wreg     unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  DDaddr          1   18[COMRAM] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4399 ;;      Params:         0       0       0       0       0       0       0       0       0
  4400 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4401 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4402 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4403 ;;Total ram usage:        4 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    3
  4406 ;; This function calls:
  4407 ;;		_DelayFor18TCY
  4408 ;; This function is called by:
  4409 ;;		_exibir_lcd
  4410 ;;		_pisca_cursor
  4411 ;;		_gambiarra_pro_serial
  4412 ;;		_OpenXLCD
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text19
  4417  002C52                     __ptext19:
  4418                           	opt stack 0
  4419  002C52                     _SetDDRamAddr:
  4420                           	opt stack 26
  4421                           
  4422                           ;incstack = 0
  4423                           ;SetDDRamAddr@DDaddr stored from wreg
  4424  002C52  6E13               	movwf	SetDDRamAddr@DDaddr,c
  4425  002C54  0EF0               	movlw	240
  4426  002C56  1693               	andwf	3987,f,c	;volatile
  4427  002C58  0EF0               	movlw	240
  4428  002C5A  1681               	andwf	3969,f,c	;volatile
  4429  002C5C  5013               	movf	SetDDRamAddr@DDaddr,w,c
  4430  002C5E  6E10               	movwf	??_SetDDRamAddr& (0+255),c
  4431  002C60  6A11               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4432  002C62  8E10               	bsf	??_SetDDRamAddr,7,c
  4433  002C64  0E04               	movlw	4
  4434  002C66  6E12               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4435  002C68                     u2415:
  4436  002C68  3411               	rlcf	??_SetDDRamAddr+1,w,c
  4437  002C6A  3211               	rrcf	??_SetDDRamAddr+1,f,c
  4438  002C6C  3210               	rrcf	??_SetDDRamAddr,f,c
  4439  002C6E  2E12               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4440  002C70  D7FB               	goto	u2415
  4441  002C72  5010               	movf	??_SetDDRamAddr,w,c
  4442  002C74  0B0F               	andlw	15
  4443  002C76  1281               	iorwf	3969,f,c	;volatile
  4444  002C78  9C8A               	bcf	3978,6,c	;volatile
  4445  002C7A  9A8A               	bcf	3978,5,c	;volatile
  4446  002C7C  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4447  002C80  888A               	bsf	3978,4,c	;volatile
  4448  002C82  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4449  002C86  988A               	bcf	3978,4,c	;volatile
  4450  002C88  0EF0               	movlw	240
  4451  002C8A  1681               	andwf	3969,f,c	;volatile
  4452  002C8C  5013               	movf	SetDDRamAddr@DDaddr,w,c
  4453  002C8E  0B0F               	andlw	15
  4454  002C90  1281               	iorwf	3969,f,c	;volatile
  4455  002C92  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4456  002C96  888A               	bsf	3978,4,c	;volatile
  4457  002C98  ECEC  F017         	call	_DelayFor18TCY	;wreg free
  4458  002C9C  988A               	bcf	3978,4,c	;volatile
  4459  002C9E  0E0F               	movlw	15
  4460  002CA0  1293               	iorwf	3987,f,c	;volatile
  4461  002CA2  0012               	return	
  4462  002CA4                     __end_of_SetDDRamAddr:
  4463                           	opt stack 0
  4464                           tblptru	equ	0xFF8
  4465                           tblptrh	equ	0xFF7
  4466                           tblptrl	equ	0xFF6
  4467                           tablat	equ	0xFF5
  4468                           intcon	equ	0xFF2
  4469                           postinc0	equ	0xFEE
  4470                           wreg	equ	0xFE8
  4471                           indf1	equ	0xFE7
  4472                           postinc1	equ	0xFE6
  4473                           postdec1	equ	0xFE5
  4474                           fsr1h	equ	0xFE2
  4475                           fsr1l	equ	0xFE1
  4476                           indf2	equ	0xFDF
  4477                           postinc2	equ	0xFDE
  4478                           postdec2	equ	0xFDD
  4479                           plusw2	equ	0xFDB
  4480                           fsr2h	equ	0xFDA
  4481                           fsr2l	equ	0xFD9
  4482                           status	equ	0xFD8
  4483                           
  4484 ;; *************** function _DelayFor18TCY *****************
  4485 ;; Defined at:
  4486 ;;		line 3 in file "display_LCD.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    2
  4507 ;; This function calls:
  4508 ;;		_Delay10TCYx
  4509 ;; This function is called by:
  4510 ;;		_BusyXLCD
  4511 ;;		_SetDDRamAddr
  4512 ;;		_WriteCmdXLCD
  4513 ;;		_WriteDataXLCD
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text20
  4518  002FD8                     __ptext20:
  4519                           	opt stack 0
  4520  002FD8                     _DelayFor18TCY:
  4521                           	opt stack 26
  4522                           
  4523                           ;display_LCD.c: 4: Delay10TCYx(120);
  4524                           
  4525                           ;incstack = 0
  4526  002FD8  0E78               	movlw	120
  4527  002FDA  ECCC  F017         	call	_Delay10TCYx
  4528  002FDE  0012               	return		;funcret
  4529  002FE0                     __end_of_DelayFor18TCY:
  4530                           	opt stack 0
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           intcon	equ	0xFF2
  4536                           postinc0	equ	0xFEE
  4537                           wreg	equ	0xFE8
  4538                           indf1	equ	0xFE7
  4539                           postinc1	equ	0xFE6
  4540                           postdec1	equ	0xFE5
  4541                           fsr1h	equ	0xFE2
  4542                           fsr1l	equ	0xFE1
  4543                           indf2	equ	0xFDF
  4544                           postinc2	equ	0xFDE
  4545                           postdec2	equ	0xFDD
  4546                           plusw2	equ	0xFDB
  4547                           fsr2h	equ	0xFDA
  4548                           fsr2l	equ	0xFD9
  4549                           status	equ	0xFD8
  4550                           
  4551 ;; *************** function _Delay10TCYx *****************
  4552 ;; Defined at:
  4553 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  unit            1    wreg     unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  unit            1   14[COMRAM] unsigned char 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4567 ;;      Params:         0       0       0       0       0       0       0       0       0
  4568 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4570 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4571 ;;Total ram usage:        1 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; Hardware stack levels required when called:    1
  4574 ;; This function calls:
  4575 ;;		Nothing
  4576 ;; This function is called by:
  4577 ;;		_DelayFor18TCY
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text21
  4582  002F98                     __ptext21:
  4583                           	opt stack 0
  4584  002F98                     _Delay10TCYx:
  4585                           	opt stack 26
  4586                           
  4587                           ;incstack = 0
  4588                           ;Delay10TCYx@unit stored from wreg
  4589  002F98  6E0F               	movwf	Delay10TCYx@unit,c
  4590  002F9A  0E03               	movlw	3
  4591  002F9C                     u5127:
  4592  002F9C  2EE8               	decfsz	wreg,f,c
  4593  002F9E  D7FE               	bra	u5127
  4594  002FA0  F000               	nop	
  4595  002FA2  2E0F               	decfsz	Delay10TCYx@unit,f,c
  4596  002FA4  D7FA               	goto	l2576
  4597  002FA6  0012               	return	
  4598  002FA8                     __end_of_Delay10TCYx:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           intcon	equ	0xFF2
  4605                           postinc0	equ	0xFEE
  4606                           wreg	equ	0xFE8
  4607                           indf1	equ	0xFE7
  4608                           postinc1	equ	0xFE6
  4609                           postdec1	equ	0xFE5
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           indf2	equ	0xFDF
  4613                           postinc2	equ	0xFDE
  4614                           postdec2	equ	0xFDD
  4615                           plusw2	equ	0xFDB
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8
  4619                           
  4620 ;; *************** function _convert_float_to_char *****************
  4621 ;; Defined at:
  4622 ;;		line 22 in file "ad.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  valor           3    8[BANK0 ] float 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  f1              3   18[BANK0 ] float 
  4627 ;;  f2              3   11[BANK0 ] float 
  4628 ;;  i2              2   16[BANK0 ] int 
  4629 ;;  i1              2   14[BANK0 ] int 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4639 ;;      Params:         0       3       0       0       0       0       0       0       0
  4640 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4642 ;;      Totals:         0      13       0       0       0       0       0       0       0
  4643 ;;Total ram usage:       13 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    4
  4646 ;; This function calls:
  4647 ;;		___ftadd
  4648 ;;		___ftmul
  4649 ;;		___ftneg
  4650 ;;		___fttol
  4651 ;;		_floor
  4652 ;;		_sprintf
  4653 ;; This function is called by:
  4654 ;;		_exibir_lcd
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text22
  4659  00245A                     __ptext22:
  4660                           	opt stack 0
  4661  00245A                     _convert_float_to_char:
  4662                           	opt stack 25
  4663                           
  4664                           ;ad.c: 23: float f1,f2;
  4665                           ;ad.c: 24: int i1,i2;
  4666                           ;ad.c: 25: valor=valor*100;
  4667                           
  4668                           ;incstack = 0
  4669  00245A  C068  F01A         	movff	convert_float_to_char@valor,___ftmul@f1
  4670  00245E  C069  F01B         	movff	convert_float_to_char@valor+1,___ftmul@f1+1
  4671  002462  C06A  F01C         	movff	convert_float_to_char@valor+2,___ftmul@f1+2
  4672  002466  0E00               	movlw	0
  4673  002468  6E1D               	movwf	___ftmul@f2,c
  4674  00246A  0EC8               	movlw	200
  4675  00246C  6E1E               	movwf	___ftmul@f2+1,c
  4676  00246E  0E42               	movlw	66
  4677  002470  6E1F               	movwf	___ftmul@f2+2,c
  4678  002472  EC3A  F011         	call	___ftmul	;wreg free
  4679  002476  C01A  F068         	movff	?___ftmul,convert_float_to_char@valor
  4680  00247A  C01B  F069         	movff	?___ftmul+1,convert_float_to_char@valor+1
  4681  00247E  C01C  F06A         	movff	?___ftmul+2,convert_float_to_char@valor+2
  4682                           
  4683                           ;ad.c: 26: f1=floor(valor);
  4684  002482  C068  F060         	movff	convert_float_to_char@valor,floor@x
  4685  002486  C069  F061         	movff	convert_float_to_char@valor+1,floor@x+1
  4686  00248A  C06A  F062         	movff	convert_float_to_char@valor+2,floor@x+2
  4687  00248E  ECB4  F011         	call	_floor	;wreg free
  4688  002492  C060  F072         	movff	?_floor,convert_float_to_char@f1
  4689  002496  C061  F073         	movff	?_floor+1,convert_float_to_char@f1+1
  4690  00249A  C062  F074         	movff	?_floor+2,convert_float_to_char@f1+2
  4691                           
  4692                           ;ad.c: 27: f2=valor - f1;
  4693  00249E  C072  F00F         	movff	convert_float_to_char@f1,___ftneg@f1
  4694  0024A2  C073  F010         	movff	convert_float_to_char@f1+1,___ftneg@f1+1
  4695  0024A6  C074  F011         	movff	convert_float_to_char@f1+2,___ftneg@f1+2
  4696  0024AA  EC6E  F017         	call	___ftneg	;wreg free
  4697  0024AE  C00F  F017         	movff	?___ftneg,___ftadd@f1
  4698  0024B2  C010  F018         	movff	?___ftneg+1,___ftadd@f1+1
  4699  0024B6  C011  F019         	movff	?___ftneg+2,___ftadd@f1+2
  4700  0024BA  C068  F01A         	movff	convert_float_to_char@valor,___ftadd@f2
  4701  0024BE  C069  F01B         	movff	convert_float_to_char@valor+1,___ftadd@f2+1
  4702  0024C2  C06A  F01C         	movff	convert_float_to_char@valor+2,___ftadd@f2+2
  4703  0024C6  EC0D  F00E         	call	___ftadd	;wreg free
  4704  0024CA  C017  F06B         	movff	?___ftadd,convert_float_to_char@f2
  4705  0024CE  C018  F06C         	movff	?___ftadd+1,convert_float_to_char@f2+1
  4706  0024D2  C019  F06D         	movff	?___ftadd+2,convert_float_to_char@f2+2
  4707                           
  4708                           ;ad.c: 28: i1 = (int)f1;
  4709  0024D6  C072  F029         	movff	convert_float_to_char@f1,___fttol@f1
  4710  0024DA  C073  F02A         	movff	convert_float_to_char@f1+1,___fttol@f1+1
  4711  0024DE  C074  F02B         	movff	convert_float_to_char@f1+2,___fttol@f1+2
  4712  0024E2  ECC0  F010         	call	___fttol	;wreg free
  4713  0024E6  C029  F06E         	movff	?___fttol,convert_float_to_char@i1
  4714  0024EA  C02A  F06F         	movff	?___fttol+1,convert_float_to_char@i1+1
  4715                           
  4716                           ;ad.c: 29: i2 = (int)(100*f2);
  4717  0024EE  0E00               	movlw	0
  4718  0024F0  6E1D               	movwf	___ftmul@f2,c
  4719  0024F2  0EC8               	movlw	200
  4720  0024F4  6E1E               	movwf	___ftmul@f2+1,c
  4721  0024F6  0E42               	movlw	66
  4722  0024F8  6E1F               	movwf	___ftmul@f2+2,c
  4723  0024FA  C06B  F01A         	movff	convert_float_to_char@f2,___ftmul@f1
  4724  0024FE  C06C  F01B         	movff	convert_float_to_char@f2+1,___ftmul@f1+1
  4725  002502  C06D  F01C         	movff	convert_float_to_char@f2+2,___ftmul@f1+2
  4726  002506  EC3A  F011         	call	___ftmul	;wreg free
  4727  00250A  C01A  F029         	movff	?___ftmul,___fttol@f1
  4728  00250E  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
  4729  002512  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
  4730  002516  ECC0  F010         	call	___fttol	;wreg free
  4731  00251A  C029  F070         	movff	?___fttol,convert_float_to_char@i2
  4732  00251E  C02A  F071         	movff	?___fttol+1,convert_float_to_char@i2+1
  4733                           
  4734                           ;ad.c: 30: sprintf(temperatura_display,"%d,%d oC        ", i1,i2);
  4735  002522  0EC5               	movlw	low _temperatura_display
  4736  002524  6E1B               	movwf	sprintf@sp,c
  4737  002526  0E00               	movlw	high _temperatura_display
  4738  002528  6E1C               	movwf	sprintf@sp+1,c
  4739  00252A  0E95               	movlw	low STR_1
  4740  00252C  6E1D               	movwf	sprintf@f,c
  4741  00252E  0E08               	movlw	high STR_1
  4742  002530  6E1E               	movwf	sprintf@f+1,c
  4743  002532  C06E  F01F         	movff	convert_float_to_char@i1,?_sprintf+4
  4744  002536  C06F  F020         	movff	convert_float_to_char@i1+1,?_sprintf+5
  4745  00253A  C070  F021         	movff	convert_float_to_char@i2,?_sprintf+6
  4746  00253E  C071  F022         	movff	convert_float_to_char@i2+1,?_sprintf+7
  4747  002542  ECE3  F00E         	call	_sprintf	;wreg free
  4748  002546  0012               	return		;funcret
  4749  002548                     __end_of_convert_float_to_char:
  4750                           	opt stack 0
  4751                           tblptru	equ	0xFF8
  4752                           tblptrh	equ	0xFF7
  4753                           tblptrl	equ	0xFF6
  4754                           tablat	equ	0xFF5
  4755                           intcon	equ	0xFF2
  4756                           postinc0	equ	0xFEE
  4757                           wreg	equ	0xFE8
  4758                           indf1	equ	0xFE7
  4759                           postinc1	equ	0xFE6
  4760                           postdec1	equ	0xFE5
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           indf2	equ	0xFDF
  4764                           postinc2	equ	0xFDE
  4765                           postdec2	equ	0xFDD
  4766                           plusw2	equ	0xFDB
  4767                           fsr2h	equ	0xFDA
  4768                           fsr2l	equ	0xFD9
  4769                           status	equ	0xFD8
  4770                           
  4771 ;; *************** function _sprintf *****************
  4772 ;; Defined at:
  4773 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  sp              2   26[COMRAM] PTR unsigned char 
  4776 ;;		 -> str(16), exibir_lcd@str(16), temperatura_display(10), 
  4777 ;;  f               2   28[COMRAM] PTR const unsigned char 
  4778 ;;		 -> STR_8(20), STR_7(17), STR_4(23), STR_3(22), 
  4779 ;;		 -> STR_2(22), STR_1(17), 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  tmpval          4    0        struct .
  4782 ;;  cp              3    0        PTR const unsigned char 
  4783 ;;  val             2   47[COMRAM] unsigned int 
  4784 ;;  ap              2   43[COMRAM] PTR void [1]
  4785 ;;		 -> ?_sprintf(2), 
  4786 ;;  len             2    0        unsigned int 
  4787 ;;  c               1   49[COMRAM] char 
  4788 ;;  prec            1   46[COMRAM] char 
  4789 ;;  flag            1   45[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  2   26[COMRAM] int 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4799 ;;      Params:        16       0       0       0       0       0       0       0       0
  4800 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4801 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4802 ;;      Totals:        24       0       0       0       0       0       0       0       0
  4803 ;;Total ram usage:       24 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    2
  4806 ;; This function calls:
  4807 ;;		___lwdiv
  4808 ;;		___lwmod
  4809 ;; This function is called by:
  4810 ;;		_convert_float_to_char
  4811 ;;		_exibir_lcd
  4812 ;;		_gambiarra_pro_serial
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text23
  4817  001DC6                     __ptext23:
  4818                           	opt stack 0
  4819  001DC6                     _sprintf:
  4820                           	opt stack 27
  4821                           
  4822                           ;doprnt.c: 494: va_list ap;
  4823                           ;doprnt.c: 499: signed char c;
  4824                           ;doprnt.c: 506: signed char prec;
  4825                           ;doprnt.c: 508: unsigned char flag;
  4826                           ;doprnt.c: 523: union {
  4827                           ;doprnt.c: 524: unsigned long vd;
  4828                           ;doprnt.c: 525: double integ;
  4829                           ;doprnt.c: 526: } tmpval;
  4830                           ;doprnt.c: 528: unsigned int val;
  4831                           ;doprnt.c: 529: unsigned len;
  4832                           ;doprnt.c: 530: const char * cp;
  4833                           ;doprnt.c: 533: *ap = __va_start();
  4834                           
  4835                           ;incstack = 0
  4836  001DC6  0E1F               	movlw	low (?_sprintf+4)
  4837  001DC8  6E2C               	movwf	sprintf@ap,c
  4838  001DCA  0E00               	movlw	high (?_sprintf+4)
  4839  001DCC  6E2D               	movwf	sprintf@ap+1,c
  4840                           
  4841                           ;doprnt.c: 536: while(c = *f++) {
  4842  001DCE  D08C               	goto	l2770
  4843  001DD0                     l2718:
  4844                           
  4845                           ;doprnt.c: 538: if(c != '%')
  4846  001DD0  0E25               	movlw	37
  4847  001DD2  1832               	xorwf	sprintf@c,w,c
  4848  001DD4  B4D8               	btfsc	status,2,c
  4849  001DD6  D009               	goto	l2724
  4850                           
  4851                           ;doprnt.c: 540: {
  4852                           ;doprnt.c: 541: ((*sp++ = (c)));
  4853  001DD8  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4854  001DDC  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4855  001DE0  C032  FFDF         	movff	sprintf@c,indf2
  4856  001DE4  4A1B               	infsnz	sprintf@sp,f,c
  4857  001DE6  2A1C               	incf	sprintf@sp+1,f,c
  4858                           
  4859                           ;doprnt.c: 542: continue;
  4860  001DE8  D07F               	goto	l2770
  4861  001DEA                     l2724:
  4862                           
  4863                           ;doprnt.c: 543: }
  4864                           ;doprnt.c: 548: flag = 0;
  4865  001DEA  0E00               	movlw	0
  4866  001DEC  6E2E               	movwf	sprintf@flag,c
  4867                           
  4868                           ;doprnt.c: 822: }
  4869                           
  4870                           ;doprnt.c: 813: continue;
  4871                           
  4872                           ;doprnt.c: 802: default:
  4873                           
  4874                           ;doprnt.c: 698: case 'i':
  4875                           ;doprnt.c: 699: break;
  4876                           
  4877                           ;doprnt.c: 697: case 'd':
  4878                           
  4879                           ;doprnt.c: 638: goto alldone;
  4880                           
  4881                           ;doprnt.c: 637: case 0:
  4882                           
  4883                           ;doprnt.c: 635: switch(c = *f++) {
  4884  001DEE  C01D  FFF6         	movff	sprintf@f,tblptrl
  4885  001DF2  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  4886  001DF6  4A1D               	infsnz	sprintf@f,f,c
  4887  001DF8  2A1E               	incf	sprintf@f+1,f,c
  4888  001DFA                     	if	0	;tblptru may be non-zero
  4889  001DFA                     	endif
  4890  001DFA                     	if	0	;tblptru may be non-zero
  4891  001DFA                     	endif
  4892  001DFA  0008               	tblrd		*
  4893  001DFC  CFF5 F032          	movff	tablat,sprintf@c
  4894  001E00  5032               	movf	sprintf@c,w,c
  4895                           
  4896                           ; Switch size 1, requested type "space"
  4897                           ; Number of cases is 3, Range of values is 0 to 105
  4898                           ; switch strategies available:
  4899                           ; Name         Instructions Cycles
  4900                           ; simple_byte           10     6 (average)
  4901                           ;	Chosen strategy is simple_byte
  4902  001E02  0A00               	xorlw	0	; case 0
  4903  001E04  B4D8               	btfsc	status,2,c
  4904  001E06  D07C               	goto	l2772
  4905  001E08  0A64               	xorlw	100	; case 100
  4906  001E0A  B4D8               	btfsc	status,2,c
  4907  001E0C  D003               	goto	l2730
  4908  001E0E  0A0D               	xorlw	13	; case 105
  4909  001E10  A4D8               	btfss	status,2,c
  4910  001E12  D06A               	goto	l2770
  4911  001E14                     l2730:
  4912                           
  4913                           ;doprnt.c: 1253: {
  4914                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4915  001E14  C02C  FFD9         	movff	sprintf@ap,fsr2l
  4916  001E18  C02D  FFDA         	movff	sprintf@ap+1,fsr2h
  4917  001E1C  CFDE F030          	movff	postinc2,sprintf@val
  4918  001E20  CFDD F031          	movff	postdec2,sprintf@val+1
  4919  001E24  0E02               	movlw	2
  4920  001E26  262C               	addwf	sprintf@ap,f,c
  4921  001E28  0E00               	movlw	0
  4922  001E2A  222D               	addwfc	sprintf@ap+1,f,c
  4923                           
  4924                           ;doprnt.c: 1261: if((int)val < 0) {
  4925  001E2C  AE31               	btfss	sprintf@val+1,7,c
  4926  001E2E  D006               	goto	l2740
  4927                           
  4928                           ;doprnt.c: 1262: flag |= 0x03;
  4929  001E30  0E03               	movlw	3
  4930  001E32  122E               	iorwf	sprintf@flag,f,c
  4931                           
  4932                           ;doprnt.c: 1263: val = -val;
  4933  001E34  6C30               	negf	sprintf@val,c
  4934  001E36  1E31               	comf	sprintf@val+1,f,c
  4935  001E38  B0D8               	btfsc	status,0,c
  4936  001E3A  2A31               	incf	sprintf@val+1,f,c
  4937  001E3C                     l2740:
  4938                           
  4939                           ;doprnt.c: 1264: }
  4940                           ;doprnt.c: 1266: }
  4941                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4942  001E3C  0E01               	movlw	1
  4943  001E3E  6E32               	movwf	sprintf@c,c
  4944  001E40                     l2742:
  4945  001E40  0E05               	movlw	5
  4946  001E42  1832               	xorwf	sprintf@c,w,c
  4947  001E44  B4D8               	btfsc	status,2,c
  4948  001E46  D012               	goto	l2754
  4949                           
  4950                           ;doprnt.c: 1306: if(val < dpowers[c])
  4951  001E48  5032               	movf	sprintf@c,w,c
  4952  001E4A  0D02               	mullw	2
  4953  001E4C  0E01               	movlw	low _dpowers
  4954  001E4E  24F3               	addwf	prodl,w,c
  4955  001E50  6EF6               	movwf	tblptrl,c
  4956  001E52  0E08               	movlw	high _dpowers
  4957  001E54  20F4               	addwfc	prodh,w,c
  4958  001E56  6EF7               	movwf	tblptrh,c
  4959  001E58                     	if	0	;There are less than 3 active tblptr bytes
  4960  001E58                     	endif
  4961  001E58  0009               	tblrd		*+
  4962  001E5A  50F5               	movf	tablat,w,c
  4963  001E5C  5C30               	subwf	sprintf@val,w,c
  4964  001E5E  0009               	tblrd		*+
  4965  001E60  50F5               	movf	tablat,w,c
  4966  001E62  5831               	subwfb	sprintf@val+1,w,c
  4967  001E64  A0D8               	btfss	status,0,c
  4968  001E66  D002               	goto	l2754
  4969                           
  4970                           ;doprnt.c: 1307: break;
  4971  001E68  2A32               	incf	sprintf@c,f,c
  4972  001E6A  D7EA               	goto	l2742
  4973  001E6C                     l2754:
  4974                           
  4975                           ;doprnt.c: 1422: {
  4976                           ;doprnt.c: 1438: if(flag & 0x03)
  4977  001E6C  C02E  F02B         	movff	sprintf@flag,??_sprintf
  4978  001E70  0E03               	movlw	3
  4979  001E72  162B               	andwf	??_sprintf,f,c
  4980  001E74  B4D8               	btfsc	status,2,c
  4981  001E76  D008               	goto	l2760
  4982                           
  4983                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4984  001E78  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4985  001E7C  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4986  001E80  0E2D               	movlw	45
  4987  001E82  6EDF               	movwf	indf2,c
  4988  001E84  4A1B               	infsnz	sprintf@sp,f,c
  4989  001E86  2A1C               	incf	sprintf@sp+1,f,c
  4990  001E88                     l2760:
  4991                           
  4992                           ;doprnt.c: 1469: }
  4993                           ;doprnt.c: 1472: prec = c;
  4994  001E88  C032  F02F         	movff	sprintf@c,sprintf@prec
  4995                           
  4996                           ;doprnt.c: 1474: while(prec--) {
  4997  001E8C  D029               	goto	l2768
  4998  001E8E                     l2762:
  4999                           
  5000                           ;doprnt.c: 1478: {
  5001                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5002  001E8E  502F               	movf	sprintf@prec,w,c
  5003  001E90  0D02               	mullw	2
  5004  001E92  0E01               	movlw	low _dpowers
  5005  001E94  24F3               	addwf	prodl,w,c
  5006  001E96  6EF6               	movwf	tblptrl,c
  5007  001E98  0E08               	movlw	high _dpowers
  5008  001E9A  20F4               	addwfc	prodh,w,c
  5009  001E9C  6EF7               	movwf	tblptrh,c
  5010  001E9E                     	if	0	;There are less than 3 active tblptr bytes
  5011  001E9E                     	endif
  5012  001E9E  0009               	tblrd		*+
  5013  001EA0  CFF5 F011          	movff	tablat,___lwdiv@divisor
  5014  001EA4  000A               	tblrd		*-
  5015  001EA6  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  5016  001EAA  C030  F00F         	movff	sprintf@val,___lwdiv@dividend
  5017  001EAE  C031  F010         	movff	sprintf@val+1,___lwdiv@dividend+1
  5018  001EB2  EC52  F016         	call	___lwdiv	;wreg free
  5019  001EB6  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  5020  001EBA  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  5021  001EBE  0E00               	movlw	0
  5022  001EC0  6E19               	movwf	___lwmod@divisor+1,c
  5023  001EC2  0E0A               	movlw	10
  5024  001EC4  6E18               	movwf	___lwmod@divisor,c
  5025  001EC6  EC9E  F016         	call	___lwmod	;wreg free
  5026  001ECA  5016               	movf	?___lwmod,w,c
  5027  001ECC  0F30               	addlw	48
  5028  001ECE  6E32               	movwf	sprintf@c,c
  5029                           
  5030                           ;doprnt.c: 1523: }
  5031                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5032  001ED0  C01B  FFD9         	movff	sprintf@sp,fsr2l
  5033  001ED4  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  5034  001ED8  C032  FFDF         	movff	sprintf@c,indf2
  5035  001EDC  4A1B               	infsnz	sprintf@sp,f,c
  5036  001EDE  2A1C               	incf	sprintf@sp+1,f,c
  5037  001EE0                     l2768:
  5038  001EE0  062F               	decf	sprintf@prec,f,c
  5039  001EE2  282F               	incf	sprintf@prec,w,c
  5040  001EE4  A4D8               	btfss	status,2,c
  5041  001EE6  D7D3               	goto	l2762
  5042  001EE8                     l2770:
  5043  001EE8  C01D  FFF6         	movff	sprintf@f,tblptrl
  5044  001EEC  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  5045  001EF0  4A1D               	infsnz	sprintf@f,f,c
  5046  001EF2  2A1E               	incf	sprintf@f+1,f,c
  5047  001EF4                     	if	0	;tblptru may be non-zero
  5048  001EF4                     	endif
  5049  001EF4                     	if	0	;tblptru may be non-zero
  5050  001EF4                     	endif
  5051  001EF4  0008               	tblrd		*
  5052  001EF6  CFF5 F032          	movff	tablat,sprintf@c
  5053  001EFA  5032               	movf	sprintf@c,w,c
  5054  001EFC  A4D8               	btfss	status,2,c
  5055  001EFE  D768               	goto	l2718
  5056  001F00                     l2772:
  5057                           
  5058                           ;doprnt.c: 1538: *sp = 0;
  5059  001F00  C01B  FFD9         	movff	sprintf@sp,fsr2l
  5060  001F04  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  5061  001F08  0E00               	movlw	0
  5062  001F0A  6EDF               	movwf	indf2,c
  5063  001F0C  0012               	return	
  5064  001F0E                     __end_of_sprintf:
  5065                           	opt stack 0
  5066                           tblptru	equ	0xFF8
  5067                           tblptrh	equ	0xFF7
  5068                           tblptrl	equ	0xFF6
  5069                           tablat	equ	0xFF5
  5070                           prodh	equ	0xFF4
  5071                           prodl	equ	0xFF3
  5072                           intcon	equ	0xFF2
  5073                           postinc0	equ	0xFEE
  5074                           wreg	equ	0xFE8
  5075                           indf1	equ	0xFE7
  5076                           postinc1	equ	0xFE6
  5077                           postdec1	equ	0xFE5
  5078                           fsr1h	equ	0xFE2
  5079                           fsr1l	equ	0xFE1
  5080                           indf2	equ	0xFDF
  5081                           postinc2	equ	0xFDE
  5082                           postdec2	equ	0xFDD
  5083                           plusw2	equ	0xFDB
  5084                           fsr2h	equ	0xFDA
  5085                           fsr2l	equ	0xFD9
  5086                           status	equ	0xFD8
  5087                           
  5088 ;; *************** function ___lwmod *****************
  5089 ;; Defined at:
  5090 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  dividend        2   21[COMRAM] unsigned int 
  5093 ;;  divisor         2   23[COMRAM] unsigned int 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  counter         1   25[COMRAM] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  2   21[COMRAM] unsigned int 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5105 ;;      Params:         4       0       0       0       0       0       0       0       0
  5106 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5108 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5109 ;;Total ram usage:        5 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    1
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_sprintf
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text24
  5120  002D3C                     __ptext24:
  5121                           	opt stack 0
  5122  002D3C                     ___lwmod:
  5123                           	opt stack 27
  5124                           
  5125                           ;incstack = 0
  5126  002D3C  5018               	movf	___lwmod@divisor,w,c
  5127  002D3E  1019               	iorwf	___lwmod@divisor+1,w,c
  5128  002D40  B4D8               	btfsc	status,2,c
  5129  002D42  D018               	goto	l999
  5130  002D44  0E01               	movlw	1
  5131  002D46  6E1A               	movwf	___lwmod@counter,c
  5132  002D48  D004               	goto	l2706
  5133  002D4A                     l2704:
  5134  002D4A  90D8               	bcf	status,0,c
  5135  002D4C  3618               	rlcf	___lwmod@divisor,f,c
  5136  002D4E  3619               	rlcf	___lwmod@divisor+1,f,c
  5137  002D50  2A1A               	incf	___lwmod@counter,f,c
  5138  002D52                     l2706:
  5139  002D52  AE19               	btfss	___lwmod@divisor+1,7,c
  5140  002D54  D7FA               	goto	l2704
  5141  002D56                     l2708:
  5142  002D56  5018               	movf	___lwmod@divisor,w,c
  5143  002D58  5C16               	subwf	___lwmod@dividend,w,c
  5144  002D5A  5019               	movf	___lwmod@divisor+1,w,c
  5145  002D5C  5817               	subwfb	___lwmod@dividend+1,w,c
  5146  002D5E  A0D8               	btfss	status,0,c
  5147  002D60  D004               	goto	l2712
  5148  002D62  5018               	movf	___lwmod@divisor,w,c
  5149  002D64  5E16               	subwf	___lwmod@dividend,f,c
  5150  002D66  5019               	movf	___lwmod@divisor+1,w,c
  5151  002D68  5A17               	subwfb	___lwmod@dividend+1,f,c
  5152  002D6A                     l2712:
  5153  002D6A  90D8               	bcf	status,0,c
  5154  002D6C  3219               	rrcf	___lwmod@divisor+1,f,c
  5155  002D6E  3218               	rrcf	___lwmod@divisor,f,c
  5156  002D70  2E1A               	decfsz	___lwmod@counter,f,c
  5157  002D72  D7F1               	goto	l2708
  5158  002D74                     l999:
  5159  002D74  C016  F016         	movff	___lwmod@dividend,?___lwmod
  5160  002D78  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  5161  002D7C  0012               	return		;funcret
  5162  002D7E                     __end_of___lwmod:
  5163                           	opt stack 0
  5164                           tblptru	equ	0xFF8
  5165                           tblptrh	equ	0xFF7
  5166                           tblptrl	equ	0xFF6
  5167                           tablat	equ	0xFF5
  5168                           prodh	equ	0xFF4
  5169                           prodl	equ	0xFF3
  5170                           intcon	equ	0xFF2
  5171                           postinc0	equ	0xFEE
  5172                           wreg	equ	0xFE8
  5173                           indf1	equ	0xFE7
  5174                           postinc1	equ	0xFE6
  5175                           postdec1	equ	0xFE5
  5176                           fsr1h	equ	0xFE2
  5177                           fsr1l	equ	0xFE1
  5178                           indf2	equ	0xFDF
  5179                           postinc2	equ	0xFDE
  5180                           postdec2	equ	0xFDD
  5181                           plusw2	equ	0xFDB
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function _floor *****************
  5187 ;; Defined at:
  5188 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\floor.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  x               3    0[BANK0 ] unsigned int 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  i               3    3[BANK0 ] unsigned int 
  5193 ;;  expon           2    6[BANK0 ] int 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  3    0[BANK0 ] int 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5203 ;;      Params:         0       3       0       0       0       0       0       0       0
  5204 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5206 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5207 ;;Total ram usage:        8 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    3
  5210 ;; This function calls:
  5211 ;;		___altoft
  5212 ;;		___ftadd
  5213 ;;		___ftge
  5214 ;;		___fttol
  5215 ;;		_frexp
  5216 ;; This function is called by:
  5217 ;;		_convert_float_to_char
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text25
  5222  002368                     __ptext25:
  5223                           	opt stack 0
  5224  002368                     _floor:
  5225                           	opt stack 25
  5226                           
  5227                           ;incstack = 0
  5228  002368  C060  F00F         	movff	floor@x,frexp@value
  5229  00236C  C061  F010         	movff	floor@x+1,frexp@value+1
  5230  002370  C062  F011         	movff	floor@x+2,frexp@value+2
  5231  002374  0E66               	movlw	low floor@expon
  5232  002376  6E12               	movwf	frexp@eptr,c
  5233  002378  0E00               	movlw	high floor@expon
  5234  00237A  6E13               	movwf	frexp@eptr+1,c
  5235  00237C  EC4B  F015         	call	_frexp	;wreg free
  5236  002380  0100               	movlb	0	; () banked
  5237  002382  AF67               	btfss	(floor@expon+1)& (0+255),7,b
  5238  002384  D017               	goto	l4148
  5239                           
  5240                           ; BSR set to: 0
  5241  002386  0100               	movlb	0	; () banked
  5242  002388  AF62               	btfss	(floor@x+2)& (0+255),7,b
  5243  00238A  D00A               	goto	l4144
  5244                           
  5245                           ; BSR set to: 0
  5246  00238C  0E00               	movlw	0
  5247  00238E  0100               	movlb	0	; () banked
  5248  002390  6F60               	movwf	?_floor& (0+255),b
  5249  002392  0E80               	movlw	128
  5250  002394  0100               	movlb	0	; () banked
  5251  002396  6F61               	movwf	(?_floor+1)& (0+255),b
  5252  002398  0EBF               	movlw	191
  5253  00239A  0100               	movlb	0	; () banked
  5254  00239C  6F62               	movwf	(?_floor+2)& (0+255),b
  5255                           
  5256                           ; BSR set to: 0
  5257  00239E  0012               	return	
  5258  0023A0                     l4144:
  5259                           
  5260                           ; BSR set to: 0
  5261  0023A0  0E00               	movlw	0
  5262  0023A2  0100               	movlb	0	; () banked
  5263  0023A4  6F60               	movwf	?_floor& (0+255),b
  5264  0023A6  0E00               	movlw	0
  5265  0023A8  0100               	movlb	0	; () banked
  5266  0023AA  6F61               	movwf	(?_floor+1)& (0+255),b
  5267  0023AC  0E00               	movlw	0
  5268  0023AE  0100               	movlb	0	; () banked
  5269  0023B0  6F62               	movwf	(?_floor+2)& (0+255),b
  5270                           
  5271                           ; BSR set to: 0
  5272  0023B2  0012               	return	
  5273  0023B4                     l4148:
  5274                           
  5275                           ; BSR set to: 0
  5276  0023B4  0100               	movlb	0	; () banked
  5277  0023B6  5167               	movf	(floor@expon+1)& (0+255),w,b
  5278  0023B8  E105               	bnz	u4800
  5279  0023BA  0E15               	movlw	21
  5280  0023BC  0100               	movlb	0	; () banked
  5281  0023BE  5D66               	subwf	floor@expon& (0+255),w,b
  5282  0023C0  A0D8               	btfss	status,0,c
  5283  0023C2  D007               	goto	l4152
  5284  0023C4                     u4800:
  5285                           
  5286                           ; BSR set to: 0
  5287  0023C4  C060  F060         	movff	floor@x,?_floor
  5288  0023C8  C061  F061         	movff	floor@x+1,?_floor+1
  5289  0023CC  C062  F062         	movff	floor@x+2,?_floor+2
  5290  0023D0  0012               	return	
  5291  0023D2                     l4152:
  5292                           
  5293                           ; BSR set to: 0
  5294  0023D2  C060  F029         	movff	floor@x,___fttol@f1
  5295  0023D6  C061  F02A         	movff	floor@x+1,___fttol@f1+1
  5296  0023DA  C062  F02B         	movff	floor@x+2,___fttol@f1+2
  5297  0023DE  ECC0  F010         	call	___fttol	;wreg free
  5298  0023E2  C029  F038         	movff	?___fttol,___altoft@c
  5299  0023E6  C02A  F039         	movff	?___fttol+1,___altoft@c+1
  5300  0023EA  C02B  F03A         	movff	?___fttol+2,___altoft@c+2
  5301  0023EE  C02C  F03B         	movff	?___fttol+3,___altoft@c+3
  5302  0023F2  EC87  F015         	call	___altoft	;wreg free
  5303  0023F6  C038  F063         	movff	?___altoft,floor@i
  5304  0023FA  C039  F064         	movff	?___altoft+1,floor@i+1
  5305  0023FE  C03A  F065         	movff	?___altoft+2,floor@i+2
  5306  002402  C060  F00F         	movff	floor@x,___ftge@ff1
  5307  002406  C061  F010         	movff	floor@x+1,___ftge@ff1+1
  5308  00240A  C062  F011         	movff	floor@x+2,___ftge@ff1+2
  5309  00240E  C063  F012         	movff	floor@i,___ftge@ff2
  5310  002412  C064  F013         	movff	floor@i+1,___ftge@ff2+1
  5311  002416  C065  F014         	movff	floor@i+2,___ftge@ff2+2
  5312  00241A  EC85  F014         	call	___ftge	;wreg free
  5313  00241E  B0D8               	btfsc	status,0,c
  5314  002420  D015               	goto	l797
  5315  002422  C063  F017         	movff	floor@i,___ftadd@f1
  5316  002426  C064  F018         	movff	floor@i+1,___ftadd@f1+1
  5317  00242A  C065  F019         	movff	floor@i+2,___ftadd@f1+2
  5318  00242E  0E00               	movlw	0
  5319  002430  6E1A               	movwf	___ftadd@f2,c
  5320  002432  0E80               	movlw	128
  5321  002434  6E1B               	movwf	___ftadd@f2+1,c
  5322  002436  0EBF               	movlw	191
  5323  002438  6E1C               	movwf	___ftadd@f2+2,c
  5324  00243A  EC0D  F00E         	call	___ftadd	;wreg free
  5325  00243E  C017  F060         	movff	?___ftadd,?_floor
  5326  002442  C018  F061         	movff	?___ftadd+1,?_floor+1
  5327  002446  C019  F062         	movff	?___ftadd+2,?_floor+2
  5328  00244A  0012               	return	
  5329  00244C                     l797:
  5330  00244C  C063  F060         	movff	floor@i,?_floor
  5331  002450  C064  F061         	movff	floor@i+1,?_floor+1
  5332  002454  C065  F062         	movff	floor@i+2,?_floor+2
  5333  002458  0012               	return		;funcret
  5334  00245A                     __end_of_floor:
  5335                           	opt stack 0
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           intcon	equ	0xFF2
  5343                           postinc0	equ	0xFEE
  5344                           wreg	equ	0xFE8
  5345                           indf1	equ	0xFE7
  5346                           postinc1	equ	0xFE6
  5347                           postdec1	equ	0xFE5
  5348                           fsr1h	equ	0xFE2
  5349                           fsr1l	equ	0xFE1
  5350                           indf2	equ	0xFDF
  5351                           postinc2	equ	0xFDE
  5352                           postdec2	equ	0xFDD
  5353                           plusw2	equ	0xFDB
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function _frexp *****************
  5359 ;; Defined at:
  5360 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\frexp.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  value           3   14[COMRAM] int 
  5363 ;;  eptr            2   17[COMRAM] PTR int 
  5364 ;;		 -> floor@expon(2), 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  3   14[COMRAM] PTR int 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5376 ;;      Params:         5       0       0       0       0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5378 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5379 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5380 ;;Total ram usage:        7 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_floor
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text26
  5391  002A96                     __ptext26:
  5392                           	opt stack 0
  5393  002A96                     _frexp:
  5394                           	opt stack 26
  5395                           
  5396                           ;incstack = 0
  5397  002A96  500F               	movf	frexp@value,w,c
  5398  002A98  1010               	iorwf	frexp@value+1,w,c
  5399  002A9A  1011               	iorwf	frexp@value+2,w,c
  5400  002A9C  A4D8               	btfss	status,2,c
  5401  002A9E  D009               	goto	l4060
  5402  002AA0  C012  FFD9         	movff	frexp@eptr,fsr2l
  5403  002AA4  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5404  002AA8  0E00               	movlw	0
  5405  002AAA  6EDE               	movwf	postinc2,c
  5406  002AAC  0E00               	movlw	0
  5407  002AAE  6EDD               	movwf	postdec2,c
  5408                           
  5409                           ;	Return value of _frexp is never used
  5410  002AB0  0012               	return	
  5411  002AB2                     l4060:
  5412  002AB2  5011               	movf	frexp@value+2,w,c
  5413  002AB4  0B7F               	andlw	127
  5414  002AB6  6E14               	movwf	??_frexp& (0+255),c
  5415  002AB8  6A15               	clrf	(??_frexp+1)& (0+255),c
  5416  002ABA  90D8               	bcf	status,0,c
  5417  002ABC  3614               	rlcf	??_frexp,f,c
  5418  002ABE  3615               	rlcf	??_frexp+1,f,c
  5419  002AC0  C012  FFD9         	movff	frexp@eptr,fsr2l
  5420  002AC4  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5421  002AC8  C014  FFDE         	movff	??_frexp,postinc2
  5422  002ACC  C015  FFDD         	movff	??_frexp+1,postdec2
  5423  002AD0  AE10               	btfss	frexp@value+1,7,c
  5424  002AD2  D003               	goto	u4660
  5425  002AD4  6A14               	clrf	??_frexp& (0+255),c
  5426  002AD6  2A14               	incf	??_frexp& (0+255),f,c
  5427  002AD8  D001               	goto	u4668
  5428  002ADA                     u4660:
  5429  002ADA  6A14               	clrf	??_frexp& (0+255),c
  5430  002ADC                     u4668:
  5431  002ADC  5014               	movf	??_frexp,w,c
  5432  002ADE  C012  FFD9         	movff	frexp@eptr,fsr2l
  5433  002AE2  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5434  002AE6  12DE               	iorwf	postinc2,f,c
  5435  002AE8  0E00               	movlw	0
  5436  002AEA  12DD               	iorwf	postdec2,f,c
  5437  002AEC  C012  FFD9         	movff	frexp@eptr,fsr2l
  5438  002AF0  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5439  002AF4  0E82               	movlw	130
  5440  002AF6  26DE               	addwf	postinc2,f,c
  5441  002AF8  0EFF               	movlw	255
  5442  002AFA  22DD               	addwfc	postdec2,f,c
  5443  002AFC  8011               	bsf	frexp@value+2,0,c
  5444  002AFE  8211               	bsf	frexp@value+2,1,c
  5445  002B00  8411               	bsf	frexp@value+2,2,c
  5446  002B02  8611               	bsf	frexp@value+2,3,c
  5447  002B04  8811               	bsf	frexp@value+2,4,c
  5448  002B06  8A11               	bsf	frexp@value+2,5,c
  5449  002B08  9C11               	bcf	frexp@value+2,6,c
  5450  002B0A  9E10               	bcf	frexp@value+1,7,c
  5451  002B0C  0012               	return	
  5452  002B0E                     __end_of_frexp:
  5453                           	opt stack 0
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           intcon	equ	0xFF2
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           indf1	equ	0xFE7
  5464                           postinc1	equ	0xFE6
  5465                           postdec1	equ	0xFE5
  5466                           fsr1h	equ	0xFE2
  5467                           fsr1l	equ	0xFE1
  5468                           indf2	equ	0xFDF
  5469                           postinc2	equ	0xFDE
  5470                           postdec2	equ	0xFDD
  5471                           plusw2	equ	0xFDB
  5472                           fsr2h	equ	0xFDA
  5473                           fsr2l	equ	0xFD9
  5474                           status	equ	0xFD8
  5475                           
  5476 ;; *************** function ___fttol *****************
  5477 ;; Defined at:
  5478 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  f1              3   40[COMRAM] float 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  lval            4   50[COMRAM] unsigned long 
  5483 ;;  exp1            1   54[COMRAM] unsigned char 
  5484 ;;  sign1           1   49[COMRAM] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  4   40[COMRAM] long 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5494 ;;      Params:         4       0       0       0       0       0       0       0       0
  5495 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5496 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5497 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5498 ;;Total ram usage:       15 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    1
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_convert_float_to_char
  5505 ;;		_floor
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text27
  5510  002180                     __ptext27:
  5511                           	opt stack 0
  5512  002180                     ___fttol:
  5513                           	opt stack 26
  5514                           
  5515                           ;incstack = 0
  5516  002180  C02B  F02D         	movff	___fttol@f1+2,??___fttol
  5517  002184  6A2E               	clrf	(??___fttol+1)& (0+255),c
  5518  002186  6A2F               	clrf	(??___fttol+2)& (0+255),c
  5519  002188  342A               	rlcf	___fttol@f1+1,w,c
  5520  00218A  362D               	rlcf	??___fttol& (0+255),f,c
  5521  00218C  E301               	bnc	u4701
  5522  00218E  802E               	bsf	(??___fttol+1)& (0+255),0,c
  5523  002190                     u4701:
  5524  002190  502D               	movf	??___fttol,w,c
  5525  002192  6E37               	movwf	___fttol@exp1,c
  5526  002194  5037               	movf	___fttol@exp1,w,c
  5527  002196  A4D8               	btfss	status,2,c
  5528  002198  D009               	goto	l4094
  5529  00219A  0E00               	movlw	0
  5530  00219C  6E29               	movwf	?___fttol,c
  5531  00219E  0E00               	movlw	0
  5532  0021A0  6E2A               	movwf	?___fttol+1,c
  5533  0021A2  0E00               	movlw	0
  5534  0021A4  6E2B               	movwf	?___fttol+2,c
  5535  0021A6  0E00               	movlw	0
  5536  0021A8  6E2C               	movwf	?___fttol+3,c
  5537  0021AA  0012               	return	
  5538  0021AC                     l4094:
  5539  0021AC  0E17               	movlw	23
  5540  0021AE  6E2D               	movwf	??___fttol& (0+255),c
  5541  0021B0  C029  F02E         	movff	___fttol@f1,??___fttol+1
  5542  0021B4  C02A  F02F         	movff	___fttol@f1+1,??___fttol+2
  5543  0021B8  C02B  F030         	movff	___fttol@f1+2,??___fttol+3
  5544  0021BC  282D               	incf	??___fttol,w,c
  5545  0021BE  6E31               	movwf	(??___fttol+4)& (0+255),c
  5546  0021C0  D004               	goto	u4720
  5547  0021C2                     u4725:
  5548  0021C2  90D8               	bcf	status,0,c
  5549  0021C4  3230               	rrcf	??___fttol+3,f,c
  5550  0021C6  322F               	rrcf	??___fttol+2,f,c
  5551  0021C8  322E               	rrcf	??___fttol+1,f,c
  5552  0021CA                     u4720:
  5553  0021CA  2E31               	decfsz	(??___fttol+4)& (0+255),f,c
  5554  0021CC  D7FA               	goto	u4725
  5555  0021CE  502E               	movf	??___fttol+1,w,c
  5556  0021D0  6E32               	movwf	___fttol@sign1,c
  5557  0021D2  8E2A               	bsf	___fttol@f1+1,7,c
  5558  0021D4  0EFF               	movlw	255
  5559  0021D6  1629               	andwf	___fttol@f1,f,c
  5560  0021D8  0EFF               	movlw	255
  5561  0021DA  162A               	andwf	___fttol@f1+1,f,c
  5562  0021DC  0E00               	movlw	0
  5563  0021DE  162B               	andwf	___fttol@f1+2,f,c
  5564  0021E0  5029               	movf	___fttol@f1,w,c
  5565  0021E2  6E33               	movwf	___fttol@lval,c
  5566  0021E4  502A               	movf	___fttol@f1+1,w,c
  5567  0021E6  6E34               	movwf	___fttol@lval+1,c
  5568  0021E8  502B               	movf	___fttol@f1+2,w,c
  5569  0021EA  6E35               	movwf	___fttol@lval+2,c
  5570  0021EC  6A36               	clrf	___fttol@lval+3,c
  5571  0021EE  0E8E               	movlw	142
  5572  0021F0  5E37               	subwf	___fttol@exp1,f,c
  5573  0021F2  AE37               	btfss	___fttol@exp1,7,c
  5574  0021F4  D016               	goto	l4116
  5575  0021F6  5037               	movf	___fttol@exp1,w,c
  5576  0021F8  0A80               	xorlw	128
  5577  0021FA  0F8F               	addlw	143
  5578  0021FC  B0D8               	btfsc	status,0,c
  5579  0021FE  D009               	goto	l4112
  5580  002200  0E00               	movlw	0
  5581  002202  6E29               	movwf	?___fttol,c
  5582  002204  0E00               	movlw	0
  5583  002206  6E2A               	movwf	?___fttol+1,c
  5584  002208  0E00               	movlw	0
  5585  00220A  6E2B               	movwf	?___fttol+2,c
  5586  00220C  0E00               	movlw	0
  5587  00220E  6E2C               	movwf	?___fttol+3,c
  5588  002210  0012               	return	
  5589  002212                     l4112:
  5590  002212  90D8               	bcf	status,0,c
  5591  002214  3236               	rrcf	___fttol@lval+3,f,c
  5592  002216  3235               	rrcf	___fttol@lval+2,f,c
  5593  002218  3234               	rrcf	___fttol@lval+1,f,c
  5594  00221A  3233               	rrcf	___fttol@lval,f,c
  5595  00221C  3E37               	incfsz	___fttol@exp1,f,c
  5596  00221E  D7F9               	goto	l4112
  5597  002220  D015               	goto	l4126
  5598  002222                     l4116:
  5599  002222  0E17               	movlw	23
  5600  002224  6437               	cpfsgt	___fttol@exp1,c
  5601  002226  D00F               	goto	l4124
  5602  002228  0E00               	movlw	0
  5603  00222A  6E29               	movwf	?___fttol,c
  5604  00222C  0E00               	movlw	0
  5605  00222E  6E2A               	movwf	?___fttol+1,c
  5606  002230  0E00               	movlw	0
  5607  002232  6E2B               	movwf	?___fttol+2,c
  5608  002234  0E00               	movlw	0
  5609  002236  6E2C               	movwf	?___fttol+3,c
  5610  002238  0012               	return	
  5611  00223A                     l4122:
  5612  00223A  90D8               	bcf	status,0,c
  5613  00223C  3633               	rlcf	___fttol@lval,f,c
  5614  00223E  3634               	rlcf	___fttol@lval+1,f,c
  5615  002240  3635               	rlcf	___fttol@lval+2,f,c
  5616  002242  3636               	rlcf	___fttol@lval+3,f,c
  5617  002244  0637               	decf	___fttol@exp1,f,c
  5618  002246                     l4124:
  5619  002246  5037               	movf	___fttol@exp1,w,c
  5620  002248  A4D8               	btfss	status,2,c
  5621  00224A  D7F7               	goto	l4122
  5622  00224C                     l4126:
  5623  00224C  5032               	movf	___fttol@sign1,w,c
  5624  00224E  B4D8               	btfsc	status,2,c
  5625  002250  D008               	goto	l4130
  5626  002252  1E36               	comf	___fttol@lval+3,f,c
  5627  002254  1E35               	comf	___fttol@lval+2,f,c
  5628  002256  1E34               	comf	___fttol@lval+1,f,c
  5629  002258  6C33               	negf	___fttol@lval,c
  5630  00225A  0E00               	movlw	0
  5631  00225C  2234               	addwfc	___fttol@lval+1,f,c
  5632  00225E  2235               	addwfc	___fttol@lval+2,f,c
  5633  002260  2236               	addwfc	___fttol@lval+3,f,c
  5634  002262                     l4130:
  5635  002262  C033  F029         	movff	___fttol@lval,?___fttol
  5636  002266  C034  F02A         	movff	___fttol@lval+1,?___fttol+1
  5637  00226A  C035  F02B         	movff	___fttol@lval+2,?___fttol+2
  5638  00226E  C036  F02C         	movff	___fttol@lval+3,?___fttol+3
  5639  002272  0012               	return	
  5640  002274                     __end_of___fttol:
  5641                           	opt stack 0
  5642                           tblptru	equ	0xFF8
  5643                           tblptrh	equ	0xFF7
  5644                           tblptrl	equ	0xFF6
  5645                           tablat	equ	0xFF5
  5646                           prodh	equ	0xFF4
  5647                           prodl	equ	0xFF3
  5648                           intcon	equ	0xFF2
  5649                           postinc0	equ	0xFEE
  5650                           wreg	equ	0xFE8
  5651                           indf1	equ	0xFE7
  5652                           postinc1	equ	0xFE6
  5653                           postdec1	equ	0xFE5
  5654                           fsr1h	equ	0xFE2
  5655                           fsr1l	equ	0xFE1
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           postdec2	equ	0xFDD
  5659                           plusw2	equ	0xFDB
  5660                           fsr2h	equ	0xFDA
  5661                           fsr2l	equ	0xFD9
  5662                           status	equ	0xFD8
  5663                           
  5664 ;; *************** function ___ftge *****************
  5665 ;; Defined at:
  5666 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  ff1             3   14[COMRAM] float 
  5669 ;;  ff2             3   17[COMRAM] float 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;		None               void
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5681 ;;      Params:         6       0       0       0       0       0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5683 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5684 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5685 ;;Total ram usage:        9 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    1
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_floor
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text28
  5696  00290A                     __ptext28:
  5697                           	opt stack 0
  5698  00290A                     ___ftge:
  5699                           	opt stack 26
  5700                           
  5701                           ;incstack = 0
  5702  00290A  AE11               	btfss	___ftge@ff1+2,7,c
  5703  00290C  D016               	goto	l4074
  5704  00290E  C00F  F015         	movff	___ftge@ff1,??___ftge
  5705  002912  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  5706  002916  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  5707  00291A  1E15               	comf	??___ftge,f,c
  5708  00291C  1E16               	comf	??___ftge+1,f,c
  5709  00291E  1E17               	comf	??___ftge+2,f,c
  5710  002920  2A15               	incf	??___ftge,f,c
  5711  002922  0E00               	movlw	0
  5712  002924  2216               	addwfc	??___ftge+1,f,c
  5713  002926  2217               	addwfc	??___ftge+2,f,c
  5714  002928  0E00               	movlw	0
  5715  00292A  2415               	addwf	??___ftge,w,c
  5716  00292C  6E0F               	movwf	___ftge@ff1,c
  5717  00292E  0E00               	movlw	0
  5718  002930  2016               	addwfc	??___ftge+1,w,c
  5719  002932  6E10               	movwf	___ftge@ff1+1,c
  5720  002934  0E80               	movlw	128
  5721  002936  2017               	addwfc	??___ftge+2,w,c
  5722  002938  6E11               	movwf	___ftge@ff1+2,c
  5723  00293A                     l4074:
  5724  00293A  AE14               	btfss	___ftge@ff2+2,7,c
  5725  00293C  D016               	goto	l4078
  5726  00293E  C012  F015         	movff	___ftge@ff2,??___ftge
  5727  002942  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  5728  002946  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  5729  00294A  1E15               	comf	??___ftge,f,c
  5730  00294C  1E16               	comf	??___ftge+1,f,c
  5731  00294E  1E17               	comf	??___ftge+2,f,c
  5732  002950  2A15               	incf	??___ftge,f,c
  5733  002952  0E00               	movlw	0
  5734  002954  2216               	addwfc	??___ftge+1,f,c
  5735  002956  2217               	addwfc	??___ftge+2,f,c
  5736  002958  0E00               	movlw	0
  5737  00295A  2415               	addwf	??___ftge,w,c
  5738  00295C  6E12               	movwf	___ftge@ff2,c
  5739  00295E  0E00               	movlw	0
  5740  002960  2016               	addwfc	??___ftge+1,w,c
  5741  002962  6E13               	movwf	___ftge@ff2+1,c
  5742  002964  0E80               	movlw	128
  5743  002966  2017               	addwfc	??___ftge+2,w,c
  5744  002968  6E14               	movwf	___ftge@ff2+2,c
  5745  00296A                     l4078:
  5746  00296A  0E00               	movlw	0
  5747  00296C  1A0F               	xorwf	___ftge@ff1,f,c
  5748  00296E  0E00               	movlw	0
  5749  002970  1A10               	xorwf	___ftge@ff1+1,f,c
  5750  002972  0E80               	movlw	128
  5751  002974  1A11               	xorwf	___ftge@ff1+2,f,c
  5752  002976  0E00               	movlw	0
  5753  002978  1A12               	xorwf	___ftge@ff2,f,c
  5754  00297A  0E00               	movlw	0
  5755  00297C  1A13               	xorwf	___ftge@ff2+1,f,c
  5756  00297E  0E80               	movlw	128
  5757  002980  1A14               	xorwf	___ftge@ff2+2,f,c
  5758  002982  5012               	movf	___ftge@ff2,w,c
  5759  002984  5C0F               	subwf	___ftge@ff1,w,c
  5760  002986  5013               	movf	___ftge@ff2+1,w,c
  5761  002988  5810               	subwfb	___ftge@ff1+1,w,c
  5762  00298A  5014               	movf	___ftge@ff2+2,w,c
  5763  00298C  5811               	subwfb	___ftge@ff1+2,w,c
  5764  00298E  B0D8               	btfsc	status,0,c
  5765  002990  D002               	goto	l4084
  5766  002992  90D8               	bcf	status,0,c
  5767  002994  0012               	return	
  5768  002996                     l4084:
  5769  002996  80D8               	bsf	status,0,c
  5770  002998  0012               	return	
  5771  00299A                     __end_of___ftge:
  5772                           	opt stack 0
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           prodh	equ	0xFF4
  5778                           prodl	equ	0xFF3
  5779                           intcon	equ	0xFF2
  5780                           postinc0	equ	0xFEE
  5781                           wreg	equ	0xFE8
  5782                           indf1	equ	0xFE7
  5783                           postinc1	equ	0xFE6
  5784                           postdec1	equ	0xFE5
  5785                           fsr1h	equ	0xFE2
  5786                           fsr1l	equ	0xFE1
  5787                           indf2	equ	0xFDF
  5788                           postinc2	equ	0xFDE
  5789                           postdec2	equ	0xFDD
  5790                           plusw2	equ	0xFDB
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function ___ftadd *****************
  5796 ;; Defined at:
  5797 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  f1              3   22[COMRAM] float 
  5800 ;;  f2              3   25[COMRAM] float 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  exp1            1   33[COMRAM] unsigned char 
  5803 ;;  exp2            1   32[COMRAM] unsigned char 
  5804 ;;  sign            1   31[COMRAM] unsigned char 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  3   22[COMRAM] float 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5814 ;;      Params:         6       0       0       0       0       0       0       0       0
  5815 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5816 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5817 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5818 ;;Total ram usage:       12 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    2
  5821 ;; This function calls:
  5822 ;;		___ftpack
  5823 ;; This function is called by:
  5824 ;;		_convert_float_to_char
  5825 ;;		_floor
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text29
  5830  001C1A                     __ptext29:
  5831                           	opt stack 0
  5832  001C1A                     ___ftadd:
  5833                           	opt stack 25
  5834                           
  5835                           ;incstack = 0
  5836  001C1A  C019  F01D         	movff	___ftadd@f1+2,??___ftadd
  5837  001C1E  6A1E               	clrf	(??___ftadd+1)& (0+255),c
  5838  001C20  6A1F               	clrf	(??___ftadd+2)& (0+255),c
  5839  001C22  3418               	rlcf	___ftadd@f1+1,w,c
  5840  001C24  361D               	rlcf	??___ftadd& (0+255),f,c
  5841  001C26  E301               	bnc	u4441
  5842  001C28  801E               	bsf	(??___ftadd+1)& (0+255),0,c
  5843  001C2A                     u4441:
  5844  001C2A  501D               	movf	??___ftadd,w,c
  5845  001C2C  6E22               	movwf	___ftadd@exp1,c
  5846  001C2E  C01C  F01D         	movff	___ftadd@f2+2,??___ftadd
  5847  001C32  6A1E               	clrf	(??___ftadd+1)& (0+255),c
  5848  001C34  6A1F               	clrf	(??___ftadd+2)& (0+255),c
  5849  001C36  341B               	rlcf	___ftadd@f2+1,w,c
  5850  001C38  361D               	rlcf	??___ftadd& (0+255),f,c
  5851  001C3A  E301               	bnc	u4451
  5852  001C3C  801E               	bsf	(??___ftadd+1)& (0+255),0,c
  5853  001C3E                     u4451:
  5854  001C3E  501D               	movf	??___ftadd,w,c
  5855  001C40  6E21               	movwf	___ftadd@exp2,c
  5856  001C42  5022               	movf	___ftadd@exp1,w,c
  5857  001C44  B4D8               	btfsc	status,2,c
  5858  001C46  D00B               	goto	l834
  5859  001C48  5021               	movf	___ftadd@exp2,w,c
  5860  001C4A  5C22               	subwf	___ftadd@exp1,w,c
  5861  001C4C  B0D8               	btfsc	status,0,c
  5862  001C4E  D00E               	goto	l3992
  5863  001C50  5022               	movf	___ftadd@exp1,w,c
  5864  001C52  0800               	sublw	0
  5865  001C54  2421               	addwf	___ftadd@exp2,w,c
  5866  001C56  6E1D               	movwf	??___ftadd& (0+255),c
  5867  001C58  0E18               	movlw	24
  5868  001C5A  641D               	cpfsgt	??___ftadd,c
  5869  001C5C  D007               	goto	l3992
  5870  001C5E                     l834:
  5871  001C5E  C01A  F017         	movff	___ftadd@f2,?___ftadd
  5872  001C62  C01B  F018         	movff	___ftadd@f2+1,?___ftadd+1
  5873  001C66  C01C  F019         	movff	___ftadd@f2+2,?___ftadd+2
  5874  001C6A  0012               	return	
  5875  001C6C                     l3992:
  5876  001C6C  5021               	movf	___ftadd@exp2,w,c
  5877  001C6E  B4D8               	btfsc	status,2,c
  5878  001C70  D00B               	goto	l838
  5879  001C72  5022               	movf	___ftadd@exp1,w,c
  5880  001C74  5C21               	subwf	___ftadd@exp2,w,c
  5881  001C76  B0D8               	btfsc	status,0,c
  5882  001C78  D00E               	goto	l3998
  5883  001C7A  5021               	movf	___ftadd@exp2,w,c
  5884  001C7C  0800               	sublw	0
  5885  001C7E  2422               	addwf	___ftadd@exp1,w,c
  5886  001C80  6E1D               	movwf	??___ftadd& (0+255),c
  5887  001C82  0E18               	movlw	24
  5888  001C84  641D               	cpfsgt	??___ftadd,c
  5889  001C86  D007               	goto	l3998
  5890  001C88                     l838:
  5891  001C88  C017  F017         	movff	___ftadd@f1,?___ftadd
  5892  001C8C  C018  F018         	movff	___ftadd@f1+1,?___ftadd+1
  5893  001C90  C019  F019         	movff	___ftadd@f1+2,?___ftadd+2
  5894  001C94  0012               	return	
  5895  001C96                     l3998:
  5896  001C96  0E06               	movlw	6
  5897  001C98  6E20               	movwf	___ftadd@sign,c
  5898  001C9A  BE19               	btfsc	___ftadd@f1+2,7,c
  5899  001C9C  8E20               	bsf	___ftadd@sign,7,c
  5900  001C9E  BE1C               	btfsc	___ftadd@f2+2,7,c
  5901  001CA0  8C20               	bsf	___ftadd@sign,6,c
  5902  001CA2  8E18               	bsf	___ftadd@f1+1,7,c
  5903  001CA4  0EFF               	movlw	255
  5904  001CA6  1617               	andwf	___ftadd@f1,f,c
  5905  001CA8  0EFF               	movlw	255
  5906  001CAA  1618               	andwf	___ftadd@f1+1,f,c
  5907  001CAC  0E00               	movlw	0
  5908  001CAE  1619               	andwf	___ftadd@f1+2,f,c
  5909  001CB0  8E1B               	bsf	___ftadd@f2+1,7,c
  5910  001CB2  0EFF               	movlw	255
  5911  001CB4  161A               	andwf	___ftadd@f2,f,c
  5912  001CB6  0EFF               	movlw	255
  5913  001CB8  161B               	andwf	___ftadd@f2+1,f,c
  5914  001CBA  0E00               	movlw	0
  5915  001CBC  161C               	andwf	___ftadd@f2+2,f,c
  5916  001CBE  5021               	movf	___ftadd@exp2,w,c
  5917  001CC0  5C22               	subwf	___ftadd@exp1,w,c
  5918  001CC2  B0D8               	btfsc	status,0,c
  5919  001CC4  D01B               	goto	l4024
  5920  001CC6                     l4014:
  5921  001CC6  90D8               	bcf	status,0,c
  5922  001CC8  361A               	rlcf	___ftadd@f2,f,c
  5923  001CCA  361B               	rlcf	___ftadd@f2+1,f,c
  5924  001CCC  361C               	rlcf	___ftadd@f2+2,f,c
  5925  001CCE  0621               	decf	___ftadd@exp2,f,c
  5926  001CD0  5022               	movf	___ftadd@exp1,w,c
  5927  001CD2  1821               	xorwf	___ftadd@exp2,w,c
  5928  001CD4  B4D8               	btfsc	status,2,c
  5929  001CD6  D00D               	goto	l4022
  5930  001CD8  0620               	decf	___ftadd@sign,f,c
  5931  001CDA  C020  F01D         	movff	___ftadd@sign,??___ftadd
  5932  001CDE  0E07               	movlw	7
  5933  001CE0  161D               	andwf	??___ftadd,f,c
  5934  001CE2  B4D8               	btfsc	status,2,c
  5935  001CE4  D006               	goto	l4022
  5936  001CE6  D7EF               	goto	l4014
  5937  001CE8                     l4020:
  5938  001CE8  90D8               	bcf	status,0,c
  5939  001CEA  3219               	rrcf	___ftadd@f1+2,f,c
  5940  001CEC  3218               	rrcf	___ftadd@f1+1,f,c
  5941  001CEE  3217               	rrcf	___ftadd@f1,f,c
  5942  001CF0  2A22               	incf	___ftadd@exp1,f,c
  5943  001CF2                     l4022:
  5944  001CF2  5021               	movf	___ftadd@exp2,w,c
  5945  001CF4  1822               	xorwf	___ftadd@exp1,w,c
  5946  001CF6  B4D8               	btfsc	status,2,c
  5947  001CF8  D01F               	goto	l849
  5948  001CFA  D7F6               	goto	l4020
  5949  001CFC                     l4024:
  5950  001CFC  5022               	movf	___ftadd@exp1,w,c
  5951  001CFE  5C21               	subwf	___ftadd@exp2,w,c
  5952  001D00  B0D8               	btfsc	status,0,c
  5953  001D02  D01A               	goto	l849
  5954  001D04                     l4026:
  5955  001D04  90D8               	bcf	status,0,c
  5956  001D06  3617               	rlcf	___ftadd@f1,f,c
  5957  001D08  3618               	rlcf	___ftadd@f1+1,f,c
  5958  001D0A  3619               	rlcf	___ftadd@f1+2,f,c
  5959  001D0C  0622               	decf	___ftadd@exp1,f,c
  5960  001D0E  5022               	movf	___ftadd@exp1,w,c
  5961  001D10  1821               	xorwf	___ftadd@exp2,w,c
  5962  001D12  B4D8               	btfsc	status,2,c
  5963  001D14  D00D               	goto	l4034
  5964  001D16  0620               	decf	___ftadd@sign,f,c
  5965  001D18  C020  F01D         	movff	___ftadd@sign,??___ftadd
  5966  001D1C  0E07               	movlw	7
  5967  001D1E  161D               	andwf	??___ftadd,f,c
  5968  001D20  B4D8               	btfsc	status,2,c
  5969  001D22  D006               	goto	l4034
  5970  001D24  D7EF               	goto	l4026
  5971  001D26                     l4032:
  5972  001D26  90D8               	bcf	status,0,c
  5973  001D28  321C               	rrcf	___ftadd@f2+2,f,c
  5974  001D2A  321B               	rrcf	___ftadd@f2+1,f,c
  5975  001D2C  321A               	rrcf	___ftadd@f2,f,c
  5976  001D2E  2A21               	incf	___ftadd@exp2,f,c
  5977  001D30                     l4034:
  5978  001D30  5021               	movf	___ftadd@exp2,w,c
  5979  001D32  1822               	xorwf	___ftadd@exp1,w,c
  5980  001D34  A4D8               	btfss	status,2,c
  5981  001D36  D7F7               	goto	l4032
  5982  001D38                     l849:
  5983  001D38  AE20               	btfss	___ftadd@sign,7,c
  5984  001D3A  D00C               	goto	l858
  5985  001D3C  0EFF               	movlw	255
  5986  001D3E  1A17               	xorwf	___ftadd@f1,f,c
  5987  001D40  0EFF               	movlw	255
  5988  001D42  1A18               	xorwf	___ftadd@f1+1,f,c
  5989  001D44  0EFF               	movlw	255
  5990  001D46  1A19               	xorwf	___ftadd@f1+2,f,c
  5991  001D48  0E01               	movlw	1
  5992  001D4A  2617               	addwf	___ftadd@f1,f,c
  5993  001D4C  0E00               	movlw	0
  5994  001D4E  2218               	addwfc	___ftadd@f1+1,f,c
  5995  001D50  0E00               	movlw	0
  5996  001D52  2219               	addwfc	___ftadd@f1+2,f,c
  5997  001D54                     l858:
  5998  001D54  AC20               	btfss	___ftadd@sign,6,c
  5999  001D56  D00C               	goto	l4040
  6000  001D58  0EFF               	movlw	255
  6001  001D5A  1A1A               	xorwf	___ftadd@f2,f,c
  6002  001D5C  0EFF               	movlw	255
  6003  001D5E  1A1B               	xorwf	___ftadd@f2+1,f,c
  6004  001D60  0EFF               	movlw	255
  6005  001D62  1A1C               	xorwf	___ftadd@f2+2,f,c
  6006  001D64  0E01               	movlw	1
  6007  001D66  261A               	addwf	___ftadd@f2,f,c
  6008  001D68  0E00               	movlw	0
  6009  001D6A  221B               	addwfc	___ftadd@f2+1,f,c
  6010  001D6C  0E00               	movlw	0
  6011  001D6E  221C               	addwfc	___ftadd@f2+2,f,c
  6012  001D70                     l4040:
  6013  001D70  0E00               	movlw	0
  6014  001D72  6E20               	movwf	___ftadd@sign,c
  6015  001D74  5017               	movf	___ftadd@f1,w,c
  6016  001D76  261A               	addwf	___ftadd@f2,f,c
  6017  001D78  5018               	movf	___ftadd@f1+1,w,c
  6018  001D7A  221B               	addwfc	___ftadd@f2+1,f,c
  6019  001D7C  5019               	movf	___ftadd@f1+2,w,c
  6020  001D7E  221C               	addwfc	___ftadd@f2+2,f,c
  6021  001D80  AE1C               	btfss	___ftadd@f2+2,7,c
  6022  001D82  D00E               	goto	l4050
  6023  001D84  0EFF               	movlw	255
  6024  001D86  1A1A               	xorwf	___ftadd@f2,f,c
  6025  001D88  0EFF               	movlw	255
  6026  001D8A  1A1B               	xorwf	___ftadd@f2+1,f,c
  6027  001D8C  0EFF               	movlw	255
  6028  001D8E  1A1C               	xorwf	___ftadd@f2+2,f,c
  6029  001D90  0E01               	movlw	1
  6030  001D92  261A               	addwf	___ftadd@f2,f,c
  6031  001D94  0E00               	movlw	0
  6032  001D96  221B               	addwfc	___ftadd@f2+1,f,c
  6033  001D98  0E00               	movlw	0
  6034  001D9A  221C               	addwfc	___ftadd@f2+2,f,c
  6035  001D9C  0E01               	movlw	1
  6036  001D9E  6E20               	movwf	___ftadd@sign,c
  6037  001DA0                     l4050:
  6038  001DA0  C01A  F00F         	movff	___ftadd@f2,___ftpack@arg
  6039  001DA4  C01B  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  6040  001DA8  C01C  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  6041  001DAC  C022  F012         	movff	___ftadd@exp1,___ftpack@exp
  6042  001DB0  C020  F013         	movff	___ftadd@sign,___ftpack@sign
  6043  001DB4  EC8E  F013         	call	___ftpack	;wreg free
  6044  001DB8  C00F  F017         	movff	?___ftpack,?___ftadd
  6045  001DBC  C010  F018         	movff	?___ftpack+1,?___ftadd+1
  6046  001DC0  C011  F019         	movff	?___ftpack+2,?___ftadd+2
  6047  001DC4  0012               	return	
  6048  001DC6                     __end_of___ftadd:
  6049                           	opt stack 0
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           postinc0	equ	0xFEE
  6058                           wreg	equ	0xFE8
  6059                           indf1	equ	0xFE7
  6060                           postinc1	equ	0xFE6
  6061                           postdec1	equ	0xFE5
  6062                           fsr1h	equ	0xFE2
  6063                           fsr1l	equ	0xFE1
  6064                           indf2	equ	0xFDF
  6065                           postinc2	equ	0xFDE
  6066                           postdec2	equ	0xFDD
  6067                           plusw2	equ	0xFDB
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function ___altoft *****************
  6073 ;; Defined at:
  6074 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\altoft.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  c               4   55[COMRAM] long 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  sign            1   64[COMRAM] unsigned char 
  6079 ;;  exp             1   63[COMRAM] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  3   55[COMRAM] float 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6089 ;;      Params:         4       0       0       0       0       0       0       0       0
  6090 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6091 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6092 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6093 ;;Total ram usage:       10 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    2
  6096 ;; This function calls:
  6097 ;;		___ftpack
  6098 ;; This function is called by:
  6099 ;;		_floor
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text30
  6104  002B0E                     __ptext30:
  6105                           	opt stack 0
  6106  002B0E                     ___altoft:
  6107                           	opt stack 25
  6108                           
  6109                           ;incstack = 0
  6110  002B0E  0E00               	movlw	0
  6111  002B10  6E41               	movwf	___altoft@sign,c
  6112  002B12  0E8E               	movlw	142
  6113  002B14  6E40               	movwf	___altoft@exp,c
  6114  002B16  AE3B               	btfss	___altoft@c+3,7,c
  6115  002B18  D011               	goto	l3978
  6116  002B1A  1E3B               	comf	___altoft@c+3,f,c
  6117  002B1C  1E3A               	comf	___altoft@c+2,f,c
  6118  002B1E  1E39               	comf	___altoft@c+1,f,c
  6119  002B20  6C38               	negf	___altoft@c,c
  6120  002B22  0E00               	movlw	0
  6121  002B24  2239               	addwfc	___altoft@c+1,f,c
  6122  002B26  223A               	addwfc	___altoft@c+2,f,c
  6123  002B28  223B               	addwfc	___altoft@c+3,f,c
  6124  002B2A  0E01               	movlw	1
  6125  002B2C  6E41               	movwf	___altoft@sign,c
  6126  002B2E  D006               	goto	l3978
  6127  002B30                     l3976:
  6128  002B30  90D8               	bcf	status,0,c
  6129  002B32  323B               	rrcf	___altoft@c+3,f,c
  6130  002B34  323A               	rrcf	___altoft@c+2,f,c
  6131  002B36  3239               	rrcf	___altoft@c+1,f,c
  6132  002B38  3238               	rrcf	___altoft@c,f,c
  6133  002B3A  2A40               	incf	___altoft@exp,f,c
  6134  002B3C                     l3978:
  6135  002B3C  0E00               	movlw	0
  6136  002B3E  1438               	andwf	___altoft@c,w,c
  6137  002B40  6E3C               	movwf	??___altoft& (0+255),c
  6138  002B42  0E00               	movlw	0
  6139  002B44  1439               	andwf	___altoft@c+1,w,c
  6140  002B46  6E3D               	movwf	(??___altoft+1)& (0+255),c
  6141  002B48  0E00               	movlw	0
  6142  002B4A  143A               	andwf	___altoft@c+2,w,c
  6143  002B4C  6E3E               	movwf	(??___altoft+2)& (0+255),c
  6144  002B4E  0EFF               	movlw	255
  6145  002B50  143B               	andwf	___altoft@c+3,w,c
  6146  002B52  6E3F               	movwf	(??___altoft+3)& (0+255),c
  6147  002B54  503C               	movf	??___altoft,w,c
  6148  002B56  103D               	iorwf	??___altoft+1,w,c
  6149  002B58  103E               	iorwf	??___altoft+2,w,c
  6150  002B5A  103F               	iorwf	??___altoft+3,w,c
  6151  002B5C  A4D8               	btfss	status,2,c
  6152  002B5E  D7E8               	goto	l3976
  6153  002B60  C038  F00F         	movff	___altoft@c,___ftpack@arg
  6154  002B64  C039  F010         	movff	___altoft@c+1,___ftpack@arg+1
  6155  002B68  C03A  F011         	movff	___altoft@c+2,___ftpack@arg+2
  6156  002B6C  C040  F012         	movff	___altoft@exp,___ftpack@exp
  6157  002B70  C041  F013         	movff	___altoft@sign,___ftpack@sign
  6158  002B74  EC8E  F013         	call	___ftpack	;wreg free
  6159  002B78  C00F  F038         	movff	?___ftpack,?___altoft
  6160  002B7C  C010  F039         	movff	?___ftpack+1,?___altoft+1
  6161  002B80  C011  F03A         	movff	?___ftpack+2,?___altoft+2
  6162  002B84  0012               	return	
  6163  002B86                     __end_of___altoft:
  6164                           	opt stack 0
  6165                           tblptru	equ	0xFF8
  6166                           tblptrh	equ	0xFF7
  6167                           tblptrl	equ	0xFF6
  6168                           tablat	equ	0xFF5
  6169                           prodh	equ	0xFF4
  6170                           prodl	equ	0xFF3
  6171                           intcon	equ	0xFF2
  6172                           postinc0	equ	0xFEE
  6173                           wreg	equ	0xFE8
  6174                           indf1	equ	0xFE7
  6175                           postinc1	equ	0xFE6
  6176                           postdec1	equ	0xFE5
  6177                           fsr1h	equ	0xFE2
  6178                           fsr1l	equ	0xFE1
  6179                           indf2	equ	0xFDF
  6180                           postinc2	equ	0xFDE
  6181                           postdec2	equ	0xFDD
  6182                           plusw2	equ	0xFDB
  6183                           fsr2h	equ	0xFDA
  6184                           fsr2l	equ	0xFD9
  6185                           status	equ	0xFD8
  6186                           
  6187 ;; *************** function ___ftneg *****************
  6188 ;; Defined at:
  6189 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  f1              3   14[COMRAM] float 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  3   14[COMRAM] float 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6203 ;;      Params:         3       0       0       0       0       0       0       0       0
  6204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6206 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6207 ;;Total ram usage:        3 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    1
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_convert_float_to_char
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text31
  6218  002EDC                     __ptext31:
  6219                           	opt stack 0
  6220  002EDC                     ___ftneg:
  6221                           	opt stack 27
  6222                           
  6223                           ;incstack = 0
  6224  002EDC  500F               	movf	___ftneg@f1,w,c
  6225  002EDE  1010               	iorwf	___ftneg@f1+1,w,c
  6226  002EE0  1011               	iorwf	___ftneg@f1+2,w,c
  6227  002EE2  B4D8               	btfsc	status,2,c
  6228  002EE4  D006               	goto	l891
  6229  002EE6  0E00               	movlw	0
  6230  002EE8  1A0F               	xorwf	___ftneg@f1,f,c
  6231  002EEA  0E00               	movlw	0
  6232  002EEC  1A10               	xorwf	___ftneg@f1+1,f,c
  6233  002EEE  0E80               	movlw	128
  6234  002EF0  1A11               	xorwf	___ftneg@f1+2,f,c
  6235  002EF2                     l891:
  6236  002EF2  C00F  F00F         	movff	___ftneg@f1,?___ftneg
  6237  002EF6  C010  F010         	movff	___ftneg@f1+1,?___ftneg+1
  6238  002EFA  C011  F011         	movff	___ftneg@f1+2,?___ftneg+2
  6239  002EFE  0012               	return		;funcret
  6240  002F00                     __end_of___ftneg:
  6241                           	opt stack 0
  6242                           tblptru	equ	0xFF8
  6243                           tblptrh	equ	0xFF7
  6244                           tblptrl	equ	0xFF6
  6245                           tablat	equ	0xFF5
  6246                           prodh	equ	0xFF4
  6247                           prodl	equ	0xFF3
  6248                           intcon	equ	0xFF2
  6249                           postinc0	equ	0xFEE
  6250                           wreg	equ	0xFE8
  6251                           indf1	equ	0xFE7
  6252                           postinc1	equ	0xFE6
  6253                           postdec1	equ	0xFE5
  6254                           fsr1h	equ	0xFE2
  6255                           fsr1l	equ	0xFE1
  6256                           indf2	equ	0xFDF
  6257                           postinc2	equ	0xFDE
  6258                           postdec2	equ	0xFDD
  6259                           plusw2	equ	0xFDB
  6260                           fsr2h	equ	0xFDA
  6261                           fsr2l	equ	0xFD9
  6262                           status	equ	0xFD8
  6263                           
  6264 ;; *************** function ___awmod *****************
  6265 ;; Defined at:
  6266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  dividend        2   14[COMRAM] int 
  6269 ;;  divisor         2   16[COMRAM] int 
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;  sign            1   19[COMRAM] unsigned char 
  6272 ;;  counter         1   18[COMRAM] unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  2   14[COMRAM] int 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6282 ;;      Params:         4       0       0       0       0       0       0       0       0
  6283 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6285 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6286 ;;Total ram usage:        6 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    1
  6289 ;; This function calls:
  6290 ;;		Nothing
  6291 ;; This function is called by:
  6292 ;;		_exibir_lcd
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text32
  6297  002B86                     __ptext32:
  6298                           	opt stack 0
  6299  002B86                     ___awmod:
  6300                           	opt stack 28
  6301                           
  6302                           ;incstack = 0
  6303  002B86  0E00               	movlw	0
  6304  002B88  6E14               	movwf	___awmod@sign,c
  6305  002B8A  AE10               	btfss	___awmod@dividend+1,7,c
  6306  002B8C  D006               	goto	l3326
  6307  002B8E  6C0F               	negf	___awmod@dividend,c
  6308  002B90  1E10               	comf	___awmod@dividend+1,f,c
  6309  002B92  B0D8               	btfsc	status,0,c
  6310  002B94  2A10               	incf	___awmod@dividend+1,f,c
  6311  002B96  0E01               	movlw	1
  6312  002B98  6E14               	movwf	___awmod@sign,c
  6313  002B9A                     l3326:
  6314  002B9A  AE12               	btfss	___awmod@divisor+1,7,c
  6315  002B9C  D004               	goto	l3330
  6316  002B9E  6C11               	negf	___awmod@divisor,c
  6317  002BA0  1E12               	comf	___awmod@divisor+1,f,c
  6318  002BA2  B0D8               	btfsc	status,0,c
  6319  002BA4  2A12               	incf	___awmod@divisor+1,f,c
  6320  002BA6                     l3330:
  6321  002BA6  5011               	movf	___awmod@divisor,w,c
  6322  002BA8  1012               	iorwf	___awmod@divisor+1,w,c
  6323  002BAA  B4D8               	btfsc	status,2,c
  6324  002BAC  D018               	goto	l3346
  6325  002BAE  0E01               	movlw	1
  6326  002BB0  6E13               	movwf	___awmod@counter,c
  6327  002BB2  D004               	goto	l3336
  6328  002BB4                     l3334:
  6329  002BB4  90D8               	bcf	status,0,c
  6330  002BB6  3611               	rlcf	___awmod@divisor,f,c
  6331  002BB8  3612               	rlcf	___awmod@divisor+1,f,c
  6332  002BBA  2A13               	incf	___awmod@counter,f,c
  6333  002BBC                     l3336:
  6334  002BBC  AE12               	btfss	___awmod@divisor+1,7,c
  6335  002BBE  D7FA               	goto	l3334
  6336  002BC0                     l3338:
  6337  002BC0  5011               	movf	___awmod@divisor,w,c
  6338  002BC2  5C0F               	subwf	___awmod@dividend,w,c
  6339  002BC4  5012               	movf	___awmod@divisor+1,w,c
  6340  002BC6  5810               	subwfb	___awmod@dividend+1,w,c
  6341  002BC8  A0D8               	btfss	status,0,c
  6342  002BCA  D004               	goto	l3342
  6343  002BCC  5011               	movf	___awmod@divisor,w,c
  6344  002BCE  5E0F               	subwf	___awmod@dividend,f,c
  6345  002BD0  5012               	movf	___awmod@divisor+1,w,c
  6346  002BD2  5A10               	subwfb	___awmod@dividend+1,f,c
  6347  002BD4                     l3342:
  6348  002BD4  90D8               	bcf	status,0,c
  6349  002BD6  3212               	rrcf	___awmod@divisor+1,f,c
  6350  002BD8  3211               	rrcf	___awmod@divisor,f,c
  6351  002BDA  2E13               	decfsz	___awmod@counter,f,c
  6352  002BDC  D7F1               	goto	l3338
  6353  002BDE                     l3346:
  6354  002BDE  5014               	movf	___awmod@sign,w,c
  6355  002BE0  B4D8               	btfsc	status,2,c
  6356  002BE2  D004               	goto	l3350
  6357  002BE4  6C0F               	negf	___awmod@dividend,c
  6358  002BE6  1E10               	comf	___awmod@dividend+1,f,c
  6359  002BE8  B0D8               	btfsc	status,0,c
  6360  002BEA  2A10               	incf	___awmod@dividend+1,f,c
  6361  002BEC                     l3350:
  6362  002BEC  C00F  F00F         	movff	___awmod@dividend,?___awmod
  6363  002BF0  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  6364  002BF4  0012               	return	
  6365  002BF6                     __end_of___awmod:
  6366                           	opt stack 0
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           intcon	equ	0xFF2
  6374                           postinc0	equ	0xFEE
  6375                           wreg	equ	0xFE8
  6376                           indf1	equ	0xFE7
  6377                           postinc1	equ	0xFE6
  6378                           postdec1	equ	0xFE5
  6379                           fsr1h	equ	0xFE2
  6380                           fsr1l	equ	0xFE1
  6381                           indf2	equ	0xFDF
  6382                           postinc2	equ	0xFDE
  6383                           postdec2	equ	0xFDD
  6384                           plusw2	equ	0xFDB
  6385                           fsr2h	equ	0xFDA
  6386                           fsr2l	equ	0xFD9
  6387                           status	equ	0xFD8
  6388                           
  6389 ;; *************** function ___awdiv *****************
  6390 ;; Defined at:
  6391 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  dividend        2   20[COMRAM] int 
  6394 ;;  divisor         2   22[COMRAM] int 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  quotient        2   26[COMRAM] int 
  6397 ;;  sign            1   25[COMRAM] unsigned char 
  6398 ;;  counter         1   24[COMRAM] unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  2   20[COMRAM] int 
  6401 ;; Registers used:
  6402 ;;		wreg, status,2, status,0
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6408 ;;      Params:         4       0       0       0       0       0       0       0       0
  6409 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6411 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6412 ;;Total ram usage:        8 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    1
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_exibir_lcd
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text33
  6423  00299A                     __ptext33:
  6424                           	opt stack 0
  6425  00299A                     ___awdiv:
  6426                           	opt stack 28
  6427                           
  6428                           ;incstack = 0
  6429  00299A  0E00               	movlw	0
  6430  00299C  6E1A               	movwf	___awdiv@sign,c
  6431  00299E  AE18               	btfss	___awdiv@divisor+1,7,c
  6432  0029A0  D006               	goto	l3282
  6433  0029A2  6C17               	negf	___awdiv@divisor,c
  6434  0029A4  1E18               	comf	___awdiv@divisor+1,f,c
  6435  0029A6  B0D8               	btfsc	status,0,c
  6436  0029A8  2A18               	incf	___awdiv@divisor+1,f,c
  6437  0029AA  0E01               	movlw	1
  6438  0029AC  6E1A               	movwf	___awdiv@sign,c
  6439  0029AE                     l3282:
  6440  0029AE  AE16               	btfss	___awdiv@dividend+1,7,c
  6441  0029B0  D006               	goto	l3288
  6442  0029B2  6C15               	negf	___awdiv@dividend,c
  6443  0029B4  1E16               	comf	___awdiv@dividend+1,f,c
  6444  0029B6  B0D8               	btfsc	status,0,c
  6445  0029B8  2A16               	incf	___awdiv@dividend+1,f,c
  6446  0029BA  0E01               	movlw	1
  6447  0029BC  1A1A               	xorwf	___awdiv@sign,f,c
  6448  0029BE                     l3288:
  6449  0029BE  0E00               	movlw	0
  6450  0029C0  6E1C               	movwf	___awdiv@quotient+1,c
  6451  0029C2  0E00               	movlw	0
  6452  0029C4  6E1B               	movwf	___awdiv@quotient,c
  6453  0029C6  5017               	movf	___awdiv@divisor,w,c
  6454  0029C8  1018               	iorwf	___awdiv@divisor+1,w,c
  6455  0029CA  B4D8               	btfsc	status,2,c
  6456  0029CC  D01C               	goto	l3310
  6457  0029CE  0E01               	movlw	1
  6458  0029D0  6E19               	movwf	___awdiv@counter,c
  6459  0029D2  D004               	goto	l3296
  6460  0029D4                     l3294:
  6461  0029D4  90D8               	bcf	status,0,c
  6462  0029D6  3617               	rlcf	___awdiv@divisor,f,c
  6463  0029D8  3618               	rlcf	___awdiv@divisor+1,f,c
  6464  0029DA  2A19               	incf	___awdiv@counter,f,c
  6465  0029DC                     l3296:
  6466  0029DC  AE18               	btfss	___awdiv@divisor+1,7,c
  6467  0029DE  D7FA               	goto	l3294
  6468  0029E0                     l3298:
  6469  0029E0  90D8               	bcf	status,0,c
  6470  0029E2  361B               	rlcf	___awdiv@quotient,f,c
  6471  0029E4  361C               	rlcf	___awdiv@quotient+1,f,c
  6472  0029E6  5017               	movf	___awdiv@divisor,w,c
  6473  0029E8  5C15               	subwf	___awdiv@dividend,w,c
  6474  0029EA  5018               	movf	___awdiv@divisor+1,w,c
  6475  0029EC  5816               	subwfb	___awdiv@dividend+1,w,c
  6476  0029EE  A0D8               	btfss	status,0,c
  6477  0029F0  D005               	goto	l3306
  6478  0029F2  5017               	movf	___awdiv@divisor,w,c
  6479  0029F4  5E15               	subwf	___awdiv@dividend,f,c
  6480  0029F6  5018               	movf	___awdiv@divisor+1,w,c
  6481  0029F8  5A16               	subwfb	___awdiv@dividend+1,f,c
  6482  0029FA  801B               	bsf	___awdiv@quotient,0,c
  6483  0029FC                     l3306:
  6484  0029FC  90D8               	bcf	status,0,c
  6485  0029FE  3218               	rrcf	___awdiv@divisor+1,f,c
  6486  002A00  3217               	rrcf	___awdiv@divisor,f,c
  6487  002A02  2E19               	decfsz	___awdiv@counter,f,c
  6488  002A04  D7ED               	goto	l3298
  6489  002A06                     l3310:
  6490  002A06  501A               	movf	___awdiv@sign,w,c
  6491  002A08  B4D8               	btfsc	status,2,c
  6492  002A0A  D004               	goto	l3314
  6493  002A0C  6C1B               	negf	___awdiv@quotient,c
  6494  002A0E  1E1C               	comf	___awdiv@quotient+1,f,c
  6495  002A10  B0D8               	btfsc	status,0,c
  6496  002A12  2A1C               	incf	___awdiv@quotient+1,f,c
  6497  002A14                     l3314:
  6498  002A14  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  6499  002A18  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  6500  002A1C  0012               	return	
  6501  002A1E                     __end_of___awdiv:
  6502                           	opt stack 0
  6503                           tblptru	equ	0xFF8
  6504                           tblptrh	equ	0xFF7
  6505                           tblptrl	equ	0xFF6
  6506                           tablat	equ	0xFF5
  6507                           prodh	equ	0xFF4
  6508                           prodl	equ	0xFF3
  6509                           intcon	equ	0xFF2
  6510                           postinc0	equ	0xFEE
  6511                           wreg	equ	0xFE8
  6512                           indf1	equ	0xFE7
  6513                           postinc1	equ	0xFE6
  6514                           postdec1	equ	0xFE5
  6515                           fsr1h	equ	0xFE2
  6516                           fsr1l	equ	0xFE1
  6517                           indf2	equ	0xFDF
  6518                           postinc2	equ	0xFDE
  6519                           postdec2	equ	0xFDD
  6520                           plusw2	equ	0xFDB
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8
  6524                           
  6525 ;; *************** function _convert *****************
  6526 ;; Defined at:
  6527 ;;		line 9 in file "ad.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  i               1   55[COMRAM] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0
  6542 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6544 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6545 ;;Total ram usage:        1 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    3
  6548 ;; This function calls:
  6549 ;;		_BusyADC
  6550 ;;		_ConvertADC
  6551 ;;		_ReadADC
  6552 ;;		_SetChanADC
  6553 ;;		___ftdiv
  6554 ;;		___ftmul
  6555 ;;		___lwdiv
  6556 ;;		___lwtoft
  6557 ;; This function is called by:
  6558 ;;		_main
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text34
  6563  00286E                     __ptext34:
  6564                           	opt stack 0
  6565  00286E                     _convert:
  6566                           	opt stack 27
  6567                           
  6568                           ;ad.c: 10: ADCResult = 0;
  6569                           
  6570                           ;incstack = 0
  6571  00286E  0E00               	movlw	0
  6572  002870  6E4C               	movwf	_ADCResult+1,c
  6573  002872  0E00               	movlw	0
  6574  002874  6E4B               	movwf	_ADCResult,c
  6575                           
  6576                           ;ad.c: 12: for(unsigned char i=0;i<=2;i++){
  6577  002876  0E00               	movlw	0
  6578  002878  6E38               	movwf	convert@i,c
  6579  00287A                     l4270:
  6580  00287A  0E02               	movlw	2
  6581  00287C  6438               	cpfsgt	convert@i,c
  6582  00287E  D001               	goto	l4274
  6583  002880  0012               	return	
  6584  002882                     l4274:
  6585                           
  6586                           ;ad.c: 13: SetChanADC(0b10000111);
  6587  002882  0E87               	movlw	135
  6588  002884  ECB9  F017         	call	_SetChanADC
  6589                           
  6590                           ;ad.c: 15: ConvertADC();
  6591  002888  ECF3  F017         	call	_ConvertADC	;wreg free
  6592  00288C                     l4278:
  6593  00288C  ECE2  F017         	call	_BusyADC	;wreg free
  6594  002890  0900               	iorlw	0
  6595  002892  A4D8               	btfss	status,2,c
  6596  002894  D7FB               	goto	l4278
  6597                           
  6598                           ;ad.c: 17: ADCResult += (unsigned int) ReadADC();
  6599  002896  ECDB  F017         	call	_ReadADC	;wreg free
  6600  00289A  500F               	movf	?_ReadADC,w,c
  6601  00289C  264B               	addwf	_ADCResult,f,c
  6602  00289E  5010               	movf	?_ReadADC+1,w,c
  6603  0028A0  224C               	addwfc	_ADCResult+1,f,c
  6604                           
  6605                           ;ad.c: 18: valor_tensao=((ADCResult/3)*5.0)/1023;
  6606  0028A2  0E00               	movlw	0
  6607  0028A4  6E1D               	movwf	___ftmul@f2,c
  6608  0028A6  0EA0               	movlw	160
  6609  0028A8  6E1E               	movwf	___ftmul@f2+1,c
  6610  0028AA  0E40               	movlw	64
  6611  0028AC  6E1F               	movwf	___ftmul@f2+2,c
  6612  0028AE  0E00               	movlw	0
  6613  0028B0  6E12               	movwf	___lwdiv@divisor+1,c
  6614  0028B2  0E03               	movlw	3
  6615  0028B4  6E11               	movwf	___lwdiv@divisor,c
  6616  0028B6  C04B  F00F         	movff	_ADCResult,___lwdiv@dividend
  6617  0028BA  C04C  F010         	movff	_ADCResult+1,___lwdiv@dividend+1
  6618  0028BE  EC52  F016         	call	___lwdiv	;wreg free
  6619  0028C2  C00F  F017         	movff	?___lwdiv,___lwtoft@c
  6620  0028C6  C010  F018         	movff	?___lwdiv+1,___lwtoft@c+1
  6621  0028CA  EC80  F017         	call	___lwtoft	;wreg free
  6622  0028CE  C017  F01A         	movff	?___lwtoft,___ftmul@f1
  6623  0028D2  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
  6624  0028D6  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
  6625  0028DA  EC3A  F011         	call	___ftmul	;wreg free
  6626  0028DE  C01A  F029         	movff	?___ftmul,___ftdiv@f1
  6627  0028E2  C01B  F02A         	movff	?___ftmul+1,___ftdiv@f1+1
  6628  0028E6  C01C  F02B         	movff	?___ftmul+2,___ftdiv@f1+2
  6629  0028EA  0EC0               	movlw	192
  6630  0028EC  6E2C               	movwf	___ftdiv@f2,c
  6631  0028EE  0E7F               	movlw	127
  6632  0028F0  6E2D               	movwf	___ftdiv@f2+1,c
  6633  0028F2  0E44               	movlw	68
  6634  0028F4  6E2E               	movwf	___ftdiv@f2+2,c
  6635  0028F6  EC1B  F013         	call	___ftdiv	;wreg free
  6636  0028FA  C029  F0AA         	movff	?___ftdiv,_valor_tensao
  6637  0028FE  C02A  F0AB         	movff	?___ftdiv+1,_valor_tensao+1
  6638  002902  C02B  F0AC         	movff	?___ftdiv+2,_valor_tensao+2
  6639  002906  2A38               	incf	convert@i,f,c
  6640  002908  D7B8               	goto	l4270
  6641  00290A                     __end_of_convert:
  6642                           	opt stack 0
  6643                           tblptru	equ	0xFF8
  6644                           tblptrh	equ	0xFF7
  6645                           tblptrl	equ	0xFF6
  6646                           tablat	equ	0xFF5
  6647                           prodh	equ	0xFF4
  6648                           prodl	equ	0xFF3
  6649                           intcon	equ	0xFF2
  6650                           postinc0	equ	0xFEE
  6651                           wreg	equ	0xFE8
  6652                           indf1	equ	0xFE7
  6653                           postinc1	equ	0xFE6
  6654                           postdec1	equ	0xFE5
  6655                           fsr1h	equ	0xFE2
  6656                           fsr1l	equ	0xFE1
  6657                           indf2	equ	0xFDF
  6658                           postinc2	equ	0xFDE
  6659                           postdec2	equ	0xFDD
  6660                           plusw2	equ	0xFDB
  6661                           fsr2h	equ	0xFDA
  6662                           fsr2l	equ	0xFD9
  6663                           status	equ	0xFD8
  6664                           
  6665 ;; *************** function ___lwtoft *****************
  6666 ;; Defined at:
  6667 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  c               2   22[COMRAM] unsigned int 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  3   22[COMRAM] float 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6681 ;;      Params:         3       0       0       0       0       0       0       0       0
  6682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6684 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6685 ;;Total ram usage:        3 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    2
  6688 ;; This function calls:
  6689 ;;		___ftpack
  6690 ;; This function is called by:
  6691 ;;		_convert
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text35
  6696  002F00                     __ptext35:
  6697                           	opt stack 0
  6698  002F00                     ___lwtoft:
  6699                           	opt stack 27
  6700                           
  6701                           ;incstack = 0
  6702  002F00  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  6703  002F04  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  6704  002F08  6A11               	clrf	___ftpack@arg+2,c
  6705  002F0A  0E8E               	movlw	142
  6706  002F0C  6E12               	movwf	___ftpack@exp,c
  6707  002F0E  0E00               	movlw	0
  6708  002F10  6E13               	movwf	___ftpack@sign,c
  6709  002F12  EC8E  F013         	call	___ftpack	;wreg free
  6710  002F16  C00F  F017         	movff	?___ftpack,?___lwtoft
  6711  002F1A  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  6712  002F1E  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  6713  002F22  0012               	return	
  6714  002F24                     __end_of___lwtoft:
  6715                           	opt stack 0
  6716                           tblptru	equ	0xFF8
  6717                           tblptrh	equ	0xFF7
  6718                           tblptrl	equ	0xFF6
  6719                           tablat	equ	0xFF5
  6720                           prodh	equ	0xFF4
  6721                           prodl	equ	0xFF3
  6722                           intcon	equ	0xFF2
  6723                           postinc0	equ	0xFEE
  6724                           wreg	equ	0xFE8
  6725                           indf1	equ	0xFE7
  6726                           postinc1	equ	0xFE6
  6727                           postdec1	equ	0xFE5
  6728                           fsr1h	equ	0xFE2
  6729                           fsr1l	equ	0xFE1
  6730                           indf2	equ	0xFDF
  6731                           postinc2	equ	0xFDE
  6732                           postdec2	equ	0xFDD
  6733                           plusw2	equ	0xFDB
  6734                           fsr2h	equ	0xFDA
  6735                           fsr2l	equ	0xFD9
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function ___lwdiv *****************
  6739 ;; Defined at:
  6740 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  dividend        2   14[COMRAM] unsigned int 
  6743 ;;  divisor         2   16[COMRAM] unsigned int 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  quotient        2   18[COMRAM] unsigned int 
  6746 ;;  counter         1   20[COMRAM] unsigned char 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  2   14[COMRAM] unsigned int 
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6756 ;;      Params:         4       0       0       0       0       0       0       0       0
  6757 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6759 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6760 ;;Total ram usage:        7 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    1
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_convert
  6767 ;;		_sprintf
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text36
  6772  002CA4                     __ptext36:
  6773                           	opt stack 0
  6774  002CA4                     ___lwdiv:
  6775                           	opt stack 27
  6776                           
  6777                           ;incstack = 0
  6778  002CA4  0E00               	movlw	0
  6779  002CA6  6E14               	movwf	___lwdiv@quotient+1,c
  6780  002CA8  0E00               	movlw	0
  6781  002CAA  6E13               	movwf	___lwdiv@quotient,c
  6782  002CAC  5011               	movf	___lwdiv@divisor,w,c
  6783  002CAE  1012               	iorwf	___lwdiv@divisor+1,w,c
  6784  002CB0  B4D8               	btfsc	status,2,c
  6785  002CB2  D01C               	goto	l989
  6786  002CB4  0E01               	movlw	1
  6787  002CB6  6E15               	movwf	___lwdiv@counter,c
  6788  002CB8  D004               	goto	l2686
  6789  002CBA                     l2684:
  6790  002CBA  90D8               	bcf	status,0,c
  6791  002CBC  3611               	rlcf	___lwdiv@divisor,f,c
  6792  002CBE  3612               	rlcf	___lwdiv@divisor+1,f,c
  6793  002CC0  2A15               	incf	___lwdiv@counter,f,c
  6794  002CC2                     l2686:
  6795  002CC2  AE12               	btfss	___lwdiv@divisor+1,7,c
  6796  002CC4  D7FA               	goto	l2684
  6797  002CC6                     l2688:
  6798  002CC6  90D8               	bcf	status,0,c
  6799  002CC8  3613               	rlcf	___lwdiv@quotient,f,c
  6800  002CCA  3614               	rlcf	___lwdiv@quotient+1,f,c
  6801  002CCC  5011               	movf	___lwdiv@divisor,w,c
  6802  002CCE  5C0F               	subwf	___lwdiv@dividend,w,c
  6803  002CD0  5012               	movf	___lwdiv@divisor+1,w,c
  6804  002CD2  5810               	subwfb	___lwdiv@dividend+1,w,c
  6805  002CD4  A0D8               	btfss	status,0,c
  6806  002CD6  D005               	goto	l2696
  6807  002CD8  5011               	movf	___lwdiv@divisor,w,c
  6808  002CDA  5E0F               	subwf	___lwdiv@dividend,f,c
  6809  002CDC  5012               	movf	___lwdiv@divisor+1,w,c
  6810  002CDE  5A10               	subwfb	___lwdiv@dividend+1,f,c
  6811  002CE0  8013               	bsf	___lwdiv@quotient,0,c
  6812  002CE2                     l2696:
  6813  002CE2  90D8               	bcf	status,0,c
  6814  002CE4  3212               	rrcf	___lwdiv@divisor+1,f,c
  6815  002CE6  3211               	rrcf	___lwdiv@divisor,f,c
  6816  002CE8  2E15               	decfsz	___lwdiv@counter,f,c
  6817  002CEA  D7ED               	goto	l2688
  6818  002CEC                     l989:
  6819  002CEC  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6820  002CF0  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6821  002CF4  0012               	return		;funcret
  6822  002CF6                     __end_of___lwdiv:
  6823                           	opt stack 0
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           prodh	equ	0xFF4
  6829                           prodl	equ	0xFF3
  6830                           intcon	equ	0xFF2
  6831                           postinc0	equ	0xFEE
  6832                           wreg	equ	0xFE8
  6833                           indf1	equ	0xFE7
  6834                           postinc1	equ	0xFE6
  6835                           postdec1	equ	0xFE5
  6836                           fsr1h	equ	0xFE2
  6837                           fsr1l	equ	0xFE1
  6838                           indf2	equ	0xFDF
  6839                           postinc2	equ	0xFDE
  6840                           postdec2	equ	0xFDD
  6841                           plusw2	equ	0xFDB
  6842                           fsr2h	equ	0xFDA
  6843                           fsr2l	equ	0xFD9
  6844                           status	equ	0xFD8
  6845                           
  6846 ;; *************** function ___ftmul *****************
  6847 ;; Defined at:
  6848 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  f1              3   25[COMRAM] float 
  6851 ;;  f2              3   28[COMRAM] float 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;  f3_as_produc    3   35[COMRAM] unsigned um
  6854 ;;  sign            1   39[COMRAM] unsigned char 
  6855 ;;  cntr            1   38[COMRAM] unsigned char 
  6856 ;;  exp             1   34[COMRAM] unsigned char 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  3   25[COMRAM] float 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6866 ;;      Params:         6       0       0       0       0       0       0       0       0
  6867 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6868 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6869 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6870 ;;Total ram usage:       15 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    2
  6873 ;; This function calls:
  6874 ;;		___ftpack
  6875 ;; This function is called by:
  6876 ;;		_convert
  6877 ;;		_convert_float_to_char
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text37
  6882  002274                     __ptext37:
  6883                           	opt stack 0
  6884  002274                     ___ftmul:
  6885                           	opt stack 26
  6886                           
  6887                           ;incstack = 0
  6888  002274  C01C  F020         	movff	___ftmul@f1+2,??___ftmul
  6889  002278  6A21               	clrf	(??___ftmul+1)& (0+255),c
  6890  00227A  6A22               	clrf	(??___ftmul+2)& (0+255),c
  6891  00227C  341B               	rlcf	___ftmul@f1+1,w,c
  6892  00227E  3620               	rlcf	??___ftmul& (0+255),f,c
  6893  002280  E301               	bnc	u4821
  6894  002282  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  6895  002284                     u4821:
  6896  002284  5020               	movf	??___ftmul,w,c
  6897  002286  6E23               	movwf	___ftmul@exp,c
  6898  002288  5023               	movf	___ftmul@exp,w,c
  6899  00228A  A4D8               	btfss	status,2,c
  6900  00228C  D007               	goto	l4164
  6901  00228E  0E00               	movlw	0
  6902  002290  6E1A               	movwf	?___ftmul,c
  6903  002292  0E00               	movlw	0
  6904  002294  6E1B               	movwf	?___ftmul+1,c
  6905  002296  0E00               	movlw	0
  6906  002298  6E1C               	movwf	?___ftmul+2,c
  6907  00229A  0012               	return	
  6908  00229C                     l4164:
  6909  00229C  C01F  F020         	movff	___ftmul@f2+2,??___ftmul
  6910  0022A0  6A21               	clrf	(??___ftmul+1)& (0+255),c
  6911  0022A2  6A22               	clrf	(??___ftmul+2)& (0+255),c
  6912  0022A4  341E               	rlcf	___ftmul@f2+1,w,c
  6913  0022A6  3620               	rlcf	??___ftmul& (0+255),f,c
  6914  0022A8  E301               	bnc	u4841
  6915  0022AA  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  6916  0022AC                     u4841:
  6917  0022AC  5020               	movf	??___ftmul,w,c
  6918  0022AE  6E28               	movwf	___ftmul@sign,c
  6919  0022B0  5028               	movf	___ftmul@sign,w,c
  6920  0022B2  A4D8               	btfss	status,2,c
  6921  0022B4  D007               	goto	l4170
  6922  0022B6  0E00               	movlw	0
  6923  0022B8  6E1A               	movwf	?___ftmul,c
  6924  0022BA  0E00               	movlw	0
  6925  0022BC  6E1B               	movwf	?___ftmul+1,c
  6926  0022BE  0E00               	movlw	0
  6927  0022C0  6E1C               	movwf	?___ftmul+2,c
  6928  0022C2  0012               	return	
  6929  0022C4                     l4170:
  6930  0022C4  5028               	movf	___ftmul@sign,w,c
  6931  0022C6  0F7B               	addlw	123
  6932  0022C8  2623               	addwf	___ftmul@exp,f,c
  6933  0022CA  C01C  F028         	movff	___ftmul@f1+2,___ftmul@sign
  6934  0022CE  501F               	movf	___ftmul@f2+2,w,c
  6935  0022D0  1A28               	xorwf	___ftmul@sign,f,c
  6936  0022D2  0E80               	movlw	128
  6937  0022D4  1628               	andwf	___ftmul@sign,f,c
  6938  0022D6  8E1B               	bsf	___ftmul@f1+1,7,c
  6939  0022D8  8E1E               	bsf	___ftmul@f2+1,7,c
  6940  0022DA  0EFF               	movlw	255
  6941  0022DC  161D               	andwf	___ftmul@f2,f,c
  6942  0022DE  0EFF               	movlw	255
  6943  0022E0  161E               	andwf	___ftmul@f2+1,f,c
  6944  0022E2  0E00               	movlw	0
  6945  0022E4  161F               	andwf	___ftmul@f2+2,f,c
  6946  0022E6  0E00               	movlw	0
  6947  0022E8  6E24               	movwf	___ftmul@f3_as_product,c
  6948  0022EA  0E00               	movlw	0
  6949  0022EC  6E25               	movwf	___ftmul@f3_as_product+1,c
  6950  0022EE  0E00               	movlw	0
  6951  0022F0  6E26               	movwf	___ftmul@f3_as_product+2,c
  6952  0022F2  0E07               	movlw	7
  6953  0022F4  6E27               	movwf	___ftmul@cntr,c
  6954  0022F6                     l4184:
  6955  0022F6  A01A               	btfss	___ftmul@f1,0,c
  6956  0022F8  D006               	goto	l4188
  6957  0022FA  501D               	movf	___ftmul@f2,w,c
  6958  0022FC  2624               	addwf	___ftmul@f3_as_product,f,c
  6959  0022FE  501E               	movf	___ftmul@f2+1,w,c
  6960  002300  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  6961  002302  501F               	movf	___ftmul@f2+2,w,c
  6962  002304  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  6963  002306                     l4188:
  6964  002306  90D8               	bcf	status,0,c
  6965  002308  321C               	rrcf	___ftmul@f1+2,f,c
  6966  00230A  321B               	rrcf	___ftmul@f1+1,f,c
  6967  00230C  321A               	rrcf	___ftmul@f1,f,c
  6968  00230E  90D8               	bcf	status,0,c
  6969  002310  361D               	rlcf	___ftmul@f2,f,c
  6970  002312  361E               	rlcf	___ftmul@f2+1,f,c
  6971  002314  361F               	rlcf	___ftmul@f2+2,f,c
  6972  002316  2E27               	decfsz	___ftmul@cntr,f,c
  6973  002318  D7EE               	goto	l4184
  6974  00231A  0E09               	movlw	9
  6975  00231C  6E27               	movwf	___ftmul@cntr,c
  6976  00231E                     l4194:
  6977  00231E  A01A               	btfss	___ftmul@f1,0,c
  6978  002320  D006               	goto	l4198
  6979  002322  501D               	movf	___ftmul@f2,w,c
  6980  002324  2624               	addwf	___ftmul@f3_as_product,f,c
  6981  002326  501E               	movf	___ftmul@f2+1,w,c
  6982  002328  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  6983  00232A  501F               	movf	___ftmul@f2+2,w,c
  6984  00232C  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  6985  00232E                     l4198:
  6986  00232E  90D8               	bcf	status,0,c
  6987  002330  321C               	rrcf	___ftmul@f1+2,f,c
  6988  002332  321B               	rrcf	___ftmul@f1+1,f,c
  6989  002334  321A               	rrcf	___ftmul@f1,f,c
  6990  002336  90D8               	bcf	status,0,c
  6991  002338  3226               	rrcf	___ftmul@f3_as_product+2,f,c
  6992  00233A  3225               	rrcf	___ftmul@f3_as_product+1,f,c
  6993  00233C  3224               	rrcf	___ftmul@f3_as_product,f,c
  6994  00233E  2E27               	decfsz	___ftmul@cntr,f,c
  6995  002340  D7EE               	goto	l4194
  6996  002342  C024  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  6997  002346  C025  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6998  00234A  C026  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6999  00234E  C023  F012         	movff	___ftmul@exp,___ftpack@exp
  7000  002352  C028  F013         	movff	___ftmul@sign,___ftpack@sign
  7001  002356  EC8E  F013         	call	___ftpack	;wreg free
  7002  00235A  C00F  F01A         	movff	?___ftpack,?___ftmul
  7003  00235E  C010  F01B         	movff	?___ftpack+1,?___ftmul+1
  7004  002362  C011  F01C         	movff	?___ftpack+2,?___ftmul+2
  7005  002366  0012               	return	
  7006  002368                     __end_of___ftmul:
  7007                           	opt stack 0
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           postinc0	equ	0xFEE
  7016                           wreg	equ	0xFE8
  7017                           indf1	equ	0xFE7
  7018                           postinc1	equ	0xFE6
  7019                           postdec1	equ	0xFE5
  7020                           fsr1h	equ	0xFE2
  7021                           fsr1l	equ	0xFE1
  7022                           indf2	equ	0xFDF
  7023                           postinc2	equ	0xFDE
  7024                           postdec2	equ	0xFDD
  7025                           plusw2	equ	0xFDB
  7026                           fsr2h	equ	0xFDA
  7027                           fsr2l	equ	0xFD9
  7028                           status	equ	0xFD8
  7029                           
  7030 ;; *************** function ___ftdiv *****************
  7031 ;; Defined at:
  7032 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  f1              3   40[COMRAM] float 
  7035 ;;  f2              3   43[COMRAM] float 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  f3              3   50[COMRAM] float 
  7038 ;;  sign            1   54[COMRAM] unsigned char 
  7039 ;;  exp             1   53[COMRAM] unsigned char 
  7040 ;;  cntr            1   49[COMRAM] unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  3   40[COMRAM] float 
  7043 ;; Registers used:
  7044 ;;		wreg, status,2, status,0, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7050 ;;      Params:         6       0       0       0       0       0       0       0       0
  7051 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7052 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7053 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7054 ;;Total ram usage:       15 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    2
  7057 ;; This function calls:
  7058 ;;		___ftpack
  7059 ;; This function is called by:
  7060 ;;		_convert
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text38
  7065  002636                     __ptext38:
  7066                           	opt stack 0
  7067  002636                     ___ftdiv:
  7068                           	opt stack 27
  7069                           
  7070                           ;incstack = 0
  7071  002636  C02B  F02F         	movff	___ftdiv@f1+2,??___ftdiv
  7072  00263A  6A30               	clrf	(??___ftdiv+1)& (0+255),c
  7073  00263C  6A31               	clrf	(??___ftdiv+2)& (0+255),c
  7074  00263E  342A               	rlcf	___ftdiv@f1+1,w,c
  7075  002640  362F               	rlcf	??___ftdiv& (0+255),f,c
  7076  002642  E301               	bnc	u4881
  7077  002644  8030               	bsf	(??___ftdiv+1)& (0+255),0,c
  7078  002646                     u4881:
  7079  002646  502F               	movf	??___ftdiv,w,c
  7080  002648  6E36               	movwf	___ftdiv@exp,c
  7081  00264A  5036               	movf	___ftdiv@exp,w,c
  7082  00264C  A4D8               	btfss	status,2,c
  7083  00264E  D007               	goto	l4224
  7084  002650  0E00               	movlw	0
  7085  002652  6E29               	movwf	?___ftdiv,c
  7086  002654  0E00               	movlw	0
  7087  002656  6E2A               	movwf	?___ftdiv+1,c
  7088  002658  0E00               	movlw	0
  7089  00265A  6E2B               	movwf	?___ftdiv+2,c
  7090  00265C  0012               	return	
  7091  00265E                     l4224:
  7092  00265E  C02E  F02F         	movff	___ftdiv@f2+2,??___ftdiv
  7093  002662  6A30               	clrf	(??___ftdiv+1)& (0+255),c
  7094  002664  6A31               	clrf	(??___ftdiv+2)& (0+255),c
  7095  002666  342D               	rlcf	___ftdiv@f2+1,w,c
  7096  002668  362F               	rlcf	??___ftdiv& (0+255),f,c
  7097  00266A  E301               	bnc	u4901
  7098  00266C  8030               	bsf	(??___ftdiv+1)& (0+255),0,c
  7099  00266E                     u4901:
  7100  00266E  502F               	movf	??___ftdiv,w,c
  7101  002670  6E37               	movwf	___ftdiv@sign,c
  7102  002672  5037               	movf	___ftdiv@sign,w,c
  7103  002674  A4D8               	btfss	status,2,c
  7104  002676  D007               	goto	l4230
  7105  002678  0E00               	movlw	0
  7106  00267A  6E29               	movwf	?___ftdiv,c
  7107  00267C  0E00               	movlw	0
  7108  00267E  6E2A               	movwf	?___ftdiv+1,c
  7109  002680  0E00               	movlw	0
  7110  002682  6E2B               	movwf	?___ftdiv+2,c
  7111  002684  0012               	return	
  7112  002686                     l4230:
  7113  002686  0E00               	movlw	0
  7114  002688  6E33               	movwf	___ftdiv@f3,c
  7115  00268A  0E00               	movlw	0
  7116  00268C  6E34               	movwf	___ftdiv@f3+1,c
  7117  00268E  0E00               	movlw	0
  7118  002690  6E35               	movwf	___ftdiv@f3+2,c
  7119  002692  5037               	movf	___ftdiv@sign,w,c
  7120  002694  0F89               	addlw	137
  7121  002696  5E36               	subwf	___ftdiv@exp,f,c
  7122  002698  C02B  F037         	movff	___ftdiv@f1+2,___ftdiv@sign
  7123  00269C  502E               	movf	___ftdiv@f2+2,w,c
  7124  00269E  1A37               	xorwf	___ftdiv@sign,f,c
  7125  0026A0  0E80               	movlw	128
  7126  0026A2  1637               	andwf	___ftdiv@sign,f,c
  7127  0026A4  8E2A               	bsf	___ftdiv@f1+1,7,c
  7128  0026A6  0EFF               	movlw	255
  7129  0026A8  1629               	andwf	___ftdiv@f1,f,c
  7130  0026AA  0EFF               	movlw	255
  7131  0026AC  162A               	andwf	___ftdiv@f1+1,f,c
  7132  0026AE  0E00               	movlw	0
  7133  0026B0  162B               	andwf	___ftdiv@f1+2,f,c
  7134  0026B2  8E2D               	bsf	___ftdiv@f2+1,7,c
  7135  0026B4  0EFF               	movlw	255
  7136  0026B6  162C               	andwf	___ftdiv@f2,f,c
  7137  0026B8  0EFF               	movlw	255
  7138  0026BA  162D               	andwf	___ftdiv@f2+1,f,c
  7139  0026BC  0E00               	movlw	0
  7140  0026BE  162E               	andwf	___ftdiv@f2+2,f,c
  7141  0026C0  0E18               	movlw	24
  7142  0026C2  6E32               	movwf	___ftdiv@cntr,c
  7143  0026C4                     l4250:
  7144  0026C4  90D8               	bcf	status,0,c
  7145  0026C6  3633               	rlcf	___ftdiv@f3,f,c
  7146  0026C8  3634               	rlcf	___ftdiv@f3+1,f,c
  7147  0026CA  3635               	rlcf	___ftdiv@f3+2,f,c
  7148  0026CC  502C               	movf	___ftdiv@f2,w,c
  7149  0026CE  5C29               	subwf	___ftdiv@f1,w,c
  7150  0026D0  502D               	movf	___ftdiv@f2+1,w,c
  7151  0026D2  582A               	subwfb	___ftdiv@f1+1,w,c
  7152  0026D4  502E               	movf	___ftdiv@f2+2,w,c
  7153  0026D6  582B               	subwfb	___ftdiv@f1+2,w,c
  7154  0026D8  A0D8               	btfss	status,0,c
  7155  0026DA  D007               	goto	l869
  7156  0026DC  502C               	movf	___ftdiv@f2,w,c
  7157  0026DE  5E29               	subwf	___ftdiv@f1,f,c
  7158  0026E0  502D               	movf	___ftdiv@f2+1,w,c
  7159  0026E2  5A2A               	subwfb	___ftdiv@f1+1,f,c
  7160  0026E4  502E               	movf	___ftdiv@f2+2,w,c
  7161  0026E6  5A2B               	subwfb	___ftdiv@f1+2,f,c
  7162  0026E8  8033               	bsf	___ftdiv@f3,0,c
  7163  0026EA                     l869:
  7164  0026EA  90D8               	bcf	status,0,c
  7165  0026EC  3629               	rlcf	___ftdiv@f1,f,c
  7166  0026EE  362A               	rlcf	___ftdiv@f1+1,f,c
  7167  0026F0  362B               	rlcf	___ftdiv@f1+2,f,c
  7168  0026F2  2E32               	decfsz	___ftdiv@cntr,f,c
  7169  0026F4  D7E7               	goto	l4250
  7170  0026F6  C033  F00F         	movff	___ftdiv@f3,___ftpack@arg
  7171  0026FA  C034  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7172  0026FE  C035  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7173  002702  C036  F012         	movff	___ftdiv@exp,___ftpack@exp
  7174  002706  C037  F013         	movff	___ftdiv@sign,___ftpack@sign
  7175  00270A  EC8E  F013         	call	___ftpack	;wreg free
  7176  00270E  C00F  F029         	movff	?___ftpack,?___ftdiv
  7177  002712  C010  F02A         	movff	?___ftpack+1,?___ftdiv+1
  7178  002716  C011  F02B         	movff	?___ftpack+2,?___ftdiv+2
  7179  00271A  0012               	return	
  7180  00271C                     __end_of___ftdiv:
  7181                           	opt stack 0
  7182                           tblptru	equ	0xFF8
  7183                           tblptrh	equ	0xFF7
  7184                           tblptrl	equ	0xFF6
  7185                           tablat	equ	0xFF5
  7186                           prodh	equ	0xFF4
  7187                           prodl	equ	0xFF3
  7188                           intcon	equ	0xFF2
  7189                           postinc0	equ	0xFEE
  7190                           wreg	equ	0xFE8
  7191                           indf1	equ	0xFE7
  7192                           postinc1	equ	0xFE6
  7193                           postdec1	equ	0xFE5
  7194                           fsr1h	equ	0xFE2
  7195                           fsr1l	equ	0xFE1
  7196                           indf2	equ	0xFDF
  7197                           postinc2	equ	0xFDE
  7198                           postdec2	equ	0xFDD
  7199                           plusw2	equ	0xFDB
  7200                           fsr2h	equ	0xFDA
  7201                           fsr2l	equ	0xFD9
  7202                           status	equ	0xFD8
  7203                           
  7204 ;; *************** function ___ftpack *****************
  7205 ;; Defined at:
  7206 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  arg             3   14[COMRAM] unsigned um
  7209 ;;  exp             1   17[COMRAM] unsigned char 
  7210 ;;  sign            1   18[COMRAM] unsigned char 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;		None
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  3   14[COMRAM] float 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2, status,0
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7222 ;;      Params:         5       0       0       0       0       0       0       0       0
  7223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7224 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7225 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7226 ;;Total ram usage:        8 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    1
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		___altoft
  7233 ;;		___ftadd
  7234 ;;		___ftdiv
  7235 ;;		___ftmul
  7236 ;;		___lwtoft
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text39
  7241  00271C                     __ptext39:
  7242                           	opt stack 0
  7243  00271C                     ___ftpack:
  7244                           	opt stack 25
  7245                           
  7246                           ;incstack = 0
  7247  00271C  5012               	movf	___ftpack@exp,w,c
  7248  00271E  B4D8               	btfsc	status,2,c
  7249  002720  D005               	goto	l3936
  7250  002722  500F               	movf	___ftpack@arg,w,c
  7251  002724  1010               	iorwf	___ftpack@arg+1,w,c
  7252  002726  1011               	iorwf	___ftpack@arg+2,w,c
  7253  002728  A4D8               	btfss	status,2,c
  7254  00272A  D00C               	goto	l3942
  7255  00272C                     l3936:
  7256  00272C  0E00               	movlw	0
  7257  00272E  6E0F               	movwf	?___ftpack,c
  7258  002730  0E00               	movlw	0
  7259  002732  6E10               	movwf	?___ftpack+1,c
  7260  002734  0E00               	movlw	0
  7261  002736  6E11               	movwf	?___ftpack+2,c
  7262  002738  0012               	return	
  7263  00273A                     l3940:
  7264  00273A  2A12               	incf	___ftpack@exp,f,c
  7265  00273C  90D8               	bcf	status,0,c
  7266  00273E  3211               	rrcf	___ftpack@arg+2,f,c
  7267  002740  3210               	rrcf	___ftpack@arg+1,f,c
  7268  002742  320F               	rrcf	___ftpack@arg,f,c
  7269  002744                     l3942:
  7270  002744  0E00               	movlw	0
  7271  002746  140F               	andwf	___ftpack@arg,w,c
  7272  002748  6E14               	movwf	??___ftpack& (0+255),c
  7273  00274A  0E00               	movlw	0
  7274  00274C  1410               	andwf	___ftpack@arg+1,w,c
  7275  00274E  6E15               	movwf	(??___ftpack+1)& (0+255),c
  7276  002750  0EFE               	movlw	254
  7277  002752  1411               	andwf	___ftpack@arg+2,w,c
  7278  002754  6E16               	movwf	(??___ftpack+2)& (0+255),c
  7279  002756  5014               	movf	??___ftpack,w,c
  7280  002758  1015               	iorwf	??___ftpack+1,w,c
  7281  00275A  1016               	iorwf	??___ftpack+2,w,c
  7282  00275C  B4D8               	btfsc	status,2,c
  7283  00275E  D00C               	goto	l3948
  7284  002760  D7EC               	goto	l3940
  7285  002762                     l3944:
  7286  002762  2A12               	incf	___ftpack@exp,f,c
  7287  002764  0E01               	movlw	1
  7288  002766  260F               	addwf	___ftpack@arg,f,c
  7289  002768  0E00               	movlw	0
  7290  00276A  2210               	addwfc	___ftpack@arg+1,f,c
  7291  00276C  0E00               	movlw	0
  7292  00276E  2211               	addwfc	___ftpack@arg+2,f,c
  7293  002770  90D8               	bcf	status,0,c
  7294  002772  3211               	rrcf	___ftpack@arg+2,f,c
  7295  002774  3210               	rrcf	___ftpack@arg+1,f,c
  7296  002776  320F               	rrcf	___ftpack@arg,f,c
  7297  002778                     l3948:
  7298  002778  0E00               	movlw	0
  7299  00277A  140F               	andwf	___ftpack@arg,w,c
  7300  00277C  6E14               	movwf	??___ftpack& (0+255),c
  7301  00277E  0E00               	movlw	0
  7302  002780  1410               	andwf	___ftpack@arg+1,w,c
  7303  002782  6E15               	movwf	(??___ftpack+1)& (0+255),c
  7304  002784  0EFF               	movlw	255
  7305  002786  1411               	andwf	___ftpack@arg+2,w,c
  7306  002788  6E16               	movwf	(??___ftpack+2)& (0+255),c
  7307  00278A  5014               	movf	??___ftpack,w,c
  7308  00278C  1015               	iorwf	??___ftpack+1,w,c
  7309  00278E  1016               	iorwf	??___ftpack+2,w,c
  7310  002790  B4D8               	btfsc	status,2,c
  7311  002792  D006               	goto	l3952
  7312  002794  D7E6               	goto	l3944
  7313  002796                     l3950:
  7314  002796  0612               	decf	___ftpack@exp,f,c
  7315  002798  90D8               	bcf	status,0,c
  7316  00279A  360F               	rlcf	___ftpack@arg,f,c
  7317  00279C  3610               	rlcf	___ftpack@arg+1,f,c
  7318  00279E  3611               	rlcf	___ftpack@arg+2,f,c
  7319  0027A0                     l3952:
  7320  0027A0  BE10               	btfsc	___ftpack@arg+1,7,c
  7321  0027A2  D003               	goto	l786
  7322  0027A4  0E02               	movlw	2
  7323  0027A6  6012               	cpfslt	___ftpack@exp,c
  7324  0027A8  D7F6               	goto	l3950
  7325  0027AA                     l786:
  7326  0027AA  A012               	btfss	___ftpack@exp,0,c
  7327  0027AC  9E10               	bcf	___ftpack@arg+1,7,c
  7328  0027AE  90D8               	bcf	status,0,c
  7329  0027B0  3212               	rrcf	___ftpack@exp,f,c
  7330  0027B2  5012               	movf	___ftpack@exp,w,c
  7331  0027B4  1211               	iorwf	___ftpack@arg+2,f,c
  7332  0027B6  5013               	movf	___ftpack@sign,w,c
  7333  0027B8  A4D8               	btfss	status,2,c
  7334  0027BA  8E11               	bsf	___ftpack@arg+2,7,c
  7335  0027BC  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  7336  0027C0  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  7337  0027C4  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  7338  0027C8  0012               	return	
  7339  0027CA                     __end_of___ftpack:
  7340                           	opt stack 0
  7341                           tblptru	equ	0xFF8
  7342                           tblptrh	equ	0xFF7
  7343                           tblptrl	equ	0xFF6
  7344                           tablat	equ	0xFF5
  7345                           prodh	equ	0xFF4
  7346                           prodl	equ	0xFF3
  7347                           intcon	equ	0xFF2
  7348                           postinc0	equ	0xFEE
  7349                           wreg	equ	0xFE8
  7350                           indf1	equ	0xFE7
  7351                           postinc1	equ	0xFE6
  7352                           postdec1	equ	0xFE5
  7353                           fsr1h	equ	0xFE2
  7354                           fsr1l	equ	0xFE1
  7355                           indf2	equ	0xFDF
  7356                           postinc2	equ	0xFDE
  7357                           postdec2	equ	0xFDD
  7358                           plusw2	equ	0xFDB
  7359                           fsr2h	equ	0xFDA
  7360                           fsr2l	equ	0xFD9
  7361                           status	equ	0xFD8
  7362                           
  7363 ;; *************** function _SetChanADC *****************
  7364 ;; Defined at:
  7365 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcsetch.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  channel         1    wreg     unsigned char 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  channel         1   15[COMRAM] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7379 ;;      Params:         0       0       0       0       0       0       0       0       0
  7380 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7381 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7382 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7383 ;;Total ram usage:        2 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    1
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_convert
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text40
  7394  002F72                     __ptext40:
  7395                           	opt stack 0
  7396  002F72                     _SetChanADC:
  7397                           	opt stack 28
  7398                           
  7399                           ;incstack = 0
  7400                           ;SetChanADC@channel stored from wreg
  7401  002F72  6E10               	movwf	SetChanADC@channel,c
  7402  002F74  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  7403  002F78  0EC3               	movlw	195
  7404  002F7A  160F               	andwf	??_SetChanADC,f,c
  7405  002F7C  90D8               	bcf	status,0,c
  7406  002F7E  3010               	rrcf	SetChanADC@channel,w,c
  7407  002F80  0B3C               	andlw	60
  7408  002F82  100F               	iorwf	??_SetChanADC,w,c
  7409  002F84  6EC2               	movwf	4034,c	;volatile
  7410  002F86  0012               	return		;funcret
  7411  002F88                     __end_of_SetChanADC:
  7412                           	opt stack 0
  7413                           tblptru	equ	0xFF8
  7414                           tblptrh	equ	0xFF7
  7415                           tblptrl	equ	0xFF6
  7416                           tablat	equ	0xFF5
  7417                           prodh	equ	0xFF4
  7418                           prodl	equ	0xFF3
  7419                           intcon	equ	0xFF2
  7420                           postinc0	equ	0xFEE
  7421                           wreg	equ	0xFE8
  7422                           indf1	equ	0xFE7
  7423                           postinc1	equ	0xFE6
  7424                           postdec1	equ	0xFE5
  7425                           fsr1h	equ	0xFE2
  7426                           fsr1l	equ	0xFE1
  7427                           indf2	equ	0xFDF
  7428                           postinc2	equ	0xFDE
  7429                           postdec2	equ	0xFDD
  7430                           plusw2	equ	0xFDB
  7431                           fsr2h	equ	0xFDA
  7432                           fsr2l	equ	0xFD9
  7433                           status	equ	0xFD8
  7434                           
  7435 ;; *************** function _ReadADC *****************
  7436 ;; Defined at:
  7437 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcread.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  2   14[COMRAM] int 
  7444 ;; Registers used:
  7445 ;;		wreg, status,2
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7451 ;;      Params:         2       0       0       0       0       0       0       0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7453 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7454 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7455 ;;Total ram usage:        4 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; Hardware stack levels required when called:    1
  7458 ;; This function calls:
  7459 ;;		Nothing
  7460 ;; This function is called by:
  7461 ;;		_convert
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text41
  7466  002FB6                     __ptext41:
  7467                           	opt stack 0
  7468  002FB6                     _ReadADC:
  7469                           	opt stack 28
  7470                           
  7471                           ;incstack = 0
  7472  002FB6  50C4               	movf	4036,w,c	;volatile
  7473  002FB8  6E11               	movwf	??_ReadADC& (0+255),c
  7474  002FBA  50C3               	movf	4035,w,c	;volatile
  7475  002FBC  6E0F               	movwf	?_ReadADC,c
  7476  002FBE  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  7477  002FC2  0012               	return	
  7478  002FC4                     __end_of_ReadADC:
  7479                           	opt stack 0
  7480                           tblptru	equ	0xFF8
  7481                           tblptrh	equ	0xFF7
  7482                           tblptrl	equ	0xFF6
  7483                           tablat	equ	0xFF5
  7484                           prodh	equ	0xFF4
  7485                           prodl	equ	0xFF3
  7486                           intcon	equ	0xFF2
  7487                           postinc0	equ	0xFEE
  7488                           wreg	equ	0xFE8
  7489                           indf1	equ	0xFE7
  7490                           postinc1	equ	0xFE6
  7491                           postdec1	equ	0xFE5
  7492                           fsr1h	equ	0xFE2
  7493                           fsr1l	equ	0xFE1
  7494                           indf2	equ	0xFDF
  7495                           postinc2	equ	0xFDE
  7496                           postdec2	equ	0xFDD
  7497                           plusw2	equ	0xFDB
  7498                           fsr2h	equ	0xFDA
  7499                           fsr2l	equ	0xFD9
  7500                           status	equ	0xFD8
  7501                           
  7502 ;; *************** function _ConvertADC *****************
  7503 ;; Defined at:
  7504 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcconv.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;		None
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;		None
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1    wreg      void 
  7511 ;; Registers used:
  7512 ;;		None
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7518 ;;      Params:         0       0       0       0       0       0       0       0       0
  7519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7521 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7522 ;;Total ram usage:        0 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; Hardware stack levels required when called:    1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_convert
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text42
  7533  002FE6                     __ptext42:
  7534                           	opt stack 0
  7535  002FE6                     _ConvertADC:
  7536                           	opt stack 28
  7537                           
  7538                           ;incstack = 0
  7539  002FE6  82C2               	bsf	4034,1,c	;volatile
  7540  002FE8  0012               	return		;funcret
  7541  002FEA                     __end_of_ConvertADC:
  7542                           	opt stack 0
  7543                           tblptru	equ	0xFF8
  7544                           tblptrh	equ	0xFF7
  7545                           tblptrl	equ	0xFF6
  7546                           tablat	equ	0xFF5
  7547                           prodh	equ	0xFF4
  7548                           prodl	equ	0xFF3
  7549                           intcon	equ	0xFF2
  7550                           postinc0	equ	0xFEE
  7551                           wreg	equ	0xFE8
  7552                           indf1	equ	0xFE7
  7553                           postinc1	equ	0xFE6
  7554                           postdec1	equ	0xFE5
  7555                           fsr1h	equ	0xFE2
  7556                           fsr1l	equ	0xFE1
  7557                           indf2	equ	0xFDF
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           plusw2	equ	0xFDB
  7561                           fsr2h	equ	0xFDA
  7562                           fsr2l	equ	0xFD9
  7563                           status	equ	0xFD8
  7564                           
  7565 ;; *************** function _BusyADC *****************
  7566 ;; Defined at:
  7567 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcbusy.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      unsigned char 
  7574 ;; Registers used:
  7575 ;;		wreg
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7585 ;;Total ram usage:        0 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    1
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_convert
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text43
  7596  002FC4                     __ptext43:
  7597                           	opt stack 0
  7598  002FC4                     _BusyADC:
  7599                           	opt stack 28
  7600                           
  7601                           ;incstack = 0
  7602  002FC4  A2C2               	btfss	4034,1,c	;volatile
  7603  002FC6  D002               	goto	u2930
  7604  002FC8  0E01               	movlw	1
  7605  002FCA  0012               	return	
  7606  002FCC                     u2930:
  7607  002FCC  0E00               	movlw	0
  7608  002FCE  0012               	return	
  7609  002FD0                     __end_of_BusyADC:
  7610                           	opt stack 0
  7611                           tblptru	equ	0xFF8
  7612                           tblptrh	equ	0xFF7
  7613                           tblptrl	equ	0xFF6
  7614                           tablat	equ	0xFF5
  7615                           prodh	equ	0xFF4
  7616                           prodl	equ	0xFF3
  7617                           intcon	equ	0xFF2
  7618                           postinc0	equ	0xFEE
  7619                           wreg	equ	0xFE8
  7620                           indf1	equ	0xFE7
  7621                           postinc1	equ	0xFE6
  7622                           postdec1	equ	0xFE5
  7623                           fsr1h	equ	0xFE2
  7624                           fsr1l	equ	0xFE1
  7625                           indf2	equ	0xFDF
  7626                           postinc2	equ	0xFDE
  7627                           postdec2	equ	0xFDD
  7628                           plusw2	equ	0xFDB
  7629                           fsr2h	equ	0xFDA
  7630                           fsr2l	equ	0xFD9
  7631                           status	equ	0xFD8
  7632                           
  7633 ;; *************** function _checa_botao *****************
  7634 ;; Defined at:
  7635 ;;		line 86 in file "display_LCD.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  Relogio         2   18[COMRAM] PTR struct .
  7638 ;;		 -> Relogio(6), 
  7639 ;;  Despertador     2   20[COMRAM] PTR struct .
  7640 ;;		 -> Despertador(6), 
  7641 ;;  Calendario      2   22[COMRAM] PTR struct .
  7642 ;;		 -> Calendario(6), 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;		None
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7654 ;;      Params:         6       0       0       0       0       0       0       0       0
  7655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7656 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7657 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7658 ;;Total ram usage:       10 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:    2
  7661 ;; This function calls:
  7662 ;;		_controla_despertador
  7663 ;; This function is called by:
  7664 ;;		_main
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text44
  7669  0008A8                     __ptext44:
  7670                           	opt stack 0
  7671  0008A8                     _checa_botao:
  7672                           	opt stack 28
  7673                           
  7674                           ;display_LCD.c: 89: if(PORTDbits.RD0==1){
  7675                           
  7676                           ;incstack = 0
  7677  0008A8  A083               	btfss	3971,0,c	;volatile
  7678  0008AA  D014               	goto	l3450
  7679                           
  7680                           ;display_LCD.c: 90: _delay((unsigned long)((180)*(20000000/4000.0)));
  7681  0008AC  0E05               	movlw	5
  7682  0008AE  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7683  0008B0  0E91               	movlw	145
  7684  0008B2  6E19               	movwf	??_checa_botao& (0+255),c
  7685  0008B4  0ED0               	movlw	208
  7686  0008B6                     u5137:
  7687  0008B6  2EE8               	decfsz	wreg,f,c
  7688  0008B8  D7FE               	bra	u5137
  7689  0008BA  2E19               	decfsz	??_checa_botao& (0+255),f,c
  7690  0008BC  D7FC               	bra	u5137
  7691  0008BE  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  7692  0008C0  D7FA               	bra	u5137
  7693                           
  7694                           ;display_LCD.c: 91: tela_exibida++;
  7695  0008C2  0100               	movlb	0	; () banked
  7696  0008C4  4BB3               	infsnz	_tela_exibida& (0+255),f,b
  7697  0008C6  2BB4               	incf	(_tela_exibida+1)& (0+255),f,b
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;display_LCD.c: 92: cursor=0;
  7701  0008C8  0E00               	movlw	0
  7702  0008CA  6E4A               	movwf	_cursor+1,c
  7703  0008CC  0E00               	movlw	0
  7704  0008CE  6E49               	movwf	_cursor,c
  7705  0008D0                     l120:
  7706  0008D0  B083               	btfsc	3971,0,c	;volatile
  7707  0008D2  D7FE               	goto	l120
  7708  0008D4                     l3450:
  7709                           
  7710                           ;display_LCD.c: 94: }
  7711                           ;display_LCD.c: 95: if(tela_exibida>3) tela_exibida=0;
  7712  0008D4  0100               	movlb	0	; () banked
  7713  0008D6  BFB4               	btfsc	(_tela_exibida+1)& (0+255),7,b
  7714  0008D8  D00D               	goto	l3454
  7715  0008DA  0100               	movlb	0	; () banked
  7716  0008DC  51B4               	movf	(_tela_exibida+1)& (0+255),w,b
  7717  0008DE  E105               	bnz	u3380
  7718  0008E0  0E04               	movlw	4
  7719  0008E2  0100               	movlb	0	; () banked
  7720  0008E4  5DB3               	subwf	_tela_exibida& (0+255),w,b
  7721  0008E6  A0D8               	btfss	status,0,c
  7722  0008E8  D005               	goto	l3454
  7723  0008EA                     u3380:
  7724                           
  7725                           ; BSR set to: 0
  7726  0008EA  0E00               	movlw	0
  7727  0008EC  0100               	movlb	0	; () banked
  7728  0008EE  6FB4               	movwf	(_tela_exibida+1)& (0+255),b
  7729  0008F0  0E00               	movlw	0
  7730  0008F2  6FB3               	movwf	_tela_exibida& (0+255),b
  7731  0008F4                     l3454:
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;display_LCD.c: 98: if(PORTDbits.RD1==1){
  7735  0008F4  A283               	btfss	3971,1,c	;volatile
  7736  0008F6  D18C               	goto	l124
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;display_LCD.c: 99: _delay((unsigned long)((180)*(20000000/4000.0)));
  7740  0008F8  0E05               	movlw	5
  7741  0008FA  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7742  0008FC  0E91               	movlw	145
  7743  0008FE  6E19               	movwf	??_checa_botao& (0+255),c
  7744  000900  0ED0               	movlw	208
  7745  000902                     u5147:
  7746  000902  2EE8               	decfsz	wreg,f,c
  7747  000904  D7FE               	bra	u5147
  7748  000906  2E19               	decfsz	??_checa_botao& (0+255),f,c
  7749  000908  D7FC               	bra	u5147
  7750  00090A  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  7751  00090C  D7FA               	bra	u5147
  7752                           
  7753                           ;display_LCD.c: 101: if(tela_exibida==0){
  7754  00090E  0100               	movlb	0	; () banked
  7755  000910  51B3               	movf	_tela_exibida& (0+255),w,b
  7756  000912  0100               	movlb	0	; () banked
  7757  000914  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  7758  000916  A4D8               	btfss	status,2,c
  7759  000918  D0F4               	goto	l3508
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;display_LCD.c: 102: if(cursor==0) Relogio->hora=Relogio->hora+10;
  7763  00091A  5049               	movf	_cursor,w,c
  7764  00091C  104A               	iorwf	_cursor+1,w,c
  7765  00091E  A4D8               	btfss	status,2,c
  7766  000920  D018               	goto	l3464
  7767                           
  7768                           ; BSR set to: 0
  7769  000922  EE20 F004          	lfsr	2,4
  7770  000926  5013               	movf	checa_botao@Relogio,w,c
  7771  000928  26D9               	addwf	fsr2l,f,c
  7772  00092A  5014               	movf	checa_botao@Relogio+1,w,c
  7773  00092C  22DA               	addwfc	fsr2h,f,c
  7774  00092E  CFDE F019          	movff	postinc2,??_checa_botao
  7775  000932  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7776  000936  0E0A               	movlw	10
  7777  000938  2619               	addwf	??_checa_botao,f,c
  7778  00093A  0E00               	movlw	0
  7779  00093C  221A               	addwfc	??_checa_botao+1,f,c
  7780  00093E  EE20 F004          	lfsr	2,4
  7781  000942  5013               	movf	checa_botao@Relogio,w,c
  7782  000944  26D9               	addwf	fsr2l,f,c
  7783  000946  5014               	movf	checa_botao@Relogio+1,w,c
  7784  000948  22DA               	addwfc	fsr2h,f,c
  7785  00094A  C019  FFDE         	movff	??_checa_botao,postinc2
  7786  00094E  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7787  000952                     l3464:
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;display_LCD.c: 103: if(cursor==1) Relogio->hora++;
  7791  000952  0449               	decf	_cursor,w,c
  7792  000954  104A               	iorwf	_cursor+1,w,c
  7793  000956  A4D8               	btfss	status,2,c
  7794  000958  D009               	goto	l3468
  7795                           
  7796                           ; BSR set to: 0
  7797  00095A  EE20 F004          	lfsr	2,4
  7798  00095E  5013               	movf	checa_botao@Relogio,w,c
  7799  000960  26D9               	addwf	fsr2l,f,c
  7800  000962  5014               	movf	checa_botao@Relogio+1,w,c
  7801  000964  22DA               	addwfc	fsr2h,f,c
  7802  000966  2ADE               	incf	postinc2,f,c
  7803  000968  0E00               	movlw	0
  7804  00096A  22DD               	addwfc	postdec2,f,c
  7805  00096C                     l3468:
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;display_LCD.c: 104: if(cursor==2) Relogio->minuto=Relogio->minuto+10;
  7809  00096C  0E02               	movlw	2
  7810  00096E  1849               	xorwf	_cursor,w,c
  7811  000970  104A               	iorwf	_cursor+1,w,c
  7812  000972  A4D8               	btfss	status,2,c
  7813  000974  D014               	goto	l3472
  7814                           
  7815                           ; BSR set to: 0
  7816  000976  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7817  00097A  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7818  00097E  CFDE F019          	movff	postinc2,??_checa_botao
  7819  000982  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7820  000986  0E0A               	movlw	10
  7821  000988  2619               	addwf	??_checa_botao,f,c
  7822  00098A  0E00               	movlw	0
  7823  00098C  221A               	addwfc	??_checa_botao+1,f,c
  7824  00098E  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7825  000992  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7826  000996  C019  FFDE         	movff	??_checa_botao,postinc2
  7827  00099A  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7828  00099E                     l3472:
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;display_LCD.c: 105: if(cursor==3) Relogio->minuto++;
  7832  00099E  0E03               	movlw	3
  7833  0009A0  1849               	xorwf	_cursor,w,c
  7834  0009A2  104A               	iorwf	_cursor+1,w,c
  7835  0009A4  A4D8               	btfss	status,2,c
  7836  0009A6  D007               	goto	l3476
  7837                           
  7838                           ; BSR set to: 0
  7839  0009A8  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7840  0009AC  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7841  0009B0  2ADE               	incf	postinc2,f,c
  7842  0009B2  0E00               	movlw	0
  7843  0009B4  22DD               	addwfc	postdec2,f,c
  7844  0009B6                     l3476:
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;display_LCD.c: 106: if(cursor==4) Relogio->segundo=Relogio->segundo+10;
  7848  0009B6  0E04               	movlw	4
  7849  0009B8  1849               	xorwf	_cursor,w,c
  7850  0009BA  104A               	iorwf	_cursor+1,w,c
  7851  0009BC  A4D8               	btfss	status,2,c
  7852  0009BE  D018               	goto	l3480
  7853                           
  7854                           ; BSR set to: 0
  7855  0009C0  EE20 F002          	lfsr	2,2
  7856  0009C4  5013               	movf	checa_botao@Relogio,w,c
  7857  0009C6  26D9               	addwf	fsr2l,f,c
  7858  0009C8  5014               	movf	checa_botao@Relogio+1,w,c
  7859  0009CA  22DA               	addwfc	fsr2h,f,c
  7860  0009CC  CFDE F019          	movff	postinc2,??_checa_botao
  7861  0009D0  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7862  0009D4  0E0A               	movlw	10
  7863  0009D6  2619               	addwf	??_checa_botao,f,c
  7864  0009D8  0E00               	movlw	0
  7865  0009DA  221A               	addwfc	??_checa_botao+1,f,c
  7866  0009DC  EE20 F002          	lfsr	2,2
  7867  0009E0  5013               	movf	checa_botao@Relogio,w,c
  7868  0009E2  26D9               	addwf	fsr2l,f,c
  7869  0009E4  5014               	movf	checa_botao@Relogio+1,w,c
  7870  0009E6  22DA               	addwfc	fsr2h,f,c
  7871  0009E8  C019  FFDE         	movff	??_checa_botao,postinc2
  7872  0009EC  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7873  0009F0                     l3480:
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;display_LCD.c: 107: if(cursor==5) Relogio->segundo++;
  7877  0009F0  0E05               	movlw	5
  7878  0009F2  1849               	xorwf	_cursor,w,c
  7879  0009F4  104A               	iorwf	_cursor+1,w,c
  7880  0009F6  A4D8               	btfss	status,2,c
  7881  0009F8  D009               	goto	l3484
  7882                           
  7883                           ; BSR set to: 0
  7884  0009FA  EE20 F002          	lfsr	2,2
  7885  0009FE  5013               	movf	checa_botao@Relogio,w,c
  7886  000A00  26D9               	addwf	fsr2l,f,c
  7887  000A02  5014               	movf	checa_botao@Relogio+1,w,c
  7888  000A04  22DA               	addwfc	fsr2h,f,c
  7889  000A06  2ADE               	incf	postinc2,f,c
  7890  000A08  0E00               	movlw	0
  7891  000A0A  22DD               	addwfc	postdec2,f,c
  7892  000A0C                     l3484:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;display_LCD.c: 108: if(cursor==6) Calendario->dia=Calendario->dia+10;
  7896  000A0C  0E06               	movlw	6
  7897  000A0E  1849               	xorwf	_cursor,w,c
  7898  000A10  104A               	iorwf	_cursor+1,w,c
  7899  000A12  A4D8               	btfss	status,2,c
  7900  000A14  D014               	goto	l3488
  7901                           
  7902                           ; BSR set to: 0
  7903  000A16  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7904  000A1A  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7905  000A1E  CFDE F019          	movff	postinc2,??_checa_botao
  7906  000A22  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7907  000A26  0E0A               	movlw	10
  7908  000A28  2619               	addwf	??_checa_botao,f,c
  7909  000A2A  0E00               	movlw	0
  7910  000A2C  221A               	addwfc	??_checa_botao+1,f,c
  7911  000A2E  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7912  000A32  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7913  000A36  C019  FFDE         	movff	??_checa_botao,postinc2
  7914  000A3A  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7915  000A3E                     l3488:
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;display_LCD.c: 109: if(cursor==7) Calendario->dia++;
  7919  000A3E  0E07               	movlw	7
  7920  000A40  1849               	xorwf	_cursor,w,c
  7921  000A42  104A               	iorwf	_cursor+1,w,c
  7922  000A44  A4D8               	btfss	status,2,c
  7923  000A46  D007               	goto	l3492
  7924                           
  7925                           ; BSR set to: 0
  7926  000A48  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7927  000A4C  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7928  000A50  2ADE               	incf	postinc2,f,c
  7929  000A52  0E00               	movlw	0
  7930  000A54  22DD               	addwfc	postdec2,f,c
  7931  000A56                     l3492:
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;display_LCD.c: 110: if(cursor==8) Calendario->mes=Calendario->mes+10;
  7935  000A56  0E08               	movlw	8
  7936  000A58  1849               	xorwf	_cursor,w,c
  7937  000A5A  104A               	iorwf	_cursor+1,w,c
  7938  000A5C  A4D8               	btfss	status,2,c
  7939  000A5E  D018               	goto	l3496
  7940                           
  7941                           ; BSR set to: 0
  7942  000A60  EE20 F002          	lfsr	2,2
  7943  000A64  5017               	movf	checa_botao@Calendario,w,c
  7944  000A66  26D9               	addwf	fsr2l,f,c
  7945  000A68  5018               	movf	checa_botao@Calendario+1,w,c
  7946  000A6A  22DA               	addwfc	fsr2h,f,c
  7947  000A6C  CFDE F019          	movff	postinc2,??_checa_botao
  7948  000A70  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7949  000A74  0E0A               	movlw	10
  7950  000A76  2619               	addwf	??_checa_botao,f,c
  7951  000A78  0E00               	movlw	0
  7952  000A7A  221A               	addwfc	??_checa_botao+1,f,c
  7953  000A7C  EE20 F002          	lfsr	2,2
  7954  000A80  5017               	movf	checa_botao@Calendario,w,c
  7955  000A82  26D9               	addwf	fsr2l,f,c
  7956  000A84  5018               	movf	checa_botao@Calendario+1,w,c
  7957  000A86  22DA               	addwfc	fsr2h,f,c
  7958  000A88  C019  FFDE         	movff	??_checa_botao,postinc2
  7959  000A8C  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7960  000A90                     l3496:
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;display_LCD.c: 111: if(cursor==9) Calendario->mes++;
  7964  000A90  0E09               	movlw	9
  7965  000A92  1849               	xorwf	_cursor,w,c
  7966  000A94  104A               	iorwf	_cursor+1,w,c
  7967  000A96  A4D8               	btfss	status,2,c
  7968  000A98  D009               	goto	l3500
  7969                           
  7970                           ; BSR set to: 0
  7971  000A9A  EE20 F002          	lfsr	2,2
  7972  000A9E  5017               	movf	checa_botao@Calendario,w,c
  7973  000AA0  26D9               	addwf	fsr2l,f,c
  7974  000AA2  5018               	movf	checa_botao@Calendario+1,w,c
  7975  000AA4  22DA               	addwfc	fsr2h,f,c
  7976  000AA6  2ADE               	incf	postinc2,f,c
  7977  000AA8  0E00               	movlw	0
  7978  000AAA  22DD               	addwfc	postdec2,f,c
  7979  000AAC                     l3500:
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;display_LCD.c: 112: if(cursor==10) Calendario->ano=Calendario->ano+10;
  7983  000AAC  0E0A               	movlw	10
  7984  000AAE  1849               	xorwf	_cursor,w,c
  7985  000AB0  104A               	iorwf	_cursor+1,w,c
  7986  000AB2  A4D8               	btfss	status,2,c
  7987  000AB4  D018               	goto	l3504
  7988                           
  7989                           ; BSR set to: 0
  7990  000AB6  EE20 F004          	lfsr	2,4
  7991  000ABA  5017               	movf	checa_botao@Calendario,w,c
  7992  000ABC  26D9               	addwf	fsr2l,f,c
  7993  000ABE  5018               	movf	checa_botao@Calendario+1,w,c
  7994  000AC0  22DA               	addwfc	fsr2h,f,c
  7995  000AC2  CFDE F019          	movff	postinc2,??_checa_botao
  7996  000AC6  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7997  000ACA  0E0A               	movlw	10
  7998  000ACC  2619               	addwf	??_checa_botao,f,c
  7999  000ACE  0E00               	movlw	0
  8000  000AD0  221A               	addwfc	??_checa_botao+1,f,c
  8001  000AD2  EE20 F004          	lfsr	2,4
  8002  000AD6  5017               	movf	checa_botao@Calendario,w,c
  8003  000AD8  26D9               	addwf	fsr2l,f,c
  8004  000ADA  5018               	movf	checa_botao@Calendario+1,w,c
  8005  000ADC  22DA               	addwfc	fsr2h,f,c
  8006  000ADE  C019  FFDE         	movff	??_checa_botao,postinc2
  8007  000AE2  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  8008  000AE6                     l3504:
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;display_LCD.c: 113: if(cursor==11) Calendario->ano++;
  8012  000AE6  0E0B               	movlw	11
  8013  000AE8  1849               	xorwf	_cursor,w,c
  8014  000AEA  104A               	iorwf	_cursor+1,w,c
  8015  000AEC  A4D8               	btfss	status,2,c
  8016  000AEE  D009               	goto	l3508
  8017                           
  8018                           ; BSR set to: 0
  8019  000AF0  EE20 F004          	lfsr	2,4
  8020  000AF4  5017               	movf	checa_botao@Calendario,w,c
  8021  000AF6  26D9               	addwf	fsr2l,f,c
  8022  000AF8  5018               	movf	checa_botao@Calendario+1,w,c
  8023  000AFA  22DA               	addwfc	fsr2h,f,c
  8024  000AFC  2ADE               	incf	postinc2,f,c
  8025  000AFE  0E00               	movlw	0
  8026  000B00  22DD               	addwfc	postdec2,f,c
  8027  000B02                     l3508:
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;display_LCD.c: 114: }
  8031                           ;display_LCD.c: 116: if(tela_exibida==1){
  8032  000B02  0100               	movlb	0	; () banked
  8033  000B04  05B3               	decf	_tela_exibida& (0+255),w,b
  8034  000B06  0100               	movlb	0	; () banked
  8035  000B08  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  8036  000B0A  A4D8               	btfss	status,2,c
  8037  000B0C  D07F               	goto	l145
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;display_LCD.c: 117: if(cursor==0) Despertador->hora=Despertador->hora+10;
  8041  000B0E  5049               	movf	_cursor,w,c
  8042  000B10  104A               	iorwf	_cursor+1,w,c
  8043  000B12  A4D8               	btfss	status,2,c
  8044  000B14  D018               	goto	l3514
  8045                           
  8046                           ; BSR set to: 0
  8047  000B16  EE20 F004          	lfsr	2,4
  8048  000B1A  5015               	movf	checa_botao@Despertador,w,c
  8049  000B1C  26D9               	addwf	fsr2l,f,c
  8050  000B1E  5016               	movf	checa_botao@Despertador+1,w,c
  8051  000B20  22DA               	addwfc	fsr2h,f,c
  8052  000B22  CFDE F019          	movff	postinc2,??_checa_botao
  8053  000B26  CFDD F01A          	movff	postdec2,??_checa_botao+1
  8054  000B2A  0E0A               	movlw	10
  8055  000B2C  2619               	addwf	??_checa_botao,f,c
  8056  000B2E  0E00               	movlw	0
  8057  000B30  221A               	addwfc	??_checa_botao+1,f,c
  8058  000B32  EE20 F004          	lfsr	2,4
  8059  000B36  5015               	movf	checa_botao@Despertador,w,c
  8060  000B38  26D9               	addwf	fsr2l,f,c
  8061  000B3A  5016               	movf	checa_botao@Despertador+1,w,c
  8062  000B3C  22DA               	addwfc	fsr2h,f,c
  8063  000B3E  C019  FFDE         	movff	??_checa_botao,postinc2
  8064  000B42  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  8065  000B46                     l3514:
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;display_LCD.c: 118: if(cursor==1) Despertador->hora++;
  8069  000B46  0449               	decf	_cursor,w,c
  8070  000B48  104A               	iorwf	_cursor+1,w,c
  8071  000B4A  A4D8               	btfss	status,2,c
  8072  000B4C  D009               	goto	l3518
  8073                           
  8074                           ; BSR set to: 0
  8075  000B4E  EE20 F004          	lfsr	2,4
  8076  000B52  5015               	movf	checa_botao@Despertador,w,c
  8077  000B54  26D9               	addwf	fsr2l,f,c
  8078  000B56  5016               	movf	checa_botao@Despertador+1,w,c
  8079  000B58  22DA               	addwfc	fsr2h,f,c
  8080  000B5A  2ADE               	incf	postinc2,f,c
  8081  000B5C  0E00               	movlw	0
  8082  000B5E  22DD               	addwfc	postdec2,f,c
  8083  000B60                     l3518:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;display_LCD.c: 119: if(cursor==2) Despertador->minuto=Despertador->minuto+10;
  8087  000B60  0E02               	movlw	2
  8088  000B62  1849               	xorwf	_cursor,w,c
  8089  000B64  104A               	iorwf	_cursor+1,w,c
  8090  000B66  A4D8               	btfss	status,2,c
  8091  000B68  D014               	goto	l3522
  8092                           
  8093                           ; BSR set to: 0
  8094  000B6A  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  8095  000B6E  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  8096  000B72  CFDE F019          	movff	postinc2,??_checa_botao
  8097  000B76  CFDD F01A          	movff	postdec2,??_checa_botao+1
  8098  000B7A  0E0A               	movlw	10
  8099  000B7C  2619               	addwf	??_checa_botao,f,c
  8100  000B7E  0E00               	movlw	0
  8101  000B80  221A               	addwfc	??_checa_botao+1,f,c
  8102  000B82  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  8103  000B86  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  8104  000B8A  C019  FFDE         	movff	??_checa_botao,postinc2
  8105  000B8E  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  8106  000B92                     l3522:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;display_LCD.c: 120: if(cursor==3) Despertador->minuto++;
  8110  000B92  0E03               	movlw	3
  8111  000B94  1849               	xorwf	_cursor,w,c
  8112  000B96  104A               	iorwf	_cursor+1,w,c
  8113  000B98  A4D8               	btfss	status,2,c
  8114  000B9A  D007               	goto	l3526
  8115                           
  8116                           ; BSR set to: 0
  8117  000B9C  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  8118  000BA0  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  8119  000BA4  2ADE               	incf	postinc2,f,c
  8120  000BA6  0E00               	movlw	0
  8121  000BA8  22DD               	addwfc	postdec2,f,c
  8122  000BAA                     l3526:
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;display_LCD.c: 121: if(cursor==4) Despertador->segundo=Despertador->segundo+10;
  8126  000BAA  0E04               	movlw	4
  8127  000BAC  1849               	xorwf	_cursor,w,c
  8128  000BAE  104A               	iorwf	_cursor+1,w,c
  8129  000BB0  A4D8               	btfss	status,2,c
  8130  000BB2  D018               	goto	l3530
  8131                           
  8132                           ; BSR set to: 0
  8133  000BB4  EE20 F002          	lfsr	2,2
  8134  000BB8  5015               	movf	checa_botao@Despertador,w,c
  8135  000BBA  26D9               	addwf	fsr2l,f,c
  8136  000BBC  5016               	movf	checa_botao@Despertador+1,w,c
  8137  000BBE  22DA               	addwfc	fsr2h,f,c
  8138  000BC0  CFDE F019          	movff	postinc2,??_checa_botao
  8139  000BC4  CFDD F01A          	movff	postdec2,??_checa_botao+1
  8140  000BC8  0E0A               	movlw	10
  8141  000BCA  2619               	addwf	??_checa_botao,f,c
  8142  000BCC  0E00               	movlw	0
  8143  000BCE  221A               	addwfc	??_checa_botao+1,f,c
  8144  000BD0  EE20 F002          	lfsr	2,2
  8145  000BD4  5015               	movf	checa_botao@Despertador,w,c
  8146  000BD6  26D9               	addwf	fsr2l,f,c
  8147  000BD8  5016               	movf	checa_botao@Despertador+1,w,c
  8148  000BDA  22DA               	addwfc	fsr2h,f,c
  8149  000BDC  C019  FFDE         	movff	??_checa_botao,postinc2
  8150  000BE0  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  8151  000BE4                     l3530:
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;display_LCD.c: 122: if(cursor==5) Despertador->segundo++;
  8155  000BE4  0E05               	movlw	5
  8156  000BE6  1849               	xorwf	_cursor,w,c
  8157  000BE8  104A               	iorwf	_cursor+1,w,c
  8158  000BEA  A4D8               	btfss	status,2,c
  8159  000BEC  D009               	goto	l3534
  8160                           
  8161                           ; BSR set to: 0
  8162  000BEE  EE20 F002          	lfsr	2,2
  8163  000BF2  5015               	movf	checa_botao@Despertador,w,c
  8164  000BF4  26D9               	addwf	fsr2l,f,c
  8165  000BF6  5016               	movf	checa_botao@Despertador+1,w,c
  8166  000BF8  22DA               	addwfc	fsr2h,f,c
  8167  000BFA  2ADE               	incf	postinc2,f,c
  8168  000BFC  0E00               	movlw	0
  8169  000BFE  22DD               	addwfc	postdec2,f,c
  8170  000C00                     l3534:
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;display_LCD.c: 123: controla_despertador(Despertador);
  8174  000C00  C015  F00F         	movff	checa_botao@Despertador,controla_despertador@Despertador
  8175  000C04  C016  F010         	movff	checa_botao@Despertador+1,controla_despertador@Despertador+1
  8176  000C08  EC87  F00F         	call	_controla_despertador	;wreg free
  8177  000C0C                     l145:
  8178  000C0C  B283               	btfsc	3971,1,c	;volatile
  8179  000C0E  D7FE               	goto	l145
  8180  000C10                     l124:
  8181                           
  8182                           ;display_LCD.c: 127: }
  8183                           ;display_LCD.c: 130: if(PORTDbits.RD2==1){
  8184  000C10  A483               	btfss	3971,2,c	;volatile
  8185  000C12  D1B0               	goto	l148
  8186                           
  8187                           ;display_LCD.c: 131: _delay((unsigned long)((180)*(20000000/4000.0)));
  8188  000C14  0E05               	movlw	5
  8189  000C16  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8190  000C18  0E91               	movlw	145
  8191  000C1A  6E19               	movwf	??_checa_botao& (0+255),c
  8192  000C1C  0ED0               	movlw	208
  8193  000C1E                     u5157:
  8194  000C1E  2EE8               	decfsz	wreg,f,c
  8195  000C20  D7FE               	bra	u5157
  8196  000C22  2E19               	decfsz	??_checa_botao& (0+255),f,c
  8197  000C24  D7FC               	bra	u5157
  8198  000C26  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  8199  000C28  D7FA               	bra	u5157
  8200                           
  8201                           ;display_LCD.c: 133: if(tela_exibida==0){
  8202  000C2A  0100               	movlb	0	; () banked
  8203  000C2C  51B3               	movf	_tela_exibida& (0+255),w,b
  8204  000C2E  0100               	movlb	0	; () banked
  8205  000C30  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  8206  000C32  A4D8               	btfss	status,2,c
  8207  000C34  D10C               	goto	l3588
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;display_LCD.c: 134: if(cursor==0) Relogio->hora=Relogio->hora-10;
  8211  000C36  5049               	movf	_cursor,w,c
  8212  000C38  104A               	iorwf	_cursor+1,w,c
  8213  000C3A  A4D8               	btfss	status,2,c
  8214  000C3C  D01C               	goto	l3544
  8215                           
  8216                           ; BSR set to: 0
  8217  000C3E  0EF6               	movlw	246
  8218  000C40  6E19               	movwf	??_checa_botao& (0+255),c
  8219  000C42  0EFF               	movlw	255
  8220  000C44  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8221  000C46  EE20 F004          	lfsr	2,4
  8222  000C4A  5013               	movf	checa_botao@Relogio,w,c
  8223  000C4C  26D9               	addwf	fsr2l,f,c
  8224  000C4E  5014               	movf	checa_botao@Relogio+1,w,c
  8225  000C50  22DA               	addwfc	fsr2h,f,c
  8226  000C52  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8227  000C56  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8228  000C5A  5019               	movf	??_checa_botao,w,c
  8229  000C5C  261B               	addwf	??_checa_botao+2,f,c
  8230  000C5E  501A               	movf	??_checa_botao+1,w,c
  8231  000C60  221C               	addwfc	??_checa_botao+3,f,c
  8232  000C62  EE20 F004          	lfsr	2,4
  8233  000C66  5013               	movf	checa_botao@Relogio,w,c
  8234  000C68  26D9               	addwf	fsr2l,f,c
  8235  000C6A  5014               	movf	checa_botao@Relogio+1,w,c
  8236  000C6C  22DA               	addwfc	fsr2h,f,c
  8237  000C6E  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8238  000C72  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8239  000C76                     l3544:
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;display_LCD.c: 135: if(cursor==1) Relogio->hora--;
  8243  000C76  0449               	decf	_cursor,w,c
  8244  000C78  104A               	iorwf	_cursor+1,w,c
  8245  000C7A  A4D8               	btfss	status,2,c
  8246  000C7C  D009               	goto	l3548
  8247                           
  8248                           ; BSR set to: 0
  8249  000C7E  EE20 F004          	lfsr	2,4
  8250  000C82  5013               	movf	checa_botao@Relogio,w,c
  8251  000C84  26D9               	addwf	fsr2l,f,c
  8252  000C86  5014               	movf	checa_botao@Relogio+1,w,c
  8253  000C88  22DA               	addwfc	fsr2h,f,c
  8254  000C8A  06DE               	decf	postinc2,f,c
  8255  000C8C  0E00               	movlw	0
  8256  000C8E  5ADD               	subwfb	postdec2,f,c
  8257  000C90                     l3548:
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;display_LCD.c: 136: if(cursor==2) Relogio->minuto=Relogio->minuto-10;
  8261  000C90  0E02               	movlw	2
  8262  000C92  1849               	xorwf	_cursor,w,c
  8263  000C94  104A               	iorwf	_cursor+1,w,c
  8264  000C96  A4D8               	btfss	status,2,c
  8265  000C98  D018               	goto	l3552
  8266                           
  8267                           ; BSR set to: 0
  8268  000C9A  0EF6               	movlw	246
  8269  000C9C  6E19               	movwf	??_checa_botao& (0+255),c
  8270  000C9E  0EFF               	movlw	255
  8271  000CA0  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8272  000CA2  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  8273  000CA6  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  8274  000CAA  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8275  000CAE  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8276  000CB2  5019               	movf	??_checa_botao,w,c
  8277  000CB4  261B               	addwf	??_checa_botao+2,f,c
  8278  000CB6  501A               	movf	??_checa_botao+1,w,c
  8279  000CB8  221C               	addwfc	??_checa_botao+3,f,c
  8280  000CBA  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  8281  000CBE  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  8282  000CC2  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8283  000CC6  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8284  000CCA                     l3552:
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;display_LCD.c: 137: if(cursor==3) Relogio->minuto--;
  8288  000CCA  0E03               	movlw	3
  8289  000CCC  1849               	xorwf	_cursor,w,c
  8290  000CCE  104A               	iorwf	_cursor+1,w,c
  8291  000CD0  A4D8               	btfss	status,2,c
  8292  000CD2  D007               	goto	l3556
  8293                           
  8294                           ; BSR set to: 0
  8295  000CD4  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  8296  000CD8  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  8297  000CDC  06DE               	decf	postinc2,f,c
  8298  000CDE  0E00               	movlw	0
  8299  000CE0  5ADD               	subwfb	postdec2,f,c
  8300  000CE2                     l3556:
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;display_LCD.c: 138: if(cursor==4) Relogio->segundo=Relogio->segundo-10;
  8304  000CE2  0E04               	movlw	4
  8305  000CE4  1849               	xorwf	_cursor,w,c
  8306  000CE6  104A               	iorwf	_cursor+1,w,c
  8307  000CE8  A4D8               	btfss	status,2,c
  8308  000CEA  D01C               	goto	l3560
  8309                           
  8310                           ; BSR set to: 0
  8311  000CEC  0EF6               	movlw	246
  8312  000CEE  6E19               	movwf	??_checa_botao& (0+255),c
  8313  000CF0  0EFF               	movlw	255
  8314  000CF2  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8315  000CF4  EE20 F002          	lfsr	2,2
  8316  000CF8  5013               	movf	checa_botao@Relogio,w,c
  8317  000CFA  26D9               	addwf	fsr2l,f,c
  8318  000CFC  5014               	movf	checa_botao@Relogio+1,w,c
  8319  000CFE  22DA               	addwfc	fsr2h,f,c
  8320  000D00  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8321  000D04  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8322  000D08  5019               	movf	??_checa_botao,w,c
  8323  000D0A  261B               	addwf	??_checa_botao+2,f,c
  8324  000D0C  501A               	movf	??_checa_botao+1,w,c
  8325  000D0E  221C               	addwfc	??_checa_botao+3,f,c
  8326  000D10  EE20 F002          	lfsr	2,2
  8327  000D14  5013               	movf	checa_botao@Relogio,w,c
  8328  000D16  26D9               	addwf	fsr2l,f,c
  8329  000D18  5014               	movf	checa_botao@Relogio+1,w,c
  8330  000D1A  22DA               	addwfc	fsr2h,f,c
  8331  000D1C  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8332  000D20  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8333  000D24                     l3560:
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;display_LCD.c: 139: if(cursor==5) Relogio->segundo--;
  8337  000D24  0E05               	movlw	5
  8338  000D26  1849               	xorwf	_cursor,w,c
  8339  000D28  104A               	iorwf	_cursor+1,w,c
  8340  000D2A  A4D8               	btfss	status,2,c
  8341  000D2C  D009               	goto	l3564
  8342                           
  8343                           ; BSR set to: 0
  8344  000D2E  EE20 F002          	lfsr	2,2
  8345  000D32  5013               	movf	checa_botao@Relogio,w,c
  8346  000D34  26D9               	addwf	fsr2l,f,c
  8347  000D36  5014               	movf	checa_botao@Relogio+1,w,c
  8348  000D38  22DA               	addwfc	fsr2h,f,c
  8349  000D3A  06DE               	decf	postinc2,f,c
  8350  000D3C  0E00               	movlw	0
  8351  000D3E  5ADD               	subwfb	postdec2,f,c
  8352  000D40                     l3564:
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;display_LCD.c: 140: if(cursor==6) Calendario->dia=Calendario->dia-10;
  8356  000D40  0E06               	movlw	6
  8357  000D42  1849               	xorwf	_cursor,w,c
  8358  000D44  104A               	iorwf	_cursor+1,w,c
  8359  000D46  A4D8               	btfss	status,2,c
  8360  000D48  D018               	goto	l3568
  8361                           
  8362                           ; BSR set to: 0
  8363  000D4A  0EF6               	movlw	246
  8364  000D4C  6E19               	movwf	??_checa_botao& (0+255),c
  8365  000D4E  0EFF               	movlw	255
  8366  000D50  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8367  000D52  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  8368  000D56  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  8369  000D5A  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8370  000D5E  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8371  000D62  5019               	movf	??_checa_botao,w,c
  8372  000D64  261B               	addwf	??_checa_botao+2,f,c
  8373  000D66  501A               	movf	??_checa_botao+1,w,c
  8374  000D68  221C               	addwfc	??_checa_botao+3,f,c
  8375  000D6A  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  8376  000D6E  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  8377  000D72  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8378  000D76  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8379  000D7A                     l3568:
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;display_LCD.c: 141: if(cursor==7) Calendario->dia--;
  8383  000D7A  0E07               	movlw	7
  8384  000D7C  1849               	xorwf	_cursor,w,c
  8385  000D7E  104A               	iorwf	_cursor+1,w,c
  8386  000D80  A4D8               	btfss	status,2,c
  8387  000D82  D007               	goto	l3572
  8388                           
  8389                           ; BSR set to: 0
  8390  000D84  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  8391  000D88  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  8392  000D8C  06DE               	decf	postinc2,f,c
  8393  000D8E  0E00               	movlw	0
  8394  000D90  5ADD               	subwfb	postdec2,f,c
  8395  000D92                     l3572:
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;display_LCD.c: 142: if(cursor==8) Calendario->mes=Calendario->mes-10;
  8399  000D92  0E08               	movlw	8
  8400  000D94  1849               	xorwf	_cursor,w,c
  8401  000D96  104A               	iorwf	_cursor+1,w,c
  8402  000D98  A4D8               	btfss	status,2,c
  8403  000D9A  D01C               	goto	l3576
  8404                           
  8405                           ; BSR set to: 0
  8406  000D9C  0EF6               	movlw	246
  8407  000D9E  6E19               	movwf	??_checa_botao& (0+255),c
  8408  000DA0  0EFF               	movlw	255
  8409  000DA2  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8410  000DA4  EE20 F002          	lfsr	2,2
  8411  000DA8  5017               	movf	checa_botao@Calendario,w,c
  8412  000DAA  26D9               	addwf	fsr2l,f,c
  8413  000DAC  5018               	movf	checa_botao@Calendario+1,w,c
  8414  000DAE  22DA               	addwfc	fsr2h,f,c
  8415  000DB0  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8416  000DB4  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8417  000DB8  5019               	movf	??_checa_botao,w,c
  8418  000DBA  261B               	addwf	??_checa_botao+2,f,c
  8419  000DBC  501A               	movf	??_checa_botao+1,w,c
  8420  000DBE  221C               	addwfc	??_checa_botao+3,f,c
  8421  000DC0  EE20 F002          	lfsr	2,2
  8422  000DC4  5017               	movf	checa_botao@Calendario,w,c
  8423  000DC6  26D9               	addwf	fsr2l,f,c
  8424  000DC8  5018               	movf	checa_botao@Calendario+1,w,c
  8425  000DCA  22DA               	addwfc	fsr2h,f,c
  8426  000DCC  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8427  000DD0  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8428  000DD4                     l3576:
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;display_LCD.c: 143: if(cursor==9) Calendario->mes--;
  8432  000DD4  0E09               	movlw	9
  8433  000DD6  1849               	xorwf	_cursor,w,c
  8434  000DD8  104A               	iorwf	_cursor+1,w,c
  8435  000DDA  A4D8               	btfss	status,2,c
  8436  000DDC  D009               	goto	l3580
  8437                           
  8438                           ; BSR set to: 0
  8439  000DDE  EE20 F002          	lfsr	2,2
  8440  000DE2  5017               	movf	checa_botao@Calendario,w,c
  8441  000DE4  26D9               	addwf	fsr2l,f,c
  8442  000DE6  5018               	movf	checa_botao@Calendario+1,w,c
  8443  000DE8  22DA               	addwfc	fsr2h,f,c
  8444  000DEA  06DE               	decf	postinc2,f,c
  8445  000DEC  0E00               	movlw	0
  8446  000DEE  5ADD               	subwfb	postdec2,f,c
  8447  000DF0                     l3580:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;display_LCD.c: 144: if(cursor==10) Calendario->ano=Calendario->ano-10;
  8451  000DF0  0E0A               	movlw	10
  8452  000DF2  1849               	xorwf	_cursor,w,c
  8453  000DF4  104A               	iorwf	_cursor+1,w,c
  8454  000DF6  A4D8               	btfss	status,2,c
  8455  000DF8  D01C               	goto	l3584
  8456                           
  8457                           ; BSR set to: 0
  8458  000DFA  0EF6               	movlw	246
  8459  000DFC  6E19               	movwf	??_checa_botao& (0+255),c
  8460  000DFE  0EFF               	movlw	255
  8461  000E00  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8462  000E02  EE20 F004          	lfsr	2,4
  8463  000E06  5017               	movf	checa_botao@Calendario,w,c
  8464  000E08  26D9               	addwf	fsr2l,f,c
  8465  000E0A  5018               	movf	checa_botao@Calendario+1,w,c
  8466  000E0C  22DA               	addwfc	fsr2h,f,c
  8467  000E0E  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8468  000E12  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8469  000E16  5019               	movf	??_checa_botao,w,c
  8470  000E18  261B               	addwf	??_checa_botao+2,f,c
  8471  000E1A  501A               	movf	??_checa_botao+1,w,c
  8472  000E1C  221C               	addwfc	??_checa_botao+3,f,c
  8473  000E1E  EE20 F004          	lfsr	2,4
  8474  000E22  5017               	movf	checa_botao@Calendario,w,c
  8475  000E24  26D9               	addwf	fsr2l,f,c
  8476  000E26  5018               	movf	checa_botao@Calendario+1,w,c
  8477  000E28  22DA               	addwfc	fsr2h,f,c
  8478  000E2A  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8479  000E2E  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8480  000E32                     l3584:
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;display_LCD.c: 145: if(cursor==11) Calendario->ano--;
  8484  000E32  0E0B               	movlw	11
  8485  000E34  1849               	xorwf	_cursor,w,c
  8486  000E36  104A               	iorwf	_cursor+1,w,c
  8487  000E38  A4D8               	btfss	status,2,c
  8488  000E3A  D009               	goto	l3588
  8489                           
  8490                           ; BSR set to: 0
  8491  000E3C  EE20 F004          	lfsr	2,4
  8492  000E40  5017               	movf	checa_botao@Calendario,w,c
  8493  000E42  26D9               	addwf	fsr2l,f,c
  8494  000E44  5018               	movf	checa_botao@Calendario+1,w,c
  8495  000E46  22DA               	addwfc	fsr2h,f,c
  8496  000E48  06DE               	decf	postinc2,f,c
  8497  000E4A  0E00               	movlw	0
  8498  000E4C  5ADD               	subwfb	postdec2,f,c
  8499  000E4E                     l3588:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;display_LCD.c: 146: }
  8503                           ;display_LCD.c: 148: if(tela_exibida==1){
  8504  000E4E  0100               	movlb	0	; () banked
  8505  000E50  05B3               	decf	_tela_exibida& (0+255),w,b
  8506  000E52  0100               	movlb	0	; () banked
  8507  000E54  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  8508  000E56  A4D8               	btfss	status,2,c
  8509  000E58  D08B               	goto	l169
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;display_LCD.c: 149: if(cursor==0) Despertador->hora=Despertador->hora-10;
  8513  000E5A  5049               	movf	_cursor,w,c
  8514  000E5C  104A               	iorwf	_cursor+1,w,c
  8515  000E5E  A4D8               	btfss	status,2,c
  8516  000E60  D01C               	goto	l3594
  8517                           
  8518                           ; BSR set to: 0
  8519  000E62  0EF6               	movlw	246
  8520  000E64  6E19               	movwf	??_checa_botao& (0+255),c
  8521  000E66  0EFF               	movlw	255
  8522  000E68  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8523  000E6A  EE20 F004          	lfsr	2,4
  8524  000E6E  5015               	movf	checa_botao@Despertador,w,c
  8525  000E70  26D9               	addwf	fsr2l,f,c
  8526  000E72  5016               	movf	checa_botao@Despertador+1,w,c
  8527  000E74  22DA               	addwfc	fsr2h,f,c
  8528  000E76  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8529  000E7A  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8530  000E7E  5019               	movf	??_checa_botao,w,c
  8531  000E80  261B               	addwf	??_checa_botao+2,f,c
  8532  000E82  501A               	movf	??_checa_botao+1,w,c
  8533  000E84  221C               	addwfc	??_checa_botao+3,f,c
  8534  000E86  EE20 F004          	lfsr	2,4
  8535  000E8A  5015               	movf	checa_botao@Despertador,w,c
  8536  000E8C  26D9               	addwf	fsr2l,f,c
  8537  000E8E  5016               	movf	checa_botao@Despertador+1,w,c
  8538  000E90  22DA               	addwfc	fsr2h,f,c
  8539  000E92  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8540  000E96  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8541  000E9A                     l3594:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;display_LCD.c: 150: if(cursor==1) Despertador->hora--;
  8545  000E9A  0449               	decf	_cursor,w,c
  8546  000E9C  104A               	iorwf	_cursor+1,w,c
  8547  000E9E  A4D8               	btfss	status,2,c
  8548  000EA0  D009               	goto	l3598
  8549                           
  8550                           ; BSR set to: 0
  8551  000EA2  EE20 F004          	lfsr	2,4
  8552  000EA6  5015               	movf	checa_botao@Despertador,w,c
  8553  000EA8  26D9               	addwf	fsr2l,f,c
  8554  000EAA  5016               	movf	checa_botao@Despertador+1,w,c
  8555  000EAC  22DA               	addwfc	fsr2h,f,c
  8556  000EAE  06DE               	decf	postinc2,f,c
  8557  000EB0  0E00               	movlw	0
  8558  000EB2  5ADD               	subwfb	postdec2,f,c
  8559  000EB4                     l3598:
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;display_LCD.c: 151: if(cursor==2) Despertador->minuto=Despertador->minuto-10;
  8563  000EB4  0E02               	movlw	2
  8564  000EB6  1849               	xorwf	_cursor,w,c
  8565  000EB8  104A               	iorwf	_cursor+1,w,c
  8566  000EBA  A4D8               	btfss	status,2,c
  8567  000EBC  D018               	goto	l3602
  8568                           
  8569                           ; BSR set to: 0
  8570  000EBE  0EF6               	movlw	246
  8571  000EC0  6E19               	movwf	??_checa_botao& (0+255),c
  8572  000EC2  0EFF               	movlw	255
  8573  000EC4  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8574  000EC6  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  8575  000ECA  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  8576  000ECE  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8577  000ED2  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8578  000ED6  5019               	movf	??_checa_botao,w,c
  8579  000ED8  261B               	addwf	??_checa_botao+2,f,c
  8580  000EDA  501A               	movf	??_checa_botao+1,w,c
  8581  000EDC  221C               	addwfc	??_checa_botao+3,f,c
  8582  000EDE  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  8583  000EE2  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  8584  000EE6  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8585  000EEA  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8586  000EEE                     l3602:
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;display_LCD.c: 152: if(cursor==3) Despertador->minuto--;
  8590  000EEE  0E03               	movlw	3
  8591  000EF0  1849               	xorwf	_cursor,w,c
  8592  000EF2  104A               	iorwf	_cursor+1,w,c
  8593  000EF4  A4D8               	btfss	status,2,c
  8594  000EF6  D007               	goto	l3606
  8595                           
  8596                           ; BSR set to: 0
  8597  000EF8  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  8598  000EFC  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  8599  000F00  06DE               	decf	postinc2,f,c
  8600  000F02  0E00               	movlw	0
  8601  000F04  5ADD               	subwfb	postdec2,f,c
  8602  000F06                     l3606:
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;display_LCD.c: 153: if(cursor==4) Despertador->segundo=Despertador->segundo-10;
  8606  000F06  0E04               	movlw	4
  8607  000F08  1849               	xorwf	_cursor,w,c
  8608  000F0A  104A               	iorwf	_cursor+1,w,c
  8609  000F0C  A4D8               	btfss	status,2,c
  8610  000F0E  D01C               	goto	l3610
  8611                           
  8612                           ; BSR set to: 0
  8613  000F10  0EF6               	movlw	246
  8614  000F12  6E19               	movwf	??_checa_botao& (0+255),c
  8615  000F14  0EFF               	movlw	255
  8616  000F16  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8617  000F18  EE20 F002          	lfsr	2,2
  8618  000F1C  5015               	movf	checa_botao@Despertador,w,c
  8619  000F1E  26D9               	addwf	fsr2l,f,c
  8620  000F20  5016               	movf	checa_botao@Despertador+1,w,c
  8621  000F22  22DA               	addwfc	fsr2h,f,c
  8622  000F24  CFDE F01B          	movff	postinc2,??_checa_botao+2
  8623  000F28  CFDD F01C          	movff	postdec2,??_checa_botao+3
  8624  000F2C  5019               	movf	??_checa_botao,w,c
  8625  000F2E  261B               	addwf	??_checa_botao+2,f,c
  8626  000F30  501A               	movf	??_checa_botao+1,w,c
  8627  000F32  221C               	addwfc	??_checa_botao+3,f,c
  8628  000F34  EE20 F002          	lfsr	2,2
  8629  000F38  5015               	movf	checa_botao@Despertador,w,c
  8630  000F3A  26D9               	addwf	fsr2l,f,c
  8631  000F3C  5016               	movf	checa_botao@Despertador+1,w,c
  8632  000F3E  22DA               	addwfc	fsr2h,f,c
  8633  000F40  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8634  000F44  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8635  000F48                     l3610:
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;display_LCD.c: 154: if(cursor==5) Despertador->segundo--;
  8639  000F48  0E05               	movlw	5
  8640  000F4A  1849               	xorwf	_cursor,w,c
  8641  000F4C  104A               	iorwf	_cursor+1,w,c
  8642  000F4E  A4D8               	btfss	status,2,c
  8643  000F50  D009               	goto	l3614
  8644                           
  8645                           ; BSR set to: 0
  8646  000F52  EE20 F002          	lfsr	2,2
  8647  000F56  5015               	movf	checa_botao@Despertador,w,c
  8648  000F58  26D9               	addwf	fsr2l,f,c
  8649  000F5A  5016               	movf	checa_botao@Despertador+1,w,c
  8650  000F5C  22DA               	addwfc	fsr2h,f,c
  8651  000F5E  06DE               	decf	postinc2,f,c
  8652  000F60  0E00               	movlw	0
  8653  000F62  5ADD               	subwfb	postdec2,f,c
  8654  000F64                     l3614:
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;display_LCD.c: 155: controla_despertador(Despertador);
  8658  000F64  C015  F00F         	movff	checa_botao@Despertador,controla_despertador@Despertador
  8659  000F68  C016  F010         	movff	checa_botao@Despertador+1,controla_despertador@Despertador+1
  8660  000F6C  EC87  F00F         	call	_controla_despertador	;wreg free
  8661  000F70                     l169:
  8662  000F70  B483               	btfsc	3971,2,c	;volatile
  8663  000F72  D7FE               	goto	l169
  8664  000F74                     l148:
  8665                           
  8666                           ;display_LCD.c: 158: }
  8667                           ;display_LCD.c: 161: if(PORTDbits.RD3==1){
  8668  000F74  A683               	btfss	3971,3,c	;volatile
  8669  000F76  0012               	return	
  8670                           
  8671                           ;display_LCD.c: 162: _delay((unsigned long)((180)*(20000000/4000.0)));
  8672  000F78  0E05               	movlw	5
  8673  000F7A  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8674  000F7C  0E91               	movlw	145
  8675  000F7E  6E19               	movwf	??_checa_botao& (0+255),c
  8676  000F80  0ED0               	movlw	208
  8677  000F82                     u5167:
  8678  000F82  2EE8               	decfsz	wreg,f,c
  8679  000F84  D7FE               	bra	u5167
  8680  000F86  2E19               	decfsz	??_checa_botao& (0+255),f,c
  8681  000F88  D7FC               	bra	u5167
  8682  000F8A  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  8683  000F8C  D7FA               	bra	u5167
  8684                           
  8685                           ;display_LCD.c: 163: cursor++;
  8686  000F8E  4A49               	infsnz	_cursor,f,c
  8687  000F90  2A4A               	incf	_cursor+1,f,c
  8688                           
  8689                           ;display_LCD.c: 164: if(cursor>11 && tela_exibida==0) cursor=0;
  8690  000F92  BE4A               	btfsc	_cursor+1,7,c
  8691  000F94  D010               	goto	l3624
  8692  000F96  504A               	movf	_cursor+1,w,c
  8693  000F98  E104               	bnz	u3840
  8694  000F9A  0E0C               	movlw	12
  8695  000F9C  5C49               	subwf	_cursor,w,c
  8696  000F9E  A0D8               	btfss	status,0,c
  8697  000FA0  D00A               	goto	l3624
  8698  000FA2                     u3840:
  8699  000FA2  0100               	movlb	0	; () banked
  8700  000FA4  51B3               	movf	_tela_exibida& (0+255),w,b
  8701  000FA6  0100               	movlb	0	; () banked
  8702  000FA8  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  8703  000FAA  A4D8               	btfss	status,2,c
  8704  000FAC  D004               	goto	l3624
  8705                           
  8706                           ; BSR set to: 0
  8707  000FAE  0E00               	movlw	0
  8708  000FB0  6E4A               	movwf	_cursor+1,c
  8709  000FB2  0E00               	movlw	0
  8710  000FB4  6E49               	movwf	_cursor,c
  8711  000FB6                     l3624:
  8712                           
  8713                           ;display_LCD.c: 165: if(cursor>5 && tela_exibida==1) cursor=0;
  8714  000FB6  BE4A               	btfsc	_cursor+1,7,c
  8715  000FB8  D010               	goto	l175
  8716  000FBA  504A               	movf	_cursor+1,w,c
  8717  000FBC  E104               	bnz	u3860
  8718  000FBE  0E06               	movlw	6
  8719  000FC0  5C49               	subwf	_cursor,w,c
  8720  000FC2  A0D8               	btfss	status,0,c
  8721  000FC4  D00A               	goto	l175
  8722  000FC6                     u3860:
  8723  000FC6  0100               	movlb	0	; () banked
  8724  000FC8  05B3               	decf	_tela_exibida& (0+255),w,b
  8725  000FCA  0100               	movlb	0	; () banked
  8726  000FCC  11B4               	iorwf	(_tela_exibida+1)& (0+255),w,b
  8727  000FCE  A4D8               	btfss	status,2,c
  8728  000FD0  D004               	goto	l175
  8729                           
  8730                           ; BSR set to: 0
  8731  000FD2  0E00               	movlw	0
  8732  000FD4  6E4A               	movwf	_cursor+1,c
  8733  000FD6  0E00               	movlw	0
  8734  000FD8  6E49               	movwf	_cursor,c
  8735  000FDA                     l175:
  8736  000FDA  A683               	btfss	3971,3,c	;volatile
  8737  000FDC  0012               	return	
  8738  000FDE  D7FD               	goto	l175
  8739  000FE0                     __end_of_checa_botao:
  8740                           	opt stack 0
  8741                           tblptru	equ	0xFF8
  8742                           tblptrh	equ	0xFF7
  8743                           tblptrl	equ	0xFF6
  8744                           tablat	equ	0xFF5
  8745                           prodh	equ	0xFF4
  8746                           prodl	equ	0xFF3
  8747                           intcon	equ	0xFF2
  8748                           postinc0	equ	0xFEE
  8749                           wreg	equ	0xFE8
  8750                           indf1	equ	0xFE7
  8751                           postinc1	equ	0xFE6
  8752                           postdec1	equ	0xFE5
  8753                           fsr1h	equ	0xFE2
  8754                           fsr1l	equ	0xFE1
  8755                           indf2	equ	0xFDF
  8756                           postinc2	equ	0xFDE
  8757                           postdec2	equ	0xFDD
  8758                           plusw2	equ	0xFDB
  8759                           fsr2h	equ	0xFDA
  8760                           fsr2l	equ	0xFD9
  8761                           status	equ	0xFD8
  8762                           
  8763 ;; *************** function _controla_despertador *****************
  8764 ;; Defined at:
  8765 ;;		line 61 in file "relogio.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  Despertador     2   14[COMRAM] PTR struct .
  8768 ;;		 -> Despertador(6), 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8780 ;;      Params:         2       0       0       0       0       0       0       0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8782 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8783 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8784 ;;Total ram usage:        4 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    1
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_checa_botao
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text45
  8795  001F0E                     __ptext45:
  8796                           	opt stack 0
  8797  001F0E                     _controla_despertador:
  8798                           	opt stack 28
  8799                           
  8800                           ;relogio.c: 62: if(Despertador->segundo>59){
  8801                           
  8802                           ;incstack = 0
  8803  001F0E  EE20 F002          	lfsr	2,2
  8804  001F12  500F               	movf	controla_despertador@Despertador,w,c
  8805  001F14  26D9               	addwf	fsr2l,f,c
  8806  001F16  5010               	movf	controla_despertador@Despertador+1,w,c
  8807  001F18  22DA               	addwfc	fsr2h,f,c
  8808  001F1A  0E01               	movlw	1
  8809  001F1C  BEDB               	btfsc	plusw2,7,c
  8810  001F1E  D018               	goto	l221
  8811  001F20  0E01               	movlw	1
  8812  001F22  50DB               	movf	plusw2,w,c
  8813  001F24  E104               	bnz	u3010
  8814  001F26  0E3C               	movlw	60
  8815  001F28  5CDE               	subwf	postinc2,w,c
  8816  001F2A  A0D8               	btfss	status,0,c
  8817  001F2C  D011               	goto	l221
  8818  001F2E                     u3010:
  8819                           
  8820                           ;relogio.c: 63: Despertador->minuto++;
  8821  001F2E  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8822  001F32  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8823  001F36  2ADE               	incf	postinc2,f,c
  8824  001F38  0E00               	movlw	0
  8825  001F3A  22DD               	addwfc	postdec2,f,c
  8826                           
  8827                           ;relogio.c: 64: Despertador->segundo=0;
  8828  001F3C  EE20 F002          	lfsr	2,2
  8829  001F40  500F               	movf	controla_despertador@Despertador,w,c
  8830  001F42  26D9               	addwf	fsr2l,f,c
  8831  001F44  5010               	movf	controla_despertador@Despertador+1,w,c
  8832  001F46  22DA               	addwfc	fsr2h,f,c
  8833  001F48  0E00               	movlw	0
  8834  001F4A  6EDE               	movwf	postinc2,c
  8835  001F4C  0E00               	movlw	0
  8836  001F4E  6EDD               	movwf	postdec2,c
  8837  001F50                     l221:
  8838                           
  8839                           ;relogio.c: 65: }
  8840                           ;relogio.c: 66: if(Despertador->segundo<0){
  8841  001F50  EE20 F002          	lfsr	2,2
  8842  001F54  500F               	movf	controla_despertador@Despertador,w,c
  8843  001F56  26D9               	addwf	fsr2l,f,c
  8844  001F58  5010               	movf	controla_despertador@Despertador+1,w,c
  8845  001F5A  22DA               	addwfc	fsr2h,f,c
  8846  001F5C  0E01               	movlw	1
  8847  001F5E  AEDB               	btfss	plusw2,7,c
  8848  001F60  D011               	goto	l222
  8849                           
  8850                           ;relogio.c: 67: Despertador->segundo=59;
  8851  001F62  EE20 F002          	lfsr	2,2
  8852  001F66  500F               	movf	controla_despertador@Despertador,w,c
  8853  001F68  26D9               	addwf	fsr2l,f,c
  8854  001F6A  5010               	movf	controla_despertador@Despertador+1,w,c
  8855  001F6C  22DA               	addwfc	fsr2h,f,c
  8856  001F6E  0E3B               	movlw	59
  8857  001F70  6EDE               	movwf	postinc2,c
  8858  001F72  0E00               	movlw	0
  8859  001F74  6EDD               	movwf	postdec2,c
  8860                           
  8861                           ;relogio.c: 68: Despertador->minuto--;
  8862  001F76  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8863  001F7A  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8864  001F7E  06DE               	decf	postinc2,f,c
  8865  001F80  0E00               	movlw	0
  8866  001F82  5ADD               	subwfb	postdec2,f,c
  8867  001F84                     l222:
  8868                           
  8869                           ;relogio.c: 69: }
  8870                           ;relogio.c: 71: if(Despertador->minuto>59){
  8871  001F84  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8872  001F88  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8873  001F8C  0E01               	movlw	1
  8874  001F8E  BEDB               	btfsc	plusw2,7,c
  8875  001F90  D018               	goto	l3188
  8876  001F92  0E01               	movlw	1
  8877  001F94  50DB               	movf	plusw2,w,c
  8878  001F96  E104               	bnz	u3030
  8879  001F98  0E3C               	movlw	60
  8880  001F9A  5CDE               	subwf	postinc2,w,c
  8881  001F9C  A0D8               	btfss	status,0,c
  8882  001F9E  D011               	goto	l3188
  8883  001FA0                     u3030:
  8884                           
  8885                           ;relogio.c: 72: Despertador->hora++;
  8886  001FA0  EE20 F004          	lfsr	2,4
  8887  001FA4  500F               	movf	controla_despertador@Despertador,w,c
  8888  001FA6  26D9               	addwf	fsr2l,f,c
  8889  001FA8  5010               	movf	controla_despertador@Despertador+1,w,c
  8890  001FAA  22DA               	addwfc	fsr2h,f,c
  8891  001FAC  2ADE               	incf	postinc2,f,c
  8892  001FAE  0E00               	movlw	0
  8893  001FB0  22DD               	addwfc	postdec2,f,c
  8894                           
  8895                           ;relogio.c: 73: Despertador->minuto=0;
  8896  001FB2  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8897  001FB6  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8898  001FBA  0E00               	movlw	0
  8899  001FBC  6EDE               	movwf	postinc2,c
  8900  001FBE  0E00               	movlw	0
  8901  001FC0  6EDD               	movwf	postdec2,c
  8902  001FC2                     l3188:
  8903                           
  8904                           ;relogio.c: 74: }
  8905                           ;relogio.c: 75: if(Despertador->minuto<0){
  8906  001FC2  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8907  001FC6  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8908  001FCA  0E01               	movlw	1
  8909  001FCC  AEDB               	btfss	plusw2,7,c
  8910  001FCE  D011               	goto	l3194
  8911                           
  8912                           ;relogio.c: 76: Despertador->minuto=59;
  8913  001FD0  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8914  001FD4  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8915  001FD8  0E3B               	movlw	59
  8916  001FDA  6EDE               	movwf	postinc2,c
  8917  001FDC  0E00               	movlw	0
  8918  001FDE  6EDD               	movwf	postdec2,c
  8919                           
  8920                           ;relogio.c: 77: Despertador->hora--;
  8921  001FE0  EE20 F004          	lfsr	2,4
  8922  001FE4  500F               	movf	controla_despertador@Despertador,w,c
  8923  001FE6  26D9               	addwf	fsr2l,f,c
  8924  001FE8  5010               	movf	controla_despertador@Despertador+1,w,c
  8925  001FEA  22DA               	addwfc	fsr2h,f,c
  8926  001FEC  06DE               	decf	postinc2,f,c
  8927  001FEE  0E00               	movlw	0
  8928  001FF0  5ADD               	subwfb	postdec2,f,c
  8929  001FF2                     l3194:
  8930                           
  8931                           ;relogio.c: 78: }
  8932                           ;relogio.c: 80: if(Despertador->hora>23){
  8933  001FF2  EE20 F004          	lfsr	2,4
  8934  001FF6  500F               	movf	controla_despertador@Despertador,w,c
  8935  001FF8  26D9               	addwf	fsr2l,f,c
  8936  001FFA  5010               	movf	controla_despertador@Despertador+1,w,c
  8937  001FFC  22DA               	addwfc	fsr2h,f,c
  8938  001FFE  0E01               	movlw	1
  8939  002000  BEDB               	btfsc	plusw2,7,c
  8940  002002  D011               	goto	l225
  8941  002004  0E01               	movlw	1
  8942  002006  50DB               	movf	plusw2,w,c
  8943  002008  E104               	bnz	u3050
  8944  00200A  0E18               	movlw	24
  8945  00200C  5CDE               	subwf	postinc2,w,c
  8946  00200E  A0D8               	btfss	status,0,c
  8947  002010  D00A               	goto	l225
  8948  002012                     u3050:
  8949                           
  8950                           ;relogio.c: 81: Despertador->hora=0;
  8951  002012  EE20 F004          	lfsr	2,4
  8952  002016  500F               	movf	controla_despertador@Despertador,w,c
  8953  002018  26D9               	addwf	fsr2l,f,c
  8954  00201A  5010               	movf	controla_despertador@Despertador+1,w,c
  8955  00201C  22DA               	addwfc	fsr2h,f,c
  8956  00201E  0E00               	movlw	0
  8957  002020  6EDE               	movwf	postinc2,c
  8958  002022  0E00               	movlw	0
  8959  002024  6EDD               	movwf	postdec2,c
  8960  002026                     l225:
  8961                           
  8962                           ;relogio.c: 82: }
  8963                           ;relogio.c: 83: if(Despertador->hora<0){
  8964  002026  EE20 F004          	lfsr	2,4
  8965  00202A  500F               	movf	controla_despertador@Despertador,w,c
  8966  00202C  26D9               	addwf	fsr2l,f,c
  8967  00202E  5010               	movf	controla_despertador@Despertador+1,w,c
  8968  002030  22DA               	addwfc	fsr2h,f,c
  8969  002032  0E01               	movlw	1
  8970  002034  AEDB               	btfss	plusw2,7,c
  8971  002036  0012               	return	
  8972                           
  8973                           ;relogio.c: 84: Despertador->hora=23;
  8974  002038  EE20 F004          	lfsr	2,4
  8975  00203C  500F               	movf	controla_despertador@Despertador,w,c
  8976  00203E  26D9               	addwf	fsr2l,f,c
  8977  002040  5010               	movf	controla_despertador@Despertador+1,w,c
  8978  002042  22DA               	addwfc	fsr2h,f,c
  8979  002044  0E17               	movlw	23
  8980  002046  6EDE               	movwf	postinc2,c
  8981  002048  0E00               	movlw	0
  8982  00204A  6EDD               	movwf	postdec2,c
  8983  00204C  0012               	return	
  8984  00204E                     __end_of_controla_despertador:
  8985                           	opt stack 0
  8986                           tblptru	equ	0xFF8
  8987                           tblptrh	equ	0xFF7
  8988                           tblptrl	equ	0xFF6
  8989                           tablat	equ	0xFF5
  8990                           prodh	equ	0xFF4
  8991                           prodl	equ	0xFF3
  8992                           intcon	equ	0xFF2
  8993                           postinc0	equ	0xFEE
  8994                           wreg	equ	0xFE8
  8995                           indf1	equ	0xFE7
  8996                           postinc1	equ	0xFE6
  8997                           postdec1	equ	0xFE5
  8998                           fsr1h	equ	0xFE2
  8999                           fsr1l	equ	0xFE1
  9000                           indf2	equ	0xFDF
  9001                           postinc2	equ	0xFDE
  9002                           postdec2	equ	0xFDD
  9003                           plusw2	equ	0xFDB
  9004                           fsr2h	equ	0xFDA
  9005                           fsr2l	equ	0xFD9
  9006                           status	equ	0xFD8
  9007                           
  9008 ;; *************** function _pic_isr *****************
  9009 ;; Defined at:
  9010 ;;		line 134 in file "exercicio_PIC_LCD_AD.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;		None
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      void 
  9017 ;; Registers used:
  9018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9024 ;;      Params:         0       0       0       0       0       0       0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9026 ;;      Temps:         14       0       0       0       0       0       0       0       0
  9027 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9028 ;;Total ram usage:       14 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		Interrupt level 2
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           	psect	intcode
  9038  000008                     __pintcode:
  9039                           	opt stack 0
  9040  000008                     _pic_isr:
  9041                           	opt stack 23
  9042                           
  9043                           ;incstack = 0
  9044  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9045  00000A  EDA4  F012         	call	int_func,f	;refresh shadow registers
  9046                           tblptru	equ	0xFF8
  9047                           tblptrh	equ	0xFF7
  9048                           tblptrl	equ	0xFF6
  9049                           tablat	equ	0xFF5
  9050                           prodh	equ	0xFF4
  9051                           prodl	equ	0xFF3
  9052                           intcon	equ	0xFF2
  9053                           postinc0	equ	0xFEE
  9054                           wreg	equ	0xFE8
  9055                           indf1	equ	0xFE7
  9056                           postinc1	equ	0xFE6
  9057                           postdec1	equ	0xFE5
  9058                           fsr1h	equ	0xFE2
  9059                           fsr1l	equ	0xFE1
  9060                           indf2	equ	0xFDF
  9061                           postinc2	equ	0xFDE
  9062                           postdec2	equ	0xFDD
  9063                           plusw2	equ	0xFDB
  9064                           fsr2h	equ	0xFDA
  9065                           fsr2l	equ	0xFD9
  9066                           status	equ	0xFD8
  9067                           
  9068                           	psect	intcode_body
  9069  002548                     __pintcode_body:
  9070                           	opt stack 23
  9071  002548                     int_func:
  9072                           	opt stack 23
  9073  002548  0006               	pop		; remove dummy address from shadow register refresh
  9074  00254A  CFFA F001          	movff	pclath,??_pic_isr
  9075  00254E  CFFB F002          	movff	pclatu,??_pic_isr+1
  9076  002552  CFE9 F003          	movff	fsr0l,??_pic_isr+2
  9077  002556  CFEA F004          	movff	fsr0h,??_pic_isr+3
  9078  00255A  CFE1 F005          	movff	fsr1l,??_pic_isr+4
  9079  00255E  CFE2 F006          	movff	fsr1h,??_pic_isr+5
  9080  002562  CFD9 F007          	movff	fsr2l,??_pic_isr+6
  9081  002566  CFDA F008          	movff	fsr2h,??_pic_isr+7
  9082  00256A  CFF3 F009          	movff	prodl,??_pic_isr+8
  9083  00256E  CFF4 F00A          	movff	prodh,??_pic_isr+9
  9084  002572  CFF6 F00B          	movff	tblptrl,??_pic_isr+10
  9085  002576  CFF7 F00C          	movff	tblptrh,??_pic_isr+11
  9086  00257A  CFF8 F00D          	movff	tblptru,??_pic_isr+12
  9087  00257E  CFF5 F00E          	movff	tablat,??_pic_isr+13
  9088                           
  9089                           ;exercicio_PIC_LCD_AD.c: 136: if(TMR0IF){
  9090  002582  A4F2               	btfss	intcon,2,c	;volatile
  9091  002584  D00A               	goto	i2l3892
  9092                           
  9093                           ;exercicio_PIC_LCD_AD.c: 137: TMR0=2535;
  9094  002586  0E09               	movlw	9
  9095  002588  6ED7               	movwf	4055,c	;volatile
  9096  00258A  0EE7               	movlw	231
  9097  00258C  6ED6               	movwf	4054,c	;volatile
  9098                           
  9099                           ;exercicio_PIC_LCD_AD.c: 138: INTCONbits.TMR0IF=0;
  9100  00258E  94F2               	bcf	intcon,2,c	;volatile
  9101                           
  9102                           ;exercicio_PIC_LCD_AD.c: 139: contador++;
  9103  002590  0100               	movlb	0	; () banked
  9104  002592  4BB1               	infsnz	_contador& (0+255),f,b
  9105  002594  2BB2               	incf	(_contador+1)& (0+255),f,b
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;exercicio_PIC_LCD_AD.c: 140: flag_time=0;
  9109  002596  0E00               	movlw	0
  9110  002598  6E4F               	movwf	_flag_time,c
  9111  00259A                     i2l3892:
  9112                           
  9113                           ;exercicio_PIC_LCD_AD.c: 141: }
  9114                           ;exercicio_PIC_LCD_AD.c: 143: if(contador>0){
  9115  00259A  0100               	movlb	0	; () banked
  9116  00259C  BFB2               	btfsc	(_contador+1)& (0+255),7,b
  9117  00259E  D00E               	goto	i2l3896
  9118  0025A0  0100               	movlb	0	; () banked
  9119  0025A2  51B2               	movf	(_contador+1)& (0+255),w,b
  9120  0025A4  E104               	bnz	i2u430_40
  9121  0025A6  0100               	movlb	0	; () banked
  9122  0025A8  05B1               	decf	_contador& (0+255),w,b
  9123  0025AA  A0D8               	btfss	status,0,c
  9124  0025AC  D007               	goto	i2l3896
  9125  0025AE                     i2u430_40:
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;exercicio_PIC_LCD_AD.c: 144: flag_time=1;
  9129  0025AE  0E01               	movlw	1
  9130  0025B0  6E4F               	movwf	_flag_time,c
  9131                           
  9132                           ;exercicio_PIC_LCD_AD.c: 145: contador=0;
  9133  0025B2  0E00               	movlw	0
  9134  0025B4  0100               	movlb	0	; () banked
  9135  0025B6  6FB2               	movwf	(_contador+1)& (0+255),b
  9136  0025B8  0E00               	movlw	0
  9137  0025BA  6FB1               	movwf	_contador& (0+255),b
  9138  0025BC                     i2l3896:
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;exercicio_PIC_LCD_AD.c: 146: }
  9142                           ;exercicio_PIC_LCD_AD.c: 149: if(PIR1bits.RCIF == 1){
  9143  0025BC  AA9E               	btfss	3998,5,c	;volatile
  9144  0025BE  D01D               	goto	i2l388
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;exercicio_PIC_LCD_AD.c: 150: if(numero_entrada_terminal<3){
  9148  0025C0  5046               	movf	_numero_entrada_terminal+1,w,c
  9149  0025C2  E111               	bnz	i2l383
  9150  0025C4  0E03               	movlw	3
  9151  0025C6  5C45               	subwf	_numero_entrada_terminal,w,c
  9152  0025C8  B0D8               	btfsc	status,0,c
  9153  0025CA  D00D               	goto	i2l383
  9154  0025CC                     i2l384:
  9155  0025CC  AA9E               	btfss	3998,5,c	;volatile
  9156  0025CE  D7FE               	goto	i2l384
  9157                           
  9158                           ;exercicio_PIC_LCD_AD.c: 152: BUFF_COM[numero_entrada_terminal]= RCREG;
  9159  0025D0  0EA7               	movlw	low _BUFF_COM
  9160  0025D2  2445               	addwf	_numero_entrada_terminal,w,c
  9161  0025D4  6ED9               	movwf	fsr2l,c
  9162  0025D6  0E00               	movlw	high _BUFF_COM
  9163  0025D8  2046               	addwfc	_numero_entrada_terminal+1,w,c
  9164  0025DA  6EDA               	movwf	fsr2h,c
  9165  0025DC  CFAE FFDF          	movff	4014,indf2	;volatile
  9166                           
  9167                           ;exercicio_PIC_LCD_AD.c: 153: numero_entrada_terminal++;
  9168  0025E0  4A45               	infsnz	_numero_entrada_terminal,f,c
  9169  0025E2  2A46               	incf	_numero_entrada_terminal+1,f,c
  9170                           
  9171                           ;exercicio_PIC_LCD_AD.c: 154: }
  9172  0025E4  D00A               	goto	i2l388
  9173  0025E6                     i2l383:
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;exercicio_PIC_LCD_AD.c: 155: else{
  9177                           ;exercicio_PIC_LCD_AD.c: 156: PIR1bits.RCIF=0;
  9178  0025E6  9A9E               	bcf	3998,5,c	;volatile
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;exercicio_PIC_LCD_AD.c: 157: numero_entrada_terminal=0;
  9182  0025E8  0E00               	movlw	0
  9183  0025EA  6E46               	movwf	_numero_entrada_terminal+1,c
  9184  0025EC  0E00               	movlw	0
  9185  0025EE  6E45               	movwf	_numero_entrada_terminal,c
  9186                           
  9187                           ;exercicio_PIC_LCD_AD.c: 158: ESTADO_COMUNICACAO = '1';
  9188  0025F0  0E00               	movlw	0
  9189  0025F2  0100               	movlb	0	; () banked
  9190  0025F4  6FB0               	movwf	(_ESTADO_COMUNICACAO+1)& (0+255),b
  9191  0025F6  0E31               	movlw	49
  9192  0025F8  6FAF               	movwf	_ESTADO_COMUNICACAO& (0+255),b
  9193  0025FA                     i2l388:
  9194  0025FA  C00E  FFF5         	movff	??_pic_isr+13,tablat
  9195  0025FE  C00D  FFF8         	movff	??_pic_isr+12,tblptru
  9196  002602  C00C  FFF7         	movff	??_pic_isr+11,tblptrh
  9197  002606  C00B  FFF6         	movff	??_pic_isr+10,tblptrl
  9198  00260A  C00A  FFF4         	movff	??_pic_isr+9,prodh
  9199  00260E  C009  FFF3         	movff	??_pic_isr+8,prodl
  9200  002612  C008  FFDA         	movff	??_pic_isr+7,fsr2h
  9201  002616  C007  FFD9         	movff	??_pic_isr+6,fsr2l
  9202  00261A  C006  FFE2         	movff	??_pic_isr+5,fsr1h
  9203  00261E  C005  FFE1         	movff	??_pic_isr+4,fsr1l
  9204  002622  C004  FFEA         	movff	??_pic_isr+3,fsr0h
  9205  002626  C003  FFE9         	movff	??_pic_isr+2,fsr0l
  9206  00262A  C002  FFFB         	movff	??_pic_isr+1,pclatu
  9207  00262E  C001  FFFA         	movff	??_pic_isr,pclath
  9208  002632  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9209  002634  0011               	retfie		f
  9210  002636                     __end_of_pic_isr:
  9211                           	opt stack 0
  9212                           pclatu	equ	0xFFB
  9213                           pclath	equ	0xFFA
  9214                           tblptru	equ	0xFF8
  9215                           tblptrh	equ	0xFF7
  9216                           tblptrl	equ	0xFF6
  9217                           tablat	equ	0xFF5
  9218                           prodh	equ	0xFF4
  9219                           prodl	equ	0xFF3
  9220                           intcon	equ	0xFF2
  9221                           postinc0	equ	0xFEE
  9222                           fsr0h	equ	0xFEA
  9223                           fsr0l	equ	0xFE9
  9224                           wreg	equ	0xFE8
  9225                           indf1	equ	0xFE7
  9226                           postinc1	equ	0xFE6
  9227                           postdec1	equ	0xFE5
  9228                           fsr1h	equ	0xFE2
  9229                           fsr1l	equ	0xFE1
  9230                           indf2	equ	0xFDF
  9231                           postinc2	equ	0xFDE
  9232                           postdec2	equ	0xFDD
  9233                           plusw2	equ	0xFDB
  9234                           fsr2h	equ	0xFDA
  9235                           fsr2l	equ	0xFD9
  9236                           status	equ	0xFD8
  9237                           pclatu	equ	0xFFB
  9238                           pclath	equ	0xFFA
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           postinc0	equ	0xFEE
  9247                           fsr0h	equ	0xFEA
  9248                           fsr0l	equ	0xFE9
  9249                           wreg	equ	0xFE8
  9250                           indf1	equ	0xFE7
  9251                           postinc1	equ	0xFE6
  9252                           postdec1	equ	0xFE5
  9253                           fsr1h	equ	0xFE2
  9254                           fsr1l	equ	0xFE1
  9255                           indf2	equ	0xFDF
  9256                           postinc2	equ	0xFDE
  9257                           postdec2	equ	0xFDD
  9258                           plusw2	equ	0xFDB
  9259                           fsr2h	equ	0xFDA
  9260                           fsr2l	equ	0xFD9
  9261                           status	equ	0xFD8
  9262                           
  9263                           	psect	rparam
  9264  0000                     pclatu	equ	0xFFB
  9265                           pclath	equ	0xFFA
  9266                           tblptru	equ	0xFF8
  9267                           tblptrh	equ	0xFF7
  9268                           tblptrl	equ	0xFF6
  9269                           tablat	equ	0xFF5
  9270                           prodh	equ	0xFF4
  9271                           prodl	equ	0xFF3
  9272                           intcon	equ	0xFF2
  9273                           postinc0	equ	0xFEE
  9274                           fsr0h	equ	0xFEA
  9275                           fsr0l	equ	0xFE9
  9276                           wreg	equ	0xFE8
  9277                           indf1	equ	0xFE7
  9278                           postinc1	equ	0xFE6
  9279                           postdec1	equ	0xFE5
  9280                           fsr1h	equ	0xFE2
  9281                           fsr1l	equ	0xFE1
  9282                           indf2	equ	0xFDF
  9283                           postinc2	equ	0xFDE
  9284                           postdec2	equ	0xFDD
  9285                           plusw2	equ	0xFDB
  9286                           fsr2h	equ	0xFDA
  9287                           fsr2l	equ	0xFD9
  9288                           status	equ	0xFD8
  9289                           
  9290                           	psect	temp
  9291  000050                     btemp:
  9292                           	opt stack 0
  9293  000050                     	ds	1
  9294  0000                     int$flags	set	btemp
  9295                           pclatu	equ	0xFFB
  9296                           pclath	equ	0xFFA
  9297                           tblptru	equ	0xFF8
  9298                           tblptrh	equ	0xFF7
  9299                           tblptrl	equ	0xFF6
  9300                           tablat	equ	0xFF5
  9301                           prodh	equ	0xFF4
  9302                           prodl	equ	0xFF3
  9303                           intcon	equ	0xFF2
  9304                           postinc0	equ	0xFEE
  9305                           fsr0h	equ	0xFEA
  9306                           fsr0l	equ	0xFE9
  9307                           wreg	equ	0xFE8
  9308                           indf1	equ	0xFE7
  9309                           postinc1	equ	0xFE6
  9310                           postdec1	equ	0xFE5
  9311                           fsr1h	equ	0xFE2
  9312                           fsr1l	equ	0xFE1
  9313                           indf2	equ	0xFDF
  9314                           postinc2	equ	0xFDE
  9315                           postdec2	equ	0xFDD
  9316                           plusw2	equ	0xFDB
  9317                           fsr2h	equ	0xFDA
  9318                           fsr2l	equ	0xFD9
  9319                           status	equ	0xFD8


Data Sizes:
    Strings     155
    Constant    10
    Data        26
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      79
    BANK0           160     71     155
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> str(BANK0[16]), STR_6(CODE[17]), STR_5(CODE[17]), exibir_lcd@str(BANK0[16]), 
		 -> temperatura_display(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_8(CODE[20]), STR_7(CODE[17]), STR_4(CODE[23]), STR_3(CODE[22]), 
		 -> STR_2(CODE[22]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> str(BANK0[16]), exibir_lcd@str(BANK0[16]), temperatura_display(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    controla_despertador@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(BANK0[6]), 

    tratar_relogio@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(BANK0[6]), 

    tratar_relogio@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(BANK0[6]), 

    checa_botao@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(BANK0[6]), 

    checa_botao@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(BANK0[6]), 

    checa_botao@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(BANK0[6]), 

    exibir_lcd@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(BANK0[6]), 

    exibir_lcd@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(BANK0[6]), 

    exibir_lcd@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(BANK0[6]), 


Critical Paths under _main in COMRAM

    _pisca_cursor->_SetDDRamAddr
    _maquina_estado->_trata_comando
    _maquina_estado->_tx_data
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _gambiarra_pro_serial->_sprintf
    _putrsXLCD->_WriteDataXLCD
    _DelayFor18TCY->_Delay10TCYx
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _floor->___altoft
    ___fttol->___ftmul
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___awdiv->___awmod
    _convert->___ftdiv
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _checa_botao->_controla_despertador

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_exibir_lcd
    _exibir_lcd->_convert_float_to_char
    _convert_float_to_char->_floor

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   44417
                                             69 BANK0      2     2      0
                       _WriteCmdXLCD
                        _checa_botao
                            _convert
                         _exibir_lcd
                           _init_ADC
                          _init_XLCD
                     _maquina_estado
                       _pisca_cursor
                     _tratar_relogio
 ---------------------------------------------------------------------------------
 (1) _tratar_relogio                                      11     7      4     986
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _pisca_cursor                                         0     0      0      66
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _maquina_estado                                       2     2      0      68
                                             16 COMRAM     2     2      0
                      _trata_comando
                            _tx_data
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      68
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trata_comando                                        2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     308
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     220
                                             19 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _exibir_lcd                                          48    42      6   31079
                                             21 BANK0     48    42      6
                       _SetDDRamAddr
                            ___awdiv
                            ___awmod
              _convert_float_to_char
                          _gambiarra
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _gambiarra                                            0     0      0    2727
               _gambiarra_pro_serial
 ---------------------------------------------------------------------------------
 (3) _gambiarra_pro_serial                                 0     0      0    2727
                       _SetDDRamAddr
                       _WriteCmdXLCD
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     645
                                             16 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      66
                                             15 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _convert_float_to_char                               13    10      3   19815
                                              8 BANK0     13    10      3
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                              _floor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    17     16    1950
                                             26 COMRAM    24     8     16
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                8     5      3    8941
                                              0 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     452
                                             14 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     602
                                             40 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     352
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4285
                                             22 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2805
                                             55 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1988
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1992
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _convert                                              1     1      0    9940
                                             55 COMRAM     1     1      0
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
                            ___ftdiv
                            ___ftmul
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2632
                                             22 COMRAM     3     0      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3588
                                             25 COMRAM    15     9      6
                           ___ftpack
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3212
                                             40 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2524
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checa_botao                                         10     4      6    1904
                                             18 COMRAM    10     4      6
               _controla_despertador
 ---------------------------------------------------------------------------------
 (2) _controla_despertador                                 4     2      2     480
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _pic_isr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCmdXLCD
     _DelayFor18TCY
       _Delay10TCYx
   _checa_botao
     _controla_despertador
   _convert
     _BusyADC
     _ConvertADC
     _ReadADC
     _SetChanADC
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
     ___ftmul
       ___ftpack
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
     ___lwdiv
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
   _exibir_lcd
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _convert_float_to_char
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
         ___ftadd
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
         _frexp
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _gambiarra
       _gambiarra_pro_serial
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _WriteCmdXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_ADC
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquina_estado
     _trata_comando
     _tx_data
   _pisca_cursor
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
   _tratar_relogio

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      4F       1       84.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EA      20        0.0%
DATA                 0      0      EA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Nov 19 09:37:47 2019

   __end_of_gambiarra_pro_serial 2A96                     ___altoft@exp 0040  
                  ___altoft@sign 0041                     ___awdiv@sign 001A  
               ??_maquina_estado 0011    __size_of_controla_despertador 0140  
                   ___ftadd@exp1 0022                     ___ftadd@exp2 0021  
                   ___ftadd@sign 0020                              l120 08D0  
                            l210 183A                              l124 0C10  
                            l221 1F50                              l222 1F84  
                            l214 197A                              l206 1756  
                            l207 178A                              l216 1A28  
                            l225 2026                              l145 0C0C  
                            l148 0F74                              l175 0FDA  
                            l343 2E8E                              l169 0F70  
                            l450 2E5E                              l346 2EA8  
                            l338 2E72                              l834 1C5E  
                            l838 1C88                              l849 1D38  
                            l786 27AA                              l858 1D54  
                            l891 2EF2                              l869 26EA  
                            l797 244C                              l989 2CEC  
                            l999 2D74                              _str 00B5  
          __size_of_WriteCmdXLCD 003E                     ___awmod@sign 0014  
                            wreg 000FE8                       _Calendario 00CF  
                  _trata_comando 2EAA                     ___ftdiv@cntr 0032  
                   ___ftdiv@sign 0037                     __CFG_WDT$OFF 000000  
                           l3042 2F5E                             l4020 1CE8  
                           l3204 2E7E                             l3310 2A06  
                           l4022 1CF2                             l4014 1CC6  
                           l3150 280C                             l4040 1D70  
                           l4032 1D26                             l4024 1CFC  
                           l4112 2212                             l3314 2A14  
                           l3306 29FC                             l3330 2BA6  
                           l4050 1DA0                             l4034 1D30  
                           l4026 1D04                             l4130 2262  
                           l4122 223A                             l3170 285C  
                           l3162 283C                             l3154 281C  
                           l3500 0AAC                             l4124 2246  
                           l4116 2222                             l4060 2AB2  
                           l3148 2802                             l4230 2686  
                           l3350 2BEC                             l3342 2BD4  
                           l3334 2BB4                             l3326 2B9A  
                           l4126 224C                             l3166 284C  
                           l3158 282C                             l3504 0AE6  
                           l4224 265E                             l3336 2BBC  
                           l4152 23D2                             l4144 23A0  
                           l2712 2D6A                             l2704 2D4A  
                           l3194 1FF2                             l3610 0F48  
                           l3602 0EEE                             l3530 0BE4  
                           l3522 0B92                             l3514 0B46  
                           l3450 08D4                             l4250 26C4  
                           l4170 22C4                             l3282 29AE  
                           l3338 2BC0                             l3346 2BDE  
                           l4074 293A                             l2706 2D52  
                           l2730 1E14                             l4314 1458  
                           l3188 1FC2                             l3508 0B02  
                           l4164 229C                             l4084 2996  
                           l4148 23B4                             l2708 2D56  
                           l2740 1E3C                             l2724 1DEA  
                           l4340 16EE                             l3380 2F2A  
                           l4404 1B06                             l3614 0F64  
                           l3606 0F06                             l3534 0C00  
                           l3526 0BAA                             l3518 0B60  
                           l3454 08F4                             l4270 287A  
                           l3294 29D4                             l4078 296A  
                           l4094 21AC                             l2742 1E40  
                           l2718 1DD0                             l2830 2BF8  
                           l3702 216E                             l3624 0FB6  
                           l3560 0D24                             l3552 0CCA  
                           l3544 0C76                             l3480 09F0  
                           l3472 099E                             l3464 0952  
                           l4184 22F6                             l3296 29DC  
                           l3288 29BE                             l2760 1E88  
                           l2576 2F9A                             l4328 16AC  
                           l3640 2076                             l4440 1BEC  
                           l4432 1BA6                             l4194 231E  
                           l4274 2882                             l3298 29E0  
                           l2762 1E8E                             l2754 1E6C  
                           l2770 1EE8                             l3722 17F8  
                           l3580 0DF0                             l3572 0D92  
                           l3564 0D40                             l3556 0CE2  
                           l3548 0C90                             l3492 0A56  
                           l3484 0A0C                             l3476 09B6  
                           l3468 096C                             l4188 2306  
                           l2684 2CBA                             l2772 1F00  
                           l2836 2C2A                             l3660 20C6  
                           l3652 20A6                             l3644 2086  
                           l3636 2068                             l3740 1934  
                           l3716 17C8                             l4444 1C00  
                           l4198 232E                             l2686 2CC2  
                           l4278 288C                             l3750 19F4  
                           l3734 18D2                             l4446 1C02  
                           l3584 0E32                             l3576 0DD4  
                           l3568 0D7A                             l3496 0A90  
                           l3488 0A3E                             l2696 2CE2  
                           l2688 2CC6                             l2768 1EE0  
                           l2776 2F8A                             l3760 2D86  
                           l3672 20F6                             l3664 20D6  
                           l3656 20B6                             l3648 2096  
                           l3680 2116                             l3744 1998  
                           l3736 18EC                             l3728 186E  
                           l3594 0E9A                             l3690 213E  
                           l3588 0E4E                             l3940 273A  
                           l3676 2106                             l3668 20E6  
                           l3598 0EB4                             l3950 2796  
                           l3942 2744                             l3758 2D80  
                           l3766 2D96                             l3694 214E  
                           l3686 2130                             l3952 27A0  
                           l3944 2762                             l3936 272C  
                           l3698 215E                             l3948 2778  
                           l3976 2B30                             l3992 1C6C  
                           l3978 2B3C                             l3998 1C96  
                           STR_1 0895                             STR_2 0822  
                           STR_3 0838                             STR_4 080B  
                           STR_5 0884                             STR_6 0873  
                           STR_7 0862                             STR_8 084E  
                           u3010 1F2E                             u3030 1FA0  
                           u3050 2012                             u2430 2C22  
                           u4110 17A6                             u2415 2C68  
                           u2440 2C4A                             u4130 1818  
                           u2437 2C18                             u2447 2C40  
                           u4170 1954                             u4090 1734  
                           u5107 2F8C                             u3380 08EA  
                           u5117 2F64                             u4190 1A14  
                           u5127 2F9C                             u5137 08B6  
                           u4441 1C2A                             u2930 2FCC  
                           u5147 0902                             u4451 1C3E  
                           _PEIE 007F96                             u5157 0C1E  
                           u4701 2190                             u5167 0F82  
                           u5087 1B8C                             u3840 0FA2  
                           u4720 21CA                             u4800 23C4  
                           u5097 2EB6                             _RCIE 007CED  
                           u3860 0FC6                             u4660 2ADA  
                           _RCIF 007CF5                             u4901 266E  
                           u4821 2284                             u4725 21C2  
                           u4841 22AC                             u4668 2ADC  
                           _RCIP 007CFD                             u4881 2646  
                           _TMR0 000FD6                             _TXIF 007CF4  
                           _main 1A50                     ___ftpack@arg 000F  
                   ___ftpack@exp 0012           checa_botao@Despertador 0015  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0050           __size_of_WriteDataXLCD 003E  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                     ___ftmul@cntr 0027  
                   ___param_bank 000000                     ___ftmul@sign 0028  
                __end_of_BusyADC 2FD0                  __end_of_ReadADC 2FC4  
                    _Delay10TCYx 2F98                     ___fttol@exp1 0037  
          tratar_relogio@Relogio 000F                     ___fttol@lval 0033  
                   _WriteCmdXLCD 2DFA                      _Delay1KTCYx 2F88  
                  ?_SetDDRamAddr 0001                            ?_main 0001  
                __end_of___awdiv 2A1E                  __end_of___ftadd 1DC6  
                __end_of___awmod 2BF6                  __end_of___ftdiv 271C  
                __end_of___ftneg 2F00                  __end_of___ftmul 2368  
                ___awdiv@divisor 0017                  __end_of___fttol 2274  
                __end_of___lwdiv 2CF6                  __end_of___lwmod 2D7E  
                          i2l383 25E6                            i2l384 25CC  
                          i2l388 25FA                  ___awdiv@counter 0019  
                          _RCREG 000FAE                            _RCSTA 000FAB  
           __size_of_checa_botao 0738                            _SPBRG 000FAF  
                          _PORTB 000F81                            _TRISA 000F92  
                          _TRISB 000F93                            _TXREG 000FAD  
          __size_of_Delay10KTCYx 0016                            _TXSTA 000FAC  
                 ?_trata_comando 0001                  __end_of_convert 290A  
                __end_of_dpowers 080B                            _floor 2368  
                          _frexp 2A96                            _errno 00AD  
                __end_of_pic_isr 2636                    ___ftpack@sign 0013  
                     _ConvertADC 2FE6                            pclath 000FFA  
                          tablat 000FF5                            plusw2 000FDB  
                __end_of_tx_data 2EAA                            status 000FD8  
                __end_of_sprintf 1F0E                  __initialization 2CF6  
                   __end_of_main 1C1A                 __end_of_BusyXLCD 2E72  
                 _tratar_relogio 1702                     _Delay10KTCYx 2F5C  
          __size_of_DelayPORXLCD 0008                   ??_SetDDRamAddr 0010  
               __end_of_OpenXLCD 286E                           ??_main 00A5  
                  ___fttol@sign1 0032                    __activetblptr 000002  
                  _WriteDataXLCD 2DBC                       _SetChanADC 2F72  
 __size_of_convert_float_to_char 00EE    __end_of_convert_float_to_char 2548  
                    _Despertador 00D5                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_floor 0060                           ?_frexp 000F  
               __end_of___altoft 2B86                           _ADRESH 000FC4  
                         _ADRESL 000FC3                 ___awdiv@dividend 0015  
           _gambiarra_pro_serial 2A1E                 __end_of___ftpack 27CA  
                         i2l3892 259A                           i2l3896 25BC  
               __end_of___lwtoft 2F24                           _TMR0IF 007F92  
                      ??_BusyADC 000F                        ??_ReadADC 0011  
                   _DelayPORXLCD 2FD0           __end_of_tratar_relogio 1A50  
                    exibir_lcd@a 0099                      exibir_lcd@b 009B  
                    exibir_lcd@c 009D                      exibir_lcd@d 009F  
                    exibir_lcd@e 00A1                      exibir_lcd@f 00A3  
                    exibir_lcd@g 008D                      exibir_lcd@h 008F  
                    exibir_lcd@i 0091                      exibir_lcd@j 0093  
                    exibir_lcd@k 0095                      exibir_lcd@l 0097  
                         ___ftge 290A                        ??___awdiv 0019  
                      ??___ftadd 001D                        ??___awmod 0013  
                      ??___ftdiv 002F                        ??___ftneg 0012  
                      ??___ftmul 0020                        ??___fttol 002D  
               __end_of_init_ADC 2FB6                        ??___lwdiv 0013  
                      ??___lwmod 001A                           _cursor 0049  
                         clear_0 2D1C                           clear_1 2D28  
               ___awdiv@quotient 001B                  ___awmod@divisor 0011  
                ___awmod@counter 0013                   ?_WriteDataXLCD 0001  
          exibir_lcd@Despertador 0077                           floor@i 0063  
                ??_trata_comando 000F                           floor@x 0060  
          ___ftmul@f3_as_product 0024                        ??_convert 0038  
                      ??_pic_isr 0001                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ??_tx_data 000F  
          ?_gambiarra_pro_serial 0001                        ??_sprintf 002B  
                    ?_ConvertADC 0001                       __accesstop 0060  
        __end_of__initialization 2D2E                       ___altoft@c 0038  
                __CFG_PBADEN$OFF 000000                       ___ftadd@f1 0017  
                     ___ftadd@f2 001A                       ___ftge@ff1 000F  
                     ___ftge@ff2 0012                    ___rparam_used 000001  
                     ___ftdiv@f1 0029                       ___ftdiv@f2 002C  
                     ___ftdiv@f3 0033                       ___ftneg@f1 000F  
                     ___ftmul@f1 001A                       ___ftmul@f2 001D  
                ?_tratar_relogio 000F                       ___fttol@f1 0029  
                 __pcstackCOMRAM 0001                     __pidataBANK0 2F42  
                  __end_of_floor 245A                    __end_of_frexp 2B0E  
                     ___lwtoft@c 0017               __size_of_gambiarra 0006  
                    ?_SetChanADC 0001                          ??_floor 0042  
                        ??_frexp 0014           __size_of_DelayFor18TCY 0008  
                     __pbssBANK0 00A7                        ?_BusyXLCD 0001  
   __end_of_controla_despertador 204E                  WriteCmdXLCD@cmd 0010  
           __end_of_SetDDRamAddr 2CA4               __size_of_init_XLCD 001E  
                      ?_OpenXLCD 0001                          ?___ftge 000F  
              WriteDataXLCD@data 0010                     ?_Delay10TCYx 0001  
                  ?_pisca_cursor 0001                  ??_WriteDataXLCD 0010  
                   ?_Delay1KTCYx 0001                        ?___altoft 0038  
            __size_of_ConvertADC 0004                        ?___ftpack 000F  
                      ?___lwtoft 0017           ??_gambiarra_pro_serial 0033  
             __size_of_putrsXLCD 005C                       ??_BusyXLCD 0010  
                      ?_init_ADC 0001                __end_of_gambiarra 2FE6  
                        _BusyADC 2FC4                          _ReadADC 2FB6  
                     ??_OpenXLCD 0014                        _ADCResult 004B  
                        __Hparam 0000              __size_of_SetChanADC 0016  
                        _Relogio 00DB                          __Lparam 0000  
                __size_of___ftge 0090                          ___awdiv 299A  
                  _DelayFor18TCY 2FD8                          ___ftadd 1C1A  
                        ___awmod 2B86                   ??_pisca_cursor 0014  
                        ___ftdiv 2636                          ___ftneg 2EDC  
                        ___ftmul 2274                       _exibir_lcd 0FE0  
                        ___fttol 2180                          ___lwdiv 2CA4  
                        ___lwmod 2D3C                     __psmallconst 0800  
                     ??___altoft 003C                    ??_checa_botao 0019  
                        __pcinit 2CF6                       ??___ftpack 0014  
                putrsXLCD@buffer 0011                  Delay10TCYx@unit 000F  
                        __ramtop 0800                          __ptext0 1A50  
                        __ptext1 1702                          __ptext2 204E  
                        __ptext3 2D7E                          __ptext4 2E72  
                        __ptext5 2EAA                          __ptext6 2F24  
                        __ptext7 27CA                          __ptext8 2FD0  
                        __ptext9 2F88                        _BUFF_RESP 0042  
              __end_of_init_XLCD 2F42                       ??___lwtoft 001A  
                      _T0CONbits 000FD5                          _convert 286E  
                        _dpowers 0801                          _pic_isr 0008  
               ___awmod@dividend 000F                          _tx_data 2E72  
        __size_of_maquina_estado 003E                          _sprintf 1DC6  
                 __pintcode_body 2548             end_of_initialization 2D2E  
             _ESTADO_COMUNICACAO 00AF                       ??_init_ADC 000F  
                  __Lmediumconst 0000                          int_func 2548  
       tratar_relogio@Calendario 0011                   ?_DelayFor18TCY 0001  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                __end_of_putrsXLCD 2C52  
           _controla_despertador 1F0E                        _PORTAbits 000F80  
                      _PORTCbits 000F82                        _PORTDbits 000F83  
controla_despertador@Despertador 000F                        _TRISAbits 000F92  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
            __end_of_checa_botao 0FE0                        _TRISDbits 000F95  
          _convert_float_to_char 245A            __size_of_SetDDRamAddr 0052  
                   ??_ConvertADC 000F          _numero_entrada_terminal 0045  
             checa_botao@Relogio 0013                 ??_tratar_relogio 0013  
                    ___ftdiv@exp 0036                      ___ftmul@exp 0023  
                    ?_exibir_lcd 0075                   __end_of___ftge 299A  
           __size_of_Delay10TCYx 0010            ?_controla_despertador 000F  
             __end_of_ConvertADC 2FEA                     _SetDDRamAddr 2C52  
           __size_of_Delay1KTCYx 0010                       floor@expon 0066  
                   ??_SetChanADC 000F             exibir_lcd@Calendario 0079  
             SetDDRamAddr@DDaddr 0013            __end_of_trata_comando 2EDC  
            start_initialization 2CF6       convert_float_to_char@valor 0068  
           __end_of_pisca_cursor 2180                       frexp@value 000F  
              __size_of_BusyXLCD 003A                  ??_DelayFor18TCY 0010  
        convert_float_to_char@f1 0072          convert_float_to_char@f2 006B  
        convert_float_to_char@i1 006E          convert_float_to_char@i2 0070  
             __end_of_SetChanADC 2F88                __size_of_OpenXLCD 00A4  
                       ??___ftge 0015                    ?_WriteCmdXLCD 0001  
                    tx_data@cont 000F                      __pdataBANK0 00E1  
                    _checa_botao 08A8                __size_of___altoft 0078  
              __size_of___ftpack 00AE                      __pbssCOMRAM 0042  
              __size_of___lwtoft 0024                    __pcstackBANK0 0060  
         ?_convert_float_to_char 0068                   _maquina_estado 2D7E  
                Delay1KTCYx@unit 000F              __size_of_exibir_lcd 0722  
                    sprintf@flag 002E                      sprintf@prec 002F  
                       ?_BusyADC 0001                         ?_ReadADC 000F  
              __size_of_init_ADC 000E                 ___lwdiv@dividend 000F  
                      _gambiarra 2FE0                        __pintcode 0008  
                 ??_WriteCmdXLCD 0010                         ?___awdiv 0015  
                       ?___ftadd 0017                         ?___awmod 000F  
                       ?___ftdiv 0029                         ?___ftneg 000F  
                       ?___ftmul 001A                         ?___fttol 0029  
                  ?_Delay10KTCYx 0001                        _flag_time 004F  
                       ?___lwdiv 000F           ??_controla_despertador 0011  
                       ?___lwmod 0016                        _despertar 004E  
          __end_of_WriteDataXLCD 2DFA                         ?_convert 0001  
                    __smallconst 0800                         ?_pic_isr 0001  
         __end_of_maquina_estado 2DBC              _temperatura_display 00C5  
                      _init_XLCD 2F24                 ___lwdiv@quotient 0013  
                       ?_tx_data 0001                         ?_sprintf 001B  
                 __size_of_floor 00F2                   __size_of_frexp 0078  
  __size_of_gambiarra_pro_serial 0078                         _BUFF_COM 00A7  
                       _LATBbits 000F8A                    ?_DelayPORXLCD 0001  
                       i2u430_40 25AE                         _PIR1bits 000F9E  
                OpenXLCD@lcdtype 0014                       ?_gambiarra 0001  
                 ??_Delay10KTCYx 000F                       _ADCON0bits 000FC2  
                      _putrsXLCD 2BF6                  ?_maquina_estado 0001  
          __size_of_pisca_cursor 0132                 Delay10KTCYx@unit 0010  
                     ?_init_XLCD 0001                        copy_data0 2D0A  
                       _BusyXLCD 2E38                   ??_DelayPORXLCD 0010  
                      frexp@eptr 0012                         _OpenXLCD 27CA  
               __size_of_BusyADC 000C                 __size_of_ReadADC 000E  
                       __Hrparam 0000                         __Lrparam 0000  
                  exibir_lcd@str 007D                     ??_exibir_lcd 007B  
               __size_of___awdiv 0084                 __size_of___ftadd 01AC  
               __size_of___awmod 0070                 __size_of___ftdiv 00E6  
               __size_of___ftneg 0024                     _pisca_cursor 204E  
                       ___altoft 2B0E                 __size_of___ftmul 00F4  
               __size_of___fttol 00F4                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042                         ___ftpack 271C  
                   _tela_exibida 00B3                         ___lwtoft 2F00  
                     sprintf@val 0030                       ?_putrsXLCD 0011  
               __size_of_convert 009C                 __size_of_pic_isr 262E  
                ___lwdiv@divisor 0011                  ___lwdiv@counter 0015  
                       __ptext10 2F5C                         __ptext11 2FA8  
                       __ptext20 2FD8                         __ptext12 0FE0  
                       __ptext21 2F98                         __ptext13 2FE0  
                       __ptext30 2B0E                         __ptext22 245A  
                       __ptext14 2A1E                         __ptext31 2EDC  
                       __ptext23 1DC6                         __ptext15 2BF6  
                       __ptext40 2F72                         __ptext32 2B86  
                       __ptext24 2D3C                         __ptext16 2DBC  
                       __ptext41 2FB6                         __ptext33 299A  
                       __ptext25 2368                         __ptext17 2E38  
                       __ptext42 2FE6                         __ptext34 286E  
                       __ptext26 2A96                         __ptext18 2DFA  
                       __ptext43 2FC4                         __ptext35 2F00  
                       __ptext27 2180                         __ptext19 2C52  
                       __ptext44 08A8                         __ptext36 2CA4  
                       __ptext28 290A                         __ptext45 1F0E  
                       __ptext37 2274                         __ptext29 1C1A  
                       __ptext38 2636                         __ptext39 271C  
              exibir_lcd@Relogio 0075             __end_of_WriteCmdXLCD 2E38  
               __size_of_tx_data 0038                         _contador 00B1  
               __size_of_sprintf 0148                         _init_ADC 2FA8  
             __end_of_exibir_lcd 1702                    __size_of_main 01CA  
                    ??_gambiarra 0033                    ??_Delay10TCYx 000F  
                       int$flags 0050                    ??_Delay1KTCYx 000F  
                   ?_checa_botao 0013                         convert@i 0038  
        ??_convert_float_to_char 0042                       _INTCONbits 000FF2  
                    _qtdDias_mes 00E1                      ??_init_XLCD 0015  
           __end_of_Delay10KTCYx 2F72                     _valor_tensao 00AA  
                       intlevel2 0000                        sprintf@ap 002C  
                      sprintf@sp 001B                 ___lwmod@dividend 0016  
              SetChanADC@channel 0010                      _serial_data 004D  
         __size_of_trata_comando 0032            __end_of_DelayFor18TCY 2FE0  
        __size_of_tratar_relogio 034E              __end_of_Delay10TCYx 2FA8  
                       sprintf@c 0032                         sprintf@f 001D  
           __end_of_DelayPORXLCD 2FD8                      ??_putrsXLCD 0013  
                ___lwmod@divisor 0018              __end_of_Delay1KTCYx 2F98  
                ___lwmod@counter 001A            checa_botao@Calendario 0017  
       _controle_tempo_despertar 0047  
