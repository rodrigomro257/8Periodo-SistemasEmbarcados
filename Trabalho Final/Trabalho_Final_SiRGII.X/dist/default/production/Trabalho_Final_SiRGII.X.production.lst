

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Dec 04 10:23:55 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           ; Version 1.41
    74                           ; Generated 25/01/2017 GMT
    75                           ; 
    76                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F4550 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataCOMRAM
   109  002370                     __pidataCOMRAM:
   110                           	opt stack 0
   111                           
   112                           ;initializer for _temperatura_maxima
   113  002370  001E               	dw	30
   114                           
   115                           ;initializer for _temperatura_minima
   116  002372  0019               	dw	25
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	opt stack 0
   121  000800  00                 	db	0
   122  000801                     _dpowers:
   123                           	opt stack 0
   124  000801  0001               	dw	1
   125  000803  000A               	dw	10
   126  000805  0064               	dw	100
   127  000807  03E8               	dw	1000
   128  000809  2710               	dw	10000
   129  00080B                     __end_of_dpowers:
   130                           	opt stack 0
   131  0000                     _TMR0	set	4054
   132  0000                     _TRISBbits	set	3987
   133  0000                     _PORTB	set	3969
   134  0000                     _LATBbits	set	3978
   135  0000                     _ADRESL	set	4035
   136  0000                     _ADRESH	set	4036
   137  0000                     _ADCON0bits	set	4034
   138  0000                     _PIR2bits	set	4001
   139  0000                     _EECON2	set	4007
   140  0000                     _EECON1bits	set	4006
   141  0000                     _EEDATA	set	4008
   142  0000                     _EEADR	set	4009
   143  0000                     _PORTDbits	set	3971
   144  0000                     _ADCON0	set	4034
   145  0000                     _ADCON2	set	4032
   146  0000                     _PIR1bits	set	3998
   147  0000                     _OSCCON	set	4051
   148  0000                     _TRISB	set	3987
   149  0000                     _TRISDbits	set	3989
   150  0000                     _TRISCbits	set	3988
   151  0000                     _TXSTA	set	4012
   152  0000                     _RCSTA	set	4011
   153  0000                     _SPBRG	set	4015
   154  0000                     _PORTAbits	set	3968
   155  0000                     _TRISA	set	3986
   156  0000                     _TRISAbits	set	3986
   157  0000                     _ADCON1	set	4033
   158  0000                     _INTCONbits	set	4082
   159  0000                     _T0CONbits	set	4053
   160  0000                     _RCREG	set	4014
   161  0000                     _TXREG	set	4013
   162  0000                     _TRISC7	set	31911
   163  0000                     _TRISC6	set	31910
   164  0000                     _TMR0IF	set	32658
   165  0000                     _PEIE	set	32662
   166  0000                     _RCIE	set	31981
   167  0000                     _RCIP	set	31997
   168  0000                     _RCIF	set	31989
   169  0000                     _TXIF	set	31988
   170  00080B                     STR_5:
   171  00080B  4D                 	db	77	;'M'
   172  00080C  49                 	db	73	;'I'
   173  00080D  4E                 	db	78	;'N'
   174  00080E  3A                 	db	58	;':'
   175  00080F  20                 	db	32
   176  000810  25                 	db	37
   177  000811  64                 	db	100	;'d'
   178  000812  25                 	db	37
   179  000813  64                 	db	100	;'d'
   180  000814  20                 	db	32
   181  000815  4D                 	db	77	;'M'
   182  000816  41                 	db	65	;'A'
   183  000817  58                 	db	88	;'X'
   184  000818  3A                 	db	58	;':'
   185  000819  20                 	db	32
   186  00081A  25                 	db	37
   187  00081B  64                 	db	100	;'d'
   188  00081C  25                 	db	37
   189  00081D  64                 	db	100	;'d'
   190  00081E  00                 	db	0
   191  00081F                     STR_2:
   192  00081F  25                 	db	37
   193  000820  64                 	db	100	;'d'
   194  000821  20                 	db	32
   195  000822  25                 	db	37
   196  000823  64                 	db	100	;'d'
   197  000824  20                 	db	32
   198  000825  25                 	db	37
   199  000826  64                 	db	100	;'d'
   200  000827  20                 	db	32
   201  000828  20                 	db	32
   202  000829  20                 	db	32
   203  00082A  20                 	db	32
   204  00082B  20                 	db	32
   205  00082C  20                 	db	32
   206  00082D  20                 	db	32
   207  00082E  20                 	db	32
   208  00082F  20                 	db	32
   209  000830  20                 	db	32
   210  000831  20                 	db	32
   211  000832  00                 	db	0
   212  000833                     STR_7:
   213  000833  48                 	db	72	;'H'
   214  000834  4F                 	db	79	;'O'
   215  000835  52                 	db	82	;'R'
   216  000836  41                 	db	65	;'A'
   217  000837  3A                 	db	58	;':'
   218  000838  20                 	db	32
   219  000839  25                 	db	37
   220  00083A  64                 	db	100	;'d'
   221  00083B  20                 	db	32
   222  00083C  20                 	db	32
   223  00083D  20                 	db	32
   224  00083E  20                 	db	32
   225  00083F  20                 	db	32
   226  000840  20                 	db	32
   227  000841  20                 	db	32
   228  000842  20                 	db	32
   229  000843  20                 	db	32
   230  000844  20                 	db	32
   231  000845  00                 	db	0
   232  000846                     STR_1:
   233  000846  53                 	db	83	;'S'
   234  000847  45                 	db	69	;'E'
   235  000848  52                 	db	82	;'R'
   236  000849  49                 	db	73	;'I'
   237  00084A  41                 	db	65	;'A'
   238  00084B  4C                 	db	76	;'L'
   239  00084C  3A                 	db	58	;':'
   240  00084D  20                 	db	32
   241  00084E  20                 	db	32
   242  00084F  20                 	db	32
   243  000850  20                 	db	32
   244  000851  20                 	db	32
   245  000852  20                 	db	32
   246  000853  20                 	db	32
   247  000854  20                 	db	32
   248  000855  20                 	db	32
   249  000856  00                 	db	0
   250  000857                     STR_3:
   251  000857  25                 	db	37
   252  000858  64                 	db	100	;'d'
   253  000859  2C                 	db	44
   254  00085A  25                 	db	37
   255  00085B  64                 	db	100	;'d'
   256  00085C  20                 	db	32
   257  00085D  6F                 	db	111	;'o'
   258  00085E  43                 	db	67	;'C'
   259  00085F  20                 	db	32
   260  000860  00                 	db	0
   261  000861                     STR_4:
   262  000861  54                 	db	84	;'T'
   263  000862  45                 	db	69	;'E'
   264  000863  4D                 	db	77	;'M'
   265  000864  50                 	db	80	;'P'
   266  000865  3A                 	db	58	;':'
   267  000866  20                 	db	32
   268  000867  25                 	db	37
   269  000868  73                 	db	115	;'s'
   270  000869  00                 	db	0
   271  00086A                     STR_8:
   272  00086A  28                 	db	40
   273  00086B  6E                 	db	110	;'n'
   274  00086C  75                 	db	117	;'u'
   275  00086D  6C                 	db	108	;'l'
   276  00086E  6C                 	db	108	;'l'
   277  00086F  29                 	db	41
   278  000870  00                 	db	0
   279  0000                     
   280                           ; #config settings
   281  000871  00                 	db	0	; dummy byte at the end
   282  0000                     
   283                           	psect	cinit
   284  001F8C                     __pcinit:
   285                           	opt stack 0
   286  001F8C                     start_initialization:
   287                           	opt stack 0
   288  001F8C                     __initialization:
   289                           	opt stack 0
   290                           
   291                           ; Initialize objects allocated to COMRAM (4 bytes)
   292                           ; load TBLPTR registers with __pidataCOMRAM
   293  001F8C  0E70               	movlw	low __pidataCOMRAM
   294  001F8E  6EF6               	movwf	tblptrl,c
   295  001F90  0E23               	movlw	high __pidataCOMRAM
   296  001F92  6EF7               	movwf	tblptrh,c
   297  001F94  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   298  001F96  6EF8               	movwf	tblptru,c
   299  001F98  EE00  F04D         	lfsr	0,__pdataCOMRAM
   300  001F9C  EE10 F004          	lfsr	1,4
   301  001FA0                     copy_data0:
   302  001FA0  0009               	tblrd		*+
   303  001FA2  CFF5 FFEE          	movff	tablat,postinc0
   304  001FA6  50E5               	movf	postdec1,w,c
   305  001FA8  50E1               	movf	fsr1l,w,c
   306  001FAA  E1FA               	bnz	copy_data0
   307                           
   308                           ; Clear objects allocated to BANK0 (50 bytes)
   309  001FAC  EE00  F060         	lfsr	0,__pbssBANK0
   310  001FB0  0E32               	movlw	50
   311  001FB2                     clear_0:
   312  001FB2  6AEE               	clrf	postinc0,c
   313  001FB4  06E8               	decf	wreg,f,c
   314  001FB6  E1FD               	bnz	clear_0
   315                           
   316                           ; Clear objects allocated to COMRAM (10 bytes)
   317  001FB8  EE00  F043         	lfsr	0,__pbssCOMRAM
   318  001FBC  0E0A               	movlw	10
   319  001FBE                     clear_1:
   320  001FBE  6AEE               	clrf	postinc0,c
   321  001FC0  06E8               	decf	wreg,f,c
   322  001FC2  E1FD               	bnz	clear_1
   323  001FC4                     end_of_initialization:
   324                           	opt stack 0
   325  001FC4                     __end_of__initialization:
   326                           	opt stack 0
   327  001FC4  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   328  001FC6  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   329  001FC8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   330  001FCA  6EF8               	movwf	tblptru,c
   331  001FCC  0100               	movlb	0
   332  001FCE  EF9E  F00A         	goto	_main	;jump to C main() function
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           wreg	equ	0xFE8
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342                           	psect	bssCOMRAM
   343  000043                     __pbssCOMRAM:
   344                           	opt stack 0
   345  000043                     _BUFF_COM:
   346                           	opt stack 0
   347  000043                     	ds	3
   348  000046                     _numero_entrada_terminal:
   349                           	opt stack 0
   350  000046                     	ds	2
   351  000048                     _cursor:
   352                           	opt stack 0
   353  000048                     	ds	2
   354  00004A                     _string_gravar:
   355                           	opt stack 0
   356  00004A                     	ds	1
   357  00004B                     _serial_data:
   358                           	opt stack 0
   359  00004B                     	ds	1
   360  00004C                     _flag_time:
   361                           	opt stack 0
   362  00004C                     	ds	1
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           
   372                           	psect	dataCOMRAM
   373  00004D                     __pdataCOMRAM:
   374                           	opt stack 0
   375  00004D                     _temperatura_maxima:
   376                           	opt stack 0
   377  00004D                     	ds	2
   378  00004F                     _temperatura_minima:
   379                           	opt stack 0
   380  00004F                     	ds	2
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	bssBANK0
   391  000060                     __pbssBANK0:
   392                           	opt stack 0
   393  000060                     _BUFF_RESP:
   394                           	opt stack 0
   395  000060                     	ds	3
   396  000063                     _valor_tensao:
   397                           	opt stack 0
   398  000063                     	ds	3
   399  000066                     _errno:
   400                           	opt stack 0
   401  000066                     	ds	2
   402  000068                     _tempo_eeprom:
   403                           	opt stack 0
   404  000068                     	ds	2
   405  00006A                     _ESTADO_COMUNICACAO:
   406                           	opt stack 0
   407  00006A                     	ds	2
   408  00006C                     _ADCResult:
   409                           	opt stack 0
   410  00006C                     	ds	2
   411  00006E                     _contador:
   412                           	opt stack 0
   413  00006E                     	ds	2
   414  000070                     _tela_exibida:
   415                           	opt stack 0
   416  000070                     	ds	2
   417  000072                     _str:
   418                           	opt stack 0
   419  000072                     	ds	16
   420  000082                     _temperatura_display:
   421                           	opt stack 0
   422  000082                     	ds	10
   423  00008C                     _Relogio:
   424                           	opt stack 0
   425  00008C                     	ds	6
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	cstackBANK0
   436  000092                     __pcstackBANK0:
   437                           	opt stack 0
   438  000092                     ___ftadd@sign:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x0
   442  000092                     	ds	1
   443  000093                     ___ftadd@exp2:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x1
   447  000093                     	ds	1
   448  000094                     ___ftadd@exp1:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x2
   452  000094                     	ds	1
   453  000095                     ?_floor:
   454                           	opt stack 0
   455  000095                     USART_Init@temp:
   456                           	opt stack 0
   457  000095                     floor@x:
   458                           	opt stack 0
   459                           
   460                           ; 3 bytes @ 0x3
   461  000095                     	ds	3
   462  000098                     floor@i:
   463                           	opt stack 0
   464                           
   465                           ; 3 bytes @ 0x6
   466  000098                     	ds	3
   467  00009B                     floor@expon:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x9
   471  00009B                     	ds	2
   472  00009D                     convert_float_to_char@valor:
   473                           	opt stack 0
   474                           
   475                           ; 3 bytes @ 0xB
   476  00009D                     	ds	3
   477  0000A0                     convert_float_to_char@i1:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0xE
   481  0000A0                     	ds	2
   482  0000A2                     convert_float_to_char@i2:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x10
   486  0000A2                     	ds	2
   487  0000A4                     convert_float_to_char@f2:
   488                           	opt stack 0
   489                           
   490                           ; 3 bytes @ 0x12
   491  0000A4                     	ds	3
   492  0000A7                     convert_float_to_char@f1:
   493                           	opt stack 0
   494                           
   495                           ; 3 bytes @ 0x15
   496  0000A7                     	ds	3
   497  0000AA                     ??_exibir_lcd:
   498                           
   499                           ; 1 bytes @ 0x18
   500  0000AA                     	ds	2
   501  0000AC                     exibir_lcd@a:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1A
   505  0000AC                     	ds	2
   506  0000AE                     exibir_lcd@b:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x1C
   510  0000AE                     	ds	2
   511  0000B0                     exibir_lcd@c:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x1E
   515  0000B0                     	ds	2
   516  0000B2                     exibir_lcd@d:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x20
   520  0000B2                     	ds	2
   521  0000B4                     ??_main:
   522                           
   523                           ; 1 bytes @ 0x22
   524  0000B4                     	ds	2
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           postdec1	equ	0xFE5
   532                           fsr1l	equ	0xFE1
   533                           
   534                           	psect	cstackCOMRAM
   535  000001                     __pcstackCOMRAM:
   536                           	opt stack 0
   537  000001                     ??_pic_isr:
   538  000001                     
   539                           ; 1 bytes @ 0x0
   540  000001                     	ds	14
   541  00000F                     ??_checa_botao:
   542  00000F                     ??_SetChanADC:
   543  00000F                     ??_Delay10KTCYx:
   544  00000F                     ?_ReadADC:
   545                           	opt stack 0
   546  00000F                     ?___wmul:
   547                           	opt stack 0
   548  00000F                     ?___awmod:
   549                           	opt stack 0
   550  00000F                     ?___lwdiv:
   551                           	opt stack 0
   552  00000F                     ?___ftpack:
   553                           	opt stack 0
   554  00000F                     ?___ftneg:
   555                           	opt stack 0
   556  00000F                     USART_TransmitChar@out:
   557                           	opt stack 0
   558  00000F                     Delay10TCYx@unit:
   559                           	opt stack 0
   560  00000F                     Delay1KTCYx@unit:
   561                           	opt stack 0
   562  00000F                     tx_data@cont:
   563                           	opt stack 0
   564  00000F                     tratar_relogio@Relogio:
   565                           	opt stack 0
   566  00000F                     EEPROM_Write@address:
   567                           	opt stack 0
   568  00000F                     EEPROM_Read@address:
   569                           	opt stack 0
   570  00000F                     ___wmul@multiplier:
   571                           	opt stack 0
   572  00000F                     ___awmod@dividend:
   573                           	opt stack 0
   574  00000F                     ___lwdiv@dividend:
   575                           	opt stack 0
   576  00000F                     ___ftpack@arg:
   577                           	opt stack 0
   578  00000F                     frexp@value:
   579                           	opt stack 0
   580  00000F                     ___ftneg@f1:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0xE
   584  00000F                     	ds	1
   585  000010                     ??_SetDDRamAddr:
   586  000010                     SetChanADC@channel:
   587                           	opt stack 0
   588  000010                     WriteCmdXLCD@cmd:
   589                           	opt stack 0
   590  000010                     WriteDataXLCD@data:
   591                           	opt stack 0
   592  000010                     Delay10KTCYx@unit:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0xF
   596  000010                     	ds	1
   597  000011                     ??_ReadADC:
   598  000011                     EEPROM_Write@data:
   599                           	opt stack 0
   600  000011                     putrsXLCD@buffer:
   601                           	opt stack 0
   602  000011                     ___wmul@multiplicand:
   603                           	opt stack 0
   604  000011                     ___awmod@divisor:
   605                           	opt stack 0
   606  000011                     ___lwdiv@divisor:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x10
   610  000011                     	ds	1
   611  000012                     ___ftpack@exp:
   612                           	opt stack 0
   613  000012                     EEPROM_WriteString@address:
   614                           	opt stack 0
   615  000012                     frexp@eptr:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x11
   619  000012                     	ds	1
   620  000013                     SetDDRamAddr@DDaddr:
   621                           	opt stack 0
   622  000013                     ___awmod@counter:
   623                           	opt stack 0
   624  000013                     ___ftpack@sign:
   625                           	opt stack 0
   626  000013                     ___wmul@product:
   627                           	opt stack 0
   628  000013                     ___lwdiv@quotient:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x12
   632  000013                     	ds	1
   633  000014                     ??___ftpack:
   634  000014                     ??_frexp:
   635  000014                     OpenXLCD@lcdtype:
   636                           	opt stack 0
   637  000014                     ___awmod@sign:
   638                           	opt stack 0
   639  000014                     EEPROM_WriteString@data:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x13
   643  000014                     	ds	1
   644  000015                     ??_trata_comando:
   645  000015                     ?___awdiv:
   646                           	opt stack 0
   647  000015                     ___lwdiv@counter:
   648                           	opt stack 0
   649  000015                     ___awdiv@dividend:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x14
   653  000015                     	ds	1
   654  000016                     ??_io_eeprom:
   655  000016                     ?___lwmod:
   656                           	opt stack 0
   657  000016                     ___lwmod@dividend:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x15
   661  000016                     	ds	1
   662  000017                     ??_maquina_estado:
   663  000017                     ?___awtoft:
   664                           	opt stack 0
   665  000017                     ?___lwtoft:
   666                           	opt stack 0
   667  000017                     ___awdiv@divisor:
   668                           	opt stack 0
   669  000017                     ___awtoft@c:
   670                           	opt stack 0
   671  000017                     ___lwtoft@c:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x16
   675  000017                     	ds	1
   676  000018                     io_eeprom@e:
   677                           	opt stack 0
   678  000018                     ___lwmod@divisor:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x17
   682  000018                     	ds	1
   683  000019                     ___awdiv@counter:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x18
   687  000019                     	ds	1
   688  00001A                     ?___ftmul:
   689                           	opt stack 0
   690  00001A                     io_eeprom@Data_read:
   691                           	opt stack 0
   692  00001A                     ___awdiv@sign:
   693                           	opt stack 0
   694  00001A                     ___awtoft@sign:
   695                           	opt stack 0
   696  00001A                     ___lwmod@counter:
   697                           	opt stack 0
   698  00001A                     ___ftmul@f1:
   699                           	opt stack 0
   700                           
   701                           ; 3 bytes @ 0x19
   702  00001A                     	ds	1
   703  00001B                     ?_sprintf:
   704                           	opt stack 0
   705  00001B                     sprintf@sp:
   706                           	opt stack 0
   707  00001B                     ___awdiv@quotient:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x1A
   711  00001B                     	ds	2
   712  00001D                     sprintf@f:
   713                           	opt stack 0
   714  00001D                     ___ftmul@f2:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x1C
   718  00001D                     	ds	3
   719  000020                     ??___ftmul:
   720                           
   721                           ; 1 bytes @ 0x1F
   722  000020                     	ds	3
   723  000023                     ___ftmul@exp:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x22
   727  000023                     	ds	1
   728  000024                     ___ftmul@f3_as_product:
   729                           	opt stack 0
   730                           
   731                           ; 3 bytes @ 0x23
   732  000024                     	ds	3
   733  000027                     ??_sprintf:
   734  000027                     ___ftmul@cntr:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x26
   738  000027                     	ds	1
   739  000028                     sprintf@flag:
   740                           	opt stack 0
   741  000028                     ___ftmul@sign:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x27
   745  000028                     	ds	1
   746  000029                     ?___ftdiv:
   747                           	opt stack 0
   748  000029                     ?___fttol:
   749                           	opt stack 0
   750  000029                     sprintf@prec:
   751                           	opt stack 0
   752  000029                     ___ftdiv@f1:
   753                           	opt stack 0
   754  000029                     ___ftge@ff1:
   755                           	opt stack 0
   756  000029                     ___fttol@f1:
   757                           	opt stack 0
   758                           
   759                           ; 3 bytes @ 0x28
   760  000029                     	ds	1
   761  00002A                     sprintf@ap:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x29
   765  00002A                     	ds	2
   766  00002C                     sprintf@cp:
   767                           	opt stack 0
   768  00002C                     ___ftdiv@f2:
   769                           	opt stack 0
   770  00002C                     ___ftge@ff2:
   771                           	opt stack 0
   772                           
   773                           ; 3 bytes @ 0x2B
   774  00002C                     	ds	1
   775  00002D                     ??___fttol:
   776                           
   777                           ; 1 bytes @ 0x2C
   778  00002D                     	ds	1
   779  00002E                     sprintf@val:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x2D
   783  00002E                     	ds	1
   784  00002F                     ??___ftdiv:
   785  00002F                     ??___ftge:
   786                           
   787                           ; 1 bytes @ 0x2E
   788  00002F                     	ds	1
   789  000030                     sprintf@c:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x2F
   793  000030                     	ds	1
   794  000031                     
   795                           ; 1 bytes @ 0x30
   796  000031                     	ds	1
   797  000032                     ___ftdiv@cntr:
   798                           	opt stack 0
   799  000032                     ___fttol@sign1:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x31
   803  000032                     	ds	1
   804  000033                     ___ftdiv@f3:
   805                           	opt stack 0
   806  000033                     ___fttol@lval:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0x32
   810  000033                     	ds	3
   811  000036                     ___ftdiv@exp:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x35
   815  000036                     	ds	1
   816  000037                     ___ftdiv@sign:
   817                           	opt stack 0
   818  000037                     ___fttol@exp1:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x36
   822  000037                     	ds	1
   823  000038                     ?___ftadd:
   824                           	opt stack 0
   825  000038                     ?___altoft:
   826                           	opt stack 0
   827  000038                     convert@i:
   828                           	opt stack 0
   829  000038                     ___ftadd@f1:
   830                           	opt stack 0
   831  000038                     ___altoft@c:
   832                           	opt stack 0
   833                           
   834                           ; 4 bytes @ 0x37
   835  000038                     	ds	3
   836  00003B                     ___ftadd@f2:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x3A
   840  00003B                     	ds	1
   841  00003C                     ??___altoft:
   842                           
   843                           ; 1 bytes @ 0x3B
   844  00003C                     	ds	2
   845  00003E                     ??___ftadd:
   846                           
   847                           ; 1 bytes @ 0x3D
   848  00003E                     	ds	2
   849  000040                     ___altoft@exp:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0x3F
   853  000040                     	ds	1
   854  000041                     ___altoft@sign:
   855                           	opt stack 0
   856  000041                     USART_Init@baud_rate:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x40
   860  000041                     	ds	1
   861  000042                     
   862                           ; 1 bytes @ 0x41
   863  000042                     	ds	1
   864  000043                     tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           
   873                           ; 1 bytes @ 0x42
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   876 ;;
   877 ;; *************** function _main *****************
   878 ;; Defined at:
   879 ;;		line 23 in file "Trabalho_Final_SiRGII.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   893 ;;      Params:         0       0       0       0       0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0
   895 ;;      Temps:          0       2       0       0       0       0       0       0       0
   896 ;;      Totals:         0       2       0       0       0       0       0       0       0
   897 ;;Total ram usage:        2 bytes
   898 ;; Hardware stack levels required when called:    8
   899 ;; This function calls:
   900 ;;		_USART_Init
   901 ;;		_WriteCmdXLCD
   902 ;;		_ativa_atuadores
   903 ;;		_checa_botao
   904 ;;		_convert
   905 ;;		_exibir_lcd
   906 ;;		_init_ADC
   907 ;;		_init_XLCD
   908 ;;		_io_eeprom
   909 ;;		_maquina_estado
   910 ;;		_pisca_cursor
   911 ;;		_tratar_relogio
   912 ;; This function is called by:
   913 ;;		Startup code after reset
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text0
   918  00153C                     __ptext0:
   919                           	opt stack 0
   920  00153C                     _main:
   921                           	opt stack 23
   922                           
   923                           ;Trabalho_Final_SiRGII.c: 25: Relogio.segundo=0;
   924                           
   925                           ;incstack = 0
   926  00153C  0E00               	movlw	0
   927  00153E  0100               	movlb	0	; () banked
   928  001540  6F8F               	movwf	(_Relogio+3)& (0+255),b
   929  001542  0E00               	movlw	0
   930  001544  6F8E               	movwf	(_Relogio+2)& (0+255),b
   931                           
   932                           ;Trabalho_Final_SiRGII.c: 26: Relogio.minuto=0;
   933  001546  0E00               	movlw	0
   934  001548  0100               	movlb	0	; () banked
   935  00154A  6F8D               	movwf	(_Relogio+1)& (0+255),b
   936  00154C  0E00               	movlw	0
   937  00154E  6F8C               	movwf	_Relogio& (0+255),b
   938                           
   939                           ;Trabalho_Final_SiRGII.c: 27: Relogio.hora=0;
   940  001550  0E00               	movlw	0
   941  001552  0100               	movlb	0	; () banked
   942  001554  6F91               	movwf	(_Relogio+5)& (0+255),b
   943  001556  0E00               	movlw	0
   944  001558  6F90               	movwf	(_Relogio+4)& (0+255),b
   945                           
   946                           ; BSR set to: 0
   947                           ;Trabalho_Final_SiRGII.c: 29: T0CONbits.TMR0ON=1;
   948  00155A  8ED5               	bsf	4053,7,c	;volatile
   949                           
   950                           ; BSR set to: 0
   951                           ;Trabalho_Final_SiRGII.c: 31: INTCONbits.TMR0IE=1;
   952  00155C  8AF2               	bsf	intcon,5,c	;volatile
   953                           
   954                           ; BSR set to: 0
   955                           ;Trabalho_Final_SiRGII.c: 32: INTCONbits.TMR0IF=0;
   956  00155E  94F2               	bcf	intcon,2,c	;volatile
   957                           
   958                           ; BSR set to: 0
   959                           ;Trabalho_Final_SiRGII.c: 35: T0CONbits.T08BIT=0;
   960  001560  9CD5               	bcf	4053,6,c	;volatile
   961                           
   962                           ; BSR set to: 0
   963                           ;Trabalho_Final_SiRGII.c: 36: T0CONbits.PSA=0;
   964  001562  96D5               	bcf	4053,3,c	;volatile
   965                           
   966                           ; BSR set to: 0
   967                           ;Trabalho_Final_SiRGII.c: 37: T0CONbits.T0PS0=1;
   968  001564  80D5               	bsf	4053,0,c	;volatile
   969                           
   970                           ; BSR set to: 0
   971                           ;Trabalho_Final_SiRGII.c: 38: T0CONbits.T0PS1=0;
   972  001566  92D5               	bcf	4053,1,c	;volatile
   973                           
   974                           ; BSR set to: 0
   975                           ;Trabalho_Final_SiRGII.c: 39: T0CONbits.T0PS2=1;
   976  001568  84D5               	bsf	4053,2,c	;volatile
   977                           
   978                           ; BSR set to: 0
   979                           ;Trabalho_Final_SiRGII.c: 40: T0CONbits.T0CS=0;
   980  00156A  9AD5               	bcf	4053,5,c	;volatile
   981                           
   982                           ;Trabalho_Final_SiRGII.c: 42: TMR0=2535;
   983  00156C  0E09               	movlw	9
   984  00156E  6ED7               	movwf	4055,c	;volatile
   985  001570  0EE7               	movlw	231
   986  001572  6ED6               	movwf	4054,c	;volatile
   987                           
   988                           ; BSR set to: 0
   989                           ;Trabalho_Final_SiRGII.c: 44: T0CONbits.TMR0ON=1;
   990  001574  8ED5               	bsf	4053,7,c	;volatile
   991                           
   992                           ; BSR set to: 0
   993                           ;Trabalho_Final_SiRGII.c: 47: INTCONbits.GIEH=1;
   994  001576  8EF2               	bsf	intcon,7,c	;volatile
   995                           
   996                           ; BSR set to: 0
   997                           ;Trabalho_Final_SiRGII.c: 48: INTCONbits.GIEL=1;
   998  001578  8CF2               	bsf	intcon,6,c	;volatile
   999                           
  1000                           ;Trabalho_Final_SiRGII.c: 51: ADCON1 = 15;
  1001  00157A  0E0F               	movlw	15
  1002  00157C  6EC1               	movwf	4033,c	;volatile
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;Trabalho_Final_SiRGII.c: 52: TRISAbits.RA1 = 1;
  1006  00157E  8292               	bsf	3986,1,c	;volatile
  1007                           
  1008                           ;Trabalho_Final_SiRGII.c: 53: TRISA = 1;
  1009  001580  0E01               	movlw	1
  1010  001582  6E92               	movwf	3986,c	;volatile
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;Trabalho_Final_SiRGII.c: 54: PORTAbits.AN1 = 0;
  1014  001584  9280               	bcf	3968,1,c	;volatile
  1015                           
  1016                           ;Trabalho_Final_SiRGII.c: 55: SPBRG=(((20000000/64)/9600)-1);
  1017  001586  0E1F               	movlw	31
  1018  001588  6EAF               	movwf	4015,c	;volatile
  1019                           
  1020                           ;Trabalho_Final_SiRGII.c: 56: RCSTA = 0b10010000;
  1021  00158A  0E90               	movlw	144
  1022  00158C  6EAB               	movwf	4011,c	;volatile
  1023                           
  1024                           ;Trabalho_Final_SiRGII.c: 57: TXSTA = 0b00100000;
  1025  00158E  0E20               	movlw	32
  1026  001590  6EAC               	movwf	4012,c	;volatile
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;Trabalho_Final_SiRGII.c: 58: TRISCbits.RC6 = 0;
  1030  001592  9C94               	bcf	3988,6,c	;volatile
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;Trabalho_Final_SiRGII.c: 59: TRISCbits.RC7 = 1;
  1034  001594  8E94               	bsf	3988,7,c	;volatile
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;Trabalho_Final_SiRGII.c: 61: RCIF = 0;
  1038  001596  9A9E               	bcf	3998,5,c	;volatile
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;Trabalho_Final_SiRGII.c: 62: RCIP = 0;
  1042  001598  9A9F               	bcf	3999,5,c	;volatile
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;Trabalho_Final_SiRGII.c: 63: RCIE = 1;
  1046  00159A  8A9D               	bsf	3997,5,c	;volatile
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;Trabalho_Final_SiRGII.c: 64: PEIE = 1;
  1050  00159C  8CF2               	bsf	intcon,6,c	;volatile
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;Trabalho_Final_SiRGII.c: 67: init_XLCD();
  1054  00159E  EC57  F011         	call	_init_XLCD	;wreg free
  1055                           
  1056                           ;Trabalho_Final_SiRGII.c: 68: init_ADC();
  1057  0015A2  EC93  F011         	call	_init_ADC	;wreg free
  1058                           
  1059                           ;Trabalho_Final_SiRGII.c: 69: USART_Init(9600);
  1060  0015A6  0E25               	movlw	37
  1061  0015A8  6E42               	movwf	USART_Init@baud_rate+1,c
  1062  0015AA  0E80               	movlw	128
  1063  0015AC  6E41               	movwf	USART_Init@baud_rate,c
  1064  0015AE  ECB2  F00E         	call	_USART_Init	;wreg free
  1065                           
  1066                           ;Trabalho_Final_SiRGII.c: 74: TRISAbits.TRISA2=0;
  1067  0015B2  9492               	bcf	3986,2,c	;volatile
  1068                           
  1069                           ;Trabalho_Final_SiRGII.c: 75: TRISDbits.TRISD4=0;
  1070  0015B4  9895               	bcf	3989,4,c	;volatile
  1071                           
  1072                           ;Trabalho_Final_SiRGII.c: 76: TRISDbits.TRISD5=0;
  1073  0015B6  9A95               	bcf	3989,5,c	;volatile
  1074                           
  1075                           ;Trabalho_Final_SiRGII.c: 77: TRISDbits.TRISD6=0;
  1076  0015B8  9C95               	bcf	3989,6,c	;volatile
  1077                           
  1078                           ;Trabalho_Final_SiRGII.c: 80: TRISB=0x00;
  1079  0015BA  0E00               	movlw	0
  1080  0015BC  6E93               	movwf	3987,c	;volatile
  1081                           
  1082                           ;Trabalho_Final_SiRGII.c: 83: TRISDbits.TRISD0=1;
  1083  0015BE  8095               	bsf	3989,0,c	;volatile
  1084                           
  1085                           ;Trabalho_Final_SiRGII.c: 84: TRISDbits.TRISD1=1;
  1086  0015C0  8295               	bsf	3989,1,c	;volatile
  1087                           
  1088                           ;Trabalho_Final_SiRGII.c: 85: TRISDbits.TRISD2=1;
  1089  0015C2  8495               	bsf	3989,2,c	;volatile
  1090                           
  1091                           ;Trabalho_Final_SiRGII.c: 86: TRISDbits.TRISD3=1;
  1092  0015C4  8695               	bsf	3989,3,c	;volatile
  1093                           
  1094                           ;Trabalho_Final_SiRGII.c: 91: OSCCON=0x72;
  1095  0015C6  0E72               	movlw	114
  1096  0015C8  6ED3               	movwf	4051,c	;volatile
  1097  0015CA                     l4140:
  1098                           
  1099                           ;Trabalho_Final_SiRGII.c: 96: checa_botao();
  1100  0015CA  EC2C  F007         	call	_checa_botao	;wreg free
  1101                           
  1102                           ;Trabalho_Final_SiRGII.c: 97: convert();
  1103  0015CE  EC20  F00D         	call	_convert	;wreg free
  1104                           
  1105                           ;Trabalho_Final_SiRGII.c: 98: ativa_atuadores();
  1106  0015D2  EC23  F00F         	call	_ativa_atuadores	;wreg free
  1107                           
  1108                           ;Trabalho_Final_SiRGII.c: 99: maquina_estado();
  1109  0015D6  EC2C  F010         	call	_maquina_estado	;wreg free
  1110                           
  1111                           ;Trabalho_Final_SiRGII.c: 100: WriteCmdXLCD(0x0C);
  1112  0015DA  0E0C               	movlw	12
  1113  0015DC  EC6A  F010         	call	_WriteCmdXLCD
  1114                           
  1115                           ;Trabalho_Final_SiRGII.c: 101: exibir_lcd();
  1116  0015E0  EC39  F004         	call	_exibir_lcd	;wreg free
  1117                           
  1118                           ;Trabalho_Final_SiRGII.c: 102: WriteCmdXLCD(0x0F);
  1119  0015E4  0E0F               	movlw	15
  1120  0015E6  EC6A  F010         	call	_WriteCmdXLCD
  1121                           
  1122                           ;Trabalho_Final_SiRGII.c: 103: pisca_cursor();
  1123  0015EA  ECA1  F00F         	call	_pisca_cursor	;wreg free
  1124                           
  1125                           ;Trabalho_Final_SiRGII.c: 105: if(flag_time==1){
  1126  0015EE  044C               	decf	_flag_time,w,c
  1127  0015F0  A4D8               	btfss	status,2,c
  1128  0015F2  D019               	goto	l4168
  1129                           
  1130                           ;Trabalho_Final_SiRGII.c: 106: tratar_relogio(&Relogio);
  1131  0015F4  0E8C               	movlw	low _Relogio
  1132  0015F6  6E0F               	movwf	tratar_relogio@Relogio,c
  1133  0015F8  0E00               	movlw	high _Relogio
  1134  0015FA  6E10               	movwf	tratar_relogio@Relogio+1,c
  1135  0015FC  ECE6  F007         	call	_tratar_relogio	;wreg free
  1136                           
  1137                           ;Trabalho_Final_SiRGII.c: 107: PORTAbits.RA2=1;
  1138  001600  8480               	bsf	3968,2,c	;volatile
  1139                           
  1140                           ;Trabalho_Final_SiRGII.c: 108: _delay((unsigned long)((70)*(20000000/4000.0)));
  1141  001602  0E02               	movlw	2
  1142  001604  0100               	movlb	0	; () banked
  1143  001606  6FB5               	movwf	(??_main+1)& (0+255),b
  1144  001608  0EC7               	movlw	199
  1145  00160A  0100               	movlb	0	; () banked
  1146  00160C  6FB4               	movwf	??_main& (0+255),b
  1147  00160E  0E88               	movlw	136
  1148  001610                     u3927:
  1149  001610  2EE8               	decfsz	wreg,f,c
  1150  001612  D7FE               	bra	u3927
  1151  001614  2FB4               	decfsz	??_main& (0+255),f,b
  1152  001616  D7FC               	bra	u3927
  1153  001618  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1154  00161A  D7FA               	bra	u3927
  1155  00161C  F000               	nop	
  1156                           
  1157                           ;Trabalho_Final_SiRGII.c: 109: PORTAbits.RA2=0;
  1158  00161E  9480               	bcf	3968,2,c	;volatile
  1159                           
  1160                           ;Trabalho_Final_SiRGII.c: 110: tempo_eeprom++;
  1161  001620  0100               	movlb	0	; () banked
  1162  001622  4B68               	infsnz	_tempo_eeprom& (0+255),f,b
  1163  001624  2B69               	incf	(_tempo_eeprom+1)& (0+255),f,b
  1164  001626                     l4168:
  1165                           
  1166                           ;Trabalho_Final_SiRGII.c: 111: }
  1167                           ;Trabalho_Final_SiRGII.c: 113: io_eeprom();
  1168  001626  ECE9  F00F         	call	_io_eeprom	;wreg free
  1169  00162A  D7CF               	goto	l4140
  1170  00162C                     __end_of_main:
  1171                           	opt stack 0
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           intcon	equ	0xFF2
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           postdec1	equ	0xFE5
  1180                           fsr1l	equ	0xFE1
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _tratar_relogio *****************
  1184 ;; Defined at:
  1185 ;;		line 3 in file "relogio.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  Relogio         2   14[COMRAM] PTR struct .
  1188 ;;		 -> Relogio(6), 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1200 ;;      Params:         2       0       0       0       0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1202 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1203 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1204 ;;Total ram usage:        4 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    1
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text1
  1215  000FCC                     __ptext1:
  1216                           	opt stack 0
  1217  000FCC                     _tratar_relogio:
  1218                           	opt stack 29
  1219                           
  1220                           ;relogio.c: 5: Relogio->segundo++;
  1221                           
  1222                           ;incstack = 0
  1223  000FCC  EE20 F002          	lfsr	2,2
  1224  000FD0  500F               	movf	tratar_relogio@Relogio,w,c
  1225  000FD2  26D9               	addwf	fsr2l,f,c
  1226  000FD4  5010               	movf	tratar_relogio@Relogio+1,w,c
  1227  000FD6  22DA               	addwfc	fsr2h,f,c
  1228  000FD8  2ADE               	incf	postinc2,f,c
  1229  000FDA  0E00               	movlw	0
  1230  000FDC  22DD               	addwfc	postdec2,f,c
  1231                           
  1232                           ;relogio.c: 7: if(Relogio->segundo>59){
  1233  000FDE  EE20 F002          	lfsr	2,2
  1234  000FE2  500F               	movf	tratar_relogio@Relogio,w,c
  1235  000FE4  26D9               	addwf	fsr2l,f,c
  1236  000FE6  5010               	movf	tratar_relogio@Relogio+1,w,c
  1237  000FE8  22DA               	addwfc	fsr2h,f,c
  1238  000FEA  0E01               	movlw	1
  1239  000FEC  BEDB               	btfsc	plusw2,7,c
  1240  000FEE  D018               	goto	l343
  1241  000FF0  0E01               	movlw	1
  1242  000FF2  50DB               	movf	plusw2,w,c
  1243  000FF4  E104               	bnz	u3090
  1244  000FF6  0E3C               	movlw	60
  1245  000FF8  5CDE               	subwf	postinc2,w,c
  1246  000FFA  A0D8               	btfss	status,0,c
  1247  000FFC  D011               	goto	l343
  1248  000FFE                     u3090:
  1249                           
  1250                           ;relogio.c: 8: Relogio->minuto++;
  1251  000FFE  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1252  001002  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1253  001006  2ADE               	incf	postinc2,f,c
  1254  001008  0E00               	movlw	0
  1255  00100A  22DD               	addwfc	postdec2,f,c
  1256                           
  1257                           ;relogio.c: 9: Relogio->segundo=0;
  1258  00100C  EE20 F002          	lfsr	2,2
  1259  001010  500F               	movf	tratar_relogio@Relogio,w,c
  1260  001012  26D9               	addwf	fsr2l,f,c
  1261  001014  5010               	movf	tratar_relogio@Relogio+1,w,c
  1262  001016  22DA               	addwfc	fsr2h,f,c
  1263  001018  0E00               	movlw	0
  1264  00101A  6EDE               	movwf	postinc2,c
  1265  00101C  0E00               	movlw	0
  1266  00101E  6EDD               	movwf	postdec2,c
  1267  001020                     l343:
  1268                           
  1269                           ;relogio.c: 10: }
  1270                           ;relogio.c: 11: if(Relogio->segundo<0){
  1271  001020  EE20 F002          	lfsr	2,2
  1272  001024  500F               	movf	tratar_relogio@Relogio,w,c
  1273  001026  26D9               	addwf	fsr2l,f,c
  1274  001028  5010               	movf	tratar_relogio@Relogio+1,w,c
  1275  00102A  22DA               	addwfc	fsr2h,f,c
  1276  00102C  0E01               	movlw	1
  1277  00102E  AEDB               	btfss	plusw2,7,c
  1278  001030  D011               	goto	l344
  1279                           
  1280                           ;relogio.c: 12: Relogio->segundo=59;
  1281  001032  EE20 F002          	lfsr	2,2
  1282  001036  500F               	movf	tratar_relogio@Relogio,w,c
  1283  001038  26D9               	addwf	fsr2l,f,c
  1284  00103A  5010               	movf	tratar_relogio@Relogio+1,w,c
  1285  00103C  22DA               	addwfc	fsr2h,f,c
  1286  00103E  0E3B               	movlw	59
  1287  001040  6EDE               	movwf	postinc2,c
  1288  001042  0E00               	movlw	0
  1289  001044  6EDD               	movwf	postdec2,c
  1290                           
  1291                           ;relogio.c: 13: Relogio->minuto--;
  1292  001046  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1293  00104A  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1294  00104E  06DE               	decf	postinc2,f,c
  1295  001050  0E00               	movlw	0
  1296  001052  5ADD               	subwfb	postdec2,f,c
  1297  001054                     l344:
  1298                           
  1299                           ;relogio.c: 14: }
  1300                           ;relogio.c: 16: if(Relogio->minuto>59){
  1301  001054  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1302  001058  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1303  00105C  0E01               	movlw	1
  1304  00105E  BEDB               	btfsc	plusw2,7,c
  1305  001060  D018               	goto	l3476
  1306  001062  0E01               	movlw	1
  1307  001064  50DB               	movf	plusw2,w,c
  1308  001066  E104               	bnz	u3110
  1309  001068  0E3C               	movlw	60
  1310  00106A  5CDE               	subwf	postinc2,w,c
  1311  00106C  A0D8               	btfss	status,0,c
  1312  00106E  D011               	goto	l3476
  1313  001070                     u3110:
  1314                           
  1315                           ;relogio.c: 17: Relogio->hora++;
  1316  001070  EE20 F004          	lfsr	2,4
  1317  001074  500F               	movf	tratar_relogio@Relogio,w,c
  1318  001076  26D9               	addwf	fsr2l,f,c
  1319  001078  5010               	movf	tratar_relogio@Relogio+1,w,c
  1320  00107A  22DA               	addwfc	fsr2h,f,c
  1321  00107C  2ADE               	incf	postinc2,f,c
  1322  00107E  0E00               	movlw	0
  1323  001080  22DD               	addwfc	postdec2,f,c
  1324                           
  1325                           ;relogio.c: 18: Relogio->minuto=0;
  1326  001082  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1327  001086  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1328  00108A  0E00               	movlw	0
  1329  00108C  6EDE               	movwf	postinc2,c
  1330  00108E  0E00               	movlw	0
  1331  001090  6EDD               	movwf	postdec2,c
  1332  001092                     l3476:
  1333                           
  1334                           ;relogio.c: 19: }
  1335                           ;relogio.c: 20: if(Relogio->minuto<0){
  1336  001092  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1337  001096  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1338  00109A  0E01               	movlw	1
  1339  00109C  AEDB               	btfss	plusw2,7,c
  1340  00109E  D011               	goto	l3482
  1341                           
  1342                           ;relogio.c: 21: Relogio->minuto=59;
  1343  0010A0  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1344  0010A4  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1345  0010A8  0E3B               	movlw	59
  1346  0010AA  6EDE               	movwf	postinc2,c
  1347  0010AC  0E00               	movlw	0
  1348  0010AE  6EDD               	movwf	postdec2,c
  1349                           
  1350                           ;relogio.c: 22: Relogio->hora--;
  1351  0010B0  EE20 F004          	lfsr	2,4
  1352  0010B4  500F               	movf	tratar_relogio@Relogio,w,c
  1353  0010B6  26D9               	addwf	fsr2l,f,c
  1354  0010B8  5010               	movf	tratar_relogio@Relogio+1,w,c
  1355  0010BA  22DA               	addwfc	fsr2h,f,c
  1356  0010BC  06DE               	decf	postinc2,f,c
  1357  0010BE  0E00               	movlw	0
  1358  0010C0  5ADD               	subwfb	postdec2,f,c
  1359  0010C2                     l3482:
  1360                           
  1361                           ;relogio.c: 23: }
  1362                           ;relogio.c: 25: if(Relogio->hora>23){
  1363  0010C2  EE20 F004          	lfsr	2,4
  1364  0010C6  500F               	movf	tratar_relogio@Relogio,w,c
  1365  0010C8  26D9               	addwf	fsr2l,f,c
  1366  0010CA  5010               	movf	tratar_relogio@Relogio+1,w,c
  1367  0010CC  22DA               	addwfc	fsr2h,f,c
  1368  0010CE  0E01               	movlw	1
  1369  0010D0  BEDB               	btfsc	plusw2,7,c
  1370  0010D2  D011               	goto	l347
  1371  0010D4  0E01               	movlw	1
  1372  0010D6  50DB               	movf	plusw2,w,c
  1373  0010D8  E104               	bnz	u3130
  1374  0010DA  0E18               	movlw	24
  1375  0010DC  5CDE               	subwf	postinc2,w,c
  1376  0010DE  A0D8               	btfss	status,0,c
  1377  0010E0  D00A               	goto	l347
  1378  0010E2                     u3130:
  1379                           
  1380                           ;relogio.c: 26: Relogio->hora=0;
  1381  0010E2  EE20 F004          	lfsr	2,4
  1382  0010E6  500F               	movf	tratar_relogio@Relogio,w,c
  1383  0010E8  26D9               	addwf	fsr2l,f,c
  1384  0010EA  5010               	movf	tratar_relogio@Relogio+1,w,c
  1385  0010EC  22DA               	addwfc	fsr2h,f,c
  1386  0010EE  0E00               	movlw	0
  1387  0010F0  6EDE               	movwf	postinc2,c
  1388  0010F2  0E00               	movlw	0
  1389  0010F4  6EDD               	movwf	postdec2,c
  1390  0010F6                     l347:
  1391                           
  1392                           ;relogio.c: 27: }
  1393                           ;relogio.c: 28: if(Relogio->hora<0){
  1394  0010F6  EE20 F004          	lfsr	2,4
  1395  0010FA  500F               	movf	tratar_relogio@Relogio,w,c
  1396  0010FC  26D9               	addwf	fsr2l,f,c
  1397  0010FE  5010               	movf	tratar_relogio@Relogio+1,w,c
  1398  001100  22DA               	addwfc	fsr2h,f,c
  1399  001102  0E01               	movlw	1
  1400  001104  AEDB               	btfss	plusw2,7,c
  1401  001106  0012               	return	
  1402                           
  1403                           ;relogio.c: 29: Relogio->hora=23;
  1404  001108  EE20 F004          	lfsr	2,4
  1405  00110C  500F               	movf	tratar_relogio@Relogio,w,c
  1406  00110E  26D9               	addwf	fsr2l,f,c
  1407  001110  5010               	movf	tratar_relogio@Relogio+1,w,c
  1408  001112  22DA               	addwfc	fsr2h,f,c
  1409  001114  0E17               	movlw	23
  1410  001116  6EDE               	movwf	postinc2,c
  1411  001118  0E00               	movlw	0
  1412  00111A  6EDD               	movwf	postdec2,c
  1413  00111C  0012               	return	
  1414  00111E                     __end_of_tratar_relogio:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           intcon	equ	0xFF2
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           fsr1l	equ	0xFE1
  1425                           postinc2	equ	0xFDE
  1426                           postdec2	equ	0xFDD
  1427                           plusw2	equ	0xFDB
  1428                           fsr2h	equ	0xFDA
  1429                           fsr2l	equ	0xFD9
  1430                           status	equ	0xFD8
  1431                           
  1432 ;; *************** function _pisca_cursor *****************
  1433 ;; Defined at:
  1434 ;;		line 99 in file "display_LCD.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    4
  1455 ;; This function calls:
  1456 ;;		_SetDDRamAddr
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text2
  1463  001F42                     __ptext2:
  1464                           	opt stack 0
  1465  001F42                     _pisca_cursor:
  1466                           	opt stack 26
  1467                           
  1468                           ;display_LCD.c: 100: if(tela_exibida==0){
  1469                           
  1470                           ;incstack = 0
  1471  001F42  0100               	movlb	0	; () banked
  1472  001F44  5170               	movf	_tela_exibida& (0+255),w,b
  1473  001F46  0100               	movlb	0	; () banked
  1474  001F48  1171               	iorwf	(_tela_exibida+1)& (0+255),w,b
  1475  001F4A  A4D8               	btfss	status,2,c
  1476  001F4C  0012               	return	
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;display_LCD.c: 101: if(cursor==0) SetDDRamAddr(0x45);
  1480  001F4E  5048               	movf	_cursor,w,c
  1481  001F50  1049               	iorwf	_cursor+1,w,c
  1482  001F52  A4D8               	btfss	status,2,c
  1483  001F54  D003               	goto	l3454
  1484                           
  1485                           ; BSR set to: 0
  1486  001F56  0E45               	movlw	69
  1487  001F58  EC4F  F00F         	call	_SetDDRamAddr
  1488  001F5C                     l3454:
  1489                           
  1490                           ;display_LCD.c: 102: if(cursor==1) SetDDRamAddr(0x46);
  1491  001F5C  0448               	decf	_cursor,w,c
  1492  001F5E  1049               	iorwf	_cursor+1,w,c
  1493  001F60  A4D8               	btfss	status,2,c
  1494  001F62  D003               	goto	l3458
  1495  001F64  0E46               	movlw	70
  1496  001F66  EC4F  F00F         	call	_SetDDRamAddr
  1497  001F6A                     l3458:
  1498                           
  1499                           ;display_LCD.c: 103: if(cursor==2) SetDDRamAddr(0x4D);
  1500  001F6A  0E02               	movlw	2
  1501  001F6C  1848               	xorwf	_cursor,w,c
  1502  001F6E  1049               	iorwf	_cursor+1,w,c
  1503  001F70  A4D8               	btfss	status,2,c
  1504  001F72  D003               	goto	l3462
  1505  001F74  0E4D               	movlw	77
  1506  001F76  EC4F  F00F         	call	_SetDDRamAddr
  1507  001F7A                     l3462:
  1508                           
  1509                           ;display_LCD.c: 104: if(cursor==3) SetDDRamAddr(0x4E);
  1510  001F7A  0E03               	movlw	3
  1511  001F7C  1848               	xorwf	_cursor,w,c
  1512  001F7E  1049               	iorwf	_cursor+1,w,c
  1513  001F80  A4D8               	btfss	status,2,c
  1514  001F82  0012               	return	
  1515  001F84  0E4E               	movlw	78
  1516  001F86  EC4F  F00F         	call	_SetDDRamAddr
  1517  001F8A  0012               	return	
  1518  001F8C                     __end_of_pisca_cursor:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           intcon	equ	0xFF2
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           postdec1	equ	0xFE5
  1528                           fsr1l	equ	0xFE1
  1529                           postinc2	equ	0xFDE
  1530                           postdec2	equ	0xFDD
  1531                           plusw2	equ	0xFDB
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _maquina_estado *****************
  1537 ;; Defined at:
  1538 ;;		line 102 in file "serial.h"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1554 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1555 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1556 ;;Total ram usage:        2 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    3
  1559 ;; This function calls:
  1560 ;;		_trata_comando
  1561 ;;		_tx_data
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text3
  1568  002058                     __ptext3:
  1569                           	opt stack 0
  1570  002058                     _maquina_estado:
  1571                           	opt stack 27
  1572                           
  1573                           ;serial.h: 103: switch(ESTADO_COMUNICACAO){
  1574                           
  1575                           ;incstack = 0
  1576  002058  D00B               	goto	l3314
  1577  00205A                     l3306:
  1578                           
  1579                           ;serial.h: 105: trata_comando();
  1580  00205A  EC8F  F008         	call	_trata_comando	;wreg free
  1581                           
  1582                           ;serial.h: 106: break;
  1583  00205E  0012               	return	
  1584  002060                     l3308:
  1585                           
  1586                           ;serial.h: 109: tx_data();
  1587  002060  ECA6  F010         	call	_tx_data	;wreg free
  1588                           
  1589                           ;serial.h: 110: ESTADO_COMUNICACAO = '0';
  1590  002064  0E00               	movlw	0
  1591  002066  0100               	movlb	0	; () banked
  1592  002068  6F6B               	movwf	(_ESTADO_COMUNICACAO+1)& (0+255),b
  1593  00206A  0E30               	movlw	48
  1594  00206C  6F6A               	movwf	_ESTADO_COMUNICACAO& (0+255),b
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;serial.h: 115: };
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;serial.h: 114: break;
  1601                           
  1602                           ;serial.h: 113: case '0':
  1603                           
  1604                           ;serial.h: 111: break;
  1605  00206E  0012               	return	
  1606  002070                     l3314:
  1607  002070  C06A  F017         	movff	_ESTADO_COMUNICACAO,??_maquina_estado
  1608  002074  C06B  F018         	movff	_ESTADO_COMUNICACAO+1,??_maquina_estado+1
  1609                           
  1610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1611                           ; Switch size 1, requested type "space"
  1612                           ; Number of cases is 1, Range of values is 0 to 0
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte            4     3 (average)
  1616                           ;	Chosen strategy is simple_byte
  1617  002078  5018               	movf	??_maquina_estado+1,w,c
  1618  00207A  0A00               	xorlw	0	; case 0
  1619  00207C  A4D8               	btfss	status,2,c
  1620  00207E  0012               	return	
  1621                           
  1622                           ; Switch size 1, requested type "space"
  1623                           ; Number of cases is 3, Range of values is 48 to 50
  1624                           ; switch strategies available:
  1625                           ; Name         Instructions Cycles
  1626                           ; simple_byte           10     6 (average)
  1627                           ;	Chosen strategy is simple_byte
  1628  002080  5017               	movf	??_maquina_estado,w,c
  1629  002082  0A30               	xorlw	48	; case 48
  1630  002084  B4D8               	btfsc	status,2,c
  1631  002086  0012               	return	
  1632  002088  0A01               	xorlw	1	; case 49
  1633  00208A  B4D8               	btfsc	status,2,c
  1634  00208C  D7E6               	goto	l3306
  1635  00208E  0A03               	xorlw	3	; case 50
  1636  002090  A4D8               	btfss	status,2,c
  1637  002092  0012               	return	
  1638  002094  D7E5               	goto	l3308
  1639  002096                     __end_of_maquina_estado:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           intcon	equ	0xFF2
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           postdec1	equ	0xFE5
  1649                           fsr1l	equ	0xFE1
  1650                           postinc2	equ	0xFDE
  1651                           postdec2	equ	0xFDD
  1652                           plusw2	equ	0xFDB
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8
  1656                           
  1657 ;; *************** function _tx_data *****************
  1658 ;; Defined at:
  1659 ;;		line 31 in file "serial.h"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  cont            2   14[COMRAM] int 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0
  1674 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1676 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1677 ;;Total ram usage:        2 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_maquina_estado
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text4
  1688  00214C                     __ptext4:
  1689                           	opt stack 0
  1690  00214C                     _tx_data:
  1691                           	opt stack 28
  1692  00214C                     l111:
  1693  00214C  A89E               	btfss	3998,4,c	;volatile
  1694  00214E  D7FE               	goto	l111
  1695                           
  1696                           ;serial.h: 35: for (cont=0; cont<3; cont++) {
  1697  002150  0E00               	movlw	0
  1698  002152  6E10               	movwf	tx_data@cont+1,c
  1699  002154  0E00               	movlw	0
  1700  002156  6E0F               	movwf	tx_data@cont,c
  1701  002158                     l3064:
  1702  002158  BE10               	btfsc	tx_data@cont+1,7,c
  1703  00215A  D006               	goto	l116
  1704  00215C  5010               	movf	tx_data@cont+1,w,c
  1705  00215E  E111               	bnz	l119
  1706  002160  0E03               	movlw	3
  1707  002162  5C0F               	subwf	tx_data@cont,w,c
  1708  002164  B0D8               	btfsc	status,0,c
  1709  002166  0012               	return	
  1710  002168                     l116:
  1711  002168  A89E               	btfss	3998,4,c	;volatile
  1712  00216A  D7FE               	goto	l116
  1713                           
  1714                           ;serial.h: 37: TXREG = BUFF_RESP[cont];
  1715  00216C  0E60               	movlw	low _BUFF_RESP
  1716  00216E  240F               	addwf	tx_data@cont,w,c
  1717  002170  6ED9               	movwf	fsr2l,c
  1718  002172  0E00               	movlw	high _BUFF_RESP
  1719  002174  2010               	addwfc	tx_data@cont+1,w,c
  1720  002176  6EDA               	movwf	fsr2h,c
  1721  002178  50DF               	movf	indf2,w,c
  1722  00217A  6EAD               	movwf	4013,c	;volatile
  1723  00217C  4A0F               	infsnz	tx_data@cont,f,c
  1724  00217E  2A10               	incf	tx_data@cont+1,f,c
  1725  002180  D7EB               	goto	l3064
  1726  002182                     l119:
  1727  002182  0012               	return		;funcret
  1728  002184                     __end_of_tx_data:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           intcon	equ	0xFF2
  1735                           postinc0	equ	0xFEE
  1736                           wreg	equ	0xFE8
  1737                           postdec1	equ	0xFE5
  1738                           fsr1l	equ	0xFE1
  1739                           indf2	equ	0xFDF
  1740                           postinc2	equ	0xFDE
  1741                           postdec2	equ	0xFDD
  1742                           plusw2	equ	0xFDB
  1743                           fsr2h	equ	0xFDA
  1744                           fsr2l	equ	0xFD9
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _trata_comando *****************
  1748 ;; Defined at:
  1749 ;;		line 58 in file "serial.h"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1765 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1766 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1767 ;;Total ram usage:        2 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    2
  1770 ;; This function calls:
  1771 ;;		___awmod
  1772 ;;		___wmul
  1773 ;; This function is called by:
  1774 ;;		_maquina_estado
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text5
  1779  00111E                     __ptext5:
  1780                           	opt stack 0
  1781  00111E                     _trata_comando:
  1782                           	opt stack 27
  1783                           
  1784                           ;serial.h: 60: BUFF_RESP[0] = BUFF_COM[0];
  1785                           
  1786                           ;incstack = 0
  1787  00111E  C043  F060         	movff	_BUFF_COM,_BUFF_RESP
  1788                           
  1789                           ;serial.h: 61: BUFF_RESP[1] = BUFF_COM[1];
  1790  001122  C044  F061         	movff	_BUFF_COM+1,_BUFF_RESP+1
  1791                           
  1792                           ;serial.h: 62: BUFF_RESP[2] = BUFF_COM[2];
  1793  001126  C045  F062         	movff	_BUFF_COM+2,_BUFF_RESP+2
  1794                           
  1795                           ;serial.h: 64: switch(BUFF_COM[1]){
  1796  00112A  D08E               	goto	l3094
  1797  00112C                     l3076:
  1798                           
  1799                           ;serial.h: 68: temperatura_minima=((int)BUFF_COM[0]-48)*10+(temperatura_minima%10);
  1800  00112C  0ED0               	movlw	208
  1801  00112E  2443               	addwf	_BUFF_COM,w,c
  1802  001130  6E0F               	movwf	___wmul@multiplier,c
  1803  001132  6A10               	clrf	___wmul@multiplier+1,c
  1804  001134  0EFF               	movlw	255
  1805  001136  2210               	addwfc	___wmul@multiplier+1,f,c
  1806  001138  0E00               	movlw	0
  1807  00113A  6E12               	movwf	___wmul@multiplicand+1,c
  1808  00113C  0E0A               	movlw	10
  1809  00113E  6E11               	movwf	___wmul@multiplicand,c
  1810  001140  EC0E  F011         	call	___wmul	;wreg free
  1811  001144  C00F  F015         	movff	?___wmul,??_trata_comando
  1812  001148  C010  F016         	movff	?___wmul+1,??_trata_comando+1
  1813  00114C  C04F  F00F         	movff	_temperatura_minima,___awmod@dividend
  1814  001150  C050  F010         	movff	_temperatura_minima+1,___awmod@dividend+1
  1815  001154  0E00               	movlw	0
  1816  001156  6E12               	movwf	___awmod@divisor+1,c
  1817  001158  0E0A               	movlw	10
  1818  00115A  6E11               	movwf	___awmod@divisor,c
  1819  00115C  ECEB  F00E         	call	___awmod	;wreg free
  1820  001160  500F               	movf	?___awmod,w,c
  1821  001162  2415               	addwf	??_trata_comando,w,c
  1822  001164  6E4F               	movwf	_temperatura_minima,c
  1823  001166  5010               	movf	?___awmod+1,w,c
  1824  001168  D01D               	goto	L1
  1825  00116A                     l3078:
  1826                           
  1827                           ;serial.h: 72: temperatura_minima=((int)BUFF_COM[0]-48)+(temperatura_minima-(temperatura
      +                          _minima%10));
  1828  00116A  C04F  F00F         	movff	_temperatura_minima,___awmod@dividend
  1829  00116E  C050  F010         	movff	_temperatura_minima+1,___awmod@dividend+1
  1830  001172  0E00               	movlw	0
  1831  001174  6E12               	movwf	___awmod@divisor+1,c
  1832  001176  0E0A               	movlw	10
  1833  001178  6E11               	movwf	___awmod@divisor,c
  1834  00117A  ECEB  F00E         	call	___awmod	;wreg free
  1835  00117E  1E0F               	comf	?___awmod,f,c
  1836  001180  1E10               	comf	?___awmod+1,f,c
  1837  001182  4A0F               	infsnz	?___awmod,f,c
  1838  001184  2A10               	incf	?___awmod+1,f,c
  1839  001186  5043               	movf	_BUFF_COM,w,c
  1840  001188  6E15               	movwf	??_trata_comando& (0+255),c
  1841  00118A  6A16               	clrf	(??_trata_comando+1)& (0+255),c
  1842  00118C  500F               	movf	?___awmod,w,c
  1843  00118E  2615               	addwf	??_trata_comando,f,c
  1844  001190  5010               	movf	?___awmod+1,w,c
  1845  001192  2216               	addwfc	??_trata_comando+1,f,c
  1846  001194  504F               	movf	_temperatura_minima,w,c
  1847  001196  2615               	addwf	??_trata_comando,f,c
  1848  001198  5050               	movf	_temperatura_minima+1,w,c
  1849  00119A  2216               	addwfc	??_trata_comando+1,f,c
  1850  00119C  0ED0               	movlw	208
  1851  00119E  2415               	addwf	??_trata_comando,w,c
  1852  0011A0  6E4F               	movwf	_temperatura_minima,c
  1853  0011A2  0EFF               	movlw	255
  1854  0011A4                     L1:
  1855  0011A4  2016               	addwfc	??_trata_comando+1,w,c
  1856  0011A6  6E50               	movwf	_temperatura_minima+1,c
  1857                           
  1858                           ;serial.h: 77: };
  1859                           
  1860                           ;serial.h: 76: break;
  1861                           
  1862                           ;serial.h: 75: default:
  1863                           
  1864                           ;serial.h: 73: break;
  1865  0011A8  D056               	goto	l3096
  1866  0011AA                     l3082:
  1867  0011AA  5045               	movf	_BUFF_COM+2,w,c
  1868                           
  1869                           ; Switch size 1, requested type "space"
  1870                           ; Number of cases is 2, Range of values is 49 to 50
  1871                           ; switch strategies available:
  1872                           ; Name         Instructions Cycles
  1873                           ; simple_byte            7     4 (average)
  1874                           ;	Chosen strategy is simple_byte
  1875  0011AC  0A31               	xorlw	49	; case 49
  1876  0011AE  B4D8               	btfsc	status,2,c
  1877  0011B0  D7BD               	goto	l3076
  1878  0011B2  0A03               	xorlw	3	; case 50
  1879  0011B4  B4D8               	btfsc	status,2,c
  1880  0011B6  D7D9               	goto	l3078
  1881                           
  1882                           ;serial.h: 78: break;
  1883  0011B8  D04E               	goto	l3096
  1884  0011BA                     l3084:
  1885                           
  1886                           ;serial.h: 83: temperatura_maxima=((int)BUFF_COM[0]-48)*10+(temperatura_maxima%10);
  1887  0011BA  0ED0               	movlw	208
  1888  0011BC  2443               	addwf	_BUFF_COM,w,c
  1889  0011BE  6E0F               	movwf	___wmul@multiplier,c
  1890  0011C0  6A10               	clrf	___wmul@multiplier+1,c
  1891  0011C2  0EFF               	movlw	255
  1892  0011C4  2210               	addwfc	___wmul@multiplier+1,f,c
  1893  0011C6  0E00               	movlw	0
  1894  0011C8  6E12               	movwf	___wmul@multiplicand+1,c
  1895  0011CA  0E0A               	movlw	10
  1896  0011CC  6E11               	movwf	___wmul@multiplicand,c
  1897  0011CE  EC0E  F011         	call	___wmul	;wreg free
  1898  0011D2  C00F  F015         	movff	?___wmul,??_trata_comando
  1899  0011D6  C010  F016         	movff	?___wmul+1,??_trata_comando+1
  1900  0011DA  C04D  F00F         	movff	_temperatura_maxima,___awmod@dividend
  1901  0011DE  C04E  F010         	movff	_temperatura_maxima+1,___awmod@dividend+1
  1902  0011E2  0E00               	movlw	0
  1903  0011E4  6E12               	movwf	___awmod@divisor+1,c
  1904  0011E6  0E0A               	movlw	10
  1905  0011E8  6E11               	movwf	___awmod@divisor,c
  1906  0011EA  ECEB  F00E         	call	___awmod	;wreg free
  1907  0011EE  500F               	movf	?___awmod,w,c
  1908  0011F0  2415               	addwf	??_trata_comando,w,c
  1909  0011F2  6E4D               	movwf	_temperatura_maxima,c
  1910  0011F4  5010               	movf	?___awmod+1,w,c
  1911  0011F6  D01D               	goto	L2
  1912  0011F8                     l3086:
  1913                           
  1914                           ;serial.h: 87: temperatura_maxima=((int)BUFF_COM[0]-48)+(temperatura_maxima-(temperatura
      +                          _maxima%10));
  1915  0011F8  C04D  F00F         	movff	_temperatura_maxima,___awmod@dividend
  1916  0011FC  C04E  F010         	movff	_temperatura_maxima+1,___awmod@dividend+1
  1917  001200  0E00               	movlw	0
  1918  001202  6E12               	movwf	___awmod@divisor+1,c
  1919  001204  0E0A               	movlw	10
  1920  001206  6E11               	movwf	___awmod@divisor,c
  1921  001208  ECEB  F00E         	call	___awmod	;wreg free
  1922  00120C  1E0F               	comf	?___awmod,f,c
  1923  00120E  1E10               	comf	?___awmod+1,f,c
  1924  001210  4A0F               	infsnz	?___awmod,f,c
  1925  001212  2A10               	incf	?___awmod+1,f,c
  1926  001214  5043               	movf	_BUFF_COM,w,c
  1927  001216  6E15               	movwf	??_trata_comando& (0+255),c
  1928  001218  6A16               	clrf	(??_trata_comando+1)& (0+255),c
  1929  00121A  500F               	movf	?___awmod,w,c
  1930  00121C  2615               	addwf	??_trata_comando,f,c
  1931  00121E  5010               	movf	?___awmod+1,w,c
  1932  001220  2216               	addwfc	??_trata_comando+1,f,c
  1933  001222  504D               	movf	_temperatura_maxima,w,c
  1934  001224  2615               	addwf	??_trata_comando,f,c
  1935  001226  504E               	movf	_temperatura_maxima+1,w,c
  1936  001228  2216               	addwfc	??_trata_comando+1,f,c
  1937  00122A  0ED0               	movlw	208
  1938  00122C  2415               	addwf	??_trata_comando,w,c
  1939  00122E  6E4D               	movwf	_temperatura_maxima,c
  1940  001230  0EFF               	movlw	255
  1941  001232                     L2:
  1942  001232  2016               	addwfc	??_trata_comando+1,w,c
  1943  001234  6E4E               	movwf	_temperatura_maxima+1,c
  1944                           
  1945                           ;serial.h: 92: };
  1946                           
  1947                           ;serial.h: 91: break;
  1948                           
  1949                           ;serial.h: 90: default:
  1950                           
  1951                           ;serial.h: 88: break;
  1952  001236  D00F               	goto	l3096
  1953  001238                     l3090:
  1954  001238  5045               	movf	_BUFF_COM+2,w,c
  1955                           
  1956                           ; Switch size 1, requested type "space"
  1957                           ; Number of cases is 2, Range of values is 49 to 50
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte            7     4 (average)
  1961                           ;	Chosen strategy is simple_byte
  1962  00123A  0A31               	xorlw	49	; case 49
  1963  00123C  B4D8               	btfsc	status,2,c
  1964  00123E  D7BD               	goto	l3084
  1965  001240  0A03               	xorlw	3	; case 50
  1966  001242  B4D8               	btfsc	status,2,c
  1967  001244  D7D9               	goto	l3086
  1968                           
  1969                           ;serial.h: 97: };
  1970                           
  1971                           ;serial.h: 96: break;
  1972                           
  1973                           ;serial.h: 95: default:
  1974                           
  1975                           ;serial.h: 93: break;
  1976  001246  D007               	goto	l3096
  1977  001248                     l3094:
  1978  001248  5044               	movf	_BUFF_COM+1,w,c
  1979                           
  1980                           ; Switch size 1, requested type "space"
  1981                           ; Number of cases is 2, Range of values is 49 to 50
  1982                           ; switch strategies available:
  1983                           ; Name         Instructions Cycles
  1984                           ; simple_byte            7     4 (average)
  1985                           ;	Chosen strategy is simple_byte
  1986  00124A  0A31               	xorlw	49	; case 49
  1987  00124C  B4D8               	btfsc	status,2,c
  1988  00124E  D7AD               	goto	l3082
  1989  001250  0A03               	xorlw	3	; case 50
  1990  001252  B4D8               	btfsc	status,2,c
  1991  001254  D7F1               	goto	l3090
  1992  001256                     l3096:
  1993                           
  1994                           ;serial.h: 99: ESTADO_COMUNICACAO = '2';
  1995  001256  0E00               	movlw	0
  1996  001258  0100               	movlb	0	; () banked
  1997  00125A  6F6B               	movwf	(_ESTADO_COMUNICACAO+1)& (0+255),b
  1998  00125C  0E32               	movlw	50
  1999  00125E  6F6A               	movwf	_ESTADO_COMUNICACAO& (0+255),b
  2000                           
  2001                           ; BSR set to: 0
  2002  001260  0012               	return		;funcret
  2003  001262                     __end_of_trata_comando:
  2004                           	opt stack 0
  2005                           tblptru	equ	0xFF8
  2006                           tblptrh	equ	0xFF7
  2007                           tblptrl	equ	0xFF6
  2008                           tablat	equ	0xFF5
  2009                           intcon	equ	0xFF2
  2010                           postinc0	equ	0xFEE
  2011                           wreg	equ	0xFE8
  2012                           postdec1	equ	0xFE5
  2013                           fsr1l	equ	0xFE1
  2014                           indf2	equ	0xFDF
  2015                           postinc2	equ	0xFDE
  2016                           postdec2	equ	0xFDD
  2017                           plusw2	equ	0xFDB
  2018                           fsr2h	equ	0xFDA
  2019                           fsr2l	equ	0xFD9
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function ___wmul *****************
  2023 ;; Defined at:
  2024 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  multiplier      2   14[COMRAM] unsigned int 
  2027 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  product         2   18[COMRAM] unsigned int 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2   14[COMRAM] unsigned int 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, prodl, prodh
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         4       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2042 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:        6 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_trata_comando
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text6
  2054  00221C                     __ptext6:
  2055                           	opt stack 0
  2056  00221C                     ___wmul:
  2057                           	opt stack 27
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;incstack = 0
  2061  00221C  500F               	movf	___wmul@multiplier,w,c
  2062  00221E  0211               	mulwf	___wmul@multiplicand,c
  2063  002220  CFF3 F013          	movff	prodl,___wmul@product
  2064  002224  CFF4 F014          	movff	prodh,___wmul@product+1
  2065  002228  500F               	movf	___wmul@multiplier,w,c
  2066  00222A  0212               	mulwf	___wmul@multiplicand+1,c
  2067  00222C  50F3               	movf	prodl,w,c
  2068  00222E  2614               	addwf	___wmul@product+1,f,c
  2069  002230  5010               	movf	___wmul@multiplier+1,w,c
  2070  002232  0211               	mulwf	___wmul@multiplicand,c
  2071  002234  50F3               	movf	prodl,w,c
  2072  002236  2614               	addwf	___wmul@product+1,f,c
  2073  002238  C013  F00F         	movff	___wmul@product,?___wmul
  2074  00223C  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2075  002240  0012               	return	
  2076  002242                     __end_of___wmul:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           prodh	equ	0xFF4
  2083                           prodl	equ	0xFF3
  2084                           intcon	equ	0xFF2
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           postdec1	equ	0xFE5
  2088                           fsr1l	equ	0xFE1
  2089                           indf2	equ	0xFDF
  2090                           postinc2	equ	0xFDE
  2091                           postdec2	equ	0xFDD
  2092                           plusw2	equ	0xFDB
  2093                           fsr2h	equ	0xFDA
  2094                           fsr2l	equ	0xFD9
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _io_eeprom *****************
  2098 ;; Defined at:
  2099 ;;		line 82 in file "eeprom.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  e               2   23[COMRAM] int 
  2104 ;;  Data_read       1   25[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0
  2115 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2117 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        5 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    3
  2121 ;; This function calls:
  2122 ;;		_EEPROM_Read
  2123 ;;		_EEPROM_WriteString
  2124 ;;		_USART_TransmitChar
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text7
  2131  001FD2                     __ptext7:
  2132                           	opt stack 0
  2133  001FD2                     _io_eeprom:
  2134                           	opt stack 27
  2135                           
  2136                           ;eeprom.c: 83: int e=0;
  2137                           
  2138                           ;incstack = 0
  2139  001FD2  0E00               	movlw	0
  2140  001FD4  6E19               	movwf	io_eeprom@e+1,c
  2141  001FD6  0E00               	movlw	0
  2142  001FD8  6E18               	movwf	io_eeprom@e,c
  2143                           
  2144                           ;eeprom.c: 84: char Data_read;
  2145                           ;eeprom.c: 87: EEPROM_WriteString(0, string_gravar);
  2146  001FDA  0E00               	movlw	0
  2147  001FDC  6E13               	movwf	EEPROM_WriteString@address+1,c
  2148  001FDE  0E00               	movlw	0
  2149  001FE0  6E12               	movwf	EEPROM_WriteString@address,c
  2150  001FE2  504A               	movf	_string_gravar,w,c
  2151  001FE4  6E16               	movwf	??_io_eeprom& (0+255),c
  2152  001FE6  6A17               	clrf	(??_io_eeprom+1)& (0+255),c
  2153  001FE8  C016  F014         	movff	??_io_eeprom,EEPROM_WriteString@data
  2154  001FEC  C017  F015         	movff	??_io_eeprom+1,EEPROM_WriteString@data+1
  2155  001FF0  ECDE  F010         	call	_EEPROM_WriteString	;wreg free
  2156                           
  2157                           ;eeprom.c: 90: while(Data_read!=0xff){
  2158  001FF4  D00C               	goto	l3496
  2159  001FF6                     l3492:
  2160                           
  2161                           ;eeprom.c: 91: Data_read=EEPROM_Read(e);
  2162  001FF6  C018  F00F         	movff	io_eeprom@e,EEPROM_Read@address
  2163  001FFA  C019  F010         	movff	io_eeprom@e+1,EEPROM_Read@address+1
  2164  001FFE  EC8C  F011         	call	_EEPROM_Read	;wreg free
  2165  002002  6E1A               	movwf	io_eeprom@Data_read,c
  2166                           
  2167                           ;eeprom.c: 92: USART_TransmitChar(Data_read);
  2168  002004  501A               	movf	io_eeprom@Data_read,w,c
  2169  002006  ECA1  F011         	call	_USART_TransmitChar
  2170                           
  2171                           ;eeprom.c: 93: e++;
  2172  00200A  4A18               	infsnz	io_eeprom@e,f,c
  2173  00200C  2A19               	incf	io_eeprom@e+1,f,c
  2174  00200E                     l3496:
  2175  00200E  281A               	incf	io_eeprom@Data_read,w,c
  2176  002010  B4D8               	btfsc	status,2,c
  2177  002012  0012               	return	
  2178  002014  D7F0               	goto	l3492
  2179  002016                     __end_of_io_eeprom:
  2180                           	opt stack 0
  2181                           tblptru	equ	0xFF8
  2182                           tblptrh	equ	0xFF7
  2183                           tblptrl	equ	0xFF6
  2184                           tablat	equ	0xFF5
  2185                           prodh	equ	0xFF4
  2186                           prodl	equ	0xFF3
  2187                           intcon	equ	0xFF2
  2188                           postinc0	equ	0xFEE
  2189                           wreg	equ	0xFE8
  2190                           postdec1	equ	0xFE5
  2191                           fsr1l	equ	0xFE1
  2192                           indf2	equ	0xFDF
  2193                           postinc2	equ	0xFDE
  2194                           postdec2	equ	0xFDD
  2195                           plusw2	equ	0xFDB
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _USART_TransmitChar *****************
  2201 ;; Defined at:
  2202 ;;		line 21 in file "eeprom.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  out             1    wreg     unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  out             1   14[COMRAM] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0
  2217 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2219 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2220 ;;Total ram usage:        1 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_io_eeprom
  2227 ;;		_USART_SendString
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text8
  2232  002342                     __ptext8:
  2233                           	opt stack 0
  2234  002342                     _USART_TransmitChar:
  2235                           	opt stack 28
  2236                           
  2237                           ;incstack = 0
  2238                           ;USART_TransmitChar@out stored from wreg
  2239  002342  6E0F               	movwf	USART_TransmitChar@out,c
  2240  002344                     l405:
  2241  002344  A89E               	btfss	3998,4,c	;volatile
  2242  002346  D7FE               	goto	l405
  2243                           
  2244                           ;eeprom.c: 23: TXREG=out;
  2245  002348  C00F  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
  2246  00234C  0012               	return		;funcret
  2247  00234E                     __end_of_USART_TransmitChar:
  2248                           	opt stack 0
  2249                           tblptru	equ	0xFF8
  2250                           tblptrh	equ	0xFF7
  2251                           tblptrl	equ	0xFF6
  2252                           tablat	equ	0xFF5
  2253                           prodh	equ	0xFF4
  2254                           prodl	equ	0xFF3
  2255                           intcon	equ	0xFF2
  2256                           postinc0	equ	0xFEE
  2257                           wreg	equ	0xFE8
  2258                           postdec1	equ	0xFE5
  2259                           fsr1l	equ	0xFE1
  2260                           indf2	equ	0xFDF
  2261                           postinc2	equ	0xFDE
  2262                           postdec2	equ	0xFDD
  2263                           plusw2	equ	0xFDB
  2264                           fsr2h	equ	0xFDA
  2265                           fsr2l	equ	0xFD9
  2266                           status	equ	0xFD8
  2267                           
  2268 ;; *************** function _EEPROM_WriteString *****************
  2269 ;; Defined at:
  2270 ;;		line 64 in file "eeprom.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  address         2   17[COMRAM] int 
  2273 ;;  data            2   19[COMRAM] PTR unsigned char 
  2274 ;;		 -> RAM(2047), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2286 ;;      Params:         4       0       0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2289 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        4 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    2
  2293 ;; This function calls:
  2294 ;;		_EEPROM_Write
  2295 ;; This function is called by:
  2296 ;;		_io_eeprom
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text9
  2301  0021BC                     __ptext9:
  2302                           	opt stack 0
  2303  0021BC                     _EEPROM_WriteString:
  2304                           	opt stack 27
  2305                           
  2306                           ;eeprom.c: 66: while(*data!=0){
  2307                           
  2308                           ;incstack = 0
  2309  0021BC  D010               	goto	l3190
  2310  0021BE                     l3184:
  2311                           
  2312                           ;eeprom.c: 67: EEPROM_Write(address,*data);
  2313  0021BE  C012  F00F         	movff	EEPROM_WriteString@address,EEPROM_Write@address
  2314  0021C2  C013  F010         	movff	EEPROM_WriteString@address+1,EEPROM_Write@address+1
  2315  0021C6  C014  FFD9         	movff	EEPROM_WriteString@data,fsr2l
  2316  0021CA  C015  FFDA         	movff	EEPROM_WriteString@data+1,fsr2h
  2317  0021CE  50DF               	movf	indf2,w,c
  2318  0021D0  6E11               	movwf	EEPROM_Write@data,c
  2319  0021D2  EC21  F011         	call	_EEPROM_Write	;wreg free
  2320                           
  2321                           ;eeprom.c: 68: address++;
  2322  0021D6  4A12               	infsnz	EEPROM_WriteString@address,f,c
  2323  0021D8  2A13               	incf	EEPROM_WriteString@address+1,f,c
  2324                           
  2325                           ;eeprom.c: 69: *data++;
  2326  0021DA  4A14               	infsnz	EEPROM_WriteString@data,f,c
  2327  0021DC  2A15               	incf	EEPROM_WriteString@data+1,f,c
  2328  0021DE                     l3190:
  2329  0021DE  C014  FFD9         	movff	EEPROM_WriteString@data,fsr2l
  2330  0021E2  C015  FFDA         	movff	EEPROM_WriteString@data+1,fsr2h
  2331  0021E6  50DF               	movf	indf2,w,c
  2332  0021E8  B4D8               	btfsc	status,2,c
  2333  0021EA  0012               	return	
  2334  0021EC  D7E8               	goto	l3184
  2335  0021EE                     __end_of_EEPROM_WriteString:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           prodh	equ	0xFF4
  2342                           prodl	equ	0xFF3
  2343                           intcon	equ	0xFF2
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1l	equ	0xFE1
  2348                           indf2	equ	0xFDF
  2349                           postinc2	equ	0xFDE
  2350                           postdec2	equ	0xFDD
  2351                           plusw2	equ	0xFDB
  2352                           fsr2h	equ	0xFDA
  2353                           fsr2l	equ	0xFD9
  2354                           status	equ	0xFD8
  2355                           
  2356 ;; *************** function _EEPROM_Write *****************
  2357 ;; Defined at:
  2358 ;;		line 42 in file "eeprom.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  address         2   14[COMRAM] int 
  2361 ;;  data            1   16[COMRAM] unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2373 ;;      Params:         3       0       0       0       0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2376 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2377 ;;Total ram usage:        3 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    1
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_EEPROM_WriteString
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text10
  2388  002242                     __ptext10:
  2389                           	opt stack 0
  2390  002242                     _EEPROM_Write:
  2391                           	opt stack 27
  2392                           
  2393                           ;eeprom.c: 44: EEADR=address;
  2394                           
  2395                           ;incstack = 0
  2396  002242  C00F  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  2397                           
  2398                           ;eeprom.c: 45: EEDATA=data;
  2399  002246  C011  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  2400                           
  2401                           ;eeprom.c: 46: EECON1bits.EEPGD=0;
  2402  00224A  9EA6               	bcf	4006,7,c	;volatile
  2403                           
  2404                           ;eeprom.c: 47: EECON1bits.CFGS=0;
  2405  00224C  9CA6               	bcf	4006,6,c	;volatile
  2406                           
  2407                           ;eeprom.c: 48: EECON1bits.WREN=1;
  2408  00224E  84A6               	bsf	4006,2,c	;volatile
  2409                           
  2410                           ;eeprom.c: 49: INTCONbits.GIE=0;
  2411  002250  9EF2               	bcf	intcon,7,c	;volatile
  2412                           
  2413                           ;eeprom.c: 52: EECON2=0x55;
  2414  002252  0E55               	movlw	85
  2415  002254  6EA7               	movwf	4007,c	;volatile
  2416                           
  2417                           ;eeprom.c: 53: EECON2=0xaa;
  2418  002256  0EAA               	movlw	170
  2419  002258  6EA7               	movwf	4007,c	;volatile
  2420                           
  2421                           ;eeprom.c: 55: EECON1bits.WR=1;
  2422  00225A  82A6               	bsf	4006,1,c	;volatile
  2423                           
  2424                           ;eeprom.c: 56: INTCONbits.GIE=1;
  2425  00225C  8EF2               	bsf	intcon,7,c	;volatile
  2426  00225E                     l428:
  2427  00225E  A8A1               	btfss	4001,4,c	;volatile
  2428  002260  D7FE               	goto	l428
  2429                           
  2430                           ;eeprom.c: 60: PIR2bits.EEIF=0;
  2431  002262  98A1               	bcf	4001,4,c	;volatile
  2432  002264  0012               	return		;funcret
  2433  002266                     __end_of_EEPROM_Write:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postdec1	equ	0xFE5
  2445                           fsr1l	equ	0xFE1
  2446                           indf2	equ	0xFDF
  2447                           postinc2	equ	0xFDE
  2448                           postdec2	equ	0xFDD
  2449                           plusw2	equ	0xFDB
  2450                           fsr2h	equ	0xFDA
  2451                           fsr2l	equ	0xFD9
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _EEPROM_Read *****************
  2455 ;; Defined at:
  2456 ;;		line 73 in file "eeprom.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  address         2   14[COMRAM] int 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      unsigned char 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2470 ;;      Params:         2       0       0       0       0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2473 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_io_eeprom
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text11
  2485  002318                     __ptext11:
  2486                           	opt stack 0
  2487  002318                     _EEPROM_Read:
  2488                           	opt stack 28
  2489                           
  2490                           ;eeprom.c: 75: EEADR=address;
  2491                           
  2492                           ;incstack = 0
  2493  002318  C00F  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  2494                           
  2495                           ;eeprom.c: 76: EECON1bits.WREN=0;
  2496  00231C  94A6               	bcf	4006,2,c	;volatile
  2497                           
  2498                           ;eeprom.c: 77: EECON1bits.EEPGD=0;
  2499  00231E  9EA6               	bcf	4006,7,c	;volatile
  2500                           
  2501                           ;eeprom.c: 78: EECON1bits.RD=1;
  2502  002320  80A6               	bsf	4006,0,c	;volatile
  2503                           
  2504                           ;eeprom.c: 79: return(EEDATA);
  2505  002322  50A8               	movf	4008,w,c	;volatile
  2506  002324  0012               	return	
  2507  002326                     __end_of_EEPROM_Read:
  2508                           	opt stack 0
  2509                           tblptru	equ	0xFF8
  2510                           tblptrh	equ	0xFF7
  2511                           tblptrl	equ	0xFF6
  2512                           tablat	equ	0xFF5
  2513                           prodh	equ	0xFF4
  2514                           prodl	equ	0xFF3
  2515                           intcon	equ	0xFF2
  2516                           postinc0	equ	0xFEE
  2517                           wreg	equ	0xFE8
  2518                           postdec1	equ	0xFE5
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           plusw2	equ	0xFDB
  2524                           fsr2h	equ	0xFDA
  2525                           fsr2l	equ	0xFD9
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _init_XLCD *****************
  2529 ;; Defined at:
  2530 ;;		line 19 in file "display_LCD.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2544 ;;      Params:         0       0       0       0       0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2547 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2548 ;;Total ram usage:        0 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    5
  2551 ;; This function calls:
  2552 ;;		_BusyXLCD
  2553 ;;		_OpenXLCD
  2554 ;;		_WriteCmdXLCD
  2555 ;; This function is called by:
  2556 ;;		_main
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text12
  2561  0022AE                     __ptext12:
  2562                           	opt stack 0
  2563  0022AE                     _init_XLCD:
  2564                           	opt stack 25
  2565                           
  2566                           ;display_LCD.c: 20: OpenXLCD(0b00101100&0b00111000);
  2567                           
  2568                           ;incstack = 0
  2569  0022AE  0E28               	movlw	40
  2570  0022B0  ECCE  F00C         	call	_OpenXLCD
  2571  0022B4                     l3322:
  2572  0022B4  EC89  F010         	call	_BusyXLCD	;wreg free
  2573  0022B8  0900               	iorlw	0
  2574  0022BA  A4D8               	btfss	status,2,c
  2575  0022BC  D7FB               	goto	l3322
  2576                           
  2577                           ;display_LCD.c: 22: WriteCmdXLCD(0x06);
  2578  0022BE  0E06               	movlw	6
  2579  0022C0  EC6A  F010         	call	_WriteCmdXLCD
  2580                           
  2581                           ;display_LCD.c: 23: WriteCmdXLCD(0x0C);
  2582  0022C4  0E0C               	movlw	12
  2583  0022C6  EC6A  F010         	call	_WriteCmdXLCD
  2584  0022CA  0012               	return		;funcret
  2585  0022CC                     __end_of_init_XLCD:
  2586                           	opt stack 0
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           prodh	equ	0xFF4
  2592                           prodl	equ	0xFF3
  2593                           intcon	equ	0xFF2
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           postdec1	equ	0xFE5
  2597                           fsr1l	equ	0xFE1
  2598                           indf2	equ	0xFDF
  2599                           postinc2	equ	0xFDE
  2600                           postdec2	equ	0xFDD
  2601                           plusw2	equ	0xFDB
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _OpenXLCD *****************
  2607 ;; Defined at:
  2608 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  lcdtype         1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  lcdtype         1   19[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         0       0       0       0       0       0       0       0       0
  2623 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2625 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    4
  2629 ;; This function calls:
  2630 ;;		_BusyXLCD
  2631 ;;		_Delay10KTCYx
  2632 ;;		_DelayPORXLCD
  2633 ;;		_SetDDRamAddr
  2634 ;;		_WriteCmdXLCD
  2635 ;; This function is called by:
  2636 ;;		_init_XLCD
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text13
  2641  00199C                     __ptext13:
  2642                           	opt stack 0
  2643  00199C                     _OpenXLCD:
  2644                           	opt stack 25
  2645                           
  2646                           ;incstack = 0
  2647                           ;OpenXLCD@lcdtype stored from wreg
  2648  00199C  6E14               	movwf	OpenXLCD@lcdtype,c
  2649  00199E  0EF0               	movlw	240
  2650  0019A0  1681               	andwf	3969,f,c	;volatile
  2651  0019A2  0EF0               	movlw	240
  2652  0019A4  1693               	andwf	3987,f,c	;volatile
  2653  0019A6  9C93               	bcf	3987,6,c	;volatile
  2654  0019A8  9A93               	bcf	3987,5,c	;volatile
  2655  0019AA  9893               	bcf	3987,4,c	;volatile
  2656  0019AC  9C8A               	bcf	3978,6,c	;volatile
  2657  0019AE  9A8A               	bcf	3978,5,c	;volatile
  2658  0019B0  988A               	bcf	3978,4,c	;volatile
  2659  0019B2  ECAD  F011         	call	_DelayPORXLCD	;wreg free
  2660  0019B6  0E30               	movlw	48
  2661  0019B8  EC6A  F010         	call	_WriteCmdXLCD
  2662  0019BC  0E05               	movlw	5
  2663  0019BE  EC66  F011         	call	_Delay10KTCYx
  2664  0019C2  0E30               	movlw	48
  2665  0019C4  EC6A  F010         	call	_WriteCmdXLCD
  2666  0019C8  0E01               	movlw	1
  2667  0019CA  EC66  F011         	call	_Delay10KTCYx
  2668  0019CE  0E32               	movlw	50
  2669  0019D0  EC6A  F010         	call	_WriteCmdXLCD
  2670  0019D4                     l3150:
  2671  0019D4  EC89  F010         	call	_BusyXLCD	;wreg free
  2672  0019D8  0900               	iorlw	0
  2673  0019DA  A4D8               	btfss	status,2,c
  2674  0019DC  D7FB               	goto	l3150
  2675  0019DE                     l3152:
  2676  0019DE  EC89  F010         	call	_BusyXLCD	;wreg free
  2677  0019E2  0900               	iorlw	0
  2678  0019E4  A4D8               	btfss	status,2,c
  2679  0019E6  D7FB               	goto	l3152
  2680  0019E8  5014               	movf	OpenXLCD@lcdtype,w,c
  2681  0019EA  EC6A  F010         	call	_WriteCmdXLCD
  2682  0019EE                     l3156:
  2683  0019EE  EC89  F010         	call	_BusyXLCD	;wreg free
  2684  0019F2  0900               	iorlw	0
  2685  0019F4  A4D8               	btfss	status,2,c
  2686  0019F6  D7FB               	goto	l3156
  2687  0019F8  0E08               	movlw	8
  2688  0019FA  EC6A  F010         	call	_WriteCmdXLCD
  2689  0019FE                     l3160:
  2690  0019FE  EC89  F010         	call	_BusyXLCD	;wreg free
  2691  001A02  0900               	iorlw	0
  2692  001A04  A4D8               	btfss	status,2,c
  2693  001A06  D7FB               	goto	l3160
  2694  001A08  0E0F               	movlw	15
  2695  001A0A  EC6A  F010         	call	_WriteCmdXLCD
  2696  001A0E                     l3164:
  2697  001A0E  EC89  F010         	call	_BusyXLCD	;wreg free
  2698  001A12  0900               	iorlw	0
  2699  001A14  A4D8               	btfss	status,2,c
  2700  001A16  D7FB               	goto	l3164
  2701  001A18  0E01               	movlw	1
  2702  001A1A  EC6A  F010         	call	_WriteCmdXLCD
  2703  001A1E                     l3168:
  2704  001A1E  EC89  F010         	call	_BusyXLCD	;wreg free
  2705  001A22  0900               	iorlw	0
  2706  001A24  A4D8               	btfss	status,2,c
  2707  001A26  D7FB               	goto	l3168
  2708  001A28  0E04               	movlw	4
  2709  001A2A  EC6A  F010         	call	_WriteCmdXLCD
  2710  001A2E                     l3172:
  2711  001A2E  EC89  F010         	call	_BusyXLCD	;wreg free
  2712  001A32  0900               	iorlw	0
  2713  001A34  A4D8               	btfss	status,2,c
  2714  001A36  D7FB               	goto	l3172
  2715  001A38  0E80               	movlw	128
  2716  001A3A  EC4F  F00F         	call	_SetDDRamAddr
  2717  001A3E  0012               	return	
  2718  001A40                     __end_of_OpenXLCD:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           intcon	equ	0xFF2
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           postdec1	equ	0xFE5
  2730                           fsr1l	equ	0xFE1
  2731                           indf2	equ	0xFDF
  2732                           postinc2	equ	0xFDE
  2733                           postdec2	equ	0xFDD
  2734                           plusw2	equ	0xFDB
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _DelayPORXLCD *****************
  2740 ;; Defined at:
  2741 ;;		line 8 in file "display_LCD.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    2
  2762 ;; This function calls:
  2763 ;;		_Delay1KTCYx
  2764 ;; This function is called by:
  2765 ;;		_OpenXLCD
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text14
  2770  00235A                     __ptext14:
  2771                           	opt stack 0
  2772  00235A                     _DelayPORXLCD:
  2773                           	opt stack 26
  2774                           
  2775                           ;display_LCD.c: 9: Delay1KTCYx(180);
  2776                           
  2777                           ;incstack = 0
  2778  00235A  0EB4               	movlw	180
  2779  00235C  EC7C  F011         	call	_Delay1KTCYx
  2780  002360  0012               	return	
  2781  002362                     __end_of_DelayPORXLCD:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           prodh	equ	0xFF4
  2788                           prodl	equ	0xFF3
  2789                           intcon	equ	0xFF2
  2790                           postinc0	equ	0xFEE
  2791                           wreg	equ	0xFE8
  2792                           postdec1	equ	0xFE5
  2793                           fsr1l	equ	0xFE1
  2794                           indf2	equ	0xFDF
  2795                           postinc2	equ	0xFDE
  2796                           postdec2	equ	0xFDD
  2797                           plusw2	equ	0xFDB
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _Delay1KTCYx *****************
  2803 ;; Defined at:
  2804 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  unit            1    wreg     unsigned char 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  unit            1   14[COMRAM] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        1 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_DelayPORXLCD
  2829 ;;		_DelayXLCD
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text15
  2834  0022F8                     __ptext15:
  2835                           	opt stack 0
  2836  0022F8                     _Delay1KTCYx:
  2837                           	opt stack 26
  2838                           
  2839                           ;incstack = 0
  2840                           ;Delay1KTCYx@unit stored from wreg
  2841  0022F8  6E0F               	movwf	Delay1KTCYx@unit,c
  2842  0022FA  0EC8               	movlw	200
  2843  0022FC                     u3937:
  2844  0022FC  D000               	nop2	
  2845  0022FE  2EE8               	decfsz	wreg,f,c
  2846  002300  D7FD               	bra	u3937
  2847  002302  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  2848  002304  D7FA               	goto	l2746
  2849  002306  0012               	return	
  2850  002308                     __end_of_Delay1KTCYx:
  2851                           	opt stack 0
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           prodh	equ	0xFF4
  2857                           prodl	equ	0xFF3
  2858                           intcon	equ	0xFF2
  2859                           postinc0	equ	0xFEE
  2860                           wreg	equ	0xFE8
  2861                           postdec1	equ	0xFE5
  2862                           fsr1l	equ	0xFE1
  2863                           indf2	equ	0xFDF
  2864                           postinc2	equ	0xFDE
  2865                           postdec2	equ	0xFDD
  2866                           plusw2	equ	0xFDB
  2867                           fsr2h	equ	0xFDA
  2868                           fsr2l	equ	0xFD9
  2869                           status	equ	0xFD8
  2870                           
  2871 ;; *************** function _Delay10KTCYx *****************
  2872 ;; Defined at:
  2873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  unit            1    wreg     unsigned char 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  unit            1   15[COMRAM] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0
  2888 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2889 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2890 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2891 ;;Total ram usage:        2 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    1
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_OpenXLCD
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text16
  2902  0022CC                     __ptext16:
  2903                           	opt stack 0
  2904  0022CC                     _Delay10KTCYx:
  2905                           	opt stack 27
  2906                           
  2907                           ;incstack = 0
  2908                           ;Delay10KTCYx@unit stored from wreg
  2909  0022CC  6E10               	movwf	Delay10KTCYx@unit,c
  2910  0022CE  0E0D               	movlw	13
  2911  0022D0  6E0F               	movwf	??_Delay10KTCYx& (0+255),c
  2912  0022D2  0EFC               	movlw	252
  2913  0022D4                     u3947:
  2914  0022D4  2EE8               	decfsz	wreg,f,c
  2915  0022D6  D7FE               	bra	u3947
  2916  0022D8  2E0F               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2917  0022DA  D7FC               	bra	u3947
  2918  0022DC  2E10               	decfsz	Delay10KTCYx@unit,f,c
  2919  0022DE  D7F7               	goto	l2962
  2920  0022E0  0012               	return	
  2921  0022E2                     __end_of_Delay10KTCYx:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodh	equ	0xFF4
  2928                           prodl	equ	0xFF3
  2929                           intcon	equ	0xFF2
  2930                           postinc0	equ	0xFEE
  2931                           wreg	equ	0xFE8
  2932                           postdec1	equ	0xFE5
  2933                           fsr1l	equ	0xFE1
  2934                           indf2	equ	0xFDF
  2935                           postinc2	equ	0xFDE
  2936                           postdec2	equ	0xFDD
  2937                           plusw2	equ	0xFDB
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942 ;; *************** function _init_ADC *****************
  2943 ;; Defined at:
  2944 ;;		line 3 in file "ad.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2958 ;;      Params:         0       0       0       0       0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2961 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text17
  2973  002326                     __ptext17:
  2974                           	opt stack 0
  2975  002326                     _init_ADC:
  2976                           	opt stack 29
  2977                           
  2978                           ;ad.c: 4: ADCON2=0b10101110;
  2979                           
  2980                           ;incstack = 0
  2981  002326  0EAE               	movlw	174
  2982  002328  6EC0               	movwf	4032,c	;volatile
  2983                           
  2984                           ;ad.c: 5: ADCON0=0b00000011;
  2985  00232A  0E03               	movlw	3
  2986  00232C  6EC2               	movwf	4034,c	;volatile
  2987                           
  2988                           ;ad.c: 6: ADCON1=0b00001101;
  2989  00232E  0E0D               	movlw	13
  2990  002330  6EC1               	movwf	4033,c	;volatile
  2991  002332  0012               	return		;funcret
  2992  002334                     __end_of_init_ADC:
  2993                           	opt stack 0
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           prodh	equ	0xFF4
  2999                           prodl	equ	0xFF3
  3000                           intcon	equ	0xFF2
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           postdec1	equ	0xFE5
  3004                           fsr1l	equ	0xFE1
  3005                           indf2	equ	0xFDF
  3006                           postinc2	equ	0xFDE
  3007                           postdec2	equ	0xFDD
  3008                           plusw2	equ	0xFDB
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function _exibir_lcd *****************
  3014 ;; Defined at:
  3015 ;;		line 26 in file "display_LCD.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  d               2   32[BANK0 ] int 
  3020 ;;  c               2   30[BANK0 ] int 
  3021 ;;  b               2   28[BANK0 ] int 
  3022 ;;  a               2   26[BANK0 ] int 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3032 ;;      Params:         0       0       0       0       0       0       0       0       0
  3033 ;;      Locals:         0       8       0       0       0       0       0       0       0
  3034 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3035 ;;      Totals:         0      10       0       0       0       0       0       0       0
  3036 ;;Total ram usage:       10 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    7
  3039 ;; This function calls:
  3040 ;;		_SetDDRamAddr
  3041 ;;		___awdiv
  3042 ;;		___awmod
  3043 ;;		_convert_float_to_char
  3044 ;;		_gambiarra
  3045 ;;		_putrsXLCD
  3046 ;;		_sprintf
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text18
  3053  000872                     __ptext18:
  3054                           	opt stack 0
  3055  000872                     _exibir_lcd:
  3056                           	opt stack 23
  3057                           
  3058                           ;display_LCD.c: 28: int a, b, c, d;
  3059                           ;display_LCD.c: 30: if(tela_exibida==0){
  3060                           
  3061                           ;incstack = 0
  3062  000872  0100               	movlb	0	; () banked
  3063  000874  5170               	movf	_tela_exibida& (0+255),w,b
  3064  000876  0100               	movlb	0	; () banked
  3065  000878  1171               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3066  00087A  A4D8               	btfss	status,2,c
  3067  00087C  D0BE               	goto	l4056
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;display_LCD.c: 31: convert_float_to_char(valor_tensao);
  3071  00087E  C063  F09D         	movff	_valor_tensao,convert_float_to_char@valor
  3072  000882  C064  F09E         	movff	_valor_tensao+1,convert_float_to_char@valor+1
  3073  000886  C065  F09F         	movff	_valor_tensao+2,convert_float_to_char@valor+2
  3074  00088A  EC16  F00B         	call	_convert_float_to_char	;wreg free
  3075                           
  3076                           ;display_LCD.c: 32: sprintf(str,"TEMP: %s", temperatura_display);
  3077  00088E  0E72               	movlw	low _str
  3078  000890  6E1B               	movwf	sprintf@sp,c
  3079  000892  0E00               	movlw	high _str
  3080  000894  6E1C               	movwf	sprintf@sp+1,c
  3081  000896  0E61               	movlw	low STR_4
  3082  000898  6E1D               	movwf	sprintf@f,c
  3083  00089A  0E08               	movlw	high STR_4
  3084  00089C  6E1E               	movwf	sprintf@f+1,c
  3085  00089E  0E82               	movlw	low _temperatura_display
  3086  0008A0  6E1F               	movwf	?_sprintf+4,c
  3087  0008A2  0E00               	movlw	high _temperatura_display
  3088  0008A4  6E20               	movwf	?_sprintf+5,c
  3089  0008A6  EC41  F006         	call	_sprintf	;wreg free
  3090                           
  3091                           ;display_LCD.c: 33: SetDDRamAddr(0x00);
  3092  0008AA  0E00               	movlw	0
  3093  0008AC  EC4F  F00F         	call	_SetDDRamAddr
  3094                           
  3095                           ;display_LCD.c: 34: putrsXLCD(str);
  3096  0008B0  0E72               	movlw	low _str
  3097  0008B2  6E11               	movwf	putrsXLCD@buffer,c
  3098  0008B4  0E00               	movlw	high _str
  3099  0008B6  6E12               	movwf	putrsXLCD@buffer+1,c
  3100  0008B8  ECF7  F010         	call	_putrsXLCD	;wreg free
  3101                           
  3102                           ;display_LCD.c: 35: a=((temperatura_minima)/10)-(((temperatura_minima)%10)/10);
  3103  0008BC  C04F  F015         	movff	_temperatura_minima,___awdiv@dividend
  3104  0008C0  C050  F016         	movff	_temperatura_minima+1,___awdiv@dividend+1
  3105  0008C4  0E00               	movlw	0
  3106  0008C6  6E18               	movwf	___awdiv@divisor+1,c
  3107  0008C8  0E0A               	movlw	10
  3108  0008CA  6E17               	movwf	___awdiv@divisor,c
  3109  0008CC  ECB9  F00D         	call	___awdiv	;wreg free
  3110  0008D0  C015  F0AA         	movff	?___awdiv,??_exibir_lcd
  3111  0008D4  C016  F0AB         	movff	?___awdiv+1,??_exibir_lcd+1
  3112  0008D8  0E00               	movlw	0
  3113  0008DA  6E12               	movwf	___awmod@divisor+1,c
  3114  0008DC  0E0A               	movlw	10
  3115  0008DE  6E11               	movwf	___awmod@divisor,c
  3116  0008E0  C04F  F00F         	movff	_temperatura_minima,___awmod@dividend
  3117  0008E4  C050  F010         	movff	_temperatura_minima+1,___awmod@dividend+1
  3118  0008E8  ECEB  F00E         	call	___awmod	;wreg free
  3119  0008EC  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3120  0008F0  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3121  0008F4  0E00               	movlw	0
  3122  0008F6  6E18               	movwf	___awdiv@divisor+1,c
  3123  0008F8  0E0A               	movlw	10
  3124  0008FA  6E17               	movwf	___awdiv@divisor,c
  3125  0008FC  ECB9  F00D         	call	___awdiv	;wreg free
  3126  000900  1E15               	comf	?___awdiv,f,c
  3127  000902  1E16               	comf	?___awdiv+1,f,c
  3128  000904  4A15               	infsnz	?___awdiv,f,c
  3129  000906  2A16               	incf	?___awdiv+1,f,c
  3130  000908  5015               	movf	?___awdiv,w,c
  3131  00090A  0100               	movlb	0	; () banked
  3132  00090C  25AA               	addwf	??_exibir_lcd& (0+255),w,b
  3133  00090E  0100               	movlb	0	; () banked
  3134  000910  6FAC               	movwf	exibir_lcd@a& (0+255),b
  3135  000912  5016               	movf	?___awdiv+1,w,c
  3136  000914  0100               	movlb	0	; () banked
  3137  000916  21AB               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3138  000918  0100               	movlb	0	; () banked
  3139  00091A  6FAD               	movwf	(exibir_lcd@a+1)& (0+255),b
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;display_LCD.c: 36: b=temperatura_minima%10;
  3143  00091C  C04F  F00F         	movff	_temperatura_minima,___awmod@dividend
  3144  000920  C050  F010         	movff	_temperatura_minima+1,___awmod@dividend+1
  3145  000924  0E00               	movlw	0
  3146  000926  6E12               	movwf	___awmod@divisor+1,c
  3147  000928  0E0A               	movlw	10
  3148  00092A  6E11               	movwf	___awmod@divisor,c
  3149  00092C  ECEB  F00E         	call	___awmod	;wreg free
  3150  000930  C00F  F0AE         	movff	?___awmod,exibir_lcd@b
  3151  000934  C010  F0AF         	movff	?___awmod+1,exibir_lcd@b+1
  3152                           
  3153                           ;display_LCD.c: 37: c=((temperatura_maxima)/10)-(((temperatura_maxima)%10)/10);
  3154  000938  C04D  F015         	movff	_temperatura_maxima,___awdiv@dividend
  3155  00093C  C04E  F016         	movff	_temperatura_maxima+1,___awdiv@dividend+1
  3156  000940  0E00               	movlw	0
  3157  000942  6E18               	movwf	___awdiv@divisor+1,c
  3158  000944  0E0A               	movlw	10
  3159  000946  6E17               	movwf	___awdiv@divisor,c
  3160  000948  ECB9  F00D         	call	___awdiv	;wreg free
  3161  00094C  C015  F0AA         	movff	?___awdiv,??_exibir_lcd
  3162  000950  C016  F0AB         	movff	?___awdiv+1,??_exibir_lcd+1
  3163  000954  0E00               	movlw	0
  3164  000956  6E12               	movwf	___awmod@divisor+1,c
  3165  000958  0E0A               	movlw	10
  3166  00095A  6E11               	movwf	___awmod@divisor,c
  3167  00095C  C04D  F00F         	movff	_temperatura_maxima,___awmod@dividend
  3168  000960  C04E  F010         	movff	_temperatura_maxima+1,___awmod@dividend+1
  3169  000964  ECEB  F00E         	call	___awmod	;wreg free
  3170  000968  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3171  00096C  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3172  000970  0E00               	movlw	0
  3173  000972  6E18               	movwf	___awdiv@divisor+1,c
  3174  000974  0E0A               	movlw	10
  3175  000976  6E17               	movwf	___awdiv@divisor,c
  3176  000978  ECB9  F00D         	call	___awdiv	;wreg free
  3177  00097C  1E15               	comf	?___awdiv,f,c
  3178  00097E  1E16               	comf	?___awdiv+1,f,c
  3179  000980  4A15               	infsnz	?___awdiv,f,c
  3180  000982  2A16               	incf	?___awdiv+1,f,c
  3181  000984  5015               	movf	?___awdiv,w,c
  3182  000986  0100               	movlb	0	; () banked
  3183  000988  25AA               	addwf	??_exibir_lcd& (0+255),w,b
  3184  00098A  0100               	movlb	0	; () banked
  3185  00098C  6FB0               	movwf	exibir_lcd@c& (0+255),b
  3186  00098E  5016               	movf	?___awdiv+1,w,c
  3187  000990  0100               	movlb	0	; () banked
  3188  000992  21AB               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3189  000994  0100               	movlb	0	; () banked
  3190  000996  6FB1               	movwf	(exibir_lcd@c+1)& (0+255),b
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;display_LCD.c: 38: d=temperatura_maxima%10;
  3194  000998  C04D  F00F         	movff	_temperatura_maxima,___awmod@dividend
  3195  00099C  C04E  F010         	movff	_temperatura_maxima+1,___awmod@dividend+1
  3196  0009A0  0E00               	movlw	0
  3197  0009A2  6E12               	movwf	___awmod@divisor+1,c
  3198  0009A4  0E0A               	movlw	10
  3199  0009A6  6E11               	movwf	___awmod@divisor,c
  3200  0009A8  ECEB  F00E         	call	___awmod	;wreg free
  3201  0009AC  C00F  F0B2         	movff	?___awmod,exibir_lcd@d
  3202  0009B0  C010  F0B3         	movff	?___awmod+1,exibir_lcd@d+1
  3203                           
  3204                           ;display_LCD.c: 39: sprintf(str, "MIN: %d%d MAX: %d%d", a, b, c, d);
  3205  0009B4  0E72               	movlw	low _str
  3206  0009B6  6E1B               	movwf	sprintf@sp,c
  3207  0009B8  0E00               	movlw	high _str
  3208  0009BA  6E1C               	movwf	sprintf@sp+1,c
  3209  0009BC  0E0B               	movlw	low STR_5
  3210  0009BE  6E1D               	movwf	sprintf@f,c
  3211  0009C0  0E08               	movlw	high STR_5
  3212  0009C2  6E1E               	movwf	sprintf@f+1,c
  3213  0009C4  C0AC  F01F         	movff	exibir_lcd@a,?_sprintf+4
  3214  0009C8  C0AD  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  3215  0009CC  C0AE  F021         	movff	exibir_lcd@b,?_sprintf+6
  3216  0009D0  C0AF  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  3217  0009D4  C0B0  F023         	movff	exibir_lcd@c,?_sprintf+8
  3218  0009D8  C0B1  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  3219  0009DC  C0B2  F025         	movff	exibir_lcd@d,?_sprintf+10
  3220  0009E0  C0B3  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  3221  0009E4  EC41  F006         	call	_sprintf	;wreg free
  3222                           
  3223                           ;display_LCD.c: 40: SetDDRamAddr(0x40);
  3224  0009E8  0E40               	movlw	64
  3225  0009EA  EC4F  F00F         	call	_SetDDRamAddr
  3226                           
  3227                           ;display_LCD.c: 41: putrsXLCD(str);
  3228  0009EE  0E72               	movlw	low _str
  3229  0009F0  6E11               	movwf	putrsXLCD@buffer,c
  3230  0009F2  0E00               	movlw	high _str
  3231  0009F4  6E12               	movwf	putrsXLCD@buffer+1,c
  3232  0009F6  ECF7  F010         	call	_putrsXLCD	;wreg free
  3233  0009FA                     l4056:
  3234                           
  3235                           ;display_LCD.c: 42: }
  3236                           ;display_LCD.c: 44: if(tela_exibida==1){
  3237  0009FA  0100               	movlb	0	; () banked
  3238  0009FC  0570               	decf	_tela_exibida& (0+255),w,b
  3239  0009FE  0100               	movlb	0	; () banked
  3240  000A00  1171               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3241  000A02  B4D8               	btfsc	status,2,c
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;display_LCD.c: 45: gambiarra();
  3245  000A04  ECB5  F011         	call	_gambiarra	;wreg free
  3246                           
  3247                           ;display_LCD.c: 46: }
  3248                           ;display_LCD.c: 48: if(tela_exibida==2){
  3249  000A08  0E02               	movlw	2
  3250  000A0A  0100               	movlb	0	; () banked
  3251  000A0C  1970               	xorwf	_tela_exibida& (0+255),w,b
  3252  000A0E  0100               	movlb	0	; () banked
  3253  000A10  1171               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3254  000A12  A4D8               	btfss	status,2,c
  3255  000A14  0012               	return	
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;display_LCD.c: 49: convert_float_to_char(valor_tensao);
  3259  000A16  C063  F09D         	movff	_valor_tensao,convert_float_to_char@valor
  3260  000A1A  C064  F09E         	movff	_valor_tensao+1,convert_float_to_char@valor+1
  3261  000A1E  C065  F09F         	movff	_valor_tensao+2,convert_float_to_char@valor+2
  3262  000A22  EC16  F00B         	call	_convert_float_to_char	;wreg free
  3263                           
  3264                           ;display_LCD.c: 50: sprintf(str,"TEMP: %s", temperatura_display);
  3265  000A26  0E72               	movlw	low _str
  3266  000A28  6E1B               	movwf	sprintf@sp,c
  3267  000A2A  0E00               	movlw	high _str
  3268  000A2C  6E1C               	movwf	sprintf@sp+1,c
  3269  000A2E  0E61               	movlw	low STR_4
  3270  000A30  6E1D               	movwf	sprintf@f,c
  3271  000A32  0E08               	movlw	high STR_4
  3272  000A34  6E1E               	movwf	sprintf@f+1,c
  3273  000A36  0E82               	movlw	low _temperatura_display
  3274  000A38  6E1F               	movwf	?_sprintf+4,c
  3275  000A3A  0E00               	movlw	high _temperatura_display
  3276  000A3C  6E20               	movwf	?_sprintf+5,c
  3277  000A3E  EC41  F006         	call	_sprintf	;wreg free
  3278                           
  3279                           ;display_LCD.c: 51: SetDDRamAddr(0x00);
  3280  000A42  0E00               	movlw	0
  3281  000A44  EC4F  F00F         	call	_SetDDRamAddr
  3282                           
  3283                           ;display_LCD.c: 52: putrsXLCD(str);
  3284  000A48  0E72               	movlw	low _str
  3285  000A4A  6E11               	movwf	putrsXLCD@buffer,c
  3286  000A4C  0E00               	movlw	high _str
  3287  000A4E  6E12               	movwf	putrsXLCD@buffer+1,c
  3288  000A50  ECF7  F010         	call	_putrsXLCD	;wreg free
  3289                           
  3290                           ;display_LCD.c: 53: sprintf(str, "HORA: %d          ", tempo_eeprom);
  3291  000A54  0E72               	movlw	low _str
  3292  000A56  6E1B               	movwf	sprintf@sp,c
  3293  000A58  0E00               	movlw	high _str
  3294  000A5A  6E1C               	movwf	sprintf@sp+1,c
  3295  000A5C  0E33               	movlw	low STR_7
  3296  000A5E  6E1D               	movwf	sprintf@f,c
  3297  000A60  0E08               	movlw	high STR_7
  3298  000A62  6E1E               	movwf	sprintf@f+1,c
  3299  000A64  C068  F01F         	movff	_tempo_eeprom,?_sprintf+4
  3300  000A68  C069  F020         	movff	_tempo_eeprom+1,?_sprintf+5
  3301  000A6C  EC41  F006         	call	_sprintf	;wreg free
  3302                           
  3303                           ;display_LCD.c: 54: SetDDRamAddr(0x40);
  3304  000A70  0E40               	movlw	64
  3305  000A72  EC4F  F00F         	call	_SetDDRamAddr
  3306                           
  3307                           ;display_LCD.c: 55: putrsXLCD(str);
  3308  000A76  0E72               	movlw	low _str
  3309  000A78  6E11               	movwf	putrsXLCD@buffer,c
  3310  000A7A  0E00               	movlw	high _str
  3311  000A7C  6E12               	movwf	putrsXLCD@buffer+1,c
  3312  000A7E  ECF7  F010         	call	_putrsXLCD	;wreg free
  3313  000A82  0012               	return	
  3314  000A84                     __end_of_exibir_lcd:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           postinc0	equ	0xFEE
  3324                           wreg	equ	0xFE8
  3325                           postdec1	equ	0xFE5
  3326                           fsr1l	equ	0xFE1
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           postdec2	equ	0xFDD
  3330                           plusw2	equ	0xFDB
  3331                           fsr2h	equ	0xFDA
  3332                           fsr2l	equ	0xFD9
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function _gambiarra *****************
  3336 ;; Defined at:
  3337 ;;		line 147 in file "Trabalho_Final_SiRGII.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3354 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    6
  3358 ;; This function calls:
  3359 ;;		_gambiarra_pro_serial
  3360 ;; This function is called by:
  3361 ;;		_exibir_lcd
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text19
  3366  00236A                     __ptext19:
  3367                           	opt stack 0
  3368  00236A                     _gambiarra:
  3369                           	opt stack 23
  3370                           
  3371                           ;Trabalho_Final_SiRGII.c: 150: gambiarra_pro_serial();
  3372                           
  3373                           ;incstack = 0
  3374  00236A  ECFB  F00D         	call	_gambiarra_pro_serial	;wreg free
  3375  00236E  0012               	return		;funcret
  3376  002370                     __end_of_gambiarra:
  3377                           	opt stack 0
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           intcon	equ	0xFF2
  3385                           postinc0	equ	0xFEE
  3386                           wreg	equ	0xFE8
  3387                           postdec1	equ	0xFE5
  3388                           fsr1l	equ	0xFE1
  3389                           indf2	equ	0xFDF
  3390                           postinc2	equ	0xFDE
  3391                           postdec2	equ	0xFDD
  3392                           plusw2	equ	0xFDB
  3393                           fsr2h	equ	0xFDA
  3394                           fsr2l	equ	0xFD9
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _gambiarra_pro_serial *****************
  3398 ;; Defined at:
  3399 ;;		line 47 in file "serial.h"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3413 ;;      Params:         0       0       0       0       0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    5
  3420 ;; This function calls:
  3421 ;;		_SetDDRamAddr
  3422 ;;		_WriteCmdXLCD
  3423 ;;		_putrsXLCD
  3424 ;;		_sprintf
  3425 ;; This function is called by:
  3426 ;;		_gambiarra
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text20
  3431  001BF6                     __ptext20:
  3432                           	opt stack 0
  3433  001BF6                     _gambiarra_pro_serial:
  3434                           	opt stack 23
  3435                           
  3436                           ;serial.h: 49: WriteCmdXLCD(0x0C);
  3437                           
  3438                           ;incstack = 0
  3439  001BF6  0E0C               	movlw	12
  3440  001BF8  EC6A  F010         	call	_WriteCmdXLCD
  3441                           
  3442                           ;serial.h: 50: SetDDRamAddr(0x00);
  3443  001BFC  0E00               	movlw	0
  3444  001BFE  EC4F  F00F         	call	_SetDDRamAddr
  3445                           
  3446                           ;serial.h: 51: sprintf(str, "SERIAL:         ");
  3447  001C02  0E72               	movlw	low _str
  3448  001C04  6E1B               	movwf	sprintf@sp,c
  3449  001C06  0E00               	movlw	high _str
  3450  001C08  6E1C               	movwf	sprintf@sp+1,c
  3451  001C0A  0E46               	movlw	low STR_1
  3452  001C0C  6E1D               	movwf	sprintf@f,c
  3453  001C0E  0E08               	movlw	high STR_1
  3454  001C10  6E1E               	movwf	sprintf@f+1,c
  3455  001C12  EC41  F006         	call	_sprintf	;wreg free
  3456                           
  3457                           ;serial.h: 52: putrsXLCD(str);
  3458  001C16  0E72               	movlw	low _str
  3459  001C18  6E11               	movwf	putrsXLCD@buffer,c
  3460  001C1A  0E00               	movlw	high _str
  3461  001C1C  6E12               	movwf	putrsXLCD@buffer+1,c
  3462  001C1E  ECF7  F010         	call	_putrsXLCD	;wreg free
  3463                           
  3464                           ;serial.h: 53: SetDDRamAddr(0x40);
  3465  001C22  0E40               	movlw	64
  3466  001C24  EC4F  F00F         	call	_SetDDRamAddr
  3467                           
  3468                           ;serial.h: 54: sprintf(str, "%d %d %d           ", BUFF_RESP[1]-48, BUFF_RESP[2]-48, BUF
      +                          F_RESP[0]-48);
  3469  001C28  0E72               	movlw	low _str
  3470  001C2A  6E1B               	movwf	sprintf@sp,c
  3471  001C2C  0E00               	movlw	high _str
  3472  001C2E  6E1C               	movwf	sprintf@sp+1,c
  3473  001C30  0E1F               	movlw	low STR_2
  3474  001C32  6E1D               	movwf	sprintf@f,c
  3475  001C34  0E08               	movlw	high STR_2
  3476  001C36  6E1E               	movwf	sprintf@f+1,c
  3477  001C38  0ED0               	movlw	208
  3478  001C3A  0100               	movlb	0	; () banked
  3479  001C3C  2561               	addwf	(_BUFF_RESP+1)& (0+255),w,b
  3480  001C3E  6E1F               	movwf	?_sprintf+4,c
  3481  001C40  6A20               	clrf	?_sprintf+5,c
  3482  001C42  0EFF               	movlw	255
  3483  001C44  2220               	addwfc	?_sprintf+5,f,c
  3484  001C46  0ED0               	movlw	208
  3485  001C48  0100               	movlb	0	; () banked
  3486  001C4A  2562               	addwf	(_BUFF_RESP+2)& (0+255),w,b
  3487  001C4C  6E21               	movwf	?_sprintf+6,c
  3488  001C4E  6A22               	clrf	?_sprintf+7,c
  3489  001C50  0EFF               	movlw	255
  3490  001C52  2222               	addwfc	?_sprintf+7,f,c
  3491  001C54  0ED0               	movlw	208
  3492  001C56  0100               	movlb	0	; () banked
  3493  001C58  2560               	addwf	_BUFF_RESP& (0+255),w,b
  3494  001C5A  6E23               	movwf	?_sprintf+8,c
  3495  001C5C  6A24               	clrf	?_sprintf+9,c
  3496  001C5E  0EFF               	movlw	255
  3497  001C60  2224               	addwfc	?_sprintf+9,f,c
  3498  001C62  EC41  F006         	call	_sprintf	;wreg free
  3499                           
  3500                           ;serial.h: 55: putrsXLCD(str);
  3501  001C66  0E72               	movlw	low _str
  3502  001C68  6E11               	movwf	putrsXLCD@buffer,c
  3503  001C6A  0E00               	movlw	high _str
  3504  001C6C  6E12               	movwf	putrsXLCD@buffer+1,c
  3505  001C6E  ECF7  F010         	call	_putrsXLCD	;wreg free
  3506  001C72  0012               	return		;funcret
  3507  001C74                     __end_of_gambiarra_pro_serial:
  3508                           	opt stack 0
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           prodh	equ	0xFF4
  3514                           prodl	equ	0xFF3
  3515                           intcon	equ	0xFF2
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           postdec1	equ	0xFE5
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           postdec2	equ	0xFDD
  3523                           plusw2	equ	0xFDB
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _putrsXLCD *****************
  3529 ;; Defined at:
  3530 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  buffer          2   16[COMRAM] PTR const unsigned char 
  3533 ;;		 -> str(16), 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3545 ;;      Params:         2       0       0       0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3548 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3549 ;;Total ram usage:        2 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    4
  3552 ;; This function calls:
  3553 ;;		_BusyXLCD
  3554 ;;		_WriteDataXLCD
  3555 ;; This function is called by:
  3556 ;;		_gambiarra_pro_serial
  3557 ;;		_exibir_lcd
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text21
  3562  0021EE                     __ptext21:
  3563                           	opt stack 0
  3564  0021EE                     _putrsXLCD:
  3565                           	opt stack 25
  3566                           
  3567                           ;incstack = 0
  3568  0021EE  D00E               	goto	l2744
  3569  0021F0                     l2738:
  3570  0021F0  EC89  F010         	call	_BusyXLCD	;wreg free
  3571  0021F4  0900               	iorlw	0
  3572  0021F6  A4D8               	btfss	status,2,c
  3573  0021F8  D7FB               	goto	l2738
  3574  0021FA  C011  FFD9         	movff	putrsXLCD@buffer,fsr2l
  3575  0021FE  C012  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  3576  002202  50DF               	movf	indf2,w,c
  3577  002204  EC4B  F010         	call	_WriteDataXLCD
  3578  002208  4A11               	infsnz	putrsXLCD@buffer,f,c
  3579  00220A  2A12               	incf	putrsXLCD@buffer+1,f,c
  3580  00220C                     l2744:
  3581  00220C  C011  FFD9         	movff	putrsXLCD@buffer,fsr2l
  3582  002210  C012  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  3583  002214  50DF               	movf	indf2,w,c
  3584  002216  B4D8               	btfsc	status,2,c
  3585  002218  0012               	return	
  3586  00221A  D7EA               	goto	l2738
  3587  00221C                     __end_of_putrsXLCD:
  3588                           	opt stack 0
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           intcon	equ	0xFF2
  3596                           postinc0	equ	0xFEE
  3597                           wreg	equ	0xFE8
  3598                           postdec1	equ	0xFE5
  3599                           fsr1l	equ	0xFE1
  3600                           indf2	equ	0xFDF
  3601                           postinc2	equ	0xFDE
  3602                           postdec2	equ	0xFDD
  3603                           plusw2	equ	0xFDB
  3604                           fsr2h	equ	0xFDA
  3605                           fsr2l	equ	0xFD9
  3606                           status	equ	0xFD8
  3607                           
  3608 ;; *************** function _WriteDataXLCD *****************
  3609 ;; Defined at:
  3610 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  data            1    wreg     unsigned char 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  data            1   15[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0
  3625 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3627 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3628 ;;Total ram usage:        1 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    3
  3631 ;; This function calls:
  3632 ;;		_DelayFor18TCY
  3633 ;; This function is called by:
  3634 ;;		_putrsXLCD
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text22
  3639  002096                     __ptext22:
  3640                           	opt stack 0
  3641  002096                     _WriteDataXLCD:
  3642                           	opt stack 25
  3643                           
  3644                           ;incstack = 0
  3645                           ;WriteDataXLCD@data stored from wreg
  3646  002096  6E10               	movwf	WriteDataXLCD@data,c
  3647  002098  0EF0               	movlw	240
  3648  00209A  1693               	andwf	3987,f,c	;volatile
  3649  00209C  0EF0               	movlw	240
  3650  00209E  1681               	andwf	3969,f,c	;volatile
  3651  0020A0  3810               	swapf	WriteDataXLCD@data,w,c
  3652  0020A2  0B0F               	andlw	15
  3653  0020A4  0B0F               	andlw	15
  3654  0020A6  1281               	iorwf	3969,f,c	;volatile
  3655  0020A8  8A8A               	bsf	3978,5,c	;volatile
  3656  0020AA  9C8A               	bcf	3978,6,c	;volatile
  3657  0020AC  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3658  0020B0  888A               	bsf	3978,4,c	;volatile
  3659  0020B2  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3660  0020B6  988A               	bcf	3978,4,c	;volatile
  3661  0020B8  0EF0               	movlw	240
  3662  0020BA  1681               	andwf	3969,f,c	;volatile
  3663  0020BC  5010               	movf	WriteDataXLCD@data,w,c
  3664  0020BE  0B0F               	andlw	15
  3665  0020C0  1281               	iorwf	3969,f,c	;volatile
  3666  0020C2  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3667  0020C6  888A               	bsf	3978,4,c	;volatile
  3668  0020C8  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3669  0020CC  988A               	bcf	3978,4,c	;volatile
  3670  0020CE  0E0F               	movlw	15
  3671  0020D0  1293               	iorwf	3987,f,c	;volatile
  3672  0020D2  0012               	return	
  3673  0020D4                     __end_of_WriteDataXLCD:
  3674                           	opt stack 0
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           prodh	equ	0xFF4
  3680                           prodl	equ	0xFF3
  3681                           intcon	equ	0xFF2
  3682                           postinc0	equ	0xFEE
  3683                           wreg	equ	0xFE8
  3684                           postdec1	equ	0xFE5
  3685                           fsr1l	equ	0xFE1
  3686                           indf2	equ	0xFDF
  3687                           postinc2	equ	0xFDE
  3688                           postdec2	equ	0xFDD
  3689                           plusw2	equ	0xFDB
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _BusyXLCD *****************
  3695 ;; Defined at:
  3696 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      unsigned char 
  3703 ;; Registers used:
  3704 ;;		wreg, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    3
  3717 ;; This function calls:
  3718 ;;		_DelayFor18TCY
  3719 ;; This function is called by:
  3720 ;;		_init_XLCD
  3721 ;;		_OpenXLCD
  3722 ;;		_putrsXLCD
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text23
  3727  002112                     __ptext23:
  3728                           	opt stack 0
  3729  002112                     _BusyXLCD:
  3730                           	opt stack 25
  3731                           
  3732                           ;incstack = 0
  3733  002112  8C8A               	bsf	3978,6,c	;volatile
  3734  002114  9A8A               	bcf	3978,5,c	;volatile
  3735  002116  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3736  00211A  888A               	bsf	3978,4,c	;volatile
  3737  00211C  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3738  002120  A681               	btfss	3969,3,c	;volatile
  3739  002122  D00A               	goto	l510
  3740  002124  988A               	bcf	3978,4,c	;volatile
  3741  002126  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3742  00212A  888A               	bsf	3978,4,c	;volatile
  3743  00212C  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3744  002130  988A               	bcf	3978,4,c	;volatile
  3745  002132  9C8A               	bcf	3978,6,c	;volatile
  3746  002134  0E01               	movlw	1
  3747  002136  0012               	return	
  3748  002138                     l510:
  3749  002138  988A               	bcf	3978,4,c	;volatile
  3750  00213A  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3751  00213E  888A               	bsf	3978,4,c	;volatile
  3752  002140  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3753  002144  988A               	bcf	3978,4,c	;volatile
  3754  002146  9C8A               	bcf	3978,6,c	;volatile
  3755  002148  0E00               	movlw	0
  3756  00214A  0012               	return	
  3757  00214C                     __end_of_BusyXLCD:
  3758                           	opt stack 0
  3759                           tblptru	equ	0xFF8
  3760                           tblptrh	equ	0xFF7
  3761                           tblptrl	equ	0xFF6
  3762                           tablat	equ	0xFF5
  3763                           prodh	equ	0xFF4
  3764                           prodl	equ	0xFF3
  3765                           intcon	equ	0xFF2
  3766                           postinc0	equ	0xFEE
  3767                           wreg	equ	0xFE8
  3768                           postdec1	equ	0xFE5
  3769                           fsr1l	equ	0xFE1
  3770                           indf2	equ	0xFDF
  3771                           postinc2	equ	0xFDE
  3772                           postdec2	equ	0xFDD
  3773                           plusw2	equ	0xFDB
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _WriteCmdXLCD *****************
  3779 ;; Defined at:
  3780 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  cmd             1    wreg     unsigned char 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  cmd             1   15[COMRAM] unsigned char 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2, status,0, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3794 ;;      Params:         0       0       0       0       0       0       0       0       0
  3795 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3797 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3798 ;;Total ram usage:        1 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    3
  3801 ;; This function calls:
  3802 ;;		_DelayFor18TCY
  3803 ;; This function is called by:
  3804 ;;		_gambiarra_pro_serial
  3805 ;;		_main
  3806 ;;		_init_XLCD
  3807 ;;		_OpenXLCD
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text24
  3812  0020D4                     __ptext24:
  3813                           	opt stack 0
  3814  0020D4                     _WriteCmdXLCD:
  3815                           	opt stack 26
  3816                           
  3817                           ;incstack = 0
  3818                           ;WriteCmdXLCD@cmd stored from wreg
  3819  0020D4  6E10               	movwf	WriteCmdXLCD@cmd,c
  3820  0020D6  0EF0               	movlw	240
  3821  0020D8  1693               	andwf	3987,f,c	;volatile
  3822  0020DA  0EF0               	movlw	240
  3823  0020DC  1681               	andwf	3969,f,c	;volatile
  3824  0020DE  3810               	swapf	WriteCmdXLCD@cmd,w,c
  3825  0020E0  0B0F               	andlw	15
  3826  0020E2  0B0F               	andlw	15
  3827  0020E4  1281               	iorwf	3969,f,c	;volatile
  3828  0020E6  9C8A               	bcf	3978,6,c	;volatile
  3829  0020E8  9A8A               	bcf	3978,5,c	;volatile
  3830  0020EA  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3831  0020EE  888A               	bsf	3978,4,c	;volatile
  3832  0020F0  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3833  0020F4  988A               	bcf	3978,4,c	;volatile
  3834  0020F6  0EF0               	movlw	240
  3835  0020F8  1681               	andwf	3969,f,c	;volatile
  3836  0020FA  5010               	movf	WriteCmdXLCD@cmd,w,c
  3837  0020FC  0B0F               	andlw	15
  3838  0020FE  1281               	iorwf	3969,f,c	;volatile
  3839  002100  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3840  002104  888A               	bsf	3978,4,c	;volatile
  3841  002106  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3842  00210A  988A               	bcf	3978,4,c	;volatile
  3843  00210C  0E0F               	movlw	15
  3844  00210E  1293               	iorwf	3987,f,c	;volatile
  3845  002110  0012               	return	
  3846  002112                     __end_of_WriteCmdXLCD:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           postinc0	equ	0xFEE
  3856                           wreg	equ	0xFE8
  3857                           postdec1	equ	0xFE5
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           plusw2	equ	0xFDB
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867 ;; *************** function _SetDDRamAddr *****************
  3868 ;; Defined at:
  3869 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  DDaddr          1    wreg     unsigned char 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  DDaddr          1   18[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0
  3884 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3885 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3886 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3887 ;;Total ram usage:        4 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    3
  3890 ;; This function calls:
  3891 ;;		_DelayFor18TCY
  3892 ;; This function is called by:
  3893 ;;		_gambiarra_pro_serial
  3894 ;;		_exibir_lcd
  3895 ;;		_pisca_cursor
  3896 ;;		_OpenXLCD
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text25
  3901  001E9E                     __ptext25:
  3902                           	opt stack 0
  3903  001E9E                     _SetDDRamAddr:
  3904                           	opt stack 26
  3905                           
  3906                           ;incstack = 0
  3907                           ;SetDDRamAddr@DDaddr stored from wreg
  3908  001E9E  6E13               	movwf	SetDDRamAddr@DDaddr,c
  3909  001EA0  0EF0               	movlw	240
  3910  001EA2  1693               	andwf	3987,f,c	;volatile
  3911  001EA4  0EF0               	movlw	240
  3912  001EA6  1681               	andwf	3969,f,c	;volatile
  3913  001EA8  5013               	movf	SetDDRamAddr@DDaddr,w,c
  3914  001EAA  6E10               	movwf	??_SetDDRamAddr& (0+255),c
  3915  001EAC  6A11               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  3916  001EAE  8E10               	bsf	??_SetDDRamAddr,7,c
  3917  001EB0  0E04               	movlw	4
  3918  001EB2  6E12               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  3919  001EB4                     u1805:
  3920  001EB4  3411               	rlcf	??_SetDDRamAddr+1,w,c
  3921  001EB6  3211               	rrcf	??_SetDDRamAddr+1,f,c
  3922  001EB8  3210               	rrcf	??_SetDDRamAddr,f,c
  3923  001EBA  2E12               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  3924  001EBC  D7FB               	goto	u1805
  3925  001EBE  5010               	movf	??_SetDDRamAddr,w,c
  3926  001EC0  0B0F               	andlw	15
  3927  001EC2  1281               	iorwf	3969,f,c	;volatile
  3928  001EC4  9C8A               	bcf	3978,6,c	;volatile
  3929  001EC6  9A8A               	bcf	3978,5,c	;volatile
  3930  001EC8  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3931  001ECC  888A               	bsf	3978,4,c	;volatile
  3932  001ECE  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3933  001ED2  988A               	bcf	3978,4,c	;volatile
  3934  001ED4  0EF0               	movlw	240
  3935  001ED6  1681               	andwf	3969,f,c	;volatile
  3936  001ED8  5013               	movf	SetDDRamAddr@DDaddr,w,c
  3937  001EDA  0B0F               	andlw	15
  3938  001EDC  1281               	iorwf	3969,f,c	;volatile
  3939  001EDE  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3940  001EE2  888A               	bsf	3978,4,c	;volatile
  3941  001EE4  ECB1  F011         	call	_DelayFor18TCY	;wreg free
  3942  001EE8  988A               	bcf	3978,4,c	;volatile
  3943  001EEA  0E0F               	movlw	15
  3944  001EEC  1293               	iorwf	3987,f,c	;volatile
  3945  001EEE  0012               	return	
  3946  001EF0                     __end_of_SetDDRamAddr:
  3947                           	opt stack 0
  3948                           tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           prodh	equ	0xFF4
  3953                           prodl	equ	0xFF3
  3954                           intcon	equ	0xFF2
  3955                           postinc0	equ	0xFEE
  3956                           wreg	equ	0xFE8
  3957                           postdec1	equ	0xFE5
  3958                           fsr1l	equ	0xFE1
  3959                           indf2	equ	0xFDF
  3960                           postinc2	equ	0xFDE
  3961                           postdec2	equ	0xFDD
  3962                           plusw2	equ	0xFDB
  3963                           fsr2h	equ	0xFDA
  3964                           fsr2l	equ	0xFD9
  3965                           status	equ	0xFD8
  3966                           
  3967 ;; *************** function _DelayFor18TCY *****************
  3968 ;; Defined at:
  3969 ;;		line 4 in file "display_LCD.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3986 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3987 ;;Total ram usage:        0 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    2
  3990 ;; This function calls:
  3991 ;;		_Delay10TCYx
  3992 ;; This function is called by:
  3993 ;;		_BusyXLCD
  3994 ;;		_SetDDRamAddr
  3995 ;;		_WriteCmdXLCD
  3996 ;;		_WriteDataXLCD
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text26
  4001  002362                     __ptext26:
  4002                           	opt stack 0
  4003  002362                     _DelayFor18TCY:
  4004                           	opt stack 26
  4005                           
  4006                           ;display_LCD.c: 5: Delay10TCYx(120);
  4007                           
  4008                           ;incstack = 0
  4009  002362  0E78               	movlw	120
  4010  002364  EC84  F011         	call	_Delay10TCYx
  4011  002368  0012               	return		;funcret
  4012  00236A                     __end_of_DelayFor18TCY:
  4013                           	opt stack 0
  4014                           tblptru	equ	0xFF8
  4015                           tblptrh	equ	0xFF7
  4016                           tblptrl	equ	0xFF6
  4017                           tablat	equ	0xFF5
  4018                           prodh	equ	0xFF4
  4019                           prodl	equ	0xFF3
  4020                           intcon	equ	0xFF2
  4021                           postinc0	equ	0xFEE
  4022                           wreg	equ	0xFE8
  4023                           postdec1	equ	0xFE5
  4024                           fsr1l	equ	0xFE1
  4025                           indf2	equ	0xFDF
  4026                           postinc2	equ	0xFDE
  4027                           postdec2	equ	0xFDD
  4028                           plusw2	equ	0xFDB
  4029                           fsr2h	equ	0xFDA
  4030                           fsr2l	equ	0xFD9
  4031                           status	equ	0xFD8
  4032                           
  4033 ;; *************** function _Delay10TCYx *****************
  4034 ;; Defined at:
  4035 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  unit            1    wreg     unsigned char 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  unit            1   14[COMRAM] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0
  4050 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4052 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4053 ;;Total ram usage:        1 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    1
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_DelayFor18TCY
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text27
  4064  002308                     __ptext27:
  4065                           	opt stack 0
  4066  002308                     _Delay10TCYx:
  4067                           	opt stack 26
  4068                           
  4069                           ;incstack = 0
  4070                           ;Delay10TCYx@unit stored from wreg
  4071  002308  6E0F               	movwf	Delay10TCYx@unit,c
  4072  00230A  0E03               	movlw	3
  4073  00230C                     u3957:
  4074  00230C  2EE8               	decfsz	wreg,f,c
  4075  00230E  D7FE               	bra	u3957
  4076  002310  F000               	nop	
  4077  002312  2E0F               	decfsz	Delay10TCYx@unit,f,c
  4078  002314  D7FA               	goto	l2472
  4079  002316  0012               	return	
  4080  002318                     __end_of_Delay10TCYx:
  4081                           	opt stack 0
  4082                           tblptru	equ	0xFF8
  4083                           tblptrh	equ	0xFF7
  4084                           tblptrl	equ	0xFF6
  4085                           tablat	equ	0xFF5
  4086                           prodh	equ	0xFF4
  4087                           prodl	equ	0xFF3
  4088                           intcon	equ	0xFF2
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           postdec1	equ	0xFE5
  4092                           fsr1l	equ	0xFE1
  4093                           indf2	equ	0xFDF
  4094                           postinc2	equ	0xFDE
  4095                           postdec2	equ	0xFDD
  4096                           plusw2	equ	0xFDB
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _convert_float_to_char *****************
  4102 ;; Defined at:
  4103 ;;		line 22 in file "ad.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  valor           3   11[BANK0 ] float 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  f1              3   21[BANK0 ] float 
  4108 ;;  f2              3   18[BANK0 ] float 
  4109 ;;  i2              2   16[BANK0 ] int 
  4110 ;;  i1              2   14[BANK0 ] int 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4120 ;;      Params:         0       3       0       0       0       0       0       0       0
  4121 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4123 ;;      Totals:         0      13       0       0       0       0       0       0       0
  4124 ;;Total ram usage:       13 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    4
  4127 ;; This function calls:
  4128 ;;		___ftadd
  4129 ;;		___ftmul
  4130 ;;		___ftneg
  4131 ;;		___fttol
  4132 ;;		_floor
  4133 ;;		_sprintf
  4134 ;; This function is called by:
  4135 ;;		_exibir_lcd
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text28
  4140  00162C                     __ptext28:
  4141                           	opt stack 0
  4142  00162C                     _convert_float_to_char:
  4143                           	opt stack 25
  4144                           
  4145                           ;ad.c: 23: float f1,f2;
  4146                           ;ad.c: 24: int i1,i2;
  4147                           ;ad.c: 25: valor=valor*100;
  4148                           
  4149                           ;incstack = 0
  4150  00162C  C09D  F01A         	movff	convert_float_to_char@valor,___ftmul@f1
  4151  001630  C09E  F01B         	movff	convert_float_to_char@valor+1,___ftmul@f1+1
  4152  001634  C09F  F01C         	movff	convert_float_to_char@valor+2,___ftmul@f1+2
  4153  001638  0E00               	movlw	0
  4154  00163A  6E1D               	movwf	___ftmul@f2,c
  4155  00163C  0EC8               	movlw	200
  4156  00163E  6E1E               	movwf	___ftmul@f2+1,c
  4157  001640  0E42               	movlw	66
  4158  001642  6E1F               	movwf	___ftmul@f2+2,c
  4159  001644  EC31  F009         	call	___ftmul	;wreg free
  4160  001648  C01A  F09D         	movff	?___ftmul,convert_float_to_char@valor
  4161  00164C  C01B  F09E         	movff	?___ftmul+1,convert_float_to_char@valor+1
  4162  001650  C01C  F09F         	movff	?___ftmul+2,convert_float_to_char@valor+2
  4163                           
  4164                           ;ad.c: 26: f1=floor(valor);
  4165  001654  C09D  F095         	movff	convert_float_to_char@valor,floor@x
  4166  001658  C09E  F096         	movff	convert_float_to_char@valor+1,floor@x+1
  4167  00165C  C09F  F097         	movff	convert_float_to_char@valor+2,floor@x+2
  4168  001660  EC25  F00A         	call	_floor	;wreg free
  4169  001664  C095  F0A7         	movff	?_floor,convert_float_to_char@f1
  4170  001668  C096  F0A8         	movff	?_floor+1,convert_float_to_char@f1+1
  4171  00166C  C097  F0A9         	movff	?_floor+2,convert_float_to_char@f1+2
  4172                           
  4173                           ;ad.c: 27: f2=valor - f1;
  4174  001670  C0A7  F00F         	movff	convert_float_to_char@f1,___ftneg@f1
  4175  001674  C0A8  F010         	movff	convert_float_to_char@f1+1,___ftneg@f1+1
  4176  001678  C0A9  F011         	movff	convert_float_to_char@f1+2,___ftneg@f1+2
  4177  00167C  EC33  F011         	call	___ftneg	;wreg free
  4178  001680  C00F  F038         	movff	?___ftneg,___ftadd@f1
  4179  001684  C010  F039         	movff	?___ftneg+1,___ftadd@f1+1
  4180  001688  C011  F03A         	movff	?___ftneg+2,___ftadd@f1+2
  4181  00168C  C09D  F03B         	movff	convert_float_to_char@valor,___ftadd@f2
  4182  001690  C09E  F03C         	movff	convert_float_to_char@valor+1,___ftadd@f2+1
  4183  001694  C09F  F03D         	movff	convert_float_to_char@valor+2,___ftadd@f2+2
  4184  001698  EC42  F005         	call	___ftadd	;wreg free
  4185  00169C  C038  F0A4         	movff	?___ftadd,convert_float_to_char@f2
  4186  0016A0  C039  F0A5         	movff	?___ftadd+1,convert_float_to_char@f2+1
  4187  0016A4  C03A  F0A6         	movff	?___ftadd+2,convert_float_to_char@f2+2
  4188                           
  4189                           ;ad.c: 28: i1 = (int)f1;
  4190  0016A8  C0A7  F029         	movff	convert_float_to_char@f1,___fttol@f1
  4191  0016AC  C0A8  F02A         	movff	convert_float_to_char@f1+1,___fttol@f1+1
  4192  0016B0  C0A9  F02B         	movff	convert_float_to_char@f1+2,___fttol@f1+2
  4193  0016B4  ECAB  F009         	call	___fttol	;wreg free
  4194  0016B8  C029  F0A0         	movff	?___fttol,convert_float_to_char@i1
  4195  0016BC  C02A  F0A1         	movff	?___fttol+1,convert_float_to_char@i1+1
  4196                           
  4197                           ;ad.c: 29: i2 = (int)(100*f2);
  4198  0016C0  0E00               	movlw	0
  4199  0016C2  6E1D               	movwf	___ftmul@f2,c
  4200  0016C4  0EC8               	movlw	200
  4201  0016C6  6E1E               	movwf	___ftmul@f2+1,c
  4202  0016C8  0E42               	movlw	66
  4203  0016CA  6E1F               	movwf	___ftmul@f2+2,c
  4204  0016CC  C0A4  F01A         	movff	convert_float_to_char@f2,___ftmul@f1
  4205  0016D0  C0A5  F01B         	movff	convert_float_to_char@f2+1,___ftmul@f1+1
  4206  0016D4  C0A6  F01C         	movff	convert_float_to_char@f2+2,___ftmul@f1+2
  4207  0016D8  EC31  F009         	call	___ftmul	;wreg free
  4208  0016DC  C01A  F029         	movff	?___ftmul,___fttol@f1
  4209  0016E0  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
  4210  0016E4  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
  4211  0016E8  ECAB  F009         	call	___fttol	;wreg free
  4212  0016EC  C029  F0A2         	movff	?___fttol,convert_float_to_char@i2
  4213  0016F0  C02A  F0A3         	movff	?___fttol+1,convert_float_to_char@i2+1
  4214                           
  4215                           ;ad.c: 30: sprintf(temperatura_display,"%d,%d oC ", i1,i2);
  4216  0016F4  0E82               	movlw	low _temperatura_display
  4217  0016F6  6E1B               	movwf	sprintf@sp,c
  4218  0016F8  0E00               	movlw	high _temperatura_display
  4219  0016FA  6E1C               	movwf	sprintf@sp+1,c
  4220  0016FC  0E57               	movlw	low STR_3
  4221  0016FE  6E1D               	movwf	sprintf@f,c
  4222  001700  0E08               	movlw	high STR_3
  4223  001702  6E1E               	movwf	sprintf@f+1,c
  4224  001704  C0A0  F01F         	movff	convert_float_to_char@i1,?_sprintf+4
  4225  001708  C0A1  F020         	movff	convert_float_to_char@i1+1,?_sprintf+5
  4226  00170C  C0A2  F021         	movff	convert_float_to_char@i2,?_sprintf+6
  4227  001710  C0A3  F022         	movff	convert_float_to_char@i2+1,?_sprintf+7
  4228  001714  EC41  F006         	call	_sprintf	;wreg free
  4229  001718  0012               	return		;funcret
  4230  00171A                     __end_of_convert_float_to_char:
  4231                           	opt stack 0
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           prodh	equ	0xFF4
  4237                           prodl	equ	0xFF3
  4238                           intcon	equ	0xFF2
  4239                           postinc0	equ	0xFEE
  4240                           wreg	equ	0xFE8
  4241                           postdec1	equ	0xFE5
  4242                           fsr1l	equ	0xFE1
  4243                           indf2	equ	0xFDF
  4244                           postinc2	equ	0xFDE
  4245                           postdec2	equ	0xFDD
  4246                           plusw2	equ	0xFDB
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           
  4251 ;; *************** function _sprintf *****************
  4252 ;; Defined at:
  4253 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  sp              2   26[COMRAM] PTR unsigned char 
  4256 ;;		 -> temperatura_display(10), str(16), 
  4257 ;;  f               2   28[COMRAM] PTR const unsigned char 
  4258 ;;		 -> STR_7(19), STR_6(9), STR_5(20), STR_4(9), 
  4259 ;;		 -> STR_3(10), STR_2(20), STR_1(17), 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  tmpval          4    0        struct .
  4262 ;;  val             2   45[COMRAM] unsigned int 
  4263 ;;  cp              2   43[COMRAM] PTR const unsigned char 
  4264 ;;		 -> STR_8(7), temperatura_display(10), convert_float_to_char@f2(3), 
  4265 ;;  ap              2   41[COMRAM] PTR void [1]
  4266 ;;		 -> ?_sprintf(2), 
  4267 ;;  len             2    0        unsigned int 
  4268 ;;  c               1   47[COMRAM] char 
  4269 ;;  prec            1   40[COMRAM] char 
  4270 ;;  flag            1   39[COMRAM] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2   26[COMRAM] int 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4280 ;;      Params:        12       0       0       0       0       0       0       0       0
  4281 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4282 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4283 ;;      Totals:        22       0       0       0       0       0       0       0       0
  4284 ;;Total ram usage:       22 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    2
  4287 ;; This function calls:
  4288 ;;		___lwdiv
  4289 ;;		___lwmod
  4290 ;; This function is called by:
  4291 ;;		_gambiarra_pro_serial
  4292 ;;		_convert_float_to_char
  4293 ;;		_exibir_lcd
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text29
  4298  000C82                     __ptext29:
  4299                           	opt stack 0
  4300  000C82                     _sprintf:
  4301                           	opt stack 27
  4302                           
  4303                           ;doprnt.c: 494: va_list ap;
  4304                           ;doprnt.c: 499: signed char c;
  4305                           ;doprnt.c: 506: signed char prec;
  4306                           ;doprnt.c: 508: unsigned char flag;
  4307                           ;doprnt.c: 523: union {
  4308                           ;doprnt.c: 524: unsigned long vd;
  4309                           ;doprnt.c: 525: double integ;
  4310                           ;doprnt.c: 526: } tmpval;
  4311                           ;doprnt.c: 528: unsigned int val;
  4312                           ;doprnt.c: 529: unsigned len;
  4313                           ;doprnt.c: 530: const char * cp;
  4314                           ;doprnt.c: 533: *ap = __va_start();
  4315                           
  4316                           ;incstack = 0
  4317  000C82  0E1F               	movlw	low (?_sprintf+4)
  4318  000C84  6E2A               	movwf	sprintf@ap,c
  4319  000C86  0E00               	movlw	high (?_sprintf+4)
  4320  000C88  6E2B               	movwf	sprintf@ap+1,c
  4321                           
  4322                           ;doprnt.c: 536: while(c = *f++) {
  4323  000C8A  D0D3               	goto	l2730
  4324  000C8C                     l2662:
  4325                           
  4326                           ;doprnt.c: 538: if(c != '%')
  4327  000C8C  0E25               	movlw	37
  4328  000C8E  1830               	xorwf	sprintf@c,w,c
  4329  000C90  B4D8               	btfsc	status,2,c
  4330  000C92  D009               	goto	l2668
  4331                           
  4332                           ;doprnt.c: 540: {
  4333                           ;doprnt.c: 541: ((*sp++ = (c)));
  4334  000C94  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4335  000C98  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4336  000C9C  C030  FFDF         	movff	sprintf@c,indf2
  4337  000CA0  4A1B               	infsnz	sprintf@sp,f,c
  4338  000CA2  2A1C               	incf	sprintf@sp+1,f,c
  4339                           
  4340                           ;doprnt.c: 542: continue;
  4341  000CA4  D0C6               	goto	l2730
  4342  000CA6                     l2668:
  4343                           
  4344                           ;doprnt.c: 543: }
  4345                           ;doprnt.c: 548: flag = 0;
  4346  000CA6  0E00               	movlw	0
  4347  000CA8  6E28               	movwf	sprintf@flag,c
  4348                           
  4349                           ;doprnt.c: 635: switch(c = *f++) {
  4350  000CAA  D042               	goto	l2688
  4351  000CAC                     l2670:
  4352                           
  4353                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4354  000CAC  C02A  FFD9         	movff	sprintf@ap,fsr2l
  4355  000CB0  C02B  FFDA         	movff	sprintf@ap+1,fsr2h
  4356  000CB4  CFDE F02C          	movff	postinc2,sprintf@cp
  4357  000CB8  CFDD F02D          	movff	postdec2,sprintf@cp+1
  4358  000CBC  0E02               	movlw	2
  4359  000CBE  262A               	addwf	sprintf@ap,f,c
  4360  000CC0  0E00               	movlw	0
  4361  000CC2  222B               	addwfc	sprintf@ap+1,f,c
  4362                           
  4363                           ;doprnt.c: 740: if(!cp)
  4364  000CC4  502C               	movf	sprintf@cp,w,c
  4365  000CC6  102D               	iorwf	sprintf@cp+1,w,c
  4366  000CC8  A4D8               	btfss	status,2,c
  4367  000CCA  D01E               	goto	l2684
  4368                           
  4369                           ;doprnt.c: 741: cp = "(null)";
  4370  000CCC  0E6A               	movlw	low STR_8
  4371  000CCE  6E2C               	movwf	sprintf@cp,c
  4372  000CD0  0E08               	movlw	high STR_8
  4373  000CD2  6E2D               	movwf	sprintf@cp+1,c
  4374                           
  4375                           ;doprnt.c: 777: while(*cp)
  4376  000CD4  D019               	goto	l2684
  4377  000CD6                     l2678:
  4378                           
  4379                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
  4380  000CD6  C02C  FFF6         	movff	sprintf@cp,tblptrl
  4381  000CDA  C02D  FFF7         	movff	sprintf@cp+1,tblptrh
  4382  000CDE  6AF8               	clrf	tblptru,c
  4383  000CE0  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4384  000CE4  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4385  000CE8  0E07               	movlw	(high __ramtop+-1)
  4386  000CEA  64F7               	cpfsgt	tblptrh,c
  4387  000CEC  D003               	bra	u1837
  4388  000CEE  0008               	tblrd		*
  4389  000CF0  50F5               	movf	tablat,w,c
  4390  000CF2  D005               	bra	u1830
  4391  000CF4                     u1837:
  4392  000CF4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4393  000CF8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4394  000CFC  50EF               	movf	indf0,w,c
  4395  000CFE                     u1830:
  4396  000CFE  6EDF               	movwf	indf2,c
  4397  000D00  4A2C               	infsnz	sprintf@cp,f,c
  4398  000D02  2A2D               	incf	sprintf@cp+1,f,c
  4399  000D04  4A1B               	infsnz	sprintf@sp,f,c
  4400  000D06  2A1C               	incf	sprintf@sp+1,f,c
  4401  000D08                     l2684:
  4402  000D08  C02C  FFF6         	movff	sprintf@cp,tblptrl
  4403  000D0C  C02D  FFF7         	movff	sprintf@cp+1,tblptrh
  4404  000D10  6AF8               	clrf	tblptru,c
  4405  000D12  0E07               	movlw	(high __ramtop+-1)
  4406  000D14  64F7               	cpfsgt	tblptrh,c
  4407  000D16  D003               	bra	u1847
  4408  000D18  0008               	tblrd		*
  4409  000D1A  50F5               	movf	tablat,w,c
  4410  000D1C  D005               	bra	u1840
  4411  000D1E                     u1847:
  4412  000D1E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4413  000D22  CFF7 FFEA          	movff	tblptrh,fsr0h
  4414  000D26  50EF               	movf	indf0,w,c
  4415  000D28                     u1840:
  4416  000D28  0900               	iorlw	0
  4417  000D2A  B4D8               	btfsc	status,2,c
  4418  000D2C  D082               	goto	l2730
  4419  000D2E  D7D3               	goto	l2678
  4420  000D30                     l2688:
  4421  000D30  C01D  FFF6         	movff	sprintf@f,tblptrl
  4422  000D34  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  4423  000D38  4A1D               	infsnz	sprintf@f,f,c
  4424  000D3A  2A1E               	incf	sprintf@f+1,f,c
  4425  000D3C                     	if	0	;tblptru may be non-zero
  4426  000D3C                     	endif
  4427  000D3C                     	if	0	;tblptru may be non-zero
  4428  000D3C                     	endif
  4429  000D3C  0008               	tblrd		*
  4430  000D3E  CFF5 F030          	movff	tablat,sprintf@c
  4431  000D42  5030               	movf	sprintf@c,w,c
  4432                           
  4433                           ; Switch size 1, requested type "space"
  4434                           ; Number of cases is 4, Range of values is 0 to 115
  4435                           ; switch strategies available:
  4436                           ; Name         Instructions Cycles
  4437                           ; simple_byte           13     7 (average)
  4438                           ;	Chosen strategy is simple_byte
  4439  000D44  0A00               	xorlw	0	; case 0
  4440  000D46  B4D8               	btfsc	status,2,c
  4441  000D48  D080               	goto	l2732
  4442  000D4A  0A64               	xorlw	100	; case 100
  4443  000D4C  B4D8               	btfsc	status,2,c
  4444  000D4E  D007               	goto	l2690
  4445  000D50  0A0D               	xorlw	13	; case 105
  4446  000D52  B4D8               	btfsc	status,2,c
  4447  000D54  D004               	goto	l2690
  4448  000D56  0A1A               	xorlw	26	; case 115
  4449  000D58  B4D8               	btfsc	status,2,c
  4450  000D5A  D7A8               	goto	l2670
  4451  000D5C  D06A               	goto	l2730
  4452  000D5E                     l2690:
  4453                           
  4454                           ;doprnt.c: 1253: {
  4455                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4456  000D5E  C02A  FFD9         	movff	sprintf@ap,fsr2l
  4457  000D62  C02B  FFDA         	movff	sprintf@ap+1,fsr2h
  4458  000D66  CFDE F02E          	movff	postinc2,sprintf@val
  4459  000D6A  CFDD F02F          	movff	postdec2,sprintf@val+1
  4460  000D6E  0E02               	movlw	2
  4461  000D70  262A               	addwf	sprintf@ap,f,c
  4462  000D72  0E00               	movlw	0
  4463  000D74  222B               	addwfc	sprintf@ap+1,f,c
  4464                           
  4465                           ;doprnt.c: 1261: if((int)val < 0) {
  4466  000D76  AE2F               	btfss	sprintf@val+1,7,c
  4467  000D78  D006               	goto	l2700
  4468                           
  4469                           ;doprnt.c: 1262: flag |= 0x03;
  4470  000D7A  0E03               	movlw	3
  4471  000D7C  1228               	iorwf	sprintf@flag,f,c
  4472                           
  4473                           ;doprnt.c: 1263: val = -val;
  4474  000D7E  6C2E               	negf	sprintf@val,c
  4475  000D80  1E2F               	comf	sprintf@val+1,f,c
  4476  000D82  B0D8               	btfsc	status,0,c
  4477  000D84  2A2F               	incf	sprintf@val+1,f,c
  4478  000D86                     l2700:
  4479                           
  4480                           ;doprnt.c: 1264: }
  4481                           ;doprnt.c: 1266: }
  4482                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4483  000D86  0E01               	movlw	1
  4484  000D88  6E30               	movwf	sprintf@c,c
  4485  000D8A                     l2702:
  4486  000D8A  0E05               	movlw	5
  4487  000D8C  1830               	xorwf	sprintf@c,w,c
  4488  000D8E  B4D8               	btfsc	status,2,c
  4489  000D90  D012               	goto	l2714
  4490                           
  4491                           ;doprnt.c: 1306: if(val < dpowers[c])
  4492  000D92  5030               	movf	sprintf@c,w,c
  4493  000D94  0D02               	mullw	2
  4494  000D96  0E01               	movlw	low _dpowers
  4495  000D98  24F3               	addwf	prodl,w,c
  4496  000D9A  6EF6               	movwf	tblptrl,c
  4497  000D9C  0E08               	movlw	high _dpowers
  4498  000D9E  20F4               	addwfc	prodh,w,c
  4499  000DA0  6EF7               	movwf	tblptrh,c
  4500  000DA2                     	if	0	;There are less than 3 active tblptr bytes
  4501  000DA2                     	endif
  4502  000DA2  0009               	tblrd		*+
  4503  000DA4  50F5               	movf	tablat,w,c
  4504  000DA6  5C2E               	subwf	sprintf@val,w,c
  4505  000DA8  0009               	tblrd		*+
  4506  000DAA  50F5               	movf	tablat,w,c
  4507  000DAC  582F               	subwfb	sprintf@val+1,w,c
  4508  000DAE  A0D8               	btfss	status,0,c
  4509  000DB0  D002               	goto	l2714
  4510                           
  4511                           ;doprnt.c: 1307: break;
  4512  000DB2  2A30               	incf	sprintf@c,f,c
  4513  000DB4  D7EA               	goto	l2702
  4514  000DB6                     l2714:
  4515                           
  4516                           ;doprnt.c: 1422: {
  4517                           ;doprnt.c: 1438: if(flag & 0x03)
  4518  000DB6  C028  F027         	movff	sprintf@flag,??_sprintf
  4519  000DBA  0E03               	movlw	3
  4520  000DBC  1627               	andwf	??_sprintf,f,c
  4521  000DBE  B4D8               	btfsc	status,2,c
  4522  000DC0  D008               	goto	l2720
  4523                           
  4524                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4525  000DC2  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4526  000DC6  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4527  000DCA  0E2D               	movlw	45
  4528  000DCC  6EDF               	movwf	indf2,c
  4529  000DCE  4A1B               	infsnz	sprintf@sp,f,c
  4530  000DD0  2A1C               	incf	sprintf@sp+1,f,c
  4531  000DD2                     l2720:
  4532                           
  4533                           ;doprnt.c: 1469: }
  4534                           ;doprnt.c: 1472: prec = c;
  4535  000DD2  C030  F029         	movff	sprintf@c,sprintf@prec
  4536                           
  4537                           ;doprnt.c: 1474: while(prec--) {
  4538  000DD6  D029               	goto	l2728
  4539  000DD8                     l2722:
  4540                           
  4541                           ;doprnt.c: 1478: {
  4542                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4543  000DD8  5029               	movf	sprintf@prec,w,c
  4544  000DDA  0D02               	mullw	2
  4545  000DDC  0E01               	movlw	low _dpowers
  4546  000DDE  24F3               	addwf	prodl,w,c
  4547  000DE0  6EF6               	movwf	tblptrl,c
  4548  000DE2  0E08               	movlw	high _dpowers
  4549  000DE4  20F4               	addwfc	prodh,w,c
  4550  000DE6  6EF7               	movwf	tblptrh,c
  4551  000DE8                     	if	0	;There are less than 3 active tblptr bytes
  4552  000DE8                     	endif
  4553  000DE8  0009               	tblrd		*+
  4554  000DEA  CFF5 F011          	movff	tablat,___lwdiv@divisor
  4555  000DEE  000A               	tblrd		*-
  4556  000DF0  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  4557  000DF4  C02E  F00F         	movff	sprintf@val,___lwdiv@dividend
  4558  000DF8  C02F  F010         	movff	sprintf@val+1,___lwdiv@dividend+1
  4559  000DFC  EC78  F00F         	call	___lwdiv	;wreg free
  4560  000E00  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  4561  000E04  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  4562  000E08  0E00               	movlw	0
  4563  000E0A  6E19               	movwf	___lwmod@divisor+1,c
  4564  000E0C  0E0A               	movlw	10
  4565  000E0E  6E18               	movwf	___lwmod@divisor,c
  4566  000E10  EC0B  F010         	call	___lwmod	;wreg free
  4567  000E14  5016               	movf	?___lwmod,w,c
  4568  000E16  0F30               	addlw	48
  4569  000E18  6E30               	movwf	sprintf@c,c
  4570                           
  4571                           ;doprnt.c: 1523: }
  4572                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4573  000E1A  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4574  000E1E  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4575  000E22  C030  FFDF         	movff	sprintf@c,indf2
  4576  000E26  4A1B               	infsnz	sprintf@sp,f,c
  4577  000E28  2A1C               	incf	sprintf@sp+1,f,c
  4578  000E2A                     l2728:
  4579  000E2A  0629               	decf	sprintf@prec,f,c
  4580  000E2C  2829               	incf	sprintf@prec,w,c
  4581  000E2E  A4D8               	btfss	status,2,c
  4582  000E30  D7D3               	goto	l2722
  4583  000E32                     l2730:
  4584  000E32  C01D  FFF6         	movff	sprintf@f,tblptrl
  4585  000E36  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  4586  000E3A  4A1D               	infsnz	sprintf@f,f,c
  4587  000E3C  2A1E               	incf	sprintf@f+1,f,c
  4588  000E3E                     	if	0	;tblptru may be non-zero
  4589  000E3E                     	endif
  4590  000E3E                     	if	0	;tblptru may be non-zero
  4591  000E3E                     	endif
  4592  000E3E  0008               	tblrd		*
  4593  000E40  CFF5 F030          	movff	tablat,sprintf@c
  4594  000E44  5030               	movf	sprintf@c,w,c
  4595  000E46  A4D8               	btfss	status,2,c
  4596  000E48  D721               	goto	l2662
  4597  000E4A                     l2732:
  4598                           
  4599                           ;doprnt.c: 1538: *sp = 0;
  4600  000E4A  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4601  000E4E  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4602  000E52  0E00               	movlw	0
  4603  000E54  6EDF               	movwf	indf2,c
  4604  000E56  0012               	return	
  4605  000E58                     __end_of_sprintf:
  4606                           	opt stack 0
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           indf0	equ	0xFEF
  4615                           postinc0	equ	0xFEE
  4616                           fsr0h	equ	0xFEA
  4617                           fsr0l	equ	0xFE9
  4618                           wreg	equ	0xFE8
  4619                           postdec1	equ	0xFE5
  4620                           fsr1l	equ	0xFE1
  4621                           indf2	equ	0xFDF
  4622                           postinc2	equ	0xFDE
  4623                           postdec2	equ	0xFDD
  4624                           plusw2	equ	0xFDB
  4625                           fsr2h	equ	0xFDA
  4626                           fsr2l	equ	0xFD9
  4627                           status	equ	0xFD8
  4628                           
  4629 ;; *************** function ___lwmod *****************
  4630 ;; Defined at:
  4631 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  dividend        2   21[COMRAM] unsigned int 
  4634 ;;  divisor         2   23[COMRAM] unsigned int 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  counter         1   25[COMRAM] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2   21[COMRAM] unsigned int 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4646 ;;      Params:         4       0       0       0       0       0       0       0       0
  4647 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4649 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4650 ;;Total ram usage:        5 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_sprintf
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text30
  4661  002016                     __ptext30:
  4662                           	opt stack 0
  4663  002016                     ___lwmod:
  4664                           	opt stack 27
  4665                           
  4666                           ;incstack = 0
  4667  002016  5018               	movf	___lwmod@divisor,w,c
  4668  002018  1019               	iorwf	___lwmod@divisor+1,w,c
  4669  00201A  B4D8               	btfsc	status,2,c
  4670  00201C  D018               	goto	l1059
  4671  00201E  0E01               	movlw	1
  4672  002020  6E1A               	movwf	___lwmod@counter,c
  4673  002022  D004               	goto	l2602
  4674  002024                     l2600:
  4675  002024  90D8               	bcf	status,0,c
  4676  002026  3618               	rlcf	___lwmod@divisor,f,c
  4677  002028  3619               	rlcf	___lwmod@divisor+1,f,c
  4678  00202A  2A1A               	incf	___lwmod@counter,f,c
  4679  00202C                     l2602:
  4680  00202C  AE19               	btfss	___lwmod@divisor+1,7,c
  4681  00202E  D7FA               	goto	l2600
  4682  002030                     l2604:
  4683  002030  5018               	movf	___lwmod@divisor,w,c
  4684  002032  5C16               	subwf	___lwmod@dividend,w,c
  4685  002034  5019               	movf	___lwmod@divisor+1,w,c
  4686  002036  5817               	subwfb	___lwmod@dividend+1,w,c
  4687  002038  A0D8               	btfss	status,0,c
  4688  00203A  D004               	goto	l2608
  4689  00203C  5018               	movf	___lwmod@divisor,w,c
  4690  00203E  5E16               	subwf	___lwmod@dividend,f,c
  4691  002040  5019               	movf	___lwmod@divisor+1,w,c
  4692  002042  5A17               	subwfb	___lwmod@dividend+1,f,c
  4693  002044                     l2608:
  4694  002044  90D8               	bcf	status,0,c
  4695  002046  3219               	rrcf	___lwmod@divisor+1,f,c
  4696  002048  3218               	rrcf	___lwmod@divisor,f,c
  4697  00204A  2E1A               	decfsz	___lwmod@counter,f,c
  4698  00204C  D7F1               	goto	l2604
  4699  00204E                     l1059:
  4700  00204E  C016  F016         	movff	___lwmod@dividend,?___lwmod
  4701  002052  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  4702  002056  0012               	return		;funcret
  4703  002058                     __end_of___lwmod:
  4704                           	opt stack 0
  4705                           tblptru	equ	0xFF8
  4706                           tblptrh	equ	0xFF7
  4707                           tblptrl	equ	0xFF6
  4708                           tablat	equ	0xFF5
  4709                           prodh	equ	0xFF4
  4710                           prodl	equ	0xFF3
  4711                           intcon	equ	0xFF2
  4712                           indf0	equ	0xFEF
  4713                           postinc0	equ	0xFEE
  4714                           fsr0h	equ	0xFEA
  4715                           fsr0l	equ	0xFE9
  4716                           wreg	equ	0xFE8
  4717                           postdec1	equ	0xFE5
  4718                           fsr1l	equ	0xFE1
  4719                           indf2	equ	0xFDF
  4720                           postinc2	equ	0xFDE
  4721                           postdec2	equ	0xFDD
  4722                           plusw2	equ	0xFDB
  4723                           fsr2h	equ	0xFDA
  4724                           fsr2l	equ	0xFD9
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _floor *****************
  4728 ;; Defined at:
  4729 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\floor.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  x               3    3[BANK0 ] unsigned int 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  i               3    6[BANK0 ] unsigned int 
  4734 ;;  expon           2    9[BANK0 ] int 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  3    3[BANK0 ] int 
  4737 ;; Registers used:
  4738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4744 ;;      Params:         0       3       0       0       0       0       0       0       0
  4745 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4747 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4748 ;;Total ram usage:        8 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    3
  4751 ;; This function calls:
  4752 ;;		___altoft
  4753 ;;		___ftadd
  4754 ;;		___ftge
  4755 ;;		___fttol
  4756 ;;		_frexp
  4757 ;; This function is called by:
  4758 ;;		_convert_float_to_char
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text31
  4763  00144A                     __ptext31:
  4764                           	opt stack 0
  4765  00144A                     _floor:
  4766                           	opt stack 25
  4767                           
  4768                           ;incstack = 0
  4769  00144A  C095  F00F         	movff	floor@x,frexp@value
  4770  00144E  C096  F010         	movff	floor@x+1,frexp@value+1
  4771  001452  C097  F011         	movff	floor@x+2,frexp@value+2
  4772  001456  0E9B               	movlw	low floor@expon
  4773  001458  6E12               	movwf	frexp@eptr,c
  4774  00145A  0E00               	movlw	high floor@expon
  4775  00145C  6E13               	movwf	frexp@eptr+1,c
  4776  00145E  EC3A  F00E         	call	_frexp	;wreg free
  4777  001462  0100               	movlb	0	; () banked
  4778  001464  AF9C               	btfss	(floor@expon+1)& (0+255),7,b
  4779  001466  D017               	goto	l3874
  4780                           
  4781                           ; BSR set to: 0
  4782  001468  0100               	movlb	0	; () banked
  4783  00146A  AF97               	btfss	(floor@x+2)& (0+255),7,b
  4784  00146C  D00A               	goto	l3870
  4785                           
  4786                           ; BSR set to: 0
  4787  00146E  0E00               	movlw	0
  4788  001470  0100               	movlb	0	; () banked
  4789  001472  6F95               	movwf	?_floor& (0+255),b
  4790  001474  0E80               	movlw	128
  4791  001476  0100               	movlb	0	; () banked
  4792  001478  6F96               	movwf	(?_floor+1)& (0+255),b
  4793  00147A  0EBF               	movlw	191
  4794  00147C  0100               	movlb	0	; () banked
  4795  00147E  6F97               	movwf	(?_floor+2)& (0+255),b
  4796                           
  4797                           ; BSR set to: 0
  4798  001480  0012               	return	
  4799  001482                     l3870:
  4800                           
  4801                           ; BSR set to: 0
  4802  001482  0E00               	movlw	0
  4803  001484  0100               	movlb	0	; () banked
  4804  001486  6F95               	movwf	?_floor& (0+255),b
  4805  001488  0E00               	movlw	0
  4806  00148A  0100               	movlb	0	; () banked
  4807  00148C  6F96               	movwf	(?_floor+1)& (0+255),b
  4808  00148E  0E00               	movlw	0
  4809  001490  0100               	movlb	0	; () banked
  4810  001492  6F97               	movwf	(?_floor+2)& (0+255),b
  4811                           
  4812                           ; BSR set to: 0
  4813  001494  0012               	return	
  4814  001496                     l3874:
  4815                           
  4816                           ; BSR set to: 0
  4817  001496  0100               	movlb	0	; () banked
  4818  001498  519C               	movf	(floor@expon+1)& (0+255),w,b
  4819  00149A  E105               	bnz	u3700
  4820  00149C  0E15               	movlw	21
  4821  00149E  0100               	movlb	0	; () banked
  4822  0014A0  5D9B               	subwf	floor@expon& (0+255),w,b
  4823  0014A2  A0D8               	btfss	status,0,c
  4824  0014A4  D007               	goto	l3878
  4825  0014A6                     u3700:
  4826                           
  4827                           ; BSR set to: 0
  4828  0014A6  C095  F095         	movff	floor@x,?_floor
  4829  0014AA  C096  F096         	movff	floor@x+1,?_floor+1
  4830  0014AE  C097  F097         	movff	floor@x+2,?_floor+2
  4831  0014B2  0012               	return	
  4832  0014B4                     l3878:
  4833                           
  4834                           ; BSR set to: 0
  4835  0014B4  C095  F029         	movff	floor@x,___fttol@f1
  4836  0014B8  C096  F02A         	movff	floor@x+1,___fttol@f1+1
  4837  0014BC  C097  F02B         	movff	floor@x+2,___fttol@f1+2
  4838  0014C0  ECAB  F009         	call	___fttol	;wreg free
  4839  0014C4  C029  F038         	movff	?___fttol,___altoft@c
  4840  0014C8  C02A  F039         	movff	?___fttol+1,___altoft@c+1
  4841  0014CC  C02B  F03A         	movff	?___fttol+2,___altoft@c+2
  4842  0014D0  C02C  F03B         	movff	?___fttol+3,___altoft@c+3
  4843  0014D4  EC76  F00E         	call	___altoft	;wreg free
  4844  0014D8  C038  F098         	movff	?___altoft,floor@i
  4845  0014DC  C039  F099         	movff	?___altoft+1,floor@i+1
  4846  0014E0  C03A  F09A         	movff	?___altoft+2,floor@i+2
  4847  0014E4  C095  F029         	movff	floor@x,___ftge@ff1
  4848  0014E8  C096  F02A         	movff	floor@x+1,___ftge@ff1+1
  4849  0014EC  C097  F02B         	movff	floor@x+2,___ftge@ff1+2
  4850  0014F0  C098  F02C         	movff	floor@i,___ftge@ff2
  4851  0014F4  C099  F02D         	movff	floor@i+1,___ftge@ff2+1
  4852  0014F8  C09A  F02E         	movff	floor@i+2,___ftge@ff2+2
  4853  0014FC  EC71  F00D         	call	___ftge	;wreg free
  4854  001500  B0D8               	btfsc	status,0,c
  4855  001502  D015               	goto	l857
  4856  001504  C098  F038         	movff	floor@i,___ftadd@f1
  4857  001508  C099  F039         	movff	floor@i+1,___ftadd@f1+1
  4858  00150C  C09A  F03A         	movff	floor@i+2,___ftadd@f1+2
  4859  001510  0E00               	movlw	0
  4860  001512  6E3B               	movwf	___ftadd@f2,c
  4861  001514  0E80               	movlw	128
  4862  001516  6E3C               	movwf	___ftadd@f2+1,c
  4863  001518  0EBF               	movlw	191
  4864  00151A  6E3D               	movwf	___ftadd@f2+2,c
  4865  00151C  EC42  F005         	call	___ftadd	;wreg free
  4866  001520  C038  F095         	movff	?___ftadd,?_floor
  4867  001524  C039  F096         	movff	?___ftadd+1,?_floor+1
  4868  001528  C03A  F097         	movff	?___ftadd+2,?_floor+2
  4869  00152C  0012               	return	
  4870  00152E                     l857:
  4871  00152E  C098  F095         	movff	floor@i,?_floor
  4872  001532  C099  F096         	movff	floor@i+1,?_floor+1
  4873  001536  C09A  F097         	movff	floor@i+2,?_floor+2
  4874  00153A  0012               	return		;funcret
  4875  00153C                     __end_of_floor:
  4876                           	opt stack 0
  4877                           tblptru	equ	0xFF8
  4878                           tblptrh	equ	0xFF7
  4879                           tblptrl	equ	0xFF6
  4880                           tablat	equ	0xFF5
  4881                           prodh	equ	0xFF4
  4882                           prodl	equ	0xFF3
  4883                           intcon	equ	0xFF2
  4884                           indf0	equ	0xFEF
  4885                           postinc0	equ	0xFEE
  4886                           fsr0h	equ	0xFEA
  4887                           fsr0l	equ	0xFE9
  4888                           wreg	equ	0xFE8
  4889                           postdec1	equ	0xFE5
  4890                           fsr1l	equ	0xFE1
  4891                           indf2	equ	0xFDF
  4892                           postinc2	equ	0xFDE
  4893                           postdec2	equ	0xFDD
  4894                           plusw2	equ	0xFDB
  4895                           fsr2h	equ	0xFDA
  4896                           fsr2l	equ	0xFD9
  4897                           status	equ	0xFD8
  4898                           
  4899 ;; *************** function _frexp *****************
  4900 ;; Defined at:
  4901 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\frexp.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  value           3   14[COMRAM] int 
  4904 ;;  eptr            2   17[COMRAM] PTR int 
  4905 ;;		 -> floor@expon(2), 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  3   14[COMRAM] PTR int 
  4910 ;; Registers used:
  4911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4917 ;;      Params:         5       0       0       0       0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4919 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4920 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4921 ;;Total ram usage:        7 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    1
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_floor
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text32
  4932  001C74                     __ptext32:
  4933                           	opt stack 0
  4934  001C74                     _frexp:
  4935                           	opt stack 26
  4936                           
  4937                           ;incstack = 0
  4938  001C74  500F               	movf	frexp@value,w,c
  4939  001C76  1010               	iorwf	frexp@value+1,w,c
  4940  001C78  1011               	iorwf	frexp@value+2,w,c
  4941  001C7A  A4D8               	btfss	status,2,c
  4942  001C7C  D009               	goto	l3786
  4943  001C7E  C012  FFD9         	movff	frexp@eptr,fsr2l
  4944  001C82  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  4945  001C86  0E00               	movlw	0
  4946  001C88  6EDE               	movwf	postinc2,c
  4947  001C8A  0E00               	movlw	0
  4948  001C8C  6EDD               	movwf	postdec2,c
  4949                           
  4950                           ;	Return value of _frexp is never used
  4951  001C8E  0012               	return	
  4952  001C90                     l3786:
  4953  001C90  5011               	movf	frexp@value+2,w,c
  4954  001C92  0B7F               	andlw	127
  4955  001C94  6E14               	movwf	??_frexp& (0+255),c
  4956  001C96  6A15               	clrf	(??_frexp+1)& (0+255),c
  4957  001C98  90D8               	bcf	status,0,c
  4958  001C9A  3614               	rlcf	??_frexp,f,c
  4959  001C9C  3615               	rlcf	??_frexp+1,f,c
  4960  001C9E  C012  FFD9         	movff	frexp@eptr,fsr2l
  4961  001CA2  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  4962  001CA6  C014  FFDE         	movff	??_frexp,postinc2
  4963  001CAA  C015  FFDD         	movff	??_frexp+1,postdec2
  4964  001CAE  AE10               	btfss	frexp@value+1,7,c
  4965  001CB0  D003               	goto	u3560
  4966  001CB2  6A14               	clrf	??_frexp& (0+255),c
  4967  001CB4  2A14               	incf	??_frexp& (0+255),f,c
  4968  001CB6  D001               	goto	u3568
  4969  001CB8                     u3560:
  4970  001CB8  6A14               	clrf	??_frexp& (0+255),c
  4971  001CBA                     u3568:
  4972  001CBA  5014               	movf	??_frexp,w,c
  4973  001CBC  C012  FFD9         	movff	frexp@eptr,fsr2l
  4974  001CC0  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  4975  001CC4  12DE               	iorwf	postinc2,f,c
  4976  001CC6  0E00               	movlw	0
  4977  001CC8  12DD               	iorwf	postdec2,f,c
  4978  001CCA  C012  FFD9         	movff	frexp@eptr,fsr2l
  4979  001CCE  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  4980  001CD2  0E82               	movlw	130
  4981  001CD4  26DE               	addwf	postinc2,f,c
  4982  001CD6  0EFF               	movlw	255
  4983  001CD8  22DD               	addwfc	postdec2,f,c
  4984  001CDA  8011               	bsf	frexp@value+2,0,c
  4985  001CDC  8211               	bsf	frexp@value+2,1,c
  4986  001CDE  8411               	bsf	frexp@value+2,2,c
  4987  001CE0  8611               	bsf	frexp@value+2,3,c
  4988  001CE2  8811               	bsf	frexp@value+2,4,c
  4989  001CE4  8A11               	bsf	frexp@value+2,5,c
  4990  001CE6  9C11               	bcf	frexp@value+2,6,c
  4991  001CE8  9E10               	bcf	frexp@value+1,7,c
  4992  001CEA  0012               	return	
  4993  001CEC                     __end_of_frexp:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           indf0	equ	0xFEF
  5003                           postinc0	equ	0xFEE
  5004                           fsr0h	equ	0xFEA
  5005                           fsr0l	equ	0xFE9
  5006                           wreg	equ	0xFE8
  5007                           postdec1	equ	0xFE5
  5008                           fsr1l	equ	0xFE1
  5009                           indf2	equ	0xFDF
  5010                           postinc2	equ	0xFDE
  5011                           postdec2	equ	0xFDD
  5012                           plusw2	equ	0xFDB
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           status	equ	0xFD8
  5016                           
  5017 ;; *************** function ___altoft *****************
  5018 ;; Defined at:
  5019 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\altoft.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  c               4   55[COMRAM] long 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  sign            1   64[COMRAM] unsigned char 
  5024 ;;  exp             1   63[COMRAM] unsigned char 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  3   55[COMRAM] float 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5034 ;;      Params:         4       0       0       0       0       0       0       0       0
  5035 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5036 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5037 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5038 ;;Total ram usage:       10 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    2
  5041 ;; This function calls:
  5042 ;;		___ftpack
  5043 ;; This function is called by:
  5044 ;;		_floor
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text33
  5049  001CEC                     __ptext33:
  5050                           	opt stack 0
  5051  001CEC                     ___altoft:
  5052                           	opt stack 25
  5053                           
  5054                           ;incstack = 0
  5055  001CEC  0E00               	movlw	0
  5056  001CEE  6E41               	movwf	___altoft@sign,c
  5057  001CF0  0E8E               	movlw	142
  5058  001CF2  6E40               	movwf	___altoft@exp,c
  5059  001CF4  AE3B               	btfss	___altoft@c+3,7,c
  5060  001CF6  D011               	goto	l3704
  5061  001CF8  1E3B               	comf	___altoft@c+3,f,c
  5062  001CFA  1E3A               	comf	___altoft@c+2,f,c
  5063  001CFC  1E39               	comf	___altoft@c+1,f,c
  5064  001CFE  6C38               	negf	___altoft@c,c
  5065  001D00  0E00               	movlw	0
  5066  001D02  2239               	addwfc	___altoft@c+1,f,c
  5067  001D04  223A               	addwfc	___altoft@c+2,f,c
  5068  001D06  223B               	addwfc	___altoft@c+3,f,c
  5069  001D08  0E01               	movlw	1
  5070  001D0A  6E41               	movwf	___altoft@sign,c
  5071  001D0C  D006               	goto	l3704
  5072  001D0E                     l3702:
  5073  001D0E  90D8               	bcf	status,0,c
  5074  001D10  323B               	rrcf	___altoft@c+3,f,c
  5075  001D12  323A               	rrcf	___altoft@c+2,f,c
  5076  001D14  3239               	rrcf	___altoft@c+1,f,c
  5077  001D16  3238               	rrcf	___altoft@c,f,c
  5078  001D18  2A40               	incf	___altoft@exp,f,c
  5079  001D1A                     l3704:
  5080  001D1A  0E00               	movlw	0
  5081  001D1C  1438               	andwf	___altoft@c,w,c
  5082  001D1E  6E3C               	movwf	??___altoft& (0+255),c
  5083  001D20  0E00               	movlw	0
  5084  001D22  1439               	andwf	___altoft@c+1,w,c
  5085  001D24  6E3D               	movwf	(??___altoft+1)& (0+255),c
  5086  001D26  0E00               	movlw	0
  5087  001D28  143A               	andwf	___altoft@c+2,w,c
  5088  001D2A  6E3E               	movwf	(??___altoft+2)& (0+255),c
  5089  001D2C  0EFF               	movlw	255
  5090  001D2E  143B               	andwf	___altoft@c+3,w,c
  5091  001D30  6E3F               	movwf	(??___altoft+3)& (0+255),c
  5092  001D32  503C               	movf	??___altoft,w,c
  5093  001D34  103D               	iorwf	??___altoft+1,w,c
  5094  001D36  103E               	iorwf	??___altoft+2,w,c
  5095  001D38  103F               	iorwf	??___altoft+3,w,c
  5096  001D3A  A4D8               	btfss	status,2,c
  5097  001D3C  D7E8               	goto	l3702
  5098  001D3E  C038  F00F         	movff	___altoft@c,___ftpack@arg
  5099  001D42  C039  F010         	movff	___altoft@c+1,___ftpack@arg+1
  5100  001D46  C03A  F011         	movff	___altoft@c+2,___ftpack@arg+2
  5101  001D4A  C040  F012         	movff	___altoft@exp,___ftpack@exp
  5102  001D4E  C041  F013         	movff	___altoft@sign,___ftpack@sign
  5103  001D52  EC77  F00C         	call	___ftpack	;wreg free
  5104  001D56  C00F  F038         	movff	?___ftpack,?___altoft
  5105  001D5A  C010  F039         	movff	?___ftpack+1,?___altoft+1
  5106  001D5E  C011  F03A         	movff	?___ftpack+2,?___altoft+2
  5107  001D62  0012               	return	
  5108  001D64                     __end_of___altoft:
  5109                           	opt stack 0
  5110                           tblptru	equ	0xFF8
  5111                           tblptrh	equ	0xFF7
  5112                           tblptrl	equ	0xFF6
  5113                           tablat	equ	0xFF5
  5114                           prodh	equ	0xFF4
  5115                           prodl	equ	0xFF3
  5116                           intcon	equ	0xFF2
  5117                           indf0	equ	0xFEF
  5118                           postinc0	equ	0xFEE
  5119                           fsr0h	equ	0xFEA
  5120                           fsr0l	equ	0xFE9
  5121                           wreg	equ	0xFE8
  5122                           postdec1	equ	0xFE5
  5123                           fsr1l	equ	0xFE1
  5124                           indf2	equ	0xFDF
  5125                           postinc2	equ	0xFDE
  5126                           postdec2	equ	0xFDD
  5127                           plusw2	equ	0xFDB
  5128                           fsr2h	equ	0xFDA
  5129                           fsr2l	equ	0xFD9
  5130                           status	equ	0xFD8
  5131                           
  5132 ;; *************** function ___ftneg *****************
  5133 ;; Defined at:
  5134 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  f1              3   14[COMRAM] float 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  3   14[COMRAM] float 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5148 ;;      Params:         3       0       0       0       0       0       0       0       0
  5149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5151 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5152 ;;Total ram usage:        3 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    1
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_convert_float_to_char
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text34
  5163  002266                     __ptext34:
  5164                           	opt stack 0
  5165  002266                     ___ftneg:
  5166                           	opt stack 27
  5167                           
  5168                           ;incstack = 0
  5169  002266  500F               	movf	___ftneg@f1,w,c
  5170  002268  1010               	iorwf	___ftneg@f1+1,w,c
  5171  00226A  1011               	iorwf	___ftneg@f1+2,w,c
  5172  00226C  B4D8               	btfsc	status,2,c
  5173  00226E  D006               	goto	l951
  5174  002270  0E00               	movlw	0
  5175  002272  1A0F               	xorwf	___ftneg@f1,f,c
  5176  002274  0E00               	movlw	0
  5177  002276  1A10               	xorwf	___ftneg@f1+1,f,c
  5178  002278  0E80               	movlw	128
  5179  00227A  1A11               	xorwf	___ftneg@f1+2,f,c
  5180  00227C                     l951:
  5181  00227C  C00F  F00F         	movff	___ftneg@f1,?___ftneg
  5182  002280  C010  F010         	movff	___ftneg@f1+1,?___ftneg+1
  5183  002284  C011  F011         	movff	___ftneg@f1+2,?___ftneg+2
  5184  002288  0012               	return		;funcret
  5185  00228A                     __end_of___ftneg:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           tblptrh	equ	0xFF7
  5189                           tblptrl	equ	0xFF6
  5190                           tablat	equ	0xFF5
  5191                           prodh	equ	0xFF4
  5192                           prodl	equ	0xFF3
  5193                           intcon	equ	0xFF2
  5194                           indf0	equ	0xFEF
  5195                           postinc0	equ	0xFEE
  5196                           fsr0h	equ	0xFEA
  5197                           fsr0l	equ	0xFE9
  5198                           wreg	equ	0xFE8
  5199                           postdec1	equ	0xFE5
  5200                           fsr1l	equ	0xFE1
  5201                           indf2	equ	0xFDF
  5202                           postinc2	equ	0xFDE
  5203                           postdec2	equ	0xFDD
  5204                           plusw2	equ	0xFDB
  5205                           fsr2h	equ	0xFDA
  5206                           fsr2l	equ	0xFD9
  5207                           status	equ	0xFD8
  5208                           
  5209 ;; *************** function ___awmod *****************
  5210 ;; Defined at:
  5211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  dividend        2   14[COMRAM] int 
  5214 ;;  divisor         2   16[COMRAM] int 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  sign            1   19[COMRAM] unsigned char 
  5217 ;;  counter         1   18[COMRAM] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  2   14[COMRAM] int 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, status,0
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5227 ;;      Params:         4       0       0       0       0       0       0       0       0
  5228 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5230 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5231 ;;Total ram usage:        6 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    1
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_trata_comando
  5238 ;;		_exibir_lcd
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text35
  5243  001DD6                     __ptext35:
  5244                           	opt stack 0
  5245  001DD6                     ___awmod:
  5246                           	opt stack 27
  5247                           
  5248                           ;incstack = 0
  5249  001DD6  0E00               	movlw	0
  5250  001DD8  6E14               	movwf	___awmod@sign,c
  5251  001DDA  AE10               	btfss	___awmod@dividend+1,7,c
  5252  001DDC  D006               	goto	l3028
  5253  001DDE  6C0F               	negf	___awmod@dividend,c
  5254  001DE0  1E10               	comf	___awmod@dividend+1,f,c
  5255  001DE2  B0D8               	btfsc	status,0,c
  5256  001DE4  2A10               	incf	___awmod@dividend+1,f,c
  5257  001DE6  0E01               	movlw	1
  5258  001DE8  6E14               	movwf	___awmod@sign,c
  5259  001DEA                     l3028:
  5260  001DEA  AE12               	btfss	___awmod@divisor+1,7,c
  5261  001DEC  D004               	goto	l3032
  5262  001DEE  6C11               	negf	___awmod@divisor,c
  5263  001DF0  1E12               	comf	___awmod@divisor+1,f,c
  5264  001DF2  B0D8               	btfsc	status,0,c
  5265  001DF4  2A12               	incf	___awmod@divisor+1,f,c
  5266  001DF6                     l3032:
  5267  001DF6  5011               	movf	___awmod@divisor,w,c
  5268  001DF8  1012               	iorwf	___awmod@divisor+1,w,c
  5269  001DFA  B4D8               	btfsc	status,2,c
  5270  001DFC  D018               	goto	l3048
  5271  001DFE  0E01               	movlw	1
  5272  001E00  6E13               	movwf	___awmod@counter,c
  5273  001E02  D004               	goto	l3038
  5274  001E04                     l3036:
  5275  001E04  90D8               	bcf	status,0,c
  5276  001E06  3611               	rlcf	___awmod@divisor,f,c
  5277  001E08  3612               	rlcf	___awmod@divisor+1,f,c
  5278  001E0A  2A13               	incf	___awmod@counter,f,c
  5279  001E0C                     l3038:
  5280  001E0C  AE12               	btfss	___awmod@divisor+1,7,c
  5281  001E0E  D7FA               	goto	l3036
  5282  001E10                     l3040:
  5283  001E10  5011               	movf	___awmod@divisor,w,c
  5284  001E12  5C0F               	subwf	___awmod@dividend,w,c
  5285  001E14  5012               	movf	___awmod@divisor+1,w,c
  5286  001E16  5810               	subwfb	___awmod@dividend+1,w,c
  5287  001E18  A0D8               	btfss	status,0,c
  5288  001E1A  D004               	goto	l3044
  5289  001E1C  5011               	movf	___awmod@divisor,w,c
  5290  001E1E  5E0F               	subwf	___awmod@dividend,f,c
  5291  001E20  5012               	movf	___awmod@divisor+1,w,c
  5292  001E22  5A10               	subwfb	___awmod@dividend+1,f,c
  5293  001E24                     l3044:
  5294  001E24  90D8               	bcf	status,0,c
  5295  001E26  3212               	rrcf	___awmod@divisor+1,f,c
  5296  001E28  3211               	rrcf	___awmod@divisor,f,c
  5297  001E2A  2E13               	decfsz	___awmod@counter,f,c
  5298  001E2C  D7F1               	goto	l3040
  5299  001E2E                     l3048:
  5300  001E2E  5014               	movf	___awmod@sign,w,c
  5301  001E30  B4D8               	btfsc	status,2,c
  5302  001E32  D004               	goto	l3052
  5303  001E34  6C0F               	negf	___awmod@dividend,c
  5304  001E36  1E10               	comf	___awmod@dividend+1,f,c
  5305  001E38  B0D8               	btfsc	status,0,c
  5306  001E3A  2A10               	incf	___awmod@dividend+1,f,c
  5307  001E3C                     l3052:
  5308  001E3C  C00F  F00F         	movff	___awmod@dividend,?___awmod
  5309  001E40  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  5310  001E44  0012               	return	
  5311  001E46                     __end_of___awmod:
  5312                           	opt stack 0
  5313                           tblptru	equ	0xFF8
  5314                           tblptrh	equ	0xFF7
  5315                           tblptrl	equ	0xFF6
  5316                           tablat	equ	0xFF5
  5317                           prodh	equ	0xFF4
  5318                           prodl	equ	0xFF3
  5319                           intcon	equ	0xFF2
  5320                           indf0	equ	0xFEF
  5321                           postinc0	equ	0xFEE
  5322                           fsr0h	equ	0xFEA
  5323                           fsr0l	equ	0xFE9
  5324                           wreg	equ	0xFE8
  5325                           postdec1	equ	0xFE5
  5326                           fsr1l	equ	0xFE1
  5327                           indf2	equ	0xFDF
  5328                           postinc2	equ	0xFDE
  5329                           postdec2	equ	0xFDD
  5330                           plusw2	equ	0xFDB
  5331                           fsr2h	equ	0xFDA
  5332                           fsr2l	equ	0xFD9
  5333                           status	equ	0xFD8
  5334                           
  5335 ;; *************** function ___awdiv *****************
  5336 ;; Defined at:
  5337 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  dividend        2   20[COMRAM] int 
  5340 ;;  divisor         2   22[COMRAM] int 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  quotient        2   26[COMRAM] int 
  5343 ;;  sign            1   25[COMRAM] unsigned char 
  5344 ;;  counter         1   24[COMRAM] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  2   20[COMRAM] int 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         4       0       0       0       0       0       0       0       0
  5355 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5357 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        8 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_exibir_lcd
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text36
  5369  001B72                     __ptext36:
  5370                           	opt stack 0
  5371  001B72                     ___awdiv:
  5372                           	opt stack 28
  5373                           
  5374                           ;incstack = 0
  5375  001B72  0E00               	movlw	0
  5376  001B74  6E1A               	movwf	___awdiv@sign,c
  5377  001B76  AE18               	btfss	___awdiv@divisor+1,7,c
  5378  001B78  D006               	goto	l3252
  5379  001B7A  6C17               	negf	___awdiv@divisor,c
  5380  001B7C  1E18               	comf	___awdiv@divisor+1,f,c
  5381  001B7E  B0D8               	btfsc	status,0,c
  5382  001B80  2A18               	incf	___awdiv@divisor+1,f,c
  5383  001B82  0E01               	movlw	1
  5384  001B84  6E1A               	movwf	___awdiv@sign,c
  5385  001B86                     l3252:
  5386  001B86  AE16               	btfss	___awdiv@dividend+1,7,c
  5387  001B88  D006               	goto	l3258
  5388  001B8A  6C15               	negf	___awdiv@dividend,c
  5389  001B8C  1E16               	comf	___awdiv@dividend+1,f,c
  5390  001B8E  B0D8               	btfsc	status,0,c
  5391  001B90  2A16               	incf	___awdiv@dividend+1,f,c
  5392  001B92  0E01               	movlw	1
  5393  001B94  1A1A               	xorwf	___awdiv@sign,f,c
  5394  001B96                     l3258:
  5395  001B96  0E00               	movlw	0
  5396  001B98  6E1C               	movwf	___awdiv@quotient+1,c
  5397  001B9A  0E00               	movlw	0
  5398  001B9C  6E1B               	movwf	___awdiv@quotient,c
  5399  001B9E  5017               	movf	___awdiv@divisor,w,c
  5400  001BA0  1018               	iorwf	___awdiv@divisor+1,w,c
  5401  001BA2  B4D8               	btfsc	status,2,c
  5402  001BA4  D01C               	goto	l3280
  5403  001BA6  0E01               	movlw	1
  5404  001BA8  6E19               	movwf	___awdiv@counter,c
  5405  001BAA  D004               	goto	l3266
  5406  001BAC                     l3264:
  5407  001BAC  90D8               	bcf	status,0,c
  5408  001BAE  3617               	rlcf	___awdiv@divisor,f,c
  5409  001BB0  3618               	rlcf	___awdiv@divisor+1,f,c
  5410  001BB2  2A19               	incf	___awdiv@counter,f,c
  5411  001BB4                     l3266:
  5412  001BB4  AE18               	btfss	___awdiv@divisor+1,7,c
  5413  001BB6  D7FA               	goto	l3264
  5414  001BB8                     l3268:
  5415  001BB8  90D8               	bcf	status,0,c
  5416  001BBA  361B               	rlcf	___awdiv@quotient,f,c
  5417  001BBC  361C               	rlcf	___awdiv@quotient+1,f,c
  5418  001BBE  5017               	movf	___awdiv@divisor,w,c
  5419  001BC0  5C15               	subwf	___awdiv@dividend,w,c
  5420  001BC2  5018               	movf	___awdiv@divisor+1,w,c
  5421  001BC4  5816               	subwfb	___awdiv@dividend+1,w,c
  5422  001BC6  A0D8               	btfss	status,0,c
  5423  001BC8  D005               	goto	l3276
  5424  001BCA  5017               	movf	___awdiv@divisor,w,c
  5425  001BCC  5E15               	subwf	___awdiv@dividend,f,c
  5426  001BCE  5018               	movf	___awdiv@divisor+1,w,c
  5427  001BD0  5A16               	subwfb	___awdiv@dividend+1,f,c
  5428  001BD2  801B               	bsf	___awdiv@quotient,0,c
  5429  001BD4                     l3276:
  5430  001BD4  90D8               	bcf	status,0,c
  5431  001BD6  3218               	rrcf	___awdiv@divisor+1,f,c
  5432  001BD8  3217               	rrcf	___awdiv@divisor,f,c
  5433  001BDA  2E19               	decfsz	___awdiv@counter,f,c
  5434  001BDC  D7ED               	goto	l3268
  5435  001BDE                     l3280:
  5436  001BDE  501A               	movf	___awdiv@sign,w,c
  5437  001BE0  B4D8               	btfsc	status,2,c
  5438  001BE2  D004               	goto	l3284
  5439  001BE4  6C1B               	negf	___awdiv@quotient,c
  5440  001BE6  1E1C               	comf	___awdiv@quotient+1,f,c
  5441  001BE8  B0D8               	btfsc	status,0,c
  5442  001BEA  2A1C               	incf	___awdiv@quotient+1,f,c
  5443  001BEC                     l3284:
  5444  001BEC  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5445  001BF0  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5446  001BF4  0012               	return	
  5447  001BF6                     __end_of___awdiv:
  5448                           	opt stack 0
  5449                           tblptru	equ	0xFF8
  5450                           tblptrh	equ	0xFF7
  5451                           tblptrl	equ	0xFF6
  5452                           tablat	equ	0xFF5
  5453                           prodh	equ	0xFF4
  5454                           prodl	equ	0xFF3
  5455                           intcon	equ	0xFF2
  5456                           indf0	equ	0xFEF
  5457                           postinc0	equ	0xFEE
  5458                           fsr0h	equ	0xFEA
  5459                           fsr0l	equ	0xFE9
  5460                           wreg	equ	0xFE8
  5461                           postdec1	equ	0xFE5
  5462                           fsr1l	equ	0xFE1
  5463                           indf2	equ	0xFDF
  5464                           postinc2	equ	0xFDE
  5465                           postdec2	equ	0xFDD
  5466                           plusw2	equ	0xFDB
  5467                           fsr2h	equ	0xFDA
  5468                           fsr2l	equ	0xFD9
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _convert *****************
  5472 ;; Defined at:
  5473 ;;		line 9 in file "ad.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  i               1   55[COMRAM] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0
  5488 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5490 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5491 ;;Total ram usage:        1 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    3
  5494 ;; This function calls:
  5495 ;;		_BusyADC
  5496 ;;		_ConvertADC
  5497 ;;		_ReadADC
  5498 ;;		_SetChanADC
  5499 ;;		___ftdiv
  5500 ;;		___ftmul
  5501 ;;		___lwdiv
  5502 ;;		___lwtoft
  5503 ;; This function is called by:
  5504 ;;		_main
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text37
  5509  001A40                     __ptext37:
  5510                           	opt stack 0
  5511  001A40                     _convert:
  5512                           	opt stack 27
  5513                           
  5514                           ;ad.c: 10: ADCResult = 0;
  5515                           
  5516                           ;incstack = 0
  5517  001A40  0E00               	movlw	0
  5518  001A42  0100               	movlb	0	; () banked
  5519  001A44  6F6D               	movwf	(_ADCResult+1)& (0+255),b
  5520  001A46  0E00               	movlw	0
  5521  001A48  6F6C               	movwf	_ADCResult& (0+255),b
  5522                           
  5523                           ;ad.c: 12: for(unsigned char i=0;i<=2;i++){
  5524  001A4A  0E00               	movlw	0
  5525  001A4C  6E38               	movwf	convert@i,c
  5526  001A4E                     l4016:
  5527                           
  5528                           ; BSR set to: 0
  5529  001A4E  0E02               	movlw	2
  5530  001A50  6438               	cpfsgt	convert@i,c
  5531  001A52  D001               	goto	l4020
  5532  001A54  0012               	return	
  5533  001A56                     l4020:
  5534                           
  5535                           ;ad.c: 13: SetChanADC(0b10000111);
  5536  001A56  0E87               	movlw	135
  5537  001A58  EC71  F011         	call	_SetChanADC
  5538                           
  5539                           ;ad.c: 15: ConvertADC();
  5540  001A5C  ECBA  F011         	call	_ConvertADC	;wreg free
  5541  001A60                     l4024:
  5542  001A60  ECA7  F011         	call	_BusyADC	;wreg free
  5543  001A64  0900               	iorlw	0
  5544  001A66  A4D8               	btfss	status,2,c
  5545  001A68  D7FB               	goto	l4024
  5546                           
  5547                           ;ad.c: 17: ADCResult += (unsigned int) ReadADC();
  5548  001A6A  EC9A  F011         	call	_ReadADC	;wreg free
  5549  001A6E  500F               	movf	?_ReadADC,w,c
  5550  001A70  0100               	movlb	0	; () banked
  5551  001A72  276C               	addwf	_ADCResult& (0+255),f,b
  5552  001A74  5010               	movf	?_ReadADC+1,w,c
  5553  001A76  0100               	movlb	0	; () banked
  5554  001A78  236D               	addwfc	(_ADCResult+1)& (0+255),f,b
  5555                           
  5556                           ;ad.c: 18: valor_tensao=((ADCResult/3)*5.0)/1023;
  5557  001A7A  0E00               	movlw	0
  5558  001A7C  6E1D               	movwf	___ftmul@f2,c
  5559  001A7E  0EA0               	movlw	160
  5560  001A80  6E1E               	movwf	___ftmul@f2+1,c
  5561  001A82  0E40               	movlw	64
  5562  001A84  6E1F               	movwf	___ftmul@f2+2,c
  5563  001A86  0E00               	movlw	0
  5564  001A88  6E12               	movwf	___lwdiv@divisor+1,c
  5565  001A8A  0E03               	movlw	3
  5566  001A8C  6E11               	movwf	___lwdiv@divisor,c
  5567  001A8E  C06C  F00F         	movff	_ADCResult,___lwdiv@dividend
  5568  001A92  C06D  F010         	movff	_ADCResult+1,___lwdiv@dividend+1
  5569  001A96  EC78  F00F         	call	___lwdiv	;wreg free
  5570  001A9A  C00F  F017         	movff	?___lwdiv,___lwtoft@c
  5571  001A9E  C010  F018         	movff	?___lwdiv+1,___lwtoft@c+1
  5572  001AA2  EC45  F011         	call	___lwtoft	;wreg free
  5573  001AA6  C017  F01A         	movff	?___lwtoft,___ftmul@f1
  5574  001AAA  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
  5575  001AAE  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
  5576  001AB2  EC31  F009         	call	___ftmul	;wreg free
  5577  001AB6  C01A  F029         	movff	?___ftmul,___ftdiv@f1
  5578  001ABA  C01B  F02A         	movff	?___ftmul+1,___ftdiv@f1+1
  5579  001ABE  C01C  F02B         	movff	?___ftmul+2,___ftdiv@f1+2
  5580  001AC2  0EC0               	movlw	192
  5581  001AC4  6E2C               	movwf	___ftdiv@f2,c
  5582  001AC6  0E7F               	movlw	127
  5583  001AC8  6E2D               	movwf	___ftdiv@f2+1,c
  5584  001ACA  0E44               	movlw	68
  5585  001ACC  6E2E               	movwf	___ftdiv@f2+2,c
  5586  001ACE  EC04  F00C         	call	___ftdiv	;wreg free
  5587  001AD2  C029  F063         	movff	?___ftdiv,_valor_tensao
  5588  001AD6  C02A  F064         	movff	?___ftdiv+1,_valor_tensao+1
  5589  001ADA  C02B  F065         	movff	?___ftdiv+2,_valor_tensao+2
  5590  001ADE  2A38               	incf	convert@i,f,c
  5591  001AE0  D7B6               	goto	l4016
  5592  001AE2                     __end_of_convert:
  5593                           	opt stack 0
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           intcon	equ	0xFF2
  5601                           indf0	equ	0xFEF
  5602                           postinc0	equ	0xFEE
  5603                           fsr0h	equ	0xFEA
  5604                           fsr0l	equ	0xFE9
  5605                           wreg	equ	0xFE8
  5606                           postdec1	equ	0xFE5
  5607                           fsr1l	equ	0xFE1
  5608                           indf2	equ	0xFDF
  5609                           postinc2	equ	0xFDE
  5610                           postdec2	equ	0xFDD
  5611                           plusw2	equ	0xFDB
  5612                           fsr2h	equ	0xFDA
  5613                           fsr2l	equ	0xFD9
  5614                           status	equ	0xFD8
  5615                           
  5616 ;; *************** function ___lwtoft *****************
  5617 ;; Defined at:
  5618 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  c               2   22[COMRAM] unsigned int 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  3   22[COMRAM] float 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5632 ;;      Params:         3       0       0       0       0       0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5635 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5636 ;;Total ram usage:        3 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    2
  5639 ;; This function calls:
  5640 ;;		___ftpack
  5641 ;; This function is called by:
  5642 ;;		_convert
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text38
  5647  00228A                     __ptext38:
  5648                           	opt stack 0
  5649  00228A                     ___lwtoft:
  5650                           	opt stack 27
  5651                           
  5652                           ;incstack = 0
  5653  00228A  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  5654  00228E  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  5655  002292  6A11               	clrf	___ftpack@arg+2,c
  5656  002294  0E8E               	movlw	142
  5657  002296  6E12               	movwf	___ftpack@exp,c
  5658  002298  0E00               	movlw	0
  5659  00229A  6E13               	movwf	___ftpack@sign,c
  5660  00229C  EC77  F00C         	call	___ftpack	;wreg free
  5661  0022A0  C00F  F017         	movff	?___ftpack,?___lwtoft
  5662  0022A4  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  5663  0022A8  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  5664  0022AC  0012               	return	
  5665  0022AE                     __end_of___lwtoft:
  5666                           	opt stack 0
  5667                           tblptru	equ	0xFF8
  5668                           tblptrh	equ	0xFF7
  5669                           tblptrl	equ	0xFF6
  5670                           tablat	equ	0xFF5
  5671                           prodh	equ	0xFF4
  5672                           prodl	equ	0xFF3
  5673                           intcon	equ	0xFF2
  5674                           indf0	equ	0xFEF
  5675                           postinc0	equ	0xFEE
  5676                           fsr0h	equ	0xFEA
  5677                           fsr0l	equ	0xFE9
  5678                           wreg	equ	0xFE8
  5679                           postdec1	equ	0xFE5
  5680                           fsr1l	equ	0xFE1
  5681                           indf2	equ	0xFDF
  5682                           postinc2	equ	0xFDE
  5683                           postdec2	equ	0xFDD
  5684                           plusw2	equ	0xFDB
  5685                           fsr2h	equ	0xFDA
  5686                           fsr2l	equ	0xFD9
  5687                           status	equ	0xFD8
  5688                           
  5689 ;; *************** function ___lwdiv *****************
  5690 ;; Defined at:
  5691 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  dividend        2   14[COMRAM] unsigned int 
  5694 ;;  divisor         2   16[COMRAM] unsigned int 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  quotient        2   18[COMRAM] unsigned int 
  5697 ;;  counter         1   20[COMRAM] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  2   14[COMRAM] unsigned int 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5707 ;;      Params:         4       0       0       0       0       0       0       0       0
  5708 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5710 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5711 ;;Total ram usage:        7 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_convert
  5718 ;;		_sprintf
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text39
  5723  001EF0                     __ptext39:
  5724                           	opt stack 0
  5725  001EF0                     ___lwdiv:
  5726                           	opt stack 27
  5727                           
  5728                           ;incstack = 0
  5729  001EF0  0E00               	movlw	0
  5730  001EF2  6E14               	movwf	___lwdiv@quotient+1,c
  5731  001EF4  0E00               	movlw	0
  5732  001EF6  6E13               	movwf	___lwdiv@quotient,c
  5733  001EF8  5011               	movf	___lwdiv@divisor,w,c
  5734  001EFA  1012               	iorwf	___lwdiv@divisor+1,w,c
  5735  001EFC  B4D8               	btfsc	status,2,c
  5736  001EFE  D01C               	goto	l1049
  5737  001F00  0E01               	movlw	1
  5738  001F02  6E15               	movwf	___lwdiv@counter,c
  5739  001F04  D004               	goto	l2582
  5740  001F06                     l2580:
  5741  001F06  90D8               	bcf	status,0,c
  5742  001F08  3611               	rlcf	___lwdiv@divisor,f,c
  5743  001F0A  3612               	rlcf	___lwdiv@divisor+1,f,c
  5744  001F0C  2A15               	incf	___lwdiv@counter,f,c
  5745  001F0E                     l2582:
  5746  001F0E  AE12               	btfss	___lwdiv@divisor+1,7,c
  5747  001F10  D7FA               	goto	l2580
  5748  001F12                     l2584:
  5749  001F12  90D8               	bcf	status,0,c
  5750  001F14  3613               	rlcf	___lwdiv@quotient,f,c
  5751  001F16  3614               	rlcf	___lwdiv@quotient+1,f,c
  5752  001F18  5011               	movf	___lwdiv@divisor,w,c
  5753  001F1A  5C0F               	subwf	___lwdiv@dividend,w,c
  5754  001F1C  5012               	movf	___lwdiv@divisor+1,w,c
  5755  001F1E  5810               	subwfb	___lwdiv@dividend+1,w,c
  5756  001F20  A0D8               	btfss	status,0,c
  5757  001F22  D005               	goto	l2592
  5758  001F24  5011               	movf	___lwdiv@divisor,w,c
  5759  001F26  5E0F               	subwf	___lwdiv@dividend,f,c
  5760  001F28  5012               	movf	___lwdiv@divisor+1,w,c
  5761  001F2A  5A10               	subwfb	___lwdiv@dividend+1,f,c
  5762  001F2C  8013               	bsf	___lwdiv@quotient,0,c
  5763  001F2E                     l2592:
  5764  001F2E  90D8               	bcf	status,0,c
  5765  001F30  3212               	rrcf	___lwdiv@divisor+1,f,c
  5766  001F32  3211               	rrcf	___lwdiv@divisor,f,c
  5767  001F34  2E15               	decfsz	___lwdiv@counter,f,c
  5768  001F36  D7ED               	goto	l2584
  5769  001F38                     l1049:
  5770  001F38  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  5771  001F3C  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5772  001F40  0012               	return		;funcret
  5773  001F42                     __end_of___lwdiv:
  5774                           	opt stack 0
  5775                           tblptru	equ	0xFF8
  5776                           tblptrh	equ	0xFF7
  5777                           tblptrl	equ	0xFF6
  5778                           tablat	equ	0xFF5
  5779                           prodh	equ	0xFF4
  5780                           prodl	equ	0xFF3
  5781                           intcon	equ	0xFF2
  5782                           indf0	equ	0xFEF
  5783                           postinc0	equ	0xFEE
  5784                           fsr0h	equ	0xFEA
  5785                           fsr0l	equ	0xFE9
  5786                           wreg	equ	0xFE8
  5787                           postdec1	equ	0xFE5
  5788                           fsr1l	equ	0xFE1
  5789                           indf2	equ	0xFDF
  5790                           postinc2	equ	0xFDE
  5791                           postdec2	equ	0xFDD
  5792                           plusw2	equ	0xFDB
  5793                           fsr2h	equ	0xFDA
  5794                           fsr2l	equ	0xFD9
  5795                           status	equ	0xFD8
  5796                           
  5797 ;; *************** function _SetChanADC *****************
  5798 ;; Defined at:
  5799 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcsetch.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  channel         1    wreg     unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  channel         1   15[COMRAM] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5813 ;;      Params:         0       0       0       0       0       0       0       0       0
  5814 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5815 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5816 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5817 ;;Total ram usage:        2 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    1
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_convert
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text40
  5828  0022E2                     __ptext40:
  5829                           	opt stack 0
  5830  0022E2                     _SetChanADC:
  5831                           	opt stack 28
  5832                           
  5833                           ;incstack = 0
  5834                           ;SetChanADC@channel stored from wreg
  5835  0022E2  6E10               	movwf	SetChanADC@channel,c
  5836  0022E4  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5837  0022E8  0EC3               	movlw	195
  5838  0022EA  160F               	andwf	??_SetChanADC,f,c
  5839  0022EC  90D8               	bcf	status,0,c
  5840  0022EE  3010               	rrcf	SetChanADC@channel,w,c
  5841  0022F0  0B3C               	andlw	60
  5842  0022F2  100F               	iorwf	??_SetChanADC,w,c
  5843  0022F4  6EC2               	movwf	4034,c	;volatile
  5844  0022F6  0012               	return		;funcret
  5845  0022F8                     __end_of_SetChanADC:
  5846                           	opt stack 0
  5847                           tblptru	equ	0xFF8
  5848                           tblptrh	equ	0xFF7
  5849                           tblptrl	equ	0xFF6
  5850                           tablat	equ	0xFF5
  5851                           prodh	equ	0xFF4
  5852                           prodl	equ	0xFF3
  5853                           intcon	equ	0xFF2
  5854                           indf0	equ	0xFEF
  5855                           postinc0	equ	0xFEE
  5856                           fsr0h	equ	0xFEA
  5857                           fsr0l	equ	0xFE9
  5858                           wreg	equ	0xFE8
  5859                           postdec1	equ	0xFE5
  5860                           fsr1l	equ	0xFE1
  5861                           indf2	equ	0xFDF
  5862                           postinc2	equ	0xFDE
  5863                           postdec2	equ	0xFDD
  5864                           plusw2	equ	0xFDB
  5865                           fsr2h	equ	0xFDA
  5866                           fsr2l	equ	0xFD9
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _ReadADC *****************
  5870 ;; Defined at:
  5871 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcread.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  2   14[COMRAM] int 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5885 ;;      Params:         2       0       0       0       0       0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5887 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5888 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5889 ;;Total ram usage:        4 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    1
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_convert
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text41
  5900  002334                     __ptext41:
  5901                           	opt stack 0
  5902  002334                     _ReadADC:
  5903                           	opt stack 28
  5904                           
  5905                           ;incstack = 0
  5906  002334  50C4               	movf	4036,w,c	;volatile
  5907  002336  6E11               	movwf	??_ReadADC& (0+255),c
  5908  002338  50C3               	movf	4035,w,c	;volatile
  5909  00233A  6E0F               	movwf	?_ReadADC,c
  5910  00233C  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5911  002340  0012               	return	
  5912  002342                     __end_of_ReadADC:
  5913                           	opt stack 0
  5914                           tblptru	equ	0xFF8
  5915                           tblptrh	equ	0xFF7
  5916                           tblptrl	equ	0xFF6
  5917                           tablat	equ	0xFF5
  5918                           prodh	equ	0xFF4
  5919                           prodl	equ	0xFF3
  5920                           intcon	equ	0xFF2
  5921                           indf0	equ	0xFEF
  5922                           postinc0	equ	0xFEE
  5923                           fsr0h	equ	0xFEA
  5924                           fsr0l	equ	0xFE9
  5925                           wreg	equ	0xFE8
  5926                           postdec1	equ	0xFE5
  5927                           fsr1l	equ	0xFE1
  5928                           indf2	equ	0xFDF
  5929                           postinc2	equ	0xFDE
  5930                           postdec2	equ	0xFDD
  5931                           plusw2	equ	0xFDB
  5932                           fsr2h	equ	0xFDA
  5933                           fsr2l	equ	0xFD9
  5934                           status	equ	0xFD8
  5935                           
  5936 ;; *************** function _ConvertADC *****************
  5937 ;; Defined at:
  5938 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcconv.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		None
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5956 ;;Total ram usage:        0 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    1
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_convert
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text42
  5967  002374                     __ptext42:
  5968                           	opt stack 0
  5969  002374                     _ConvertADC:
  5970                           	opt stack 28
  5971                           
  5972                           ;incstack = 0
  5973  002374  82C2               	bsf	4034,1,c	;volatile
  5974  002376  0012               	return		;funcret
  5975  002378                     __end_of_ConvertADC:
  5976                           	opt stack 0
  5977                           tblptru	equ	0xFF8
  5978                           tblptrh	equ	0xFF7
  5979                           tblptrl	equ	0xFF6
  5980                           tablat	equ	0xFF5
  5981                           prodh	equ	0xFF4
  5982                           prodl	equ	0xFF3
  5983                           intcon	equ	0xFF2
  5984                           indf0	equ	0xFEF
  5985                           postinc0	equ	0xFEE
  5986                           fsr0h	equ	0xFEA
  5987                           fsr0l	equ	0xFE9
  5988                           wreg	equ	0xFE8
  5989                           postdec1	equ	0xFE5
  5990                           fsr1l	equ	0xFE1
  5991                           indf2	equ	0xFDF
  5992                           postinc2	equ	0xFDE
  5993                           postdec2	equ	0xFDD
  5994                           plusw2	equ	0xFDB
  5995                           fsr2h	equ	0xFDA
  5996                           fsr2l	equ	0xFD9
  5997                           status	equ	0xFD8
  5998                           
  5999 ;; *************** function _BusyADC *****************
  6000 ;; Defined at:
  6001 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcbusy.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      unsigned char 
  6008 ;; Registers used:
  6009 ;;		wreg
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6015 ;;      Params:         0       0       0       0       0       0       0       0       0
  6016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6018 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6019 ;;Total ram usage:        0 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    1
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_convert
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text43
  6030  00234E                     __ptext43:
  6031                           	opt stack 0
  6032  00234E                     _BusyADC:
  6033                           	opt stack 28
  6034                           
  6035                           ;incstack = 0
  6036  00234E  A2C2               	btfss	4034,1,c	;volatile
  6037  002350  D002               	goto	u2530
  6038  002352  0E01               	movlw	1
  6039  002354  0012               	return	
  6040  002356                     u2530:
  6041  002356  0E00               	movlw	0
  6042  002358  0012               	return	
  6043  00235A                     __end_of_BusyADC:
  6044                           	opt stack 0
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           prodh	equ	0xFF4
  6050                           prodl	equ	0xFF3
  6051                           intcon	equ	0xFF2
  6052                           indf0	equ	0xFEF
  6053                           postinc0	equ	0xFEE
  6054                           fsr0h	equ	0xFEA
  6055                           fsr0l	equ	0xFE9
  6056                           wreg	equ	0xFE8
  6057                           postdec1	equ	0xFE5
  6058                           fsr1l	equ	0xFE1
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           plusw2	equ	0xFDB
  6063                           fsr2h	equ	0xFDA
  6064                           fsr2l	equ	0xFD9
  6065                           status	equ	0xFD8
  6066                           
  6067 ;; *************** function _checa_botao *****************
  6068 ;; Defined at:
  6069 ;;		line 59 in file "display_LCD.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6085 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6086 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6087 ;;Total ram usage:        2 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    1
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_main
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text44
  6098  000E58                     __ptext44:
  6099                           	opt stack 0
  6100  000E58                     _checa_botao:
  6101                           	opt stack 29
  6102                           
  6103                           ;display_LCD.c: 61: if(PORTDbits.RD0==1){
  6104                           
  6105                           ;incstack = 0
  6106  000E58  A083               	btfss	3971,0,c	;volatile
  6107  000E5A  D014               	goto	l3344
  6108                           
  6109                           ;display_LCD.c: 62: _delay((unsigned long)((180)*(20000000/4000.0)));
  6110  000E5C  0E05               	movlw	5
  6111  000E5E  6E10               	movwf	(??_checa_botao+1)& (0+255),c
  6112  000E60  0E91               	movlw	145
  6113  000E62  6E0F               	movwf	??_checa_botao& (0+255),c
  6114  000E64  0ED0               	movlw	208
  6115  000E66                     u3967:
  6116  000E66  2EE8               	decfsz	wreg,f,c
  6117  000E68  D7FE               	bra	u3967
  6118  000E6A  2E0F               	decfsz	??_checa_botao& (0+255),f,c
  6119  000E6C  D7FC               	bra	u3967
  6120  000E6E  2E10               	decfsz	(??_checa_botao+1)& (0+255),f,c
  6121  000E70  D7FA               	bra	u3967
  6122                           
  6123                           ;display_LCD.c: 63: tela_exibida++;
  6124  000E72  0100               	movlb	0	; () banked
  6125  000E74  4B70               	infsnz	_tela_exibida& (0+255),f,b
  6126  000E76  2B71               	incf	(_tela_exibida+1)& (0+255),f,b
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;display_LCD.c: 64: cursor=0;
  6130  000E78  0E00               	movlw	0
  6131  000E7A  6E49               	movwf	_cursor+1,c
  6132  000E7C  0E00               	movlw	0
  6133  000E7E  6E48               	movwf	_cursor,c
  6134  000E80                     l305:
  6135  000E80  B083               	btfsc	3971,0,c	;volatile
  6136  000E82  D7FE               	goto	l305
  6137  000E84                     l3344:
  6138                           
  6139                           ;display_LCD.c: 66: }
  6140                           ;display_LCD.c: 67: if(tela_exibida>2) tela_exibida=0;
  6141  000E84  0100               	movlb	0	; () banked
  6142  000E86  BF71               	btfsc	(_tela_exibida+1)& (0+255),7,b
  6143  000E88  D00D               	goto	l3348
  6144  000E8A  0100               	movlb	0	; () banked
  6145  000E8C  5171               	movf	(_tela_exibida+1)& (0+255),w,b
  6146  000E8E  E105               	bnz	u2780
  6147  000E90  0E03               	movlw	3
  6148  000E92  0100               	movlb	0	; () banked
  6149  000E94  5D70               	subwf	_tela_exibida& (0+255),w,b
  6150  000E96  A0D8               	btfss	status,0,c
  6151  000E98  D005               	goto	l3348
  6152  000E9A                     u2780:
  6153                           
  6154                           ; BSR set to: 0
  6155  000E9A  0E00               	movlw	0
  6156  000E9C  0100               	movlb	0	; () banked
  6157  000E9E  6F71               	movwf	(_tela_exibida+1)& (0+255),b
  6158  000EA0  0E00               	movlw	0
  6159  000EA2  6F70               	movwf	_tela_exibida& (0+255),b
  6160  000EA4                     l3348:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;display_LCD.c: 69: if(PORTDbits.RD1==1){
  6164  000EA4  A283               	btfss	3971,1,c	;volatile
  6165  000EA6  D035               	goto	l309
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;display_LCD.c: 70: _delay((unsigned long)((180)*(20000000/4000.0)));
  6169  000EA8  0E05               	movlw	5
  6170  000EAA  6E10               	movwf	(??_checa_botao+1)& (0+255),c
  6171  000EAC  0E91               	movlw	145
  6172  000EAE  6E0F               	movwf	??_checa_botao& (0+255),c
  6173  000EB0  0ED0               	movlw	208
  6174  000EB2                     u3977:
  6175  000EB2  2EE8               	decfsz	wreg,f,c
  6176  000EB4  D7FE               	bra	u3977
  6177  000EB6  2E0F               	decfsz	??_checa_botao& (0+255),f,c
  6178  000EB8  D7FC               	bra	u3977
  6179  000EBA  2E10               	decfsz	(??_checa_botao+1)& (0+255),f,c
  6180  000EBC  D7FA               	bra	u3977
  6181                           
  6182                           ;display_LCD.c: 71: if(tela_exibida==0){
  6183  000EBE  0100               	movlb	0	; () banked
  6184  000EC0  5170               	movf	_tela_exibida& (0+255),w,b
  6185  000EC2  0100               	movlb	0	; () banked
  6186  000EC4  1171               	iorwf	(_tela_exibida+1)& (0+255),w,b
  6187  000EC6  A4D8               	btfss	status,2,c
  6188  000EC8  D022               	goto	l315
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;display_LCD.c: 72: if(cursor==0) temperatura_minima=temperatura_minima+10;
  6192  000ECA  5048               	movf	_cursor,w,c
  6193  000ECC  1049               	iorwf	_cursor+1,w,c
  6194  000ECE  A4D8               	btfss	status,2,c
  6195  000ED0  D006               	goto	l311
  6196                           
  6197                           ; BSR set to: 0
  6198  000ED2  0E0A               	movlw	10
  6199  000ED4  244F               	addwf	_temperatura_minima,w,c
  6200  000ED6  6E4F               	movwf	_temperatura_minima,c
  6201  000ED8  0E00               	movlw	0
  6202  000EDA  2050               	addwfc	_temperatura_minima+1,w,c
  6203  000EDC  6E50               	movwf	_temperatura_minima+1,c
  6204  000EDE                     l311:
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;display_LCD.c: 73: if(cursor==1) temperatura_minima++;
  6208  000EDE  0448               	decf	_cursor,w,c
  6209  000EE0  1049               	iorwf	_cursor+1,w,c
  6210  000EE2  A4D8               	btfss	status,2,c
  6211  000EE4  D002               	goto	l3360
  6212                           
  6213                           ; BSR set to: 0
  6214  000EE6  4A4F               	infsnz	_temperatura_minima,f,c
  6215  000EE8  2A50               	incf	_temperatura_minima+1,f,c
  6216  000EEA                     l3360:
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;display_LCD.c: 74: if(cursor==2) temperatura_maxima=temperatura_maxima+10;
  6220  000EEA  0E02               	movlw	2
  6221  000EEC  1848               	xorwf	_cursor,w,c
  6222  000EEE  1049               	iorwf	_cursor+1,w,c
  6223  000EF0  A4D8               	btfss	status,2,c
  6224  000EF2  D006               	goto	l313
  6225                           
  6226                           ; BSR set to: 0
  6227  000EF4  0E0A               	movlw	10
  6228  000EF6  244D               	addwf	_temperatura_maxima,w,c
  6229  000EF8  6E4D               	movwf	_temperatura_maxima,c
  6230  000EFA  0E00               	movlw	0
  6231  000EFC  204E               	addwfc	_temperatura_maxima+1,w,c
  6232  000EFE  6E4E               	movwf	_temperatura_maxima+1,c
  6233  000F00                     l313:
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;display_LCD.c: 75: if(cursor==3) temperatura_maxima++;
  6237  000F00  0E03               	movlw	3
  6238  000F02  1848               	xorwf	_cursor,w,c
  6239  000F04  1049               	iorwf	_cursor+1,w,c
  6240  000F06  A4D8               	btfss	status,2,c
  6241  000F08  D002               	goto	l315
  6242                           
  6243                           ; BSR set to: 0
  6244  000F0A  4A4D               	infsnz	_temperatura_maxima,f,c
  6245  000F0C  2A4E               	incf	_temperatura_maxima+1,f,c
  6246  000F0E                     l315:
  6247  000F0E  B283               	btfsc	3971,1,c	;volatile
  6248  000F10  D7FE               	goto	l315
  6249  000F12                     l309:
  6250                           
  6251                           ;display_LCD.c: 78: }
  6252                           ;display_LCD.c: 80: if(PORTDbits.RD2==1){
  6253  000F12  A483               	btfss	3971,2,c	;volatile
  6254  000F14  D037               	goto	l318
  6255                           
  6256                           ;display_LCD.c: 81: _delay((unsigned long)((180)*(20000000/4000.0)));
  6257  000F16  0E05               	movlw	5
  6258  000F18  6E10               	movwf	(??_checa_botao+1)& (0+255),c
  6259  000F1A  0E91               	movlw	145
  6260  000F1C  6E0F               	movwf	??_checa_botao& (0+255),c
  6261  000F1E  0ED0               	movlw	208
  6262  000F20                     u3987:
  6263  000F20  2EE8               	decfsz	wreg,f,c
  6264  000F22  D7FE               	bra	u3987
  6265  000F24  2E0F               	decfsz	??_checa_botao& (0+255),f,c
  6266  000F26  D7FC               	bra	u3987
  6267  000F28  2E10               	decfsz	(??_checa_botao+1)& (0+255),f,c
  6268  000F2A  D7FA               	bra	u3987
  6269                           
  6270                           ;display_LCD.c: 82: if(tela_exibida==0){
  6271  000F2C  0100               	movlb	0	; () banked
  6272  000F2E  5170               	movf	_tela_exibida& (0+255),w,b
  6273  000F30  0100               	movlb	0	; () banked
  6274  000F32  1171               	iorwf	(_tela_exibida+1)& (0+255),w,b
  6275  000F34  A4D8               	btfss	status,2,c
  6276  000F36  D024               	goto	l324
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;display_LCD.c: 83: if(cursor==0) temperatura_minima=temperatura_minima-10;
  6280  000F38  5048               	movf	_cursor,w,c
  6281  000F3A  1049               	iorwf	_cursor+1,w,c
  6282  000F3C  A4D8               	btfss	status,2,c
  6283  000F3E  D006               	goto	l320
  6284                           
  6285                           ; BSR set to: 0
  6286  000F40  0EF6               	movlw	246
  6287  000F42  244F               	addwf	_temperatura_minima,w,c
  6288  000F44  6E4F               	movwf	_temperatura_minima,c
  6289  000F46  0EFF               	movlw	255
  6290  000F48  2050               	addwfc	_temperatura_minima+1,w,c
  6291  000F4A  6E50               	movwf	_temperatura_minima+1,c
  6292  000F4C                     l320:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;display_LCD.c: 84: if(cursor==1) temperatura_minima--;
  6296  000F4C  0448               	decf	_cursor,w,c
  6297  000F4E  1049               	iorwf	_cursor+1,w,c
  6298  000F50  A4D8               	btfss	status,2,c
  6299  000F52  D003               	goto	l3376
  6300                           
  6301                           ; BSR set to: 0
  6302  000F54  064F               	decf	_temperatura_minima,f,c
  6303  000F56  A0D8               	btfss	status,0,c
  6304  000F58  0650               	decf	_temperatura_minima+1,f,c
  6305  000F5A                     l3376:
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;display_LCD.c: 85: if(cursor==2) temperatura_maxima=temperatura_maxima-10;
  6309  000F5A  0E02               	movlw	2
  6310  000F5C  1848               	xorwf	_cursor,w,c
  6311  000F5E  1049               	iorwf	_cursor+1,w,c
  6312  000F60  A4D8               	btfss	status,2,c
  6313  000F62  D006               	goto	l322
  6314                           
  6315                           ; BSR set to: 0
  6316  000F64  0EF6               	movlw	246
  6317  000F66  244D               	addwf	_temperatura_maxima,w,c
  6318  000F68  6E4D               	movwf	_temperatura_maxima,c
  6319  000F6A  0EFF               	movlw	255
  6320  000F6C  204E               	addwfc	_temperatura_maxima+1,w,c
  6321  000F6E  6E4E               	movwf	_temperatura_maxima+1,c
  6322  000F70                     l322:
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;display_LCD.c: 86: if(cursor==3) temperatura_maxima--;
  6326  000F70  0E03               	movlw	3
  6327  000F72  1848               	xorwf	_cursor,w,c
  6328  000F74  1049               	iorwf	_cursor+1,w,c
  6329  000F76  A4D8               	btfss	status,2,c
  6330  000F78  D003               	goto	l324
  6331                           
  6332                           ; BSR set to: 0
  6333  000F7A  064D               	decf	_temperatura_maxima,f,c
  6334  000F7C  A0D8               	btfss	status,0,c
  6335  000F7E  064E               	decf	_temperatura_maxima+1,f,c
  6336  000F80                     l324:
  6337  000F80  B483               	btfsc	3971,2,c	;volatile
  6338  000F82  D7FE               	goto	l324
  6339  000F84                     l318:
  6340                           
  6341                           ;display_LCD.c: 89: }
  6342                           ;display_LCD.c: 91: if(PORTDbits.RD3==1){
  6343  000F84  A683               	btfss	3971,3,c	;volatile
  6344  000F86  0012               	return	
  6345                           
  6346                           ;display_LCD.c: 92: _delay((unsigned long)((180)*(20000000/4000.0)));
  6347  000F88  0E05               	movlw	5
  6348  000F8A  6E10               	movwf	(??_checa_botao+1)& (0+255),c
  6349  000F8C  0E91               	movlw	145
  6350  000F8E  6E0F               	movwf	??_checa_botao& (0+255),c
  6351  000F90  0ED0               	movlw	208
  6352  000F92                     u3997:
  6353  000F92  2EE8               	decfsz	wreg,f,c
  6354  000F94  D7FE               	bra	u3997
  6355  000F96  2E0F               	decfsz	??_checa_botao& (0+255),f,c
  6356  000F98  D7FC               	bra	u3997
  6357  000F9A  2E10               	decfsz	(??_checa_botao+1)& (0+255),f,c
  6358  000F9C  D7FA               	bra	u3997
  6359                           
  6360                           ;display_LCD.c: 93: cursor++;
  6361  000F9E  4A48               	infsnz	_cursor,f,c
  6362  000FA0  2A49               	incf	_cursor+1,f,c
  6363                           
  6364                           ;display_LCD.c: 94: if(cursor>3 && tela_exibida==0) cursor=0;
  6365  000FA2  BE49               	btfsc	_cursor+1,7,c
  6366  000FA4  D010               	goto	l329
  6367  000FA6  5049               	movf	_cursor+1,w,c
  6368  000FA8  E104               	bnz	u2940
  6369  000FAA  0E04               	movlw	4
  6370  000FAC  5C48               	subwf	_cursor,w,c
  6371  000FAE  A0D8               	btfss	status,0,c
  6372  000FB0  D00A               	goto	l329
  6373  000FB2                     u2940:
  6374  000FB2  0100               	movlb	0	; () banked
  6375  000FB4  5170               	movf	_tela_exibida& (0+255),w,b
  6376  000FB6  0100               	movlb	0	; () banked
  6377  000FB8  1171               	iorwf	(_tela_exibida+1)& (0+255),w,b
  6378  000FBA  A4D8               	btfss	status,2,c
  6379  000FBC  D004               	goto	l329
  6380                           
  6381                           ; BSR set to: 0
  6382  000FBE  0E00               	movlw	0
  6383  000FC0  6E49               	movwf	_cursor+1,c
  6384  000FC2  0E00               	movlw	0
  6385  000FC4  6E48               	movwf	_cursor,c
  6386  000FC6                     l329:
  6387  000FC6  A683               	btfss	3971,3,c	;volatile
  6388  000FC8  0012               	return	
  6389  000FCA  D7FD               	goto	l329
  6390  000FCC                     __end_of_checa_botao:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           intcon	equ	0xFF2
  6399                           indf0	equ	0xFEF
  6400                           postinc0	equ	0xFEE
  6401                           fsr0h	equ	0xFEA
  6402                           fsr0l	equ	0xFE9
  6403                           wreg	equ	0xFE8
  6404                           postdec1	equ	0xFE5
  6405                           fsr1l	equ	0xFE1
  6406                           indf2	equ	0xFDF
  6407                           postinc2	equ	0xFDE
  6408                           postdec2	equ	0xFDD
  6409                           plusw2	equ	0xFDB
  6410                           fsr2h	equ	0xFDA
  6411                           fsr2l	equ	0xFD9
  6412                           status	equ	0xFD8
  6413                           
  6414 ;; *************** function _ativa_atuadores *****************
  6415 ;; Defined at:
  6416 ;;		line 33 in file "ad.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6433 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6434 ;;Total ram usage:        0 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    3
  6437 ;; This function calls:
  6438 ;;		___awtoft
  6439 ;;		___ftge
  6440 ;;		___ftmul
  6441 ;; This function is called by:
  6442 ;;		_main
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text45
  6447  001E46                     __ptext45:
  6448                           	opt stack 0
  6449  001E46                     _ativa_atuadores:
  6450                           	opt stack 27
  6451                           
  6452                           ;ad.c: 34: if((valor_tensao*100)>temperatura_maxima){
  6453                           
  6454                           ;incstack = 0
  6455  001E46  C04D  F017         	movff	_temperatura_maxima,___awtoft@c
  6456  001E4A  C04E  F018         	movff	_temperatura_maxima+1,___awtoft@c+1
  6457  001E4E  ECC2  F010         	call	___awtoft	;wreg free
  6458  001E52  C017  F029         	movff	?___awtoft,___ftge@ff1
  6459  001E56  C018  F02A         	movff	?___awtoft+1,___ftge@ff1+1
  6460  001E5A  C019  F02B         	movff	?___awtoft+2,___ftge@ff1+2
  6461  001E5E  0E00               	movlw	0
  6462  001E60  6E1D               	movwf	___ftmul@f2,c
  6463  001E62  0EC8               	movlw	200
  6464  001E64  6E1E               	movwf	___ftmul@f2+1,c
  6465  001E66  0E42               	movlw	66
  6466  001E68  6E1F               	movwf	___ftmul@f2+2,c
  6467  001E6A  C063  F01A         	movff	_valor_tensao,___ftmul@f1
  6468  001E6E  C064  F01B         	movff	_valor_tensao+1,___ftmul@f1+1
  6469  001E72  C065  F01C         	movff	_valor_tensao+2,___ftmul@f1+2
  6470  001E76  EC31  F009         	call	___ftmul	;wreg free
  6471  001E7A  C01A  F02C         	movff	?___ftmul,___ftge@ff2
  6472  001E7E  C01B  F02D         	movff	?___ftmul+1,___ftge@ff2+1
  6473  001E82  C01C  F02E         	movff	?___ftmul+2,___ftge@ff2+2
  6474  001E86  EC71  F00D         	call	___ftge	;wreg free
  6475  001E8A  B0D8               	btfsc	status,0,c
  6476  001E8C  D004               	goto	l226
  6477                           
  6478                           ;ad.c: 35: PORTDbits.RD4=1;
  6479  001E8E  8883               	bsf	3971,4,c	;volatile
  6480                           
  6481                           ;ad.c: 36: PORTDbits.RD5=1;
  6482  001E90  8A83               	bsf	3971,5,c	;volatile
  6483                           
  6484                           ;ad.c: 37: PORTDbits.RD6=1;
  6485  001E92  8C83               	bsf	3971,6,c	;volatile
  6486                           
  6487                           ;ad.c: 38: }
  6488  001E94  0012               	return	
  6489  001E96                     l226:
  6490                           
  6491                           ;ad.c: 39: else{
  6492                           ;ad.c: 40: PORTDbits.RD4=0;
  6493  001E96  9883               	bcf	3971,4,c	;volatile
  6494                           
  6495                           ;ad.c: 41: PORTDbits.RD5=0;
  6496  001E98  9A83               	bcf	3971,5,c	;volatile
  6497                           
  6498                           ;ad.c: 42: PORTDbits.RD6=0;
  6499  001E9A  9C83               	bcf	3971,6,c	;volatile
  6500  001E9C  0012               	return	
  6501  001E9E                     __end_of_ativa_atuadores:
  6502                           	opt stack 0
  6503                           tblptru	equ	0xFF8
  6504                           tblptrh	equ	0xFF7
  6505                           tblptrl	equ	0xFF6
  6506                           tablat	equ	0xFF5
  6507                           prodh	equ	0xFF4
  6508                           prodl	equ	0xFF3
  6509                           intcon	equ	0xFF2
  6510                           indf0	equ	0xFEF
  6511                           postinc0	equ	0xFEE
  6512                           fsr0h	equ	0xFEA
  6513                           fsr0l	equ	0xFE9
  6514                           wreg	equ	0xFE8
  6515                           postdec1	equ	0xFE5
  6516                           fsr1l	equ	0xFE1
  6517                           indf2	equ	0xFDF
  6518                           postinc2	equ	0xFDE
  6519                           postdec2	equ	0xFDD
  6520                           plusw2	equ	0xFDB
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8
  6524                           
  6525 ;; *************** function ___ftmul *****************
  6526 ;; Defined at:
  6527 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  f1              3   25[COMRAM] float 
  6530 ;;  f2              3   28[COMRAM] float 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  f3_as_produc    3   35[COMRAM] unsigned um
  6533 ;;  sign            1   39[COMRAM] unsigned char 
  6534 ;;  cntr            1   38[COMRAM] unsigned char 
  6535 ;;  exp             1   34[COMRAM] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  3   25[COMRAM] float 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6545 ;;      Params:         6       0       0       0       0       0       0       0       0
  6546 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6547 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6548 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6549 ;;Total ram usage:       15 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    2
  6552 ;; This function calls:
  6553 ;;		___ftpack
  6554 ;; This function is called by:
  6555 ;;		_convert
  6556 ;;		_convert_float_to_char
  6557 ;;		_ativa_atuadores
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text46
  6562  001262                     __ptext46:
  6563                           	opt stack 0
  6564  001262                     ___ftmul:
  6565                           	opt stack 26
  6566                           
  6567                           ;incstack = 0
  6568  001262  C01C  F020         	movff	___ftmul@f1+2,??___ftmul
  6569  001266  6A21               	clrf	(??___ftmul+1)& (0+255),c
  6570  001268  6A22               	clrf	(??___ftmul+2)& (0+255),c
  6571  00126A  341B               	rlcf	___ftmul@f1+1,w,c
  6572  00126C  3620               	rlcf	??___ftmul& (0+255),f,c
  6573  00126E  E301               	bnc	u3721
  6574  001270  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  6575  001272                     u3721:
  6576  001272  5020               	movf	??___ftmul,w,c
  6577  001274  6E23               	movwf	___ftmul@exp,c
  6578  001276  5023               	movf	___ftmul@exp,w,c
  6579  001278  A4D8               	btfss	status,2,c
  6580  00127A  D007               	goto	l3890
  6581  00127C  0E00               	movlw	0
  6582  00127E  6E1A               	movwf	?___ftmul,c
  6583  001280  0E00               	movlw	0
  6584  001282  6E1B               	movwf	?___ftmul+1,c
  6585  001284  0E00               	movlw	0
  6586  001286  6E1C               	movwf	?___ftmul+2,c
  6587  001288  0012               	return	
  6588  00128A                     l3890:
  6589  00128A  C01F  F020         	movff	___ftmul@f2+2,??___ftmul
  6590  00128E  6A21               	clrf	(??___ftmul+1)& (0+255),c
  6591  001290  6A22               	clrf	(??___ftmul+2)& (0+255),c
  6592  001292  341E               	rlcf	___ftmul@f2+1,w,c
  6593  001294  3620               	rlcf	??___ftmul& (0+255),f,c
  6594  001296  E301               	bnc	u3741
  6595  001298  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  6596  00129A                     u3741:
  6597  00129A  5020               	movf	??___ftmul,w,c
  6598  00129C  6E28               	movwf	___ftmul@sign,c
  6599  00129E  5028               	movf	___ftmul@sign,w,c
  6600  0012A0  A4D8               	btfss	status,2,c
  6601  0012A2  D007               	goto	l3896
  6602  0012A4  0E00               	movlw	0
  6603  0012A6  6E1A               	movwf	?___ftmul,c
  6604  0012A8  0E00               	movlw	0
  6605  0012AA  6E1B               	movwf	?___ftmul+1,c
  6606  0012AC  0E00               	movlw	0
  6607  0012AE  6E1C               	movwf	?___ftmul+2,c
  6608  0012B0  0012               	return	
  6609  0012B2                     l3896:
  6610  0012B2  5028               	movf	___ftmul@sign,w,c
  6611  0012B4  0F7B               	addlw	123
  6612  0012B6  2623               	addwf	___ftmul@exp,f,c
  6613  0012B8  C01C  F028         	movff	___ftmul@f1+2,___ftmul@sign
  6614  0012BC  501F               	movf	___ftmul@f2+2,w,c
  6615  0012BE  1A28               	xorwf	___ftmul@sign,f,c
  6616  0012C0  0E80               	movlw	128
  6617  0012C2  1628               	andwf	___ftmul@sign,f,c
  6618  0012C4  8E1B               	bsf	___ftmul@f1+1,7,c
  6619  0012C6  8E1E               	bsf	___ftmul@f2+1,7,c
  6620  0012C8  0EFF               	movlw	255
  6621  0012CA  161D               	andwf	___ftmul@f2,f,c
  6622  0012CC  0EFF               	movlw	255
  6623  0012CE  161E               	andwf	___ftmul@f2+1,f,c
  6624  0012D0  0E00               	movlw	0
  6625  0012D2  161F               	andwf	___ftmul@f2+2,f,c
  6626  0012D4  0E00               	movlw	0
  6627  0012D6  6E24               	movwf	___ftmul@f3_as_product,c
  6628  0012D8  0E00               	movlw	0
  6629  0012DA  6E25               	movwf	___ftmul@f3_as_product+1,c
  6630  0012DC  0E00               	movlw	0
  6631  0012DE  6E26               	movwf	___ftmul@f3_as_product+2,c
  6632  0012E0  0E07               	movlw	7
  6633  0012E2  6E27               	movwf	___ftmul@cntr,c
  6634  0012E4                     l3910:
  6635  0012E4  A01A               	btfss	___ftmul@f1,0,c
  6636  0012E6  D006               	goto	l3914
  6637  0012E8  501D               	movf	___ftmul@f2,w,c
  6638  0012EA  2624               	addwf	___ftmul@f3_as_product,f,c
  6639  0012EC  501E               	movf	___ftmul@f2+1,w,c
  6640  0012EE  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  6641  0012F0  501F               	movf	___ftmul@f2+2,w,c
  6642  0012F2  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  6643  0012F4                     l3914:
  6644  0012F4  90D8               	bcf	status,0,c
  6645  0012F6  321C               	rrcf	___ftmul@f1+2,f,c
  6646  0012F8  321B               	rrcf	___ftmul@f1+1,f,c
  6647  0012FA  321A               	rrcf	___ftmul@f1,f,c
  6648  0012FC  90D8               	bcf	status,0,c
  6649  0012FE  361D               	rlcf	___ftmul@f2,f,c
  6650  001300  361E               	rlcf	___ftmul@f2+1,f,c
  6651  001302  361F               	rlcf	___ftmul@f2+2,f,c
  6652  001304  2E27               	decfsz	___ftmul@cntr,f,c
  6653  001306  D7EE               	goto	l3910
  6654  001308  0E09               	movlw	9
  6655  00130A  6E27               	movwf	___ftmul@cntr,c
  6656  00130C                     l3920:
  6657  00130C  A01A               	btfss	___ftmul@f1,0,c
  6658  00130E  D006               	goto	l3924
  6659  001310  501D               	movf	___ftmul@f2,w,c
  6660  001312  2624               	addwf	___ftmul@f3_as_product,f,c
  6661  001314  501E               	movf	___ftmul@f2+1,w,c
  6662  001316  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  6663  001318  501F               	movf	___ftmul@f2+2,w,c
  6664  00131A  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  6665  00131C                     l3924:
  6666  00131C  90D8               	bcf	status,0,c
  6667  00131E  321C               	rrcf	___ftmul@f1+2,f,c
  6668  001320  321B               	rrcf	___ftmul@f1+1,f,c
  6669  001322  321A               	rrcf	___ftmul@f1,f,c
  6670  001324  90D8               	bcf	status,0,c
  6671  001326  3226               	rrcf	___ftmul@f3_as_product+2,f,c
  6672  001328  3225               	rrcf	___ftmul@f3_as_product+1,f,c
  6673  00132A  3224               	rrcf	___ftmul@f3_as_product,f,c
  6674  00132C  2E27               	decfsz	___ftmul@cntr,f,c
  6675  00132E  D7EE               	goto	l3920
  6676  001330  C024  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  6677  001334  C025  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6678  001338  C026  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6679  00133C  C023  F012         	movff	___ftmul@exp,___ftpack@exp
  6680  001340  C028  F013         	movff	___ftmul@sign,___ftpack@sign
  6681  001344  EC77  F00C         	call	___ftpack	;wreg free
  6682  001348  C00F  F01A         	movff	?___ftpack,?___ftmul
  6683  00134C  C010  F01B         	movff	?___ftpack+1,?___ftmul+1
  6684  001350  C011  F01C         	movff	?___ftpack+2,?___ftmul+2
  6685  001354  0012               	return	
  6686  001356                     __end_of___ftmul:
  6687                           	opt stack 0
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           indf0	equ	0xFEF
  6696                           postinc0	equ	0xFEE
  6697                           fsr0h	equ	0xFEA
  6698                           fsr0l	equ	0xFE9
  6699                           wreg	equ	0xFE8
  6700                           postdec1	equ	0xFE5
  6701                           fsr1l	equ	0xFE1
  6702                           indf2	equ	0xFDF
  6703                           postinc2	equ	0xFDE
  6704                           postdec2	equ	0xFDD
  6705                           plusw2	equ	0xFDB
  6706                           fsr2h	equ	0xFDA
  6707                           fsr2l	equ	0xFD9
  6708                           status	equ	0xFD8
  6709                           
  6710 ;; *************** function ___ftge *****************
  6711 ;; Defined at:
  6712 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  ff1             3   40[COMRAM] float 
  6715 ;;  ff2             3   43[COMRAM] float 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;		None               void
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6727 ;;      Params:         6       0       0       0       0       0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6729 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6730 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6731 ;;Total ram usage:        9 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    1
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_ativa_atuadores
  6738 ;;		_floor
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text47
  6743  001AE2                     __ptext47:
  6744                           	opt stack 0
  6745  001AE2                     ___ftge:
  6746                           	opt stack 26
  6747                           
  6748                           ;incstack = 0
  6749  001AE2  AE2B               	btfss	___ftge@ff1+2,7,c
  6750  001AE4  D016               	goto	l3800
  6751  001AE6  C029  F02F         	movff	___ftge@ff1,??___ftge
  6752  001AEA  C02A  F030         	movff	___ftge@ff1+1,??___ftge+1
  6753  001AEE  C02B  F031         	movff	___ftge@ff1+2,??___ftge+2
  6754  001AF2  1E2F               	comf	??___ftge,f,c
  6755  001AF4  1E30               	comf	??___ftge+1,f,c
  6756  001AF6  1E31               	comf	??___ftge+2,f,c
  6757  001AF8  2A2F               	incf	??___ftge,f,c
  6758  001AFA  0E00               	movlw	0
  6759  001AFC  2230               	addwfc	??___ftge+1,f,c
  6760  001AFE  2231               	addwfc	??___ftge+2,f,c
  6761  001B00  0E00               	movlw	0
  6762  001B02  242F               	addwf	??___ftge,w,c
  6763  001B04  6E29               	movwf	___ftge@ff1,c
  6764  001B06  0E00               	movlw	0
  6765  001B08  2030               	addwfc	??___ftge+1,w,c
  6766  001B0A  6E2A               	movwf	___ftge@ff1+1,c
  6767  001B0C  0E80               	movlw	128
  6768  001B0E  2031               	addwfc	??___ftge+2,w,c
  6769  001B10  6E2B               	movwf	___ftge@ff1+2,c
  6770  001B12                     l3800:
  6771  001B12  AE2E               	btfss	___ftge@ff2+2,7,c
  6772  001B14  D016               	goto	l3804
  6773  001B16  C02C  F02F         	movff	___ftge@ff2,??___ftge
  6774  001B1A  C02D  F030         	movff	___ftge@ff2+1,??___ftge+1
  6775  001B1E  C02E  F031         	movff	___ftge@ff2+2,??___ftge+2
  6776  001B22  1E2F               	comf	??___ftge,f,c
  6777  001B24  1E30               	comf	??___ftge+1,f,c
  6778  001B26  1E31               	comf	??___ftge+2,f,c
  6779  001B28  2A2F               	incf	??___ftge,f,c
  6780  001B2A  0E00               	movlw	0
  6781  001B2C  2230               	addwfc	??___ftge+1,f,c
  6782  001B2E  2231               	addwfc	??___ftge+2,f,c
  6783  001B30  0E00               	movlw	0
  6784  001B32  242F               	addwf	??___ftge,w,c
  6785  001B34  6E2C               	movwf	___ftge@ff2,c
  6786  001B36  0E00               	movlw	0
  6787  001B38  2030               	addwfc	??___ftge+1,w,c
  6788  001B3A  6E2D               	movwf	___ftge@ff2+1,c
  6789  001B3C  0E80               	movlw	128
  6790  001B3E  2031               	addwfc	??___ftge+2,w,c
  6791  001B40  6E2E               	movwf	___ftge@ff2+2,c
  6792  001B42                     l3804:
  6793  001B42  0E00               	movlw	0
  6794  001B44  1A29               	xorwf	___ftge@ff1,f,c
  6795  001B46  0E00               	movlw	0
  6796  001B48  1A2A               	xorwf	___ftge@ff1+1,f,c
  6797  001B4A  0E80               	movlw	128
  6798  001B4C  1A2B               	xorwf	___ftge@ff1+2,f,c
  6799  001B4E  0E00               	movlw	0
  6800  001B50  1A2C               	xorwf	___ftge@ff2,f,c
  6801  001B52  0E00               	movlw	0
  6802  001B54  1A2D               	xorwf	___ftge@ff2+1,f,c
  6803  001B56  0E80               	movlw	128
  6804  001B58  1A2E               	xorwf	___ftge@ff2+2,f,c
  6805  001B5A  502C               	movf	___ftge@ff2,w,c
  6806  001B5C  5C29               	subwf	___ftge@ff1,w,c
  6807  001B5E  502D               	movf	___ftge@ff2+1,w,c
  6808  001B60  582A               	subwfb	___ftge@ff1+1,w,c
  6809  001B62  502E               	movf	___ftge@ff2+2,w,c
  6810  001B64  582B               	subwfb	___ftge@ff1+2,w,c
  6811  001B66  B0D8               	btfsc	status,0,c
  6812  001B68  D002               	goto	l3810
  6813  001B6A  90D8               	bcf	status,0,c
  6814  001B6C  0012               	return	
  6815  001B6E                     l3810:
  6816  001B6E  80D8               	bsf	status,0,c
  6817  001B70  0012               	return	
  6818  001B72                     __end_of___ftge:
  6819                           	opt stack 0
  6820                           tblptru	equ	0xFF8
  6821                           tblptrh	equ	0xFF7
  6822                           tblptrl	equ	0xFF6
  6823                           tablat	equ	0xFF5
  6824                           prodh	equ	0xFF4
  6825                           prodl	equ	0xFF3
  6826                           intcon	equ	0xFF2
  6827                           indf0	equ	0xFEF
  6828                           postinc0	equ	0xFEE
  6829                           fsr0h	equ	0xFEA
  6830                           fsr0l	equ	0xFE9
  6831                           wreg	equ	0xFE8
  6832                           postdec1	equ	0xFE5
  6833                           fsr1l	equ	0xFE1
  6834                           indf2	equ	0xFDF
  6835                           postinc2	equ	0xFDE
  6836                           postdec2	equ	0xFDD
  6837                           plusw2	equ	0xFDB
  6838                           fsr2h	equ	0xFDA
  6839                           fsr2l	equ	0xFD9
  6840                           status	equ	0xFD8
  6841                           
  6842 ;; *************** function _USART_Init *****************
  6843 ;; Defined at:
  6844 ;;		line 3 in file "eeprom.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  baud_rate       2   64[COMRAM] int 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  temp            3    3[BANK0 ] float 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  1    wreg      void 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0, cstack
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6858 ;;      Params:         2       0       0       0       0       0       0       0       0
  6859 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6861 ;;      Totals:         2       3       0       0       0       0       0       0       0
  6862 ;;Total ram usage:        5 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    3
  6865 ;; This function calls:
  6866 ;;		___awtoft
  6867 ;;		___ftadd
  6868 ;;		___ftdiv
  6869 ;;		___fttol
  6870 ;; This function is called by:
  6871 ;;		_main
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text48
  6876  001D64                     __ptext48:
  6877                           	opt stack 0
  6878  001D64                     _USART_Init:
  6879                           	opt stack 27
  6880                           
  6881                           ;eeprom.c: 4: float temp;
  6882                           ;eeprom.c: 5: TRISC6=0;
  6883                           
  6884                           ;incstack = 0
  6885  001D64  9C94               	bcf	3988,6,c	;volatile
  6886                           
  6887                           ;eeprom.c: 6: TRISC7=1;
  6888  001D66  8E94               	bsf	3988,7,c	;volatile
  6889                           
  6890                           ;eeprom.c: 7: temp=(((float)(8000000/64)/(float)baud_rate)-1);
  6891  001D68  C041  F017         	movff	USART_Init@baud_rate,___awtoft@c
  6892  001D6C  C042  F018         	movff	USART_Init@baud_rate+1,___awtoft@c+1
  6893  001D70  ECC2  F010         	call	___awtoft	;wreg free
  6894  001D74  C017  F02C         	movff	?___awtoft,___ftdiv@f2
  6895  001D78  C018  F02D         	movff	?___awtoft+1,___ftdiv@f2+1
  6896  001D7C  C019  F02E         	movff	?___awtoft+2,___ftdiv@f2+2
  6897  001D80  0E24               	movlw	36
  6898  001D82  6E29               	movwf	___ftdiv@f1,c
  6899  001D84  0EF4               	movlw	244
  6900  001D86  6E2A               	movwf	___ftdiv@f1+1,c
  6901  001D88  0E47               	movlw	71
  6902  001D8A  6E2B               	movwf	___ftdiv@f1+2,c
  6903  001D8C  EC04  F00C         	call	___ftdiv	;wreg free
  6904  001D90  C029  F038         	movff	?___ftdiv,___ftadd@f1
  6905  001D94  C02A  F039         	movff	?___ftdiv+1,___ftadd@f1+1
  6906  001D98  C02B  F03A         	movff	?___ftdiv+2,___ftadd@f1+2
  6907  001D9C  0E00               	movlw	0
  6908  001D9E  6E3B               	movwf	___ftadd@f2,c
  6909  001DA0  0E80               	movlw	128
  6910  001DA2  6E3C               	movwf	___ftadd@f2+1,c
  6911  001DA4  0EBF               	movlw	191
  6912  001DA6  6E3D               	movwf	___ftadd@f2+2,c
  6913  001DA8  EC42  F005         	call	___ftadd	;wreg free
  6914  001DAC  C038  F095         	movff	?___ftadd,USART_Init@temp
  6915  001DB0  C039  F096         	movff	?___ftadd+1,USART_Init@temp+1
  6916  001DB4  C03A  F097         	movff	?___ftadd+2,USART_Init@temp+2
  6917                           
  6918                           ;eeprom.c: 8: SPBRG=(int)temp;
  6919  001DB8  C095  F029         	movff	USART_Init@temp,___fttol@f1
  6920  001DBC  C096  F02A         	movff	USART_Init@temp+1,___fttol@f1+1
  6921  001DC0  C097  F02B         	movff	USART_Init@temp+2,___fttol@f1+2
  6922  001DC4  ECAB  F009         	call	___fttol	;wreg free
  6923  001DC8  5029               	movf	?___fttol,w,c
  6924  001DCA  6EAF               	movwf	4015,c	;volatile
  6925                           
  6926                           ;eeprom.c: 9: TXSTA=0x20;
  6927  001DCC  0E20               	movlw	32
  6928  001DCE  6EAC               	movwf	4012,c	;volatile
  6929                           
  6930                           ;eeprom.c: 10: RCSTA=0x90;
  6931  001DD0  0E90               	movlw	144
  6932  001DD2  6EAB               	movwf	4011,c	;volatile
  6933  001DD4  0012               	return		;funcret
  6934  001DD6                     __end_of_USART_Init:
  6935                           	opt stack 0
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           prodh	equ	0xFF4
  6941                           prodl	equ	0xFF3
  6942                           intcon	equ	0xFF2
  6943                           indf0	equ	0xFEF
  6944                           postinc0	equ	0xFEE
  6945                           fsr0h	equ	0xFEA
  6946                           fsr0l	equ	0xFE9
  6947                           wreg	equ	0xFE8
  6948                           postdec1	equ	0xFE5
  6949                           fsr1l	equ	0xFE1
  6950                           indf2	equ	0xFDF
  6951                           postinc2	equ	0xFDE
  6952                           postdec2	equ	0xFDD
  6953                           plusw2	equ	0xFDB
  6954                           fsr2h	equ	0xFDA
  6955                           fsr2l	equ	0xFD9
  6956                           status	equ	0xFD8
  6957                           
  6958 ;; *************** function ___fttol *****************
  6959 ;; Defined at:
  6960 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  f1              3   40[COMRAM] float 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  lval            4   50[COMRAM] unsigned long 
  6965 ;;  exp1            1   54[COMRAM] unsigned char 
  6966 ;;  sign1           1   49[COMRAM] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  4   40[COMRAM] long 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6976 ;;      Params:         4       0       0       0       0       0       0       0       0
  6977 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6978 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6979 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6980 ;;Total ram usage:       15 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:    1
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_convert_float_to_char
  6987 ;;		_USART_Init
  6988 ;;		_floor
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           	psect	text49
  6993  001356                     __ptext49:
  6994                           	opt stack 0
  6995  001356                     ___fttol:
  6996                           	opt stack 26
  6997                           
  6998                           ;incstack = 0
  6999  001356  C02B  F02D         	movff	___fttol@f1+2,??___fttol
  7000  00135A  6A2E               	clrf	(??___fttol+1)& (0+255),c
  7001  00135C  6A2F               	clrf	(??___fttol+2)& (0+255),c
  7002  00135E  342A               	rlcf	___fttol@f1+1,w,c
  7003  001360  362D               	rlcf	??___fttol& (0+255),f,c
  7004  001362  E301               	bnc	u3601
  7005  001364  802E               	bsf	(??___fttol+1)& (0+255),0,c
  7006  001366                     u3601:
  7007  001366  502D               	movf	??___fttol,w,c
  7008  001368  6E37               	movwf	___fttol@exp1,c
  7009  00136A  5037               	movf	___fttol@exp1,w,c
  7010  00136C  A4D8               	btfss	status,2,c
  7011  00136E  D009               	goto	l3820
  7012  001370  0E00               	movlw	0
  7013  001372  6E29               	movwf	?___fttol,c
  7014  001374  0E00               	movlw	0
  7015  001376  6E2A               	movwf	?___fttol+1,c
  7016  001378  0E00               	movlw	0
  7017  00137A  6E2B               	movwf	?___fttol+2,c
  7018  00137C  0E00               	movlw	0
  7019  00137E  6E2C               	movwf	?___fttol+3,c
  7020  001380  0012               	return	
  7021  001382                     l3820:
  7022  001382  0E17               	movlw	23
  7023  001384  6E2D               	movwf	??___fttol& (0+255),c
  7024  001386  C029  F02E         	movff	___fttol@f1,??___fttol+1
  7025  00138A  C02A  F02F         	movff	___fttol@f1+1,??___fttol+2
  7026  00138E  C02B  F030         	movff	___fttol@f1+2,??___fttol+3
  7027  001392  282D               	incf	??___fttol,w,c
  7028  001394  6E31               	movwf	(??___fttol+4)& (0+255),c
  7029  001396  D004               	goto	u3620
  7030  001398                     u3625:
  7031  001398  90D8               	bcf	status,0,c
  7032  00139A  3230               	rrcf	??___fttol+3,f,c
  7033  00139C  322F               	rrcf	??___fttol+2,f,c
  7034  00139E  322E               	rrcf	??___fttol+1,f,c
  7035  0013A0                     u3620:
  7036  0013A0  2E31               	decfsz	(??___fttol+4)& (0+255),f,c
  7037  0013A2  D7FA               	goto	u3625
  7038  0013A4  502E               	movf	??___fttol+1,w,c
  7039  0013A6  6E32               	movwf	___fttol@sign1,c
  7040  0013A8  8E2A               	bsf	___fttol@f1+1,7,c
  7041  0013AA  0EFF               	movlw	255
  7042  0013AC  1629               	andwf	___fttol@f1,f,c
  7043  0013AE  0EFF               	movlw	255
  7044  0013B0  162A               	andwf	___fttol@f1+1,f,c
  7045  0013B2  0E00               	movlw	0
  7046  0013B4  162B               	andwf	___fttol@f1+2,f,c
  7047  0013B6  5029               	movf	___fttol@f1,w,c
  7048  0013B8  6E33               	movwf	___fttol@lval,c
  7049  0013BA  502A               	movf	___fttol@f1+1,w,c
  7050  0013BC  6E34               	movwf	___fttol@lval+1,c
  7051  0013BE  502B               	movf	___fttol@f1+2,w,c
  7052  0013C0  6E35               	movwf	___fttol@lval+2,c
  7053  0013C2  6A36               	clrf	___fttol@lval+3,c
  7054  0013C4  0E8E               	movlw	142
  7055  0013C6  5E37               	subwf	___fttol@exp1,f,c
  7056  0013C8  AE37               	btfss	___fttol@exp1,7,c
  7057  0013CA  D016               	goto	l3842
  7058  0013CC  5037               	movf	___fttol@exp1,w,c
  7059  0013CE  0A80               	xorlw	128
  7060  0013D0  0F8F               	addlw	143
  7061  0013D2  B0D8               	btfsc	status,0,c
  7062  0013D4  D009               	goto	l3838
  7063  0013D6  0E00               	movlw	0
  7064  0013D8  6E29               	movwf	?___fttol,c
  7065  0013DA  0E00               	movlw	0
  7066  0013DC  6E2A               	movwf	?___fttol+1,c
  7067  0013DE  0E00               	movlw	0
  7068  0013E0  6E2B               	movwf	?___fttol+2,c
  7069  0013E2  0E00               	movlw	0
  7070  0013E4  6E2C               	movwf	?___fttol+3,c
  7071  0013E6  0012               	return	
  7072  0013E8                     l3838:
  7073  0013E8  90D8               	bcf	status,0,c
  7074  0013EA  3236               	rrcf	___fttol@lval+3,f,c
  7075  0013EC  3235               	rrcf	___fttol@lval+2,f,c
  7076  0013EE  3234               	rrcf	___fttol@lval+1,f,c
  7077  0013F0  3233               	rrcf	___fttol@lval,f,c
  7078  0013F2  3E37               	incfsz	___fttol@exp1,f,c
  7079  0013F4  D7F9               	goto	l3838
  7080  0013F6  D015               	goto	l3852
  7081  0013F8                     l3842:
  7082  0013F8  0E17               	movlw	23
  7083  0013FA  6437               	cpfsgt	___fttol@exp1,c
  7084  0013FC  D00F               	goto	l3850
  7085  0013FE  0E00               	movlw	0
  7086  001400  6E29               	movwf	?___fttol,c
  7087  001402  0E00               	movlw	0
  7088  001404  6E2A               	movwf	?___fttol+1,c
  7089  001406  0E00               	movlw	0
  7090  001408  6E2B               	movwf	?___fttol+2,c
  7091  00140A  0E00               	movlw	0
  7092  00140C  6E2C               	movwf	?___fttol+3,c
  7093  00140E  0012               	return	
  7094  001410                     l3848:
  7095  001410  90D8               	bcf	status,0,c
  7096  001412  3633               	rlcf	___fttol@lval,f,c
  7097  001414  3634               	rlcf	___fttol@lval+1,f,c
  7098  001416  3635               	rlcf	___fttol@lval+2,f,c
  7099  001418  3636               	rlcf	___fttol@lval+3,f,c
  7100  00141A  0637               	decf	___fttol@exp1,f,c
  7101  00141C                     l3850:
  7102  00141C  5037               	movf	___fttol@exp1,w,c
  7103  00141E  A4D8               	btfss	status,2,c
  7104  001420  D7F7               	goto	l3848
  7105  001422                     l3852:
  7106  001422  5032               	movf	___fttol@sign1,w,c
  7107  001424  B4D8               	btfsc	status,2,c
  7108  001426  D008               	goto	l3856
  7109  001428  1E36               	comf	___fttol@lval+3,f,c
  7110  00142A  1E35               	comf	___fttol@lval+2,f,c
  7111  00142C  1E34               	comf	___fttol@lval+1,f,c
  7112  00142E  6C33               	negf	___fttol@lval,c
  7113  001430  0E00               	movlw	0
  7114  001432  2234               	addwfc	___fttol@lval+1,f,c
  7115  001434  2235               	addwfc	___fttol@lval+2,f,c
  7116  001436  2236               	addwfc	___fttol@lval+3,f,c
  7117  001438                     l3856:
  7118  001438  C033  F029         	movff	___fttol@lval,?___fttol
  7119  00143C  C034  F02A         	movff	___fttol@lval+1,?___fttol+1
  7120  001440  C035  F02B         	movff	___fttol@lval+2,?___fttol+2
  7121  001444  C036  F02C         	movff	___fttol@lval+3,?___fttol+3
  7122  001448  0012               	return	
  7123  00144A                     __end_of___fttol:
  7124                           	opt stack 0
  7125                           tblptru	equ	0xFF8
  7126                           tblptrh	equ	0xFF7
  7127                           tblptrl	equ	0xFF6
  7128                           tablat	equ	0xFF5
  7129                           prodh	equ	0xFF4
  7130                           prodl	equ	0xFF3
  7131                           intcon	equ	0xFF2
  7132                           indf0	equ	0xFEF
  7133                           postinc0	equ	0xFEE
  7134                           fsr0h	equ	0xFEA
  7135                           fsr0l	equ	0xFE9
  7136                           wreg	equ	0xFE8
  7137                           postdec1	equ	0xFE5
  7138                           fsr1l	equ	0xFE1
  7139                           indf2	equ	0xFDF
  7140                           postinc2	equ	0xFDE
  7141                           postdec2	equ	0xFDD
  7142                           plusw2	equ	0xFDB
  7143                           fsr2h	equ	0xFDA
  7144                           fsr2l	equ	0xFD9
  7145                           status	equ	0xFD8
  7146                           
  7147 ;; *************** function ___ftdiv *****************
  7148 ;; Defined at:
  7149 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  f1              3   40[COMRAM] float 
  7152 ;;  f2              3   43[COMRAM] float 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  f3              3   50[COMRAM] float 
  7155 ;;  sign            1   54[COMRAM] unsigned char 
  7156 ;;  exp             1   53[COMRAM] unsigned char 
  7157 ;;  cntr            1   49[COMRAM] unsigned char 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  3   40[COMRAM] float 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7167 ;;      Params:         6       0       0       0       0       0       0       0       0
  7168 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7169 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7170 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7171 ;;Total ram usage:       15 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:    2
  7174 ;; This function calls:
  7175 ;;		___ftpack
  7176 ;; This function is called by:
  7177 ;;		_convert
  7178 ;;		_USART_Init
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text50
  7183  001808                     __ptext50:
  7184                           	opt stack 0
  7185  001808                     ___ftdiv:
  7186                           	opt stack 27
  7187                           
  7188                           ;incstack = 0
  7189  001808  C02B  F02F         	movff	___ftdiv@f1+2,??___ftdiv
  7190  00180C  6A30               	clrf	(??___ftdiv+1)& (0+255),c
  7191  00180E  6A31               	clrf	(??___ftdiv+2)& (0+255),c
  7192  001810  342A               	rlcf	___ftdiv@f1+1,w,c
  7193  001812  362F               	rlcf	??___ftdiv& (0+255),f,c
  7194  001814  E301               	bnc	u3781
  7195  001816  8030               	bsf	(??___ftdiv+1)& (0+255),0,c
  7196  001818                     u3781:
  7197  001818  502F               	movf	??___ftdiv,w,c
  7198  00181A  6E36               	movwf	___ftdiv@exp,c
  7199  00181C  5036               	movf	___ftdiv@exp,w,c
  7200  00181E  A4D8               	btfss	status,2,c
  7201  001820  D007               	goto	l3950
  7202  001822  0E00               	movlw	0
  7203  001824  6E29               	movwf	?___ftdiv,c
  7204  001826  0E00               	movlw	0
  7205  001828  6E2A               	movwf	?___ftdiv+1,c
  7206  00182A  0E00               	movlw	0
  7207  00182C  6E2B               	movwf	?___ftdiv+2,c
  7208  00182E  0012               	return	
  7209  001830                     l3950:
  7210  001830  C02E  F02F         	movff	___ftdiv@f2+2,??___ftdiv
  7211  001834  6A30               	clrf	(??___ftdiv+1)& (0+255),c
  7212  001836  6A31               	clrf	(??___ftdiv+2)& (0+255),c
  7213  001838  342D               	rlcf	___ftdiv@f2+1,w,c
  7214  00183A  362F               	rlcf	??___ftdiv& (0+255),f,c
  7215  00183C  E301               	bnc	u3801
  7216  00183E  8030               	bsf	(??___ftdiv+1)& (0+255),0,c
  7217  001840                     u3801:
  7218  001840  502F               	movf	??___ftdiv,w,c
  7219  001842  6E37               	movwf	___ftdiv@sign,c
  7220  001844  5037               	movf	___ftdiv@sign,w,c
  7221  001846  A4D8               	btfss	status,2,c
  7222  001848  D007               	goto	l3956
  7223  00184A  0E00               	movlw	0
  7224  00184C  6E29               	movwf	?___ftdiv,c
  7225  00184E  0E00               	movlw	0
  7226  001850  6E2A               	movwf	?___ftdiv+1,c
  7227  001852  0E00               	movlw	0
  7228  001854  6E2B               	movwf	?___ftdiv+2,c
  7229  001856  0012               	return	
  7230  001858                     l3956:
  7231  001858  0E00               	movlw	0
  7232  00185A  6E33               	movwf	___ftdiv@f3,c
  7233  00185C  0E00               	movlw	0
  7234  00185E  6E34               	movwf	___ftdiv@f3+1,c
  7235  001860  0E00               	movlw	0
  7236  001862  6E35               	movwf	___ftdiv@f3+2,c
  7237  001864  5037               	movf	___ftdiv@sign,w,c
  7238  001866  0F89               	addlw	137
  7239  001868  5E36               	subwf	___ftdiv@exp,f,c
  7240  00186A  C02B  F037         	movff	___ftdiv@f1+2,___ftdiv@sign
  7241  00186E  502E               	movf	___ftdiv@f2+2,w,c
  7242  001870  1A37               	xorwf	___ftdiv@sign,f,c
  7243  001872  0E80               	movlw	128
  7244  001874  1637               	andwf	___ftdiv@sign,f,c
  7245  001876  8E2A               	bsf	___ftdiv@f1+1,7,c
  7246  001878  0EFF               	movlw	255
  7247  00187A  1629               	andwf	___ftdiv@f1,f,c
  7248  00187C  0EFF               	movlw	255
  7249  00187E  162A               	andwf	___ftdiv@f1+1,f,c
  7250  001880  0E00               	movlw	0
  7251  001882  162B               	andwf	___ftdiv@f1+2,f,c
  7252  001884  8E2D               	bsf	___ftdiv@f2+1,7,c
  7253  001886  0EFF               	movlw	255
  7254  001888  162C               	andwf	___ftdiv@f2,f,c
  7255  00188A  0EFF               	movlw	255
  7256  00188C  162D               	andwf	___ftdiv@f2+1,f,c
  7257  00188E  0E00               	movlw	0
  7258  001890  162E               	andwf	___ftdiv@f2+2,f,c
  7259  001892  0E18               	movlw	24
  7260  001894  6E32               	movwf	___ftdiv@cntr,c
  7261  001896                     l3976:
  7262  001896  90D8               	bcf	status,0,c
  7263  001898  3633               	rlcf	___ftdiv@f3,f,c
  7264  00189A  3634               	rlcf	___ftdiv@f3+1,f,c
  7265  00189C  3635               	rlcf	___ftdiv@f3+2,f,c
  7266  00189E  502C               	movf	___ftdiv@f2,w,c
  7267  0018A0  5C29               	subwf	___ftdiv@f1,w,c
  7268  0018A2  502D               	movf	___ftdiv@f2+1,w,c
  7269  0018A4  582A               	subwfb	___ftdiv@f1+1,w,c
  7270  0018A6  502E               	movf	___ftdiv@f2+2,w,c
  7271  0018A8  582B               	subwfb	___ftdiv@f1+2,w,c
  7272  0018AA  A0D8               	btfss	status,0,c
  7273  0018AC  D007               	goto	l929
  7274  0018AE  502C               	movf	___ftdiv@f2,w,c
  7275  0018B0  5E29               	subwf	___ftdiv@f1,f,c
  7276  0018B2  502D               	movf	___ftdiv@f2+1,w,c
  7277  0018B4  5A2A               	subwfb	___ftdiv@f1+1,f,c
  7278  0018B6  502E               	movf	___ftdiv@f2+2,w,c
  7279  0018B8  5A2B               	subwfb	___ftdiv@f1+2,f,c
  7280  0018BA  8033               	bsf	___ftdiv@f3,0,c
  7281  0018BC                     l929:
  7282  0018BC  90D8               	bcf	status,0,c
  7283  0018BE  3629               	rlcf	___ftdiv@f1,f,c
  7284  0018C0  362A               	rlcf	___ftdiv@f1+1,f,c
  7285  0018C2  362B               	rlcf	___ftdiv@f1+2,f,c
  7286  0018C4  2E32               	decfsz	___ftdiv@cntr,f,c
  7287  0018C6  D7E7               	goto	l3976
  7288  0018C8  C033  F00F         	movff	___ftdiv@f3,___ftpack@arg
  7289  0018CC  C034  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7290  0018D0  C035  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7291  0018D4  C036  F012         	movff	___ftdiv@exp,___ftpack@exp
  7292  0018D8  C037  F013         	movff	___ftdiv@sign,___ftpack@sign
  7293  0018DC  EC77  F00C         	call	___ftpack	;wreg free
  7294  0018E0  C00F  F029         	movff	?___ftpack,?___ftdiv
  7295  0018E4  C010  F02A         	movff	?___ftpack+1,?___ftdiv+1
  7296  0018E8  C011  F02B         	movff	?___ftpack+2,?___ftdiv+2
  7297  0018EC  0012               	return	
  7298  0018EE                     __end_of___ftdiv:
  7299                           	opt stack 0
  7300                           tblptru	equ	0xFF8
  7301                           tblptrh	equ	0xFF7
  7302                           tblptrl	equ	0xFF6
  7303                           tablat	equ	0xFF5
  7304                           prodh	equ	0xFF4
  7305                           prodl	equ	0xFF3
  7306                           intcon	equ	0xFF2
  7307                           indf0	equ	0xFEF
  7308                           postinc0	equ	0xFEE
  7309                           fsr0h	equ	0xFEA
  7310                           fsr0l	equ	0xFE9
  7311                           wreg	equ	0xFE8
  7312                           postdec1	equ	0xFE5
  7313                           fsr1l	equ	0xFE1
  7314                           indf2	equ	0xFDF
  7315                           postinc2	equ	0xFDE
  7316                           postdec2	equ	0xFDD
  7317                           plusw2	equ	0xFDB
  7318                           fsr2h	equ	0xFDA
  7319                           fsr2l	equ	0xFD9
  7320                           status	equ	0xFD8
  7321                           
  7322 ;; *************** function ___ftadd *****************
  7323 ;; Defined at:
  7324 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  f1              3   55[COMRAM] float 
  7327 ;;  f2              3   58[COMRAM] float 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  exp1            1    2[BANK0 ] unsigned char 
  7330 ;;  exp2            1    1[BANK0 ] unsigned char 
  7331 ;;  sign            1    0[BANK0 ] unsigned char 
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  3   55[COMRAM] float 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7341 ;;      Params:         6       0       0       0       0       0       0       0       0
  7342 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7343 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7344 ;;      Totals:         9       3       0       0       0       0       0       0       0
  7345 ;;Total ram usage:       12 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; Hardware stack levels required when called:    2
  7348 ;; This function calls:
  7349 ;;		___ftpack
  7350 ;; This function is called by:
  7351 ;;		_convert_float_to_char
  7352 ;;		_USART_Init
  7353 ;;		_floor
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text51
  7358  000A84                     __ptext51:
  7359                           	opt stack 0
  7360  000A84                     ___ftadd:
  7361                           	opt stack 25
  7362                           
  7363                           ;incstack = 0
  7364  000A84  C03A  F03E         	movff	___ftadd@f1+2,??___ftadd
  7365  000A88  6A3F               	clrf	(??___ftadd+1)& (0+255),c
  7366  000A8A  6A40               	clrf	(??___ftadd+2)& (0+255),c
  7367  000A8C  3439               	rlcf	___ftadd@f1+1,w,c
  7368  000A8E  363E               	rlcf	??___ftadd& (0+255),f,c
  7369  000A90  E301               	bnc	u3341
  7370  000A92  803F               	bsf	(??___ftadd+1)& (0+255),0,c
  7371  000A94                     u3341:
  7372  000A94  503E               	movf	??___ftadd,w,c
  7373  000A96  0100               	movlb	0	; () banked
  7374  000A98  6F94               	movwf	___ftadd@exp1& (0+255),b
  7375  000A9A  C03D  F03E         	movff	___ftadd@f2+2,??___ftadd
  7376  000A9E  6A3F               	clrf	(??___ftadd+1)& (0+255),c
  7377  000AA0  6A40               	clrf	(??___ftadd+2)& (0+255),c
  7378  000AA2  343C               	rlcf	___ftadd@f2+1,w,c
  7379  000AA4  363E               	rlcf	??___ftadd& (0+255),f,c
  7380  000AA6  E301               	bnc	u3351
  7381  000AA8  803F               	bsf	(??___ftadd+1)& (0+255),0,c
  7382  000AAA                     u3351:
  7383  000AAA  503E               	movf	??___ftadd,w,c
  7384  000AAC  0100               	movlb	0	; () banked
  7385  000AAE  6F93               	movwf	___ftadd@exp2& (0+255),b
  7386                           
  7387                           ; BSR set to: 0
  7388  000AB0  0100               	movlb	0	; () banked
  7389  000AB2  5194               	movf	___ftadd@exp1& (0+255),w,b
  7390  000AB4  0100               	movlb	0	; () banked
  7391  000AB6  B4D8               	btfsc	status,2,c
  7392  000AB8  D00F               	goto	l894
  7393                           
  7394                           ; BSR set to: 0
  7395  000ABA  0100               	movlb	0	; () banked
  7396  000ABC  5193               	movf	___ftadd@exp2& (0+255),w,b
  7397  000ABE  0100               	movlb	0	; () banked
  7398  000AC0  5D94               	subwf	___ftadd@exp1& (0+255),w,b
  7399  000AC2  B0D8               	btfsc	status,0,c
  7400  000AC4  D010               	goto	l3718
  7401                           
  7402                           ; BSR set to: 0
  7403  000AC6  0100               	movlb	0	; () banked
  7404  000AC8  5194               	movf	___ftadd@exp1& (0+255),w,b
  7405  000ACA  0800               	sublw	0
  7406  000ACC  0100               	movlb	0	; () banked
  7407  000ACE  2593               	addwf	___ftadd@exp2& (0+255),w,b
  7408  000AD0  6E3E               	movwf	??___ftadd& (0+255),c
  7409  000AD2  0E18               	movlw	24
  7410  000AD4  643E               	cpfsgt	??___ftadd,c
  7411  000AD6  D007               	goto	l3718
  7412  000AD8                     l894:
  7413                           
  7414                           ; BSR set to: 0
  7415  000AD8  C03B  F038         	movff	___ftadd@f2,?___ftadd
  7416  000ADC  C03C  F039         	movff	___ftadd@f2+1,?___ftadd+1
  7417  000AE0  C03D  F03A         	movff	___ftadd@f2+2,?___ftadd+2
  7418  000AE4  0012               	return	
  7419  000AE6                     l3718:
  7420                           
  7421                           ; BSR set to: 0
  7422  000AE6  0100               	movlb	0	; () banked
  7423  000AE8  5193               	movf	___ftadd@exp2& (0+255),w,b
  7424  000AEA  0100               	movlb	0	; () banked
  7425  000AEC  B4D8               	btfsc	status,2,c
  7426  000AEE  D00F               	goto	l898
  7427                           
  7428                           ; BSR set to: 0
  7429  000AF0  0100               	movlb	0	; () banked
  7430  000AF2  5194               	movf	___ftadd@exp1& (0+255),w,b
  7431  000AF4  0100               	movlb	0	; () banked
  7432  000AF6  5D93               	subwf	___ftadd@exp2& (0+255),w,b
  7433  000AF8  B0D8               	btfsc	status,0,c
  7434  000AFA  D010               	goto	l3724
  7435                           
  7436                           ; BSR set to: 0
  7437  000AFC  0100               	movlb	0	; () banked
  7438  000AFE  5193               	movf	___ftadd@exp2& (0+255),w,b
  7439  000B00  0800               	sublw	0
  7440  000B02  0100               	movlb	0	; () banked
  7441  000B04  2594               	addwf	___ftadd@exp1& (0+255),w,b
  7442  000B06  6E3E               	movwf	??___ftadd& (0+255),c
  7443  000B08  0E18               	movlw	24
  7444  000B0A  643E               	cpfsgt	??___ftadd,c
  7445  000B0C  D007               	goto	l3724
  7446  000B0E                     l898:
  7447                           
  7448                           ; BSR set to: 0
  7449  000B0E  C038  F038         	movff	___ftadd@f1,?___ftadd
  7450  000B12  C039  F039         	movff	___ftadd@f1+1,?___ftadd+1
  7451  000B16  C03A  F03A         	movff	___ftadd@f1+2,?___ftadd+2
  7452  000B1A  0012               	return	
  7453  000B1C                     l3724:
  7454                           
  7455                           ; BSR set to: 0
  7456  000B1C  0E06               	movlw	6
  7457  000B1E  0100               	movlb	0	; () banked
  7458  000B20  6F92               	movwf	___ftadd@sign& (0+255),b
  7459                           
  7460                           ; BSR set to: 0
  7461  000B22  AE3A               	btfss	___ftadd@f1+2,7,c
  7462  000B24  D002               	goto	l3730
  7463                           
  7464                           ; BSR set to: 0
  7465  000B26  0100               	movlb	0	; () banked
  7466  000B28  8F92               	bsf	___ftadd@sign& (0+255),7,b
  7467  000B2A                     l3730:
  7468                           
  7469                           ; BSR set to: 0
  7470  000B2A  AE3D               	btfss	___ftadd@f2+2,7,c
  7471  000B2C  D002               	goto	l900
  7472                           
  7473                           ; BSR set to: 0
  7474  000B2E  0100               	movlb	0	; () banked
  7475  000B30  8D92               	bsf	___ftadd@sign& (0+255),6,b
  7476  000B32                     l900:
  7477                           
  7478                           ; BSR set to: 0
  7479  000B32  8E39               	bsf	___ftadd@f1+1,7,c
  7480                           
  7481                           ; BSR set to: 0
  7482  000B34  0EFF               	movlw	255
  7483  000B36  1638               	andwf	___ftadd@f1,f,c
  7484  000B38  0EFF               	movlw	255
  7485  000B3A  1639               	andwf	___ftadd@f1+1,f,c
  7486  000B3C  0E00               	movlw	0
  7487  000B3E  163A               	andwf	___ftadd@f1+2,f,c
  7488  000B40  8E3C               	bsf	___ftadd@f2+1,7,c
  7489                           
  7490                           ; BSR set to: 0
  7491  000B42  0EFF               	movlw	255
  7492  000B44  163B               	andwf	___ftadd@f2,f,c
  7493  000B46  0EFF               	movlw	255
  7494  000B48  163C               	andwf	___ftadd@f2+1,f,c
  7495  000B4A  0E00               	movlw	0
  7496  000B4C  163D               	andwf	___ftadd@f2+2,f,c
  7497                           
  7498                           ; BSR set to: 0
  7499  000B4E  0100               	movlb	0	; () banked
  7500  000B50  5193               	movf	___ftadd@exp2& (0+255),w,b
  7501  000B52  0100               	movlb	0	; () banked
  7502  000B54  5D94               	subwf	___ftadd@exp1& (0+255),w,b
  7503  000B56  B0D8               	btfsc	status,0,c
  7504  000B58  D022               	goto	l3750
  7505  000B5A                     l3740:
  7506                           
  7507                           ; BSR set to: 0
  7508  000B5A  90D8               	bcf	status,0,c
  7509  000B5C  363B               	rlcf	___ftadd@f2,f,c
  7510  000B5E  363C               	rlcf	___ftadd@f2+1,f,c
  7511  000B60  363D               	rlcf	___ftadd@f2+2,f,c
  7512  000B62  0100               	movlb	0	; () banked
  7513  000B64  0793               	decf	___ftadd@exp2& (0+255),f,b
  7514                           
  7515                           ; BSR set to: 0
  7516  000B66  0100               	movlb	0	; () banked
  7517  000B68  5194               	movf	___ftadd@exp1& (0+255),w,b
  7518  000B6A  0100               	movlb	0	; () banked
  7519  000B6C  1993               	xorwf	___ftadd@exp2& (0+255),w,b
  7520  000B6E  B4D8               	btfsc	status,2,c
  7521  000B70  D00F               	goto	l3748
  7522                           
  7523                           ; BSR set to: 0
  7524  000B72  0100               	movlb	0	; () banked
  7525  000B74  0792               	decf	___ftadd@sign& (0+255),f,b
  7526  000B76  C092  F03E         	movff	___ftadd@sign,??___ftadd
  7527  000B7A  0E07               	movlw	7
  7528  000B7C  163E               	andwf	??___ftadd,f,c
  7529  000B7E  B4D8               	btfsc	status,2,c
  7530  000B80  D007               	goto	l3748
  7531  000B82  D7EB               	goto	l3740
  7532  000B84                     l3746:
  7533                           
  7534                           ; BSR set to: 0
  7535  000B84  90D8               	bcf	status,0,c
  7536  000B86  323A               	rrcf	___ftadd@f1+2,f,c
  7537  000B88  3239               	rrcf	___ftadd@f1+1,f,c
  7538  000B8A  3238               	rrcf	___ftadd@f1,f,c
  7539  000B8C  0100               	movlb	0	; () banked
  7540  000B8E  2B94               	incf	___ftadd@exp1& (0+255),f,b
  7541  000B90                     l3748:
  7542                           
  7543                           ; BSR set to: 0
  7544  000B90  0100               	movlb	0	; () banked
  7545  000B92  5193               	movf	___ftadd@exp2& (0+255),w,b
  7546  000B94  0100               	movlb	0	; () banked
  7547  000B96  1994               	xorwf	___ftadd@exp1& (0+255),w,b
  7548  000B98  B4D8               	btfsc	status,2,c
  7549  000B9A  D028               	goto	l909
  7550  000B9C  D7F3               	goto	l3746
  7551  000B9E                     l3750:
  7552                           
  7553                           ; BSR set to: 0
  7554  000B9E  0100               	movlb	0	; () banked
  7555  000BA0  5194               	movf	___ftadd@exp1& (0+255),w,b
  7556  000BA2  0100               	movlb	0	; () banked
  7557  000BA4  5D93               	subwf	___ftadd@exp2& (0+255),w,b
  7558  000BA6  B0D8               	btfsc	status,0,c
  7559  000BA8  D021               	goto	l909
  7560  000BAA                     l3752:
  7561                           
  7562                           ; BSR set to: 0
  7563  000BAA  90D8               	bcf	status,0,c
  7564  000BAC  3638               	rlcf	___ftadd@f1,f,c
  7565  000BAE  3639               	rlcf	___ftadd@f1+1,f,c
  7566  000BB0  363A               	rlcf	___ftadd@f1+2,f,c
  7567  000BB2  0100               	movlb	0	; () banked
  7568  000BB4  0794               	decf	___ftadd@exp1& (0+255),f,b
  7569                           
  7570                           ; BSR set to: 0
  7571  000BB6  0100               	movlb	0	; () banked
  7572  000BB8  5194               	movf	___ftadd@exp1& (0+255),w,b
  7573  000BBA  0100               	movlb	0	; () banked
  7574  000BBC  1993               	xorwf	___ftadd@exp2& (0+255),w,b
  7575  000BBE  B4D8               	btfsc	status,2,c
  7576  000BC0  D00F               	goto	l3760
  7577                           
  7578                           ; BSR set to: 0
  7579  000BC2  0100               	movlb	0	; () banked
  7580  000BC4  0792               	decf	___ftadd@sign& (0+255),f,b
  7581  000BC6  C092  F03E         	movff	___ftadd@sign,??___ftadd
  7582  000BCA  0E07               	movlw	7
  7583  000BCC  163E               	andwf	??___ftadd,f,c
  7584  000BCE  B4D8               	btfsc	status,2,c
  7585  000BD0  D007               	goto	l3760
  7586  000BD2  D7EB               	goto	l3752
  7587  000BD4                     l3758:
  7588                           
  7589                           ; BSR set to: 0
  7590  000BD4  90D8               	bcf	status,0,c
  7591  000BD6  323D               	rrcf	___ftadd@f2+2,f,c
  7592  000BD8  323C               	rrcf	___ftadd@f2+1,f,c
  7593  000BDA  323B               	rrcf	___ftadd@f2,f,c
  7594  000BDC  0100               	movlb	0	; () banked
  7595  000BDE  2B93               	incf	___ftadd@exp2& (0+255),f,b
  7596  000BE0                     l3760:
  7597                           
  7598                           ; BSR set to: 0
  7599  000BE0  0100               	movlb	0	; () banked
  7600  000BE2  5193               	movf	___ftadd@exp2& (0+255),w,b
  7601  000BE4  0100               	movlb	0	; () banked
  7602  000BE6  1994               	xorwf	___ftadd@exp1& (0+255),w,b
  7603  000BE8  A4D8               	btfss	status,2,c
  7604  000BEA  D7F4               	goto	l3758
  7605  000BEC                     l909:
  7606                           
  7607                           ; BSR set to: 0
  7608  000BEC  0100               	movlb	0	; () banked
  7609  000BEE  AF92               	btfss	___ftadd@sign& (0+255),7,b
  7610  000BF0  D00C               	goto	l918
  7611                           
  7612                           ; BSR set to: 0
  7613  000BF2  0EFF               	movlw	255
  7614  000BF4  1A38               	xorwf	___ftadd@f1,f,c
  7615  000BF6  0EFF               	movlw	255
  7616  000BF8  1A39               	xorwf	___ftadd@f1+1,f,c
  7617  000BFA  0EFF               	movlw	255
  7618  000BFC  1A3A               	xorwf	___ftadd@f1+2,f,c
  7619  000BFE  0E01               	movlw	1
  7620  000C00  2638               	addwf	___ftadd@f1,f,c
  7621  000C02  0E00               	movlw	0
  7622  000C04  2239               	addwfc	___ftadd@f1+1,f,c
  7623  000C06  0E00               	movlw	0
  7624  000C08  223A               	addwfc	___ftadd@f1+2,f,c
  7625  000C0A                     l918:
  7626                           
  7627                           ; BSR set to: 0
  7628  000C0A  0100               	movlb	0	; () banked
  7629  000C0C  AD92               	btfss	___ftadd@sign& (0+255),6,b
  7630  000C0E  D00C               	goto	l3766
  7631                           
  7632                           ; BSR set to: 0
  7633  000C10  0EFF               	movlw	255
  7634  000C12  1A3B               	xorwf	___ftadd@f2,f,c
  7635  000C14  0EFF               	movlw	255
  7636  000C16  1A3C               	xorwf	___ftadd@f2+1,f,c
  7637  000C18  0EFF               	movlw	255
  7638  000C1A  1A3D               	xorwf	___ftadd@f2+2,f,c
  7639  000C1C  0E01               	movlw	1
  7640  000C1E  263B               	addwf	___ftadd@f2,f,c
  7641  000C20  0E00               	movlw	0
  7642  000C22  223C               	addwfc	___ftadd@f2+1,f,c
  7643  000C24  0E00               	movlw	0
  7644  000C26  223D               	addwfc	___ftadd@f2+2,f,c
  7645  000C28                     l3766:
  7646                           
  7647                           ; BSR set to: 0
  7648  000C28  0E00               	movlw	0
  7649  000C2A  0100               	movlb	0	; () banked
  7650  000C2C  6F92               	movwf	___ftadd@sign& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653  000C2E  5038               	movf	___ftadd@f1,w,c
  7654  000C30  263B               	addwf	___ftadd@f2,f,c
  7655  000C32  5039               	movf	___ftadd@f1+1,w,c
  7656  000C34  223C               	addwfc	___ftadd@f2+1,f,c
  7657  000C36  503A               	movf	___ftadd@f1+2,w,c
  7658  000C38  223D               	addwfc	___ftadd@f2+2,f,c
  7659                           
  7660                           ; BSR set to: 0
  7661  000C3A  AE3D               	btfss	___ftadd@f2+2,7,c
  7662  000C3C  D00F               	goto	l3776
  7663                           
  7664                           ; BSR set to: 0
  7665  000C3E  0EFF               	movlw	255
  7666  000C40  1A3B               	xorwf	___ftadd@f2,f,c
  7667  000C42  0EFF               	movlw	255
  7668  000C44  1A3C               	xorwf	___ftadd@f2+1,f,c
  7669  000C46  0EFF               	movlw	255
  7670  000C48  1A3D               	xorwf	___ftadd@f2+2,f,c
  7671  000C4A  0E01               	movlw	1
  7672  000C4C  263B               	addwf	___ftadd@f2,f,c
  7673  000C4E  0E00               	movlw	0
  7674  000C50  223C               	addwfc	___ftadd@f2+1,f,c
  7675  000C52  0E00               	movlw	0
  7676  000C54  223D               	addwfc	___ftadd@f2+2,f,c
  7677                           
  7678                           ; BSR set to: 0
  7679  000C56  0E01               	movlw	1
  7680  000C58  0100               	movlb	0	; () banked
  7681  000C5A  6F92               	movwf	___ftadd@sign& (0+255),b
  7682  000C5C                     l3776:
  7683                           
  7684                           ; BSR set to: 0
  7685  000C5C  C03B  F00F         	movff	___ftadd@f2,___ftpack@arg
  7686  000C60  C03C  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  7687  000C64  C03D  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  7688  000C68  C094  F012         	movff	___ftadd@exp1,___ftpack@exp
  7689  000C6C  C092  F013         	movff	___ftadd@sign,___ftpack@sign
  7690  000C70  EC77  F00C         	call	___ftpack	;wreg free
  7691  000C74  C00F  F038         	movff	?___ftpack,?___ftadd
  7692  000C78  C010  F039         	movff	?___ftpack+1,?___ftadd+1
  7693  000C7C  C011  F03A         	movff	?___ftpack+2,?___ftadd+2
  7694  000C80  0012               	return	
  7695  000C82                     __end_of___ftadd:
  7696                           	opt stack 0
  7697                           tblptru	equ	0xFF8
  7698                           tblptrh	equ	0xFF7
  7699                           tblptrl	equ	0xFF6
  7700                           tablat	equ	0xFF5
  7701                           prodh	equ	0xFF4
  7702                           prodl	equ	0xFF3
  7703                           intcon	equ	0xFF2
  7704                           indf0	equ	0xFEF
  7705                           postinc0	equ	0xFEE
  7706                           fsr0h	equ	0xFEA
  7707                           fsr0l	equ	0xFE9
  7708                           wreg	equ	0xFE8
  7709                           postdec1	equ	0xFE5
  7710                           fsr1l	equ	0xFE1
  7711                           indf2	equ	0xFDF
  7712                           postinc2	equ	0xFDE
  7713                           postdec2	equ	0xFDD
  7714                           plusw2	equ	0xFDB
  7715                           fsr2h	equ	0xFDA
  7716                           fsr2l	equ	0xFD9
  7717                           status	equ	0xFD8
  7718                           
  7719 ;; *************** function ___awtoft *****************
  7720 ;; Defined at:
  7721 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;  c               2   22[COMRAM] int 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  sign            1   25[COMRAM] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  3   22[COMRAM] float 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7735 ;;      Params:         3       0       0       0       0       0       0       0       0
  7736 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7738 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7739 ;;Total ram usage:        4 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    2
  7742 ;; This function calls:
  7743 ;;		___ftpack
  7744 ;; This function is called by:
  7745 ;;		_ativa_atuadores
  7746 ;;		_USART_Init
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text52
  7751  002184                     __ptext52:
  7752                           	opt stack 0
  7753  002184                     ___awtoft:
  7754                           	opt stack 27
  7755                           
  7756                           ;incstack = 0
  7757  002184  0E00               	movlw	0
  7758  002186  6E1A               	movwf	___awtoft@sign,c
  7759  002188  AE18               	btfss	___awtoft@c+1,7,c
  7760  00218A  D006               	goto	l3998
  7761  00218C  6C17               	negf	___awtoft@c,c
  7762  00218E  1E18               	comf	___awtoft@c+1,f,c
  7763  002190  B0D8               	btfsc	status,0,c
  7764  002192  2A18               	incf	___awtoft@c+1,f,c
  7765  002194  0E01               	movlw	1
  7766  002196  6E1A               	movwf	___awtoft@sign,c
  7767  002198                     l3998:
  7768  002198  C017  F00F         	movff	___awtoft@c,___ftpack@arg
  7769  00219C  C018  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  7770  0021A0  6A11               	clrf	___ftpack@arg+2,c
  7771  0021A2  0E8E               	movlw	142
  7772  0021A4  6E12               	movwf	___ftpack@exp,c
  7773  0021A6  C01A  F013         	movff	___awtoft@sign,___ftpack@sign
  7774  0021AA  EC77  F00C         	call	___ftpack	;wreg free
  7775  0021AE  C00F  F017         	movff	?___ftpack,?___awtoft
  7776  0021B2  C010  F018         	movff	?___ftpack+1,?___awtoft+1
  7777  0021B6  C011  F019         	movff	?___ftpack+2,?___awtoft+2
  7778  0021BA  0012               	return	
  7779  0021BC                     __end_of___awtoft:
  7780                           	opt stack 0
  7781                           tblptru	equ	0xFF8
  7782                           tblptrh	equ	0xFF7
  7783                           tblptrl	equ	0xFF6
  7784                           tablat	equ	0xFF5
  7785                           prodh	equ	0xFF4
  7786                           prodl	equ	0xFF3
  7787                           intcon	equ	0xFF2
  7788                           indf0	equ	0xFEF
  7789                           postinc0	equ	0xFEE
  7790                           fsr0h	equ	0xFEA
  7791                           fsr0l	equ	0xFE9
  7792                           wreg	equ	0xFE8
  7793                           postdec1	equ	0xFE5
  7794                           fsr1l	equ	0xFE1
  7795                           indf2	equ	0xFDF
  7796                           postinc2	equ	0xFDE
  7797                           postdec2	equ	0xFDD
  7798                           plusw2	equ	0xFDB
  7799                           fsr2h	equ	0xFDA
  7800                           fsr2l	equ	0xFD9
  7801                           status	equ	0xFD8
  7802                           
  7803 ;; *************** function ___ftpack *****************
  7804 ;; Defined at:
  7805 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  arg             3   14[COMRAM] unsigned um
  7808 ;;  exp             1   17[COMRAM] unsigned char 
  7809 ;;  sign            1   18[COMRAM] unsigned char 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  3   14[COMRAM] float 
  7814 ;; Registers used:
  7815 ;;		wreg, status,2, status,0
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7821 ;;      Params:         5       0       0       0       0       0       0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7823 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7824 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7825 ;;Total ram usage:        8 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    1
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		___altoft
  7832 ;;		___awtoft
  7833 ;;		___ftadd
  7834 ;;		___ftdiv
  7835 ;;		___ftmul
  7836 ;;		___lwtoft
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text53
  7841  0018EE                     __ptext53:
  7842                           	opt stack 0
  7843  0018EE                     ___ftpack:
  7844                           	opt stack 25
  7845                           
  7846                           ;incstack = 0
  7847  0018EE  5012               	movf	___ftpack@exp,w,c
  7848  0018F0  B4D8               	btfsc	status,2,c
  7849  0018F2  D005               	goto	l3662
  7850  0018F4  500F               	movf	___ftpack@arg,w,c
  7851  0018F6  1010               	iorwf	___ftpack@arg+1,w,c
  7852  0018F8  1011               	iorwf	___ftpack@arg+2,w,c
  7853  0018FA  A4D8               	btfss	status,2,c
  7854  0018FC  D00C               	goto	l3668
  7855  0018FE                     l3662:
  7856  0018FE  0E00               	movlw	0
  7857  001900  6E0F               	movwf	?___ftpack,c
  7858  001902  0E00               	movlw	0
  7859  001904  6E10               	movwf	?___ftpack+1,c
  7860  001906  0E00               	movlw	0
  7861  001908  6E11               	movwf	?___ftpack+2,c
  7862  00190A  0012               	return	
  7863  00190C                     l3666:
  7864  00190C  2A12               	incf	___ftpack@exp,f,c
  7865  00190E  90D8               	bcf	status,0,c
  7866  001910  3211               	rrcf	___ftpack@arg+2,f,c
  7867  001912  3210               	rrcf	___ftpack@arg+1,f,c
  7868  001914  320F               	rrcf	___ftpack@arg,f,c
  7869  001916                     l3668:
  7870  001916  0E00               	movlw	0
  7871  001918  140F               	andwf	___ftpack@arg,w,c
  7872  00191A  6E14               	movwf	??___ftpack& (0+255),c
  7873  00191C  0E00               	movlw	0
  7874  00191E  1410               	andwf	___ftpack@arg+1,w,c
  7875  001920  6E15               	movwf	(??___ftpack+1)& (0+255),c
  7876  001922  0EFE               	movlw	254
  7877  001924  1411               	andwf	___ftpack@arg+2,w,c
  7878  001926  6E16               	movwf	(??___ftpack+2)& (0+255),c
  7879  001928  5014               	movf	??___ftpack,w,c
  7880  00192A  1015               	iorwf	??___ftpack+1,w,c
  7881  00192C  1016               	iorwf	??___ftpack+2,w,c
  7882  00192E  B4D8               	btfsc	status,2,c
  7883  001930  D00C               	goto	l3674
  7884  001932  D7EC               	goto	l3666
  7885  001934                     l3670:
  7886  001934  2A12               	incf	___ftpack@exp,f,c
  7887  001936  0E01               	movlw	1
  7888  001938  260F               	addwf	___ftpack@arg,f,c
  7889  00193A  0E00               	movlw	0
  7890  00193C  2210               	addwfc	___ftpack@arg+1,f,c
  7891  00193E  0E00               	movlw	0
  7892  001940  2211               	addwfc	___ftpack@arg+2,f,c
  7893  001942  90D8               	bcf	status,0,c
  7894  001944  3211               	rrcf	___ftpack@arg+2,f,c
  7895  001946  3210               	rrcf	___ftpack@arg+1,f,c
  7896  001948  320F               	rrcf	___ftpack@arg,f,c
  7897  00194A                     l3674:
  7898  00194A  0E00               	movlw	0
  7899  00194C  140F               	andwf	___ftpack@arg,w,c
  7900  00194E  6E14               	movwf	??___ftpack& (0+255),c
  7901  001950  0E00               	movlw	0
  7902  001952  1410               	andwf	___ftpack@arg+1,w,c
  7903  001954  6E15               	movwf	(??___ftpack+1)& (0+255),c
  7904  001956  0EFF               	movlw	255
  7905  001958  1411               	andwf	___ftpack@arg+2,w,c
  7906  00195A  6E16               	movwf	(??___ftpack+2)& (0+255),c
  7907  00195C  5014               	movf	??___ftpack,w,c
  7908  00195E  1015               	iorwf	??___ftpack+1,w,c
  7909  001960  1016               	iorwf	??___ftpack+2,w,c
  7910  001962  B4D8               	btfsc	status,2,c
  7911  001964  D006               	goto	l3678
  7912  001966  D7E6               	goto	l3670
  7913  001968                     l3676:
  7914  001968  0612               	decf	___ftpack@exp,f,c
  7915  00196A  90D8               	bcf	status,0,c
  7916  00196C  360F               	rlcf	___ftpack@arg,f,c
  7917  00196E  3610               	rlcf	___ftpack@arg+1,f,c
  7918  001970  3611               	rlcf	___ftpack@arg+2,f,c
  7919  001972                     l3678:
  7920  001972  BE10               	btfsc	___ftpack@arg+1,7,c
  7921  001974  D003               	goto	l846
  7922  001976  0E02               	movlw	2
  7923  001978  6012               	cpfslt	___ftpack@exp,c
  7924  00197A  D7F6               	goto	l3676
  7925  00197C                     l846:
  7926  00197C  A012               	btfss	___ftpack@exp,0,c
  7927  00197E  9E10               	bcf	___ftpack@arg+1,7,c
  7928  001980  90D8               	bcf	status,0,c
  7929  001982  3212               	rrcf	___ftpack@exp,f,c
  7930  001984  5012               	movf	___ftpack@exp,w,c
  7931  001986  1211               	iorwf	___ftpack@arg+2,f,c
  7932  001988  5013               	movf	___ftpack@sign,w,c
  7933  00198A  A4D8               	btfss	status,2,c
  7934  00198C  8E11               	bsf	___ftpack@arg+2,7,c
  7935  00198E  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  7936  001992  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  7937  001996  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  7938  00199A  0012               	return	
  7939  00199C                     __end_of___ftpack:
  7940                           	opt stack 0
  7941                           tblptru	equ	0xFF8
  7942                           tblptrh	equ	0xFF7
  7943                           tblptrl	equ	0xFF6
  7944                           tablat	equ	0xFF5
  7945                           prodh	equ	0xFF4
  7946                           prodl	equ	0xFF3
  7947                           intcon	equ	0xFF2
  7948                           indf0	equ	0xFEF
  7949                           postinc0	equ	0xFEE
  7950                           fsr0h	equ	0xFEA
  7951                           fsr0l	equ	0xFE9
  7952                           wreg	equ	0xFE8
  7953                           postdec1	equ	0xFE5
  7954                           fsr1l	equ	0xFE1
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           plusw2	equ	0xFDB
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963 ;; *************** function _pic_isr *****************
  7964 ;; Defined at:
  7965 ;;		line 118 in file "Trabalho_Final_SiRGII.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      void 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7981 ;;      Temps:         14       0       0       0       0       0       0       0       0
  7982 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7983 ;;Total ram usage:       14 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; This function calls:
  7986 ;;		Nothing
  7987 ;; This function is called by:
  7988 ;;		Interrupt level 2
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	intcode
  7993  000008                     __pintcode:
  7994                           	opt stack 0
  7995  000008                     _pic_isr:
  7996                           	opt stack 23
  7997                           
  7998                           ;incstack = 0
  7999  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8000  00000A  ED8D  F00B         	call	int_func,f	;refresh shadow registers
  8001                           tblptru	equ	0xFF8
  8002                           tblptrh	equ	0xFF7
  8003                           tblptrl	equ	0xFF6
  8004                           tablat	equ	0xFF5
  8005                           prodh	equ	0xFF4
  8006                           prodl	equ	0xFF3
  8007                           intcon	equ	0xFF2
  8008                           indf0	equ	0xFEF
  8009                           postinc0	equ	0xFEE
  8010                           fsr0h	equ	0xFEA
  8011                           fsr0l	equ	0xFE9
  8012                           wreg	equ	0xFE8
  8013                           postdec1	equ	0xFE5
  8014                           fsr1l	equ	0xFE1
  8015                           indf2	equ	0xFDF
  8016                           postinc2	equ	0xFDE
  8017                           postdec2	equ	0xFDD
  8018                           plusw2	equ	0xFDB
  8019                           fsr2h	equ	0xFDA
  8020                           fsr2l	equ	0xFD9
  8021                           status	equ	0xFD8
  8022                           
  8023                           	psect	intcode_body
  8024  00171A                     __pintcode_body:
  8025                           	opt stack 23
  8026  00171A                     int_func:
  8027                           	opt stack 23
  8028  00171A  0006               	pop		; remove dummy address from shadow register refresh
  8029  00171C  CFFA F001          	movff	pclath,??_pic_isr
  8030  001720  CFFB F002          	movff	pclatu,??_pic_isr+1
  8031  001724  CFE9 F003          	movff	fsr0l,??_pic_isr+2
  8032  001728  CFEA F004          	movff	fsr0h,??_pic_isr+3
  8033  00172C  CFE1 F005          	movff	fsr1l,??_pic_isr+4
  8034  001730  CFE2 F006          	movff	fsr1h,??_pic_isr+5
  8035  001734  CFD9 F007          	movff	fsr2l,??_pic_isr+6
  8036  001738  CFDA F008          	movff	fsr2h,??_pic_isr+7
  8037  00173C  CFF3 F009          	movff	prodl,??_pic_isr+8
  8038  001740  CFF4 F00A          	movff	prodh,??_pic_isr+9
  8039  001744  CFF6 F00B          	movff	tblptrl,??_pic_isr+10
  8040  001748  CFF7 F00C          	movff	tblptrh,??_pic_isr+11
  8041  00174C  CFF8 F00D          	movff	tblptru,??_pic_isr+12
  8042  001750  CFF5 F00E          	movff	tablat,??_pic_isr+13
  8043                           
  8044                           ;Trabalho_Final_SiRGII.c: 120: if(TMR0IF){
  8045  001754  A4F2               	btfss	intcon,2,c	;volatile
  8046  001756  D00A               	goto	i2l3606
  8047                           
  8048                           ;Trabalho_Final_SiRGII.c: 121: TMR0=2535;
  8049  001758  0E09               	movlw	9
  8050  00175A  6ED7               	movwf	4055,c	;volatile
  8051  00175C  0EE7               	movlw	231
  8052  00175E  6ED6               	movwf	4054,c	;volatile
  8053                           
  8054                           ;Trabalho_Final_SiRGII.c: 122: INTCONbits.TMR0IF=0;
  8055  001760  94F2               	bcf	intcon,2,c	;volatile
  8056                           
  8057                           ;Trabalho_Final_SiRGII.c: 123: contador++;
  8058  001762  0100               	movlb	0	; () banked
  8059  001764  4B6E               	infsnz	_contador& (0+255),f,b
  8060  001766  2B6F               	incf	(_contador+1)& (0+255),f,b
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;Trabalho_Final_SiRGII.c: 124: flag_time=0;
  8064  001768  0E00               	movlw	0
  8065  00176A  6E4C               	movwf	_flag_time,c
  8066  00176C                     i2l3606:
  8067                           
  8068                           ;Trabalho_Final_SiRGII.c: 125: }
  8069                           ;Trabalho_Final_SiRGII.c: 127: if(contador>0){
  8070  00176C  0100               	movlb	0	; () banked
  8071  00176E  BF6F               	btfsc	(_contador+1)& (0+255),7,b
  8072  001770  D00E               	goto	i2l3610
  8073  001772  0100               	movlb	0	; () banked
  8074  001774  516F               	movf	(_contador+1)& (0+255),w,b
  8075  001776  E104               	bnz	i2u318_40
  8076  001778  0100               	movlb	0	; () banked
  8077  00177A  056E               	decf	_contador& (0+255),w,b
  8078  00177C  A0D8               	btfss	status,0,c
  8079  00177E  D007               	goto	i2l3610
  8080  001780                     i2u318_40:
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;Trabalho_Final_SiRGII.c: 128: flag_time=1;
  8084  001780  0E01               	movlw	1
  8085  001782  6E4C               	movwf	_flag_time,c
  8086                           
  8087                           ;Trabalho_Final_SiRGII.c: 129: contador=0;
  8088  001784  0E00               	movlw	0
  8089  001786  0100               	movlb	0	; () banked
  8090  001788  6F6F               	movwf	(_contador+1)& (0+255),b
  8091  00178A  0E00               	movlw	0
  8092  00178C  6F6E               	movwf	_contador& (0+255),b
  8093  00178E                     i2l3610:
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;Trabalho_Final_SiRGII.c: 130: }
  8097                           ;Trabalho_Final_SiRGII.c: 133: if(PIR1bits.RCIF == 1){
  8098  00178E  AA9E               	btfss	3998,5,c	;volatile
  8099  001790  D01D               	goto	i2l176
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;Trabalho_Final_SiRGII.c: 134: if(numero_entrada_terminal<3){
  8103  001792  5047               	movf	_numero_entrada_terminal+1,w,c
  8104  001794  E111               	bnz	i2l171
  8105  001796  0E03               	movlw	3
  8106  001798  5C46               	subwf	_numero_entrada_terminal,w,c
  8107  00179A  B0D8               	btfsc	status,0,c
  8108  00179C  D00D               	goto	i2l171
  8109  00179E                     i2l172:
  8110  00179E  AA9E               	btfss	3998,5,c	;volatile
  8111  0017A0  D7FE               	goto	i2l172
  8112                           
  8113                           ;Trabalho_Final_SiRGII.c: 136: BUFF_COM[numero_entrada_terminal]= RCREG;
  8114  0017A2  0E43               	movlw	low _BUFF_COM
  8115  0017A4  2446               	addwf	_numero_entrada_terminal,w,c
  8116  0017A6  6ED9               	movwf	fsr2l,c
  8117  0017A8  0E00               	movlw	high _BUFF_COM
  8118  0017AA  2047               	addwfc	_numero_entrada_terminal+1,w,c
  8119  0017AC  6EDA               	movwf	fsr2h,c
  8120  0017AE  CFAE FFDF          	movff	4014,indf2	;volatile
  8121                           
  8122                           ;Trabalho_Final_SiRGII.c: 137: numero_entrada_terminal++;
  8123  0017B2  4A46               	infsnz	_numero_entrada_terminal,f,c
  8124  0017B4  2A47               	incf	_numero_entrada_terminal+1,f,c
  8125                           
  8126                           ;Trabalho_Final_SiRGII.c: 138: }
  8127  0017B6  D00A               	goto	i2l176
  8128  0017B8                     i2l171:
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;Trabalho_Final_SiRGII.c: 139: else{
  8132                           ;Trabalho_Final_SiRGII.c: 140: PIR1bits.RCIF=0;
  8133  0017B8  9A9E               	bcf	3998,5,c	;volatile
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;Trabalho_Final_SiRGII.c: 141: numero_entrada_terminal=0;
  8137  0017BA  0E00               	movlw	0
  8138  0017BC  6E47               	movwf	_numero_entrada_terminal+1,c
  8139  0017BE  0E00               	movlw	0
  8140  0017C0  6E46               	movwf	_numero_entrada_terminal,c
  8141                           
  8142                           ;Trabalho_Final_SiRGII.c: 142: ESTADO_COMUNICACAO = '1';
  8143  0017C2  0E00               	movlw	0
  8144  0017C4  0100               	movlb	0	; () banked
  8145  0017C6  6F6B               	movwf	(_ESTADO_COMUNICACAO+1)& (0+255),b
  8146  0017C8  0E31               	movlw	49
  8147  0017CA  6F6A               	movwf	_ESTADO_COMUNICACAO& (0+255),b
  8148  0017CC                     i2l176:
  8149  0017CC  C00E  FFF5         	movff	??_pic_isr+13,tablat
  8150  0017D0  C00D  FFF8         	movff	??_pic_isr+12,tblptru
  8151  0017D4  C00C  FFF7         	movff	??_pic_isr+11,tblptrh
  8152  0017D8  C00B  FFF6         	movff	??_pic_isr+10,tblptrl
  8153  0017DC  C00A  FFF4         	movff	??_pic_isr+9,prodh
  8154  0017E0  C009  FFF3         	movff	??_pic_isr+8,prodl
  8155  0017E4  C008  FFDA         	movff	??_pic_isr+7,fsr2h
  8156  0017E8  C007  FFD9         	movff	??_pic_isr+6,fsr2l
  8157  0017EC  C006  FFE2         	movff	??_pic_isr+5,fsr1h
  8158  0017F0  C005  FFE1         	movff	??_pic_isr+4,fsr1l
  8159  0017F4  C004  FFEA         	movff	??_pic_isr+3,fsr0h
  8160  0017F8  C003  FFE9         	movff	??_pic_isr+2,fsr0l
  8161  0017FC  C002  FFFB         	movff	??_pic_isr+1,pclatu
  8162  001800  C001  FFFA         	movff	??_pic_isr,pclath
  8163  001804  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8164  001806  0011               	retfie		f
  8165  001808                     __end_of_pic_isr:
  8166                           	opt stack 0
  8167                           pclatu	equ	0xFFB
  8168                           pclath	equ	0xFFA
  8169                           tblptru	equ	0xFF8
  8170                           tblptrh	equ	0xFF7
  8171                           tblptrl	equ	0xFF6
  8172                           tablat	equ	0xFF5
  8173                           prodh	equ	0xFF4
  8174                           prodl	equ	0xFF3
  8175                           intcon	equ	0xFF2
  8176                           indf0	equ	0xFEF
  8177                           postinc0	equ	0xFEE
  8178                           fsr0h	equ	0xFEA
  8179                           fsr0l	equ	0xFE9
  8180                           wreg	equ	0xFE8
  8181                           postdec1	equ	0xFE5
  8182                           fsr1h	equ	0xFE2
  8183                           fsr1l	equ	0xFE1
  8184                           indf2	equ	0xFDF
  8185                           postinc2	equ	0xFDE
  8186                           postdec2	equ	0xFDD
  8187                           plusw2	equ	0xFDB
  8188                           fsr2h	equ	0xFDA
  8189                           fsr2l	equ	0xFD9
  8190                           status	equ	0xFD8
  8191                           pclatu	equ	0xFFB
  8192                           pclath	equ	0xFFA
  8193                           tblptru	equ	0xFF8
  8194                           tblptrh	equ	0xFF7
  8195                           tblptrl	equ	0xFF6
  8196                           tablat	equ	0xFF5
  8197                           prodh	equ	0xFF4
  8198                           prodl	equ	0xFF3
  8199                           intcon	equ	0xFF2
  8200                           indf0	equ	0xFEF
  8201                           postinc0	equ	0xFEE
  8202                           fsr0h	equ	0xFEA
  8203                           fsr0l	equ	0xFE9
  8204                           wreg	equ	0xFE8
  8205                           postdec1	equ	0xFE5
  8206                           fsr1h	equ	0xFE2
  8207                           fsr1l	equ	0xFE1
  8208                           indf2	equ	0xFDF
  8209                           postinc2	equ	0xFDE
  8210                           postdec2	equ	0xFDD
  8211                           plusw2	equ	0xFDB
  8212                           fsr2h	equ	0xFDA
  8213                           fsr2l	equ	0xFD9
  8214                           status	equ	0xFD8
  8215                           
  8216                           	psect	rparam
  8217  0000                     pclatu	equ	0xFFB
  8218                           pclath	equ	0xFFA
  8219                           tblptru	equ	0xFF8
  8220                           tblptrh	equ	0xFF7
  8221                           tblptrl	equ	0xFF6
  8222                           tablat	equ	0xFF5
  8223                           prodh	equ	0xFF4
  8224                           prodl	equ	0xFF3
  8225                           intcon	equ	0xFF2
  8226                           indf0	equ	0xFEF
  8227                           postinc0	equ	0xFEE
  8228                           fsr0h	equ	0xFEA
  8229                           fsr0l	equ	0xFE9
  8230                           wreg	equ	0xFE8
  8231                           postdec1	equ	0xFE5
  8232                           fsr1h	equ	0xFE2
  8233                           fsr1l	equ	0xFE1
  8234                           indf2	equ	0xFDF
  8235                           postinc2	equ	0xFDE
  8236                           postdec2	equ	0xFDD
  8237                           plusw2	equ	0xFDB
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242                           	psect	temp
  8243  000051                     btemp:
  8244                           	opt stack 0
  8245  000051                     	ds	1
  8246  0000                     int$flags	set	btemp
  8247                           pclatu	equ	0xFFB
  8248                           pclath	equ	0xFFA
  8249                           tblptru	equ	0xFF8
  8250                           tblptrh	equ	0xFF7
  8251                           tblptrl	equ	0xFF6
  8252                           tablat	equ	0xFF5
  8253                           prodh	equ	0xFF4
  8254                           prodl	equ	0xFF3
  8255                           intcon	equ	0xFF2
  8256                           indf0	equ	0xFEF
  8257                           postinc0	equ	0xFEE
  8258                           fsr0h	equ	0xFEA
  8259                           fsr0l	equ	0xFE9
  8260                           wreg	equ	0xFE8
  8261                           postdec1	equ	0xFE5
  8262                           fsr1h	equ	0xFE2
  8263                           fsr1l	equ	0xFE1
  8264                           indf2	equ	0xFDF
  8265                           postinc2	equ	0xFDE
  8266                           postdec2	equ	0xFDD
  8267                           plusw2	equ	0xFDB
  8268                           fsr2h	equ	0xFDA
  8269                           fsr2l	equ	0xFD9
  8270                           status	equ	0xFD8


Data Sizes:
    Strings     102
    Constant    10
    Data        4
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      80
    BANK0           160     36      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> str(BANK0[16]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[19]), STR_6(CODE[9]), STR_5(CODE[20]), STR_4(CODE[9]), 
		 -> STR_3(CODE[10]), STR_2(CODE[20]), STR_1(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_8(CODE[7]), temperatura_display(BANK0[10]), convert_float_to_char@f2(BANK0[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> temperatura_display(BANK0[10]), str(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EEPROM_WriteString@data	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    tratar_relogio@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _pisca_cursor->_SetDDRamAddr
    _maquina_estado->_trata_comando
    _trata_comando->___awmod
    _trata_comando->___wmul
    _io_eeprom->_EEPROM_WriteString
    _EEPROM_WriteString->_EEPROM_Write
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _gambiarra_pro_serial->_sprintf
    _putrsXLCD->_WriteDataXLCD
    _DelayFor18TCY->_Delay10TCYx
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _floor->___altoft
    ___altoft->___fttol
    ___awdiv->___awmod
    _convert->___ftdiv
    ___lwtoft->___ftpack
    _ativa_atuadores->___ftge
    ___ftmul->___lwtoft
    ___ftge->___ftmul
    _USART_Init->___ftadd
    ___fttol->___ftmul
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___awtoft->___ftpack

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_exibir_lcd
    _exibir_lcd->_convert_float_to_char
    _convert_float_to_char->_floor
    _floor->___ftadd
    _USART_Init->___ftadd

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   61487
                                             34 BANK0      2     2      0
                         _USART_Init
                       _WriteCmdXLCD
                    _ativa_atuadores
                        _checa_botao
                            _convert
                         _exibir_lcd
                           _init_ADC
                          _init_XLCD
                          _io_eeprom
                     _maquina_estado
                       _pisca_cursor
                     _tratar_relogio
 ---------------------------------------------------------------------------------
 (1) _tratar_relogio                                       4     2      2     438
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _pisca_cursor                                         0     0      0      66
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _maquina_estado                                       2     2      0    1803
                                             22 COMRAM     2     2      0
                      _trata_comando
                            _tx_data
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      68
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trata_comando                                        2     2      0    1735
                                             20 COMRAM     2     2      0
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     415
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _io_eeprom                                            5     5      0     545
                                             21 COMRAM     5     5      0
                        _EEPROM_Read
                 _EEPROM_WriteString
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteString                                   4     0      4     368
                                             17 COMRAM     4     0      4
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         3     0      3     172
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     308
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     220
                                             19 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _exibir_lcd                                          10    10      0   29037
                                             24 BANK0     10    10      0
                       _SetDDRamAddr
                            ___awdiv
                            ___awmod
              _convert_float_to_char
                          _gambiarra
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _gambiarra                                            0     0      0    2842
               _gambiarra_pro_serial
 ---------------------------------------------------------------------------------
 (3) _gambiarra_pro_serial                                 0     0      0    2842
                       _SetDDRamAddr
                       _WriteCmdXLCD
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     517
                                             16 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      66
                                             15 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _convert_float_to_char                               13    10      3   21151
                                             11 BANK0     13    10      3
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                              _floor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             28    16     12    2193
                                             26 COMRAM    22    10     12
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                8     5      3    9446
                                              3 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     452
                                             14 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2865
                                             55 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1320
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     812
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _convert                                              1     1      0   10428
                                             55 COMRAM     1     1      0
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
                            ___ftdiv
                            ___ftmul
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2692
                                             22 COMRAM     3     0      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checa_botao                                          2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ativa_atuadores                                      0     0      0    7179
                           ___awtoft
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3802
                                             25 COMRAM    15     9      6
                           ___ftpack
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     506
                                             40 COMRAM     9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           5     3      2   11617
                                             64 COMRAM     2     0      2
                                              3 BANK0      3     3      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     679
                                             40 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3426
                                             40 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4499
                                             55 COMRAM     9     3      6
                                              0 BANK0      3     3      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2871
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2584
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _pic_isr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
   _WriteCmdXLCD
     _DelayFor18TCY
       _Delay10TCYx
   _ativa_atuadores
     ___awtoft
       ___ftpack
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
     ___ftmul
       ___ftpack
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
   _checa_botao
   _convert
     _BusyADC
     _ConvertADC
     _ReadADC
     _SetChanADC
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
     ___ftmul
       ___ftpack
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
     ___lwdiv
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
   _exibir_lcd
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _convert_float_to_char
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
         _frexp
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _gambiarra
       _gambiarra_pro_serial
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _WriteCmdXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_ADC
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _io_eeprom
     _EEPROM_Read
     _EEPROM_WriteString
       _EEPROM_Write
     _USART_TransmitChar
   _maquina_estado
     _trata_comando
       ___awmod
       ___wmul
     _tx_data
   _pisca_cursor
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
   _tratar_relogio

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      56       5       53.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      20        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Dec 04 10:23:55 2019

  __end_of_gambiarra_pro_serial 1C74                    ___altoft@exp 0040                   ___altoft@sign 0041  
                  ___awdiv@sign 001A                     __CFG_BOR$ON 000000             ___wmul@multiplicand 0011  
                   __CFG_BORV$3 000000                ??_maquina_estado 0017                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                  ___ftadd@exp1 0094                    ___ftadd@exp2 0093                    ___ftadd@sign 0092  
                           l111 214C                             l116 2168                             l311 0EDE  
                           l119 2182                             l320 0F4C                             l313 0F00  
                           l305 0E80                             l226 1E96                             l322 0F70  
                           l315 0F0E                             l324 0F80                             l309 0F12  
                           l405 2344                             l318 0F84                             l510 2138  
                           l343 1020                             l344 1054                             l329 0FC6  
                           l347 10F6                             l428 225E                             l900 0B32  
                           l909 0BEC                             l846 197C                             l918 0C0A  
                           l951 227C                             l929 18BC                             l857 152E  
                           l894 0AD8                             l898 0B0E                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             _str 0072           __size_of_WriteCmdXLCD 003E  
                  ___awmod@sign 0014                             wreg 000FE8                   _trata_comando 111E  
                  __CFG_LVP$OFF 000000                    ___ftdiv@cntr 0032                    ___ftdiv@sign 0037  
                  __CFG_WDT$OFF 000000                            l1049 1F38                            l1059 204E  
                          l3040 1E10                            l3032 1DF6                            l4020 1A56  
                          l3052 1E3C                            l3044 1E24                            l3036 1E04  
                          l3028 1DEA                            l3038 1E0C                            l3150 19D4  
                          l4024 1A60                            l4016 1A4E                            l3048 1E2E  
                          l2600 2024                            l3160 19FE                            l3152 19DE  
                          l3064 2158                            l2602 202C                            l3322 22B4  
                          l3090 1238                            l3082 11AA                            l3306 205A  
                          l3314 2070                            l3252 1B86                            l2604 2030  
                          l2700 0D86                            l3172 1A2E                            l3164 1A0E  
                          l3156 19EE                            l3084 11BA                            l3076 112C  
                          l3308 2060                            l4140 15CA                            l2702 0D8A  
                          l3190 21DE                            l3086 11F8                            l3078 116A  
                          l3094 1248                            l3360 0EEA                            l3344 0E84  
                          l3264 1BAC                            l3280 1BDE                            l2608 2044  
                          l2720 0DD2                            l2472 230A                            l4056 09FA  
                          l3168 1A1E                            l3184 21BE                            l3096 1256  
                          l3266 1BB4                            l3258 1B96                            l2722 0DD8  
                          l2714 0DB6                            l2730 0E32                            l3348 0EA4  
                          l2580 1F06                            l3284 1BEC                            l3276 1BD4  
                          l3268 1BB8                            l2732 0E4A                            l2582 1F0E  
                          l3702 1D0E                            l2670 0CAC                            l2662 0C8C  
                          l3462 1F7A                            l3454 1F5C                            l3800 1B12  
                          l3376 0F5A                            l2592 1F2E                            l2584 1F12  
                          l3704 1D1A                            l2728 0E2A                            l2744 220C  
                          l4168 1626                            l3730 0B2A                            l3810 1B6E  
                          l2690 0D5E                            l2738 21F0                            l2746 22FA  
                          l3458 1F6A                            l3482 10C2                            l3740 0B5A  
                          l3724 0B1C                            l3820 1382                            l3804 1B42  
                          l2684 0D08                            l2668 0CA6                            l3492 1FF6  
                          l3476 1092                            l3670 1934                            l3662 18FE  
                          l3750 0B9E                            l3718 0AE6                            l3910 12E4  
                          l2678 0CD6                            l3760 0BE0                            l3752 0BAA  
                          l3920 130C                            l2688 0D30                            l3496 200E  
                          l3674 194A                            l3666 190C                            l3746 0B84  
                          l3850 141C                            l3842 13F8                            l3914 12F4  
                          l2962 22CE                            l3676 1968                            l3668 1916  
                          l3748 0B90                            l3852 1422                            l3924 131C  
                          l3678 1972                            l3766 0C28                            l3758 0BD4  
                          l3950 1830                            l3838 13E8                            l3870 1482  
                          l3776 0C5C                            l3856 1438                            l3848 1410  
                          l3890 128A                            l3786 1C90                            l3874 1496  
                          l3956 1858                            l3878 14B4                            l3976 1896  
                          l3896 12B2                            l3998 2198                            STR_1 0846  
                          STR_2 081F                            STR_3 0857                            STR_4 0861  
                          STR_5 080B                            STR_6 0861                            STR_7 0833  
                          STR_8 086A                            u3110 1070                            u3130 10E2  
                          u2530 2356                            u3090 0FFE                            u3341 0A94  
                          u1805 1EB4                            u1830 0CFE                            u3351 0AAA  
                          u1840 0D28                            u3601 1366                            u3620 13A0  
                          u3700 14A6                            u1837 0CF4                            u1847 0D1E  
                          u3560 1CB8                            u3801 1840                            u3625 1398  
                          u3721 1272                            _PEIE 007F96                            u2940 0FB2  
                          u2780 0E9A                            u3741 129A                            u3568 1CBA  
                          _RCIE 007CED                            _RCIF 007CF5                            u3781 1818  
                          u3927 1610                            u3937 22FC                            u3947 22D4  
                          u3957 230C                            _RCIP 007CFD                            u3967 0E66  
                          u3977 0EB2                            u3987 0F20                            u3997 0F92  
                          _TMR0 000FD6                            _TXIF 007CF4                            _main 153C  
                  ___ftpack@arg 000F                    ___ftpack@exp 0012                            fsr0h 000FEA  
                          fsr1h 000FE2                            indf0 000FEF                            fsr2h 000FDA  
                          fsr0l 000FE9                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            btemp 0051          __size_of_WriteDataXLCD 003E  
                          prodh 000FF4                            prodl 000FF3                            start 000E  
                 __CFG_IESO$OFF 000000                    ___ftmul@cntr 0027                    ___param_bank 000000  
                  ___ftmul@sign 0028                 __end_of_BusyADC 235A                 __end_of_ReadADC 2342  
                   _Delay10TCYx 2308                    ___fttol@exp1 0037           tratar_relogio@Relogio 000F  
          __end_of_EEPROM_Write 2266                    ___fttol@lval 0033                    _WriteCmdXLCD 20D4  
                   _Delay1KTCYx 22F8                  __CFG_CCP2MX$ON 000000                   ?_SetDDRamAddr 0001  
                         ?_main 0001                 __end_of___awdiv 1BF6                           _EEADR 000FA9  
               __end_of___ftadd 0C82                 __end_of___awmod 1E46                 __end_of___ftdiv 18EE  
               __end_of___ftneg 228A                 __end_of___ftmul 1356                 ___awdiv@divisor 0017  
               __end_of___fttol 144A                 __end_of___lwdiv 1F42                 __end_of___lwmod 2058  
                         i2l171 17B8                           i2l172 179E                           i2l176 17CC  
               ___awdiv@counter 0019                           _RCREG 000FAE                           _RCSTA 000FAB  
          __size_of_checa_botao 0174                           _SPBRG 000FAF                           _PORTB 000F81  
                         _TRISA 000F92                           _TRISB 000F93                           _TXREG 000FAD  
         __size_of_Delay10KTCYx 0016                           _TXSTA 000FAC                   __CFG_PWRT$OFF 000000  
                ?_trata_comando 0001                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                 __end_of_convert 1AE2                  __CFG_EBTRB$OFF 000000  
                 ___awtoft@sign 001A                 __end_of_dpowers 080B                           _floor 144A  
                         _frexp 1C74                           _errno 0066                 __end_of_pic_isr 1808  
                 ___ftpack@sign 0013                      _ConvertADC 2374                           pclath 000FFA  
                         tablat 000FF5                           plusw2 000FDB                 __end_of_tx_data 2184  
                         status 000FD8                 __end_of_sprintf 0E58                  __CFG_ICPRT$OFF 000000  
              EEPROM_Write@data 0011                  __CFG_PBADEN$ON 000000            __size_of_EEPROM_Read 000E  
              ?_ativa_atuadores 0001                     ?_USART_Init 0041                  __CFG_MCLRE$OFF 000000  
               __initialization 1F8C                    __end_of_main 162C                __end_of_BusyXLCD 214C  
                _tratar_relogio 0FCC                    _Delay10KTCYx 22CC           __size_of_DelayPORXLCD 0008  
                ??_SetDDRamAddr 0010                __end_of_OpenXLCD 1A40                          ??_main 00B4  
                 ___fttol@sign1 0032                   __activetblptr 000002                   _WriteDataXLCD 2096  
                    _SetChanADC 22E2  __size_of_convert_float_to_char 00EE   __end_of_convert_float_to_char 171A  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        ?_floor 0095                          ?_frexp 000F                __end_of___altoft 1D64  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          _EEDATA 000FA8  
                        _EECON2 000FA7                ___awdiv@dividend 0015            _gambiarra_pro_serial 1BF6  
              __end_of___awtoft 21BC                __end_of___ftpack 199C                          i2l3610 178E  
                        i2l3606 176C                __end_of___lwtoft 22AE                          _OSCCON 000FD3  
                        _TMR0IF 007F92                          _TRISC6 007CA6                          _TRISC7 007CA7  
                     ??_BusyADC 000F                       ??_ReadADC 0011                    _DelayPORXLCD 235A  
                __CFG_XINST$OFF 000000          __end_of_tratar_relogio 111E                     exibir_lcd@a 00AC  
                   exibir_lcd@b 00AE                     exibir_lcd@c 00B0                     exibir_lcd@d 00B2  
                        ___ftge 1AE2                          ___wmul 221C                       ??___awdiv 0019  
                     ??___ftadd 003E                  __CFG_STVREN$ON 000000                       ??___awmod 0013  
                     ??___ftdiv 002F                       ??___ftneg 0012                       ??___ftmul 0020  
                     ??___fttol 002D                __end_of_init_ADC 2334                       ??___lwdiv 0013  
                     ??___lwmod 001A                          _cursor 0048                          clear_0 1FB2  
                        clear_1 1FBE                ___awdiv@quotient 001B                 ___awmod@divisor 0011  
               ___awmod@counter 0013                  ?_WriteDataXLCD 0001                          floor@i 0098  
               ??_trata_comando 0015                          floor@x 0095           ___ftmul@f3_as_product 0024  
                     ??_convert 0038                    __pdataCOMRAM 004D                       ??_pic_isr 0001  
    __end_of_USART_TransmitChar 234E                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __size_of_USART_Init 0072  
                     ??_tx_data 000F           ?_gambiarra_pro_serial 0001                       ??_sprintf 0027  
                   ?_ConvertADC 0001                      __accesstop 0060         __end_of__initialization 1FC4  
                    ___altoft@c 0038                      ___ftadd@f1 0038                      ___ftadd@f2 003B  
                    ___ftge@ff1 0029                      ___ftge@ff2 002C              io_eeprom@Data_read 001A  
                 ___rparam_used 000001                      ___ftdiv@f1 0029                      ___ftdiv@f2 002C  
                    ___ftdiv@f3 0033                      ___ftneg@f1 000F           __size_of_EEPROM_Write 0024  
                    ___awtoft@c 0017                      ___ftmul@f1 001A                      ___ftmul@f2 001D  
               ?_tratar_relogio 000F                      ___fttol@f1 0029                  __pcstackCOMRAM 0001  
                 __end_of_floor 153C                   __end_of_frexp 1CEC                      ___lwtoft@c 0017  
            __size_of_gambiarra 0006                     ?_SetChanADC 0001                   _string_gravar 004A  
                       ??_floor 0042                         ??_frexp 0014          __size_of_DelayFor18TCY 0008  
                  _EEPROM_Write 2242                      __pbssBANK0 0060              __size_of_io_eeprom 0044  
                     ?_BusyXLCD 0001                 WriteCmdXLCD@cmd 0010            __end_of_SetDDRamAddr 1EF0  
            __size_of_init_XLCD 001E                       ?_OpenXLCD 0001     __size_of_EEPROM_WriteString 0032  
                       ?___ftge 0029               WriteDataXLCD@data 0010                    ?_Delay10TCYx 0001  
                       ?___wmul 000F                   ?_pisca_cursor 0001                 ??_WriteDataXLCD 0010  
                  ?_Delay1KTCYx 0001                       ?___altoft 0038             __size_of_ConvertADC 0004  
                     ?___awtoft 0017                       ?___ftpack 000F              _temperatura_maxima 004D  
            _temperatura_minima 004F                       ?___lwtoft 0017          ??_gambiarra_pro_serial 0031  
            __size_of_putrsXLCD 002E                      ??_BusyXLCD 0010                       ?_init_ADC 0001  
               __CFG_VREGEN$OFF 000000               __end_of_gambiarra 2370                         _BusyADC 234E  
                       _ReadADC 2334                      ??_OpenXLCD 0014                       _ADCResult 006C  
                  ??_USART_Init 0043                         __Hparam 0000             __size_of_SetChanADC 0016  
                       _Relogio 008C                         __Lparam 0000                 __size_of___ftge 0090  
                       ___awdiv 1B72                   _DelayFor18TCY 2362                         ___ftadd 0A84  
                       ___awmod 1DD6                  ??_pisca_cursor 0014                         ___ftdiv 1808  
                       ___ftneg 2266                 __size_of___wmul 0026                         ___ftmul 1262  
                    _exibir_lcd 0872                         ___fttol 1356                         ___lwdiv 1EF0  
                       ___lwmod 2016                    __psmallconst 0800                      ??___altoft 003C  
             __end_of_io_eeprom 2016                   ??_checa_botao 000F                         __pcinit 1F8C  
                    ??___awtoft 001A                      ??___ftpack 0014                 putrsXLCD@buffer 0011  
               Delay10TCYx@unit 000F                         __ramtop 0800                         __ptext0 153C  
                       __ptext1 0FCC                         __ptext2 1F42                         __ptext3 2058  
                       __ptext4 214C                         __ptext5 111E                         __ptext6 221C  
                       __ptext7 1FD2                         __ptext8 2342                         __ptext9 21BC  
                     _BUFF_RESP 0060               __end_of_init_XLCD 22CC                      ??___lwtoft 001A  
                     _T0CONbits 000FD5                         _convert 1A40                  USART_Init@temp 0095  
                       _dpowers 0801                         _pic_isr 0008                ___awmod@dividend 000F  
            __end_of_USART_Init 1DD6                         _tx_data 214C         __size_of_maquina_estado 003E  
                       _sprintf 0C82                  __pintcode_body 171A            end_of_initialization 1FC4  
            _ESTADO_COMUNICACAO 006A                      ??_init_ADC 000F                   ??_EEPROM_Read 0011  
                 __Lmediumconst 0000                         int_func 171A                  ?_DelayFor18TCY 0001  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE               __end_of_putrsXLCD 221C        __size_of_ativa_atuadores 0058  
                     _PORTAbits 000F80                       _PORTDbits 000F83                       _TRISAbits 000F92  
                     _TRISBbits 000F93                       _TRISCbits 000F94             __end_of_checa_botao 0FCC  
                     _TRISDbits 000F95           _convert_float_to_char 162C           __size_of_SetDDRamAddr 0052  
        EEPROM_WriteString@data 0014                    ??_ConvertADC 000F             USART_Init@baud_rate 0041  
       _numero_entrada_terminal 0046           USART_TransmitChar@out 000F                ??_tratar_relogio 0011  
                   ___ftdiv@exp 0036              _USART_TransmitChar 2342                     ___ftmul@exp 0023  
           __end_of_EEPROM_Read 2326             ?_USART_TransmitChar 0001                     ?_exibir_lcd 0001  
                __end_of___ftge 1B72                  __end_of___wmul 2242            __size_of_Delay10TCYx 0010  
                 __pidataCOMRAM 2370              __end_of_ConvertADC 2378                    _SetDDRamAddr 1E9E  
          __size_of_Delay1KTCYx 0010                      io_eeprom@e 0018                      floor@expon 009B  
                  ??_SetChanADC 000F              SetDDRamAddr@DDaddr 0013           __end_of_trata_comando 1262  
           start_initialization 1F8C            ??_USART_TransmitChar 000F      convert_float_to_char@valor 009D  
          __end_of_pisca_cursor 1F8C                      frexp@value 000F               __size_of_BusyXLCD 003A  
               ??_DelayFor18TCY 0010         convert_float_to_char@f1 00A7         convert_float_to_char@f2 00A4  
       convert_float_to_char@i1 00A0         convert_float_to_char@i2 00A2              __end_of_SetChanADC 22F8  
             __size_of_OpenXLCD 00A4                        ??___ftge 002F                        ??___wmul 0013  
                 ?_WriteCmdXLCD 0001                     tx_data@cont 000F                __CFG_LPT1OSC$OFF 000000  
                   _checa_botao 0E58               __size_of___altoft 0078               __size_of___awtoft 0038  
             __size_of___ftpack 00AE                     __pbssCOMRAM 0043               __size_of___lwtoft 0024  
                 __pcstackBANK0 0092          ?_convert_float_to_char 009D               ??_ativa_atuadores 0032  
                _maquina_estado 2058       EEPROM_WriteString@address 0012                 Delay1KTCYx@unit 000F  
           __size_of_exibir_lcd 0212                     sprintf@flag 0028      __end_of_EEPROM_WriteString 21EE  
                   _EEPROM_Read 2318                     sprintf@prec 0029                        ?_BusyADC 0001  
                      ?_ReadADC 000F               __size_of_init_ADC 000E                ___lwdiv@dividend 000F  
                     _gambiarra 236A                       __pintcode 0008                  ??_WriteCmdXLCD 0010  
                      ?___awdiv 0015                        ?___ftadd 0038                        ?___awmod 000F  
                      ?___ftdiv 0029                        ?___ftneg 000F                        ?___ftmul 001A  
                      ?___fttol 0029                   ?_Delay10KTCYx 0001                       _flag_time 004C  
                      ?___lwdiv 000F                        ?___lwmod 0016           __end_of_WriteDataXLCD 20D4  
                      ?_convert 0001                     __smallconst 0800                       _io_eeprom 1FD2  
                      ?_pic_isr 0001          __end_of_maquina_estado 2096             _temperatura_display 0082  
                     _init_XLCD 22AE                ___lwdiv@quotient 0013                        ?_tx_data 0001  
                      ?_sprintf 001B                  __size_of_floor 00F2                  __size_of_frexp 0078  
 __size_of_gambiarra_pro_serial 007E                        _BUFF_COM 0043                  ___wmul@product 0013  
                      _LATBbits 000F8A                   ?_DelayPORXLCD 0001                        i2u318_40 1780  
                      _PIR1bits 000F9E                 OpenXLCD@lcdtype 0014                        _PIR2bits 000FA1  
                    ?_gambiarra 0001                __CFG_WDTPS$32768 000000                  ??_Delay10KTCYx 000F  
                    _ADCON0bits 000FC2               ___wmul@multiplier 000F                      ?_io_eeprom 0001  
                     _putrsXLCD 21EE                 ?_maquina_estado 0001           __size_of_pisca_cursor 004A  
              Delay10KTCYx@unit 0010                      ?_init_XLCD 0001                       copy_data0 1FA0  
                      _BusyXLCD 2112                  ??_DelayPORXLCD 0010                       frexp@eptr 0012  
                    _EECON1bits 000FA6                        _OpenXLCD 199C                __size_of_BusyADC 000C  
              __size_of_ReadADC 000E                        __Hrparam 0000                        __Lrparam 0000  
                  ??_exibir_lcd 00AA                __size_of___awdiv 0084                __size_of___ftadd 01FE  
              __size_of___awmod 0070                __size_of___ftdiv 00E6                __size_of___ftneg 0024  
                  _pisca_cursor 1F42                        ___altoft 1CEC                __size_of___ftmul 00F4  
              __size_of___fttol 00F4                __size_of___lwdiv 0052                __size_of___lwmod 0042  
                      ___awtoft 2184                        ___ftpack 18EE                    _tela_exibida 0070  
                      ___lwtoft 228A                      sprintf@val 002E                      ?_putrsXLCD 0011  
              __size_of_convert 00A2                __size_of_pic_isr 1800                 ___lwdiv@divisor 0011  
               ___lwdiv@counter 0015                        __ptext10 2242                        __ptext11 2318  
                      __ptext20 1BF6                        __ptext12 22AE                        __ptext21 21EE  
                      __ptext13 199C                        __ptext30 2016                        __ptext22 2096  
                      __ptext14 235A                        __ptext31 144A                        __ptext23 2112  
                      __ptext15 22F8                        __ptext40 22E2                        __ptext32 1C74  
                      __ptext24 20D4                        __ptext16 22CC                        __ptext41 2334  
                      __ptext33 1CEC                        __ptext25 1E9E                        __ptext17 2326  
                      __ptext50 1808                        __ptext42 2374                        __ptext34 2266  
                      __ptext26 2362                        __ptext18 0872                        __ptext51 0A84  
                      __ptext43 234E                        __ptext35 1DD6                        __ptext27 2308  
                      __ptext19 236A                        __ptext52 2184                        __ptext44 0E58  
                      __ptext36 1B72                        __ptext28 162C                        __ptext53 18EE  
                      __ptext45 1E46                        __ptext37 1A40                        __ptext29 0C82  
                      __ptext46 1262                        __ptext38 228A                        __ptext47 1AE2  
                      __ptext39 1EF0                        __ptext48 1D64                        __ptext49 1356  
          __end_of_WriteCmdXLCD 2112                   ?_EEPROM_Write 000F                __size_of_tx_data 0038  
                      _contador 006E                __size_of_sprintf 01D6                        _init_ADC 2326  
            __end_of_exibir_lcd 0A84                   __size_of_main 00F0                     ??_gambiarra 0031  
                 ??_Delay10TCYx 000F                        int$flags 0051                 _ativa_atuadores 1E46  
                 ??_Delay1KTCYx 000F                    ?_checa_botao 0001                        convert@i 0038  
       ??_convert_float_to_char 0042                     ??_io_eeprom 0016                      _INTCONbits 000FF2  
                   ??_init_XLCD 0015                  ??_EEPROM_Write 0012     __size_of_USART_TransmitChar 000C  
          __end_of_Delay10KTCYx 22E2                    _tempo_eeprom 0068                    _valor_tensao 0063  
                      intlevel2 0000                       sprintf@ap 002A                       sprintf@cp 002C  
                     sprintf@sp 001B                ___lwmod@dividend 0016                    ?_EEPROM_Read 000F  
             SetChanADC@channel 0010              EEPROM_Read@address 000F                     _serial_data 004B  
        __size_of_trata_comando 0144           __end_of_DelayFor18TCY 236A         __size_of_tratar_relogio 0152  
            _EEPROM_WriteString 21BC             __end_of_Delay10TCYx 2318             __CFG_FOSC$INTOSC_EC 000000  
                      sprintf@c 0030                        sprintf@f 001D            __end_of_DelayPORXLCD 2362  
                   ??_putrsXLCD 0013                 ___lwmod@divisor 0018             ?_EEPROM_WriteString 0012  
           __end_of_Delay1KTCYx 2308                 ___lwmod@counter 001A            ??_EEPROM_WriteString 0016  
       __end_of_ativa_atuadores 1E9E                      _USART_Init 1D64             EEPROM_Write@address 000F  
