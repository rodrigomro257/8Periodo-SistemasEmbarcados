

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Dec 04 09:58:14 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 1.41
    23                           ; Generated 25/01/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _PIR2bits	set	4001
    57  0000                     _EECON2	set	4007
    58  0000                     _INTCONbits	set	4082
    59  0000                     _EECON1bits	set	4006
    60  0000                     _EEDATA	set	4008
    61  0000                     _EEADR	set	4009
    62  0000                     _OSCCON	set	4051
    63  0000                     _TXREG	set	4013
    64  0000                     _RCREG	set	4014
    65  0000                     _RCSTA	set	4011
    66  0000                     _TXSTA	set	4012
    67  0000                     _SPBRG	set	4015
    68  0000                     _TXIF	set	31988
    69  0000                     _RCIF	set	31989
    70  0000                     _TRISC7	set	31911
    71  0000                     _TRISC6	set	31910
    72                           
    73                           	psect	smallconst
    74  000800                     __psmallconst:
    75                           	opt stack 0
    76  000800  00                 	db	0
    77  000801                     STR_1:
    78  000801  53                 	db	83	;'S'
    79  000802  54                 	db	84	;'T'
    80  000803  52                 	db	82	;'R'
    81  000804  49                 	db	73	;'I'
    82  000805  4E                 	db	78	;'N'
    83  000806  47                 	db	71	;'G'
    84  000807  5F                 	db	95	;'_'
    85  000808  54                 	db	84	;'T'
    86  000809  45                 	db	69	;'E'
    87  00080A  53                 	db	83	;'S'
    88  00080B  54                 	db	84	;'T'
    89  00080C  45                 	db	69	;'E'
    90  00080D  00                 	db	0
    91                           
    92                           ; #config settings
    93  00080E  00                 	db	0	; dummy byte at the end
    94  0000                     
    95                           	psect	cinit
    96  000D98                     __pcinit:
    97                           	opt stack 0
    98  000D98                     start_initialization:
    99                           	opt stack 0
   100  000D98                     __initialization:
   101                           	opt stack 0
   102  000D98                     end_of_initialization:
   103                           	opt stack 0
   104  000D98                     __end_of__initialization:
   105                           	opt stack 0
   106  000D98  0E00               	movlw	low (__Lsmallconst shr (0+16))
   107  000D9A  6EF8               	movwf	tblptru,c
   108  000D9C  0E08               	movlw	high __Lsmallconst
   109  000D9E  6EF7               	movwf	tblptrh,c
   110  000DA0  0100               	movlb	0
   111  000DA2  EF5B  F006         	goto	_main	;jump to C main() function
   112                           tblptru	equ	0xFF8
   113                           tblptrh	equ	0xFF7
   114                           
   115                           	psect	cstackCOMRAM
   116  000001                     __pcstackCOMRAM:
   117                           	opt stack 0
   118  000001                     ?___ftpack:
   119                           	opt stack 0
   120  000001                     ?___fttol:
   121                           	opt stack 0
   122  000001                     USART_TransmitChar@out:
   123                           	opt stack 0
   124  000001                     EEPROM_Write@address:
   125                           	opt stack 0
   126  000001                     EEPROM_Read@address:
   127                           	opt stack 0
   128  000001                     ___ftpack@arg:
   129                           	opt stack 0
   130  000001                     ___fttol@f1:
   131                           	opt stack 0
   132                           
   133                           ; 3 bytes @ 0x0
   134  000001                     	ds	2
   135  000003                     EEPROM_Write@data:
   136                           	opt stack 0
   137                           
   138                           ; 1 bytes @ 0x2
   139  000003                     	ds	1
   140  000004                     ___ftpack@exp:
   141                           	opt stack 0
   142  000004                     EEPROM_WriteString@address:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x3
   146  000004                     	ds	1
   147  000005                     ??___fttol:
   148  000005                     ___ftpack@sign:
   149                           	opt stack 0
   150                           
   151                           ; 1 bytes @ 0x4
   152  000005                     	ds	1
   153  000006                     ??___ftpack:
   154  000006                     EEPROM_WriteString@data:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x5
   158  000006                     	ds	2
   159  000008                     
   160                           ; 1 bytes @ 0x7
   161  000008                     	ds	1
   162  000009                     ?___awtoft:
   163                           	opt stack 0
   164  000009                     ___awtoft@c:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x8
   168  000009                     	ds	1
   169  00000A                     ___fttol@sign1:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x9
   173  00000A                     	ds	1
   174  00000B                     ___fttol@lval:
   175                           	opt stack 0
   176                           
   177                           ; 4 bytes @ 0xA
   178  00000B                     	ds	1
   179  00000C                     ___awtoft@sign:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0xB
   183  00000C                     	ds	1
   184  00000D                     ?___ftdiv:
   185                           	opt stack 0
   186  00000D                     ___ftdiv@f1:
   187                           	opt stack 0
   188                           
   189                           ; 3 bytes @ 0xC
   190  00000D                     	ds	2
   191  00000F                     ___fttol@exp1:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0xE
   195  00000F                     	ds	1
   196  000010                     ___ftdiv@f2:
   197                           	opt stack 0
   198                           
   199                           ; 3 bytes @ 0xF
   200  000010                     	ds	3
   201  000013                     ??___ftdiv:
   202                           
   203                           ; 1 bytes @ 0x12
   204  000013                     	ds	3
   205  000016                     ___ftdiv@cntr:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x15
   209  000016                     	ds	1
   210  000017                     ___ftdiv@f3:
   211                           	opt stack 0
   212                           
   213                           ; 3 bytes @ 0x16
   214  000017                     	ds	3
   215  00001A                     ___ftdiv@exp:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x19
   219  00001A                     	ds	1
   220  00001B                     ___ftdiv@sign:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x1A
   224  00001B                     	ds	1
   225  00001C                     ?___ftadd:
   226                           	opt stack 0
   227  00001C                     ___ftadd@f1:
   228                           	opt stack 0
   229                           
   230                           ; 3 bytes @ 0x1B
   231  00001C                     	ds	3
   232  00001F                     ___ftadd@f2:
   233                           	opt stack 0
   234                           
   235                           ; 3 bytes @ 0x1E
   236  00001F                     	ds	3
   237  000022                     ??___ftadd:
   238                           
   239                           ; 1 bytes @ 0x21
   240  000022                     	ds	3
   241  000025                     ___ftadd@sign:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x24
   245  000025                     	ds	1
   246  000026                     ___ftadd@exp2:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x25
   250  000026                     	ds	1
   251  000027                     ___ftadd@exp1:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x26
   255  000027                     	ds	1
   256  000028                     USART_Init@baud_rate:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x27
   260  000028                     	ds	2
   261  00002A                     USART_Init@temp:
   262                           	opt stack 0
   263                           
   264                           ; 3 bytes @ 0x29
   265  00002A                     	ds	3
   266  00002D                     main@i:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x2C
   270  00002D                     	ds	2
   271  00002F                     main@Data_read:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x2E
   275  00002F                     	ds	1
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 11 in file "IO_EEPROM.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  i               2   44[COMRAM] int 
   289 ;;  Data_read       1   46[COMRAM] unsigned char 
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   299 ;;      Params:         0       0       0       0       0       0       0       0       0
   300 ;;      Locals:         3       0       0       0       0       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0       0       0       0       0
   302 ;;      Totals:         3       0       0       0       0       0       0       0       0
   303 ;;Total ram usage:        3 bytes
   304 ;; Hardware stack levels required when called:    3
   305 ;; This function calls:
   306 ;;		_EEPROM_Read
   307 ;;		_EEPROM_WriteString
   308 ;;		_USART_Init
   309 ;;		_USART_TransmitChar
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text0
   316  000CB6                     __ptext0:
   317                           	opt stack 0
   318  000CB6                     _main:
   319                           	opt stack 28
   320                           
   321                           ;IO_EEPROM.c: 12: int i;
   322                           ;IO_EEPROM.c: 13: i=0;
   323                           
   324                           ;incstack = 0
   325  000CB6  0E00               	movlw	0
   326  000CB8  6E2E               	movwf	main@i+1,c
   327  000CBA  0E00               	movlw	0
   328  000CBC  6E2D               	movwf	main@i,c
   329                           
   330                           ;IO_EEPROM.c: 14: char Data_read;
   331                           ;IO_EEPROM.c: 15: OSCCON=0x72;
   332  000CBE  0E72               	movlw	114
   333  000CC0  6ED3               	movwf	4051,c	;volatile
   334                           
   335                           ;IO_EEPROM.c: 16: USART_Init(9600);
   336  000CC2  0E25               	movlw	37
   337  000CC4  6E29               	movwf	USART_Init@baud_rate+1,c
   338  000CC6  0E80               	movlw	128
   339  000CC8  6E28               	movwf	USART_Init@baud_rate,c
   340  000CCA  EC22  F006         	call	_USART_Init	;wreg free
   341                           
   342                           ;IO_EEPROM.c: 18: EEPROM_WriteString(0,"STRING_TESTE");
   343  000CCE  0E00               	movlw	0
   344  000CD0  6E05               	movwf	EEPROM_WriteString@address+1,c
   345  000CD2  0E00               	movlw	0
   346  000CD4  6E04               	movwf	EEPROM_WriteString@address,c
   347  000CD6  0E01               	movlw	low STR_1
   348  000CD8  6E06               	movwf	EEPROM_WriteString@data,c
   349  000CDA  0E08               	movlw	high STR_1
   350  000CDC  6E07               	movwf	EEPROM_WriteString@data+1,c
   351  000CDE  EC9E  F006         	call	_EEPROM_WriteString	;wreg free
   352                           
   353                           ;IO_EEPROM.c: 21: while(Data_read!=0xff){
   354  000CE2  D00C               	goto	l1250
   355  000CE4                     l1246:
   356                           
   357                           ;IO_EEPROM.c: 22: Data_read=EEPROM_Read(i);
   358  000CE4  C02D  F001         	movff	main@i,EEPROM_Read@address
   359  000CE8  C02E  F002         	movff	main@i+1,EEPROM_Read@address+1
   360  000CEC  ECD3  F006         	call	_EEPROM_Read	;wreg free
   361  000CF0  6E2F               	movwf	main@Data_read,c
   362                           
   363                           ;IO_EEPROM.c: 23: USART_TransmitChar(Data_read);
   364  000CF2  502F               	movf	main@Data_read,w,c
   365  000CF4  ECDA  F006         	call	_USART_TransmitChar
   366                           
   367                           ;IO_EEPROM.c: 24: i++;
   368  000CF8  4A2D               	infsnz	main@i,f,c
   369  000CFA  2A2E               	incf	main@i+1,f,c
   370  000CFC                     l1250:
   371  000CFC  282F               	incf	main@Data_read,w,c
   372  000CFE  A4D8               	btfss	status,2,c
   373  000D00  D7F1               	goto	l1246
   374  000D02                     l78:
   375  000D02  D7FF               	goto	l78
   376  000D04                     __end_of_main:
   377                           	opt stack 0
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           status	equ	0xFD8
   381                           
   382 ;; *************** function _USART_TransmitChar *****************
   383 ;; Defined at:
   384 ;;		line 19 in file "USART_communication.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  out             1    wreg     unsigned char 
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  out             1    0[COMRAM] unsigned char 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   398 ;;      Params:         0       0       0       0       0       0       0       0       0
   399 ;;      Locals:         1       0       0       0       0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0       0       0
   401 ;;      Totals:         1       0       0       0       0       0       0       0       0
   402 ;;Total ram usage:        1 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;;		_USART_SendString
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text1
   413  000DB4                     __ptext1:
   414                           	opt stack 0
   415  000DB4                     _USART_TransmitChar:
   416                           	opt stack 30
   417                           
   418                           ;incstack = 0
   419                           ;USART_TransmitChar@out stored from wreg
   420  000DB4  6E01               	movwf	USART_TransmitChar@out,c
   421  000DB6                     l30:
   422  000DB6  A89E               	btfss	3998,4,c	;volatile
   423  000DB8  D7FE               	goto	l30
   424                           
   425                           ;USART_communication.c: 21: TXREG=out;
   426  000DBA  C001  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
   427  000DBE  0012               	return		;funcret
   428  000DC0                     __end_of_USART_TransmitChar:
   429                           	opt stack 0
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           status	equ	0xFD8
   433                           
   434 ;; *************** function _USART_Init *****************
   435 ;; Defined at:
   436 ;;		line 3 in file "USART_communication.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  baud_rate       2   39[COMRAM] int 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  temp            3   41[COMRAM] float 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   450 ;;      Params:         2       0       0       0       0       0       0       0       0
   451 ;;      Locals:         3       0       0       0       0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0       0       0
   453 ;;      Totals:         5       0       0       0       0       0       0       0       0
   454 ;;Total ram usage:        5 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; Hardware stack levels required when called:    2
   457 ;; This function calls:
   458 ;;		___awtoft
   459 ;;		___ftadd
   460 ;;		___ftdiv
   461 ;;		___fttol
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text2
   468  000C44                     __ptext2:
   469                           	opt stack 0
   470  000C44                     _USART_Init:
   471                           	opt stack 28
   472                           
   473                           ;USART_communication.c: 4: float temp;
   474                           ;USART_communication.c: 5: TRISC6=0;
   475                           
   476                           ;incstack = 0
   477  000C44  9C94               	bcf	3988,6,c	;volatile
   478                           
   479                           ;USART_communication.c: 6: TRISC7=1;
   480  000C46  8E94               	bsf	3988,7,c	;volatile
   481                           
   482                           ;USART_communication.c: 7: temp=(((float)(8000000/64)/(float)baud_rate)-1);
   483  000C48  C028  F009         	movff	USART_Init@baud_rate,___awtoft@c
   484  000C4C  C029  F00A         	movff	USART_Init@baud_rate+1,___awtoft@c+1
   485  000C50  EC82  F006         	call	___awtoft	;wreg free
   486  000C54  C009  F010         	movff	?___awtoft,___ftdiv@f2
   487  000C58  C00A  F011         	movff	?___awtoft+1,___ftdiv@f2+1
   488  000C5C  C00B  F012         	movff	?___awtoft+2,___ftdiv@f2+2
   489  000C60  0E24               	movlw	36
   490  000C62  6E0D               	movwf	___ftdiv@f1,c
   491  000C64  0EF4               	movlw	244
   492  000C66  6E0E               	movwf	___ftdiv@f1+1,c
   493  000C68  0E47               	movlw	71
   494  000C6A  6E0F               	movwf	___ftdiv@f1+2,c
   495  000C6C  EC58  F005         	call	___ftdiv	;wreg free
   496  000C70  C00D  F01C         	movff	?___ftdiv,___ftadd@f1
   497  000C74  C00E  F01D         	movff	?___ftdiv+1,___ftadd@f1+1
   498  000C78  C00F  F01E         	movff	?___ftdiv+2,___ftadd@f1+2
   499  000C7C  0E00               	movlw	0
   500  000C7E  6E1F               	movwf	___ftadd@f2,c
   501  000C80  0E80               	movlw	128
   502  000C82  6E20               	movwf	___ftadd@f2+1,c
   503  000C84  0EBF               	movlw	191
   504  000C86  6E21               	movwf	___ftadd@f2+2,c
   505  000C88  EC08  F004         	call	___ftadd	;wreg free
   506  000C8C  C01C  F02A         	movff	?___ftadd,USART_Init@temp
   507  000C90  C01D  F02B         	movff	?___ftadd+1,USART_Init@temp+1
   508  000C94  C01E  F02C         	movff	?___ftadd+2,USART_Init@temp+2
   509                           
   510                           ;USART_communication.c: 8: SPBRG=(int)temp;
   511  000C98  C02A  F001         	movff	USART_Init@temp,___fttol@f1
   512  000C9C  C02B  F002         	movff	USART_Init@temp+1,___fttol@f1+1
   513  000CA0  C02C  F003         	movff	USART_Init@temp+2,___fttol@f1+2
   514  000CA4  ECDE  F004         	call	___fttol	;wreg free
   515  000CA8  5001               	movf	?___fttol,w,c
   516  000CAA  6EAF               	movwf	4015,c	;volatile
   517                           
   518                           ;USART_communication.c: 9: TXSTA=0x20;
   519  000CAC  0E20               	movlw	32
   520  000CAE  6EAC               	movwf	4012,c	;volatile
   521                           
   522                           ;USART_communication.c: 10: RCSTA=0x90;
   523  000CB0  0E90               	movlw	144
   524  000CB2  6EAB               	movwf	4011,c	;volatile
   525  000CB4  0012               	return		;funcret
   526  000CB6                     __end_of_USART_Init:
   527                           	opt stack 0
   528                           tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           status	equ	0xFD8
   531                           
   532 ;; *************** function ___fttol *****************
   533 ;; Defined at:
   534 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  f1              3    0[COMRAM] float 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  lval            4   10[COMRAM] unsigned long 
   539 ;;  exp1            1   14[COMRAM] unsigned char 
   540 ;;  sign1           1    9[COMRAM] unsigned char 
   541 ;; Return value:  Size  Location     Type
   542 ;;                  4    0[COMRAM] long 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   550 ;;      Params:         4       0       0       0       0       0       0       0       0
   551 ;;      Locals:         6       0       0       0       0       0       0       0       0
   552 ;;      Temps:          5       0       0       0       0       0       0       0       0
   553 ;;      Totals:        15       0       0       0       0       0       0       0       0
   554 ;;Total ram usage:       15 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_USART_Init
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text3
   564  0009BC                     __ptext3:
   565                           	opt stack 0
   566  0009BC                     ___fttol:
   567                           	opt stack 29
   568                           
   569                           ;incstack = 0
   570  0009BC  C003  F005         	movff	___fttol@f1+2,??___fttol
   571  0009C0  6A06               	clrf	(??___fttol+1)& (0+255),c
   572  0009C2  6A07               	clrf	(??___fttol+2)& (0+255),c
   573  0009C4  3402               	rlcf	___fttol@f1+1,w,c
   574  0009C6  3605               	rlcf	??___fttol& (0+255),f,c
   575  0009C8  E301               	bnc	u901
   576  0009CA  8006               	bsf	(??___fttol+1)& (0+255),0,c
   577  0009CC                     u901:
   578  0009CC  5005               	movf	??___fttol,w,c
   579  0009CE  6E0F               	movwf	___fttol@exp1,c
   580  0009D0  500F               	movf	___fttol@exp1,w,c
   581  0009D2  A4D8               	btfss	status,2,c
   582  0009D4  D009               	goto	l1176
   583  0009D6  0E00               	movlw	0
   584  0009D8  6E01               	movwf	?___fttol,c
   585  0009DA  0E00               	movlw	0
   586  0009DC  6E02               	movwf	?___fttol+1,c
   587  0009DE  0E00               	movlw	0
   588  0009E0  6E03               	movwf	?___fttol+2,c
   589  0009E2  0E00               	movlw	0
   590  0009E4  6E04               	movwf	?___fttol+3,c
   591  0009E6  0012               	return	
   592  0009E8                     l1176:
   593  0009E8  0E17               	movlw	23
   594  0009EA  6E05               	movwf	??___fttol& (0+255),c
   595  0009EC  C001  F006         	movff	___fttol@f1,??___fttol+1
   596  0009F0  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   597  0009F4  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   598  0009F8  2805               	incf	??___fttol,w,c
   599  0009FA  6E09               	movwf	(??___fttol+4)& (0+255),c
   600  0009FC  D004               	goto	u920
   601  0009FE                     u925:
   602  0009FE  90D8               	bcf	status,0,c
   603  000A00  3208               	rrcf	??___fttol+3,f,c
   604  000A02  3207               	rrcf	??___fttol+2,f,c
   605  000A04  3206               	rrcf	??___fttol+1,f,c
   606  000A06                     u920:
   607  000A06  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   608  000A08  D7FA               	goto	u925
   609  000A0A  5006               	movf	??___fttol+1,w,c
   610  000A0C  6E0A               	movwf	___fttol@sign1,c
   611  000A0E  8E02               	bsf	___fttol@f1+1,7,c
   612  000A10  0EFF               	movlw	255
   613  000A12  1601               	andwf	___fttol@f1,f,c
   614  000A14  0EFF               	movlw	255
   615  000A16  1602               	andwf	___fttol@f1+1,f,c
   616  000A18  0E00               	movlw	0
   617  000A1A  1603               	andwf	___fttol@f1+2,f,c
   618  000A1C  5001               	movf	___fttol@f1,w,c
   619  000A1E  6E0B               	movwf	___fttol@lval,c
   620  000A20  5002               	movf	___fttol@f1+1,w,c
   621  000A22  6E0C               	movwf	___fttol@lval+1,c
   622  000A24  5003               	movf	___fttol@f1+2,w,c
   623  000A26  6E0D               	movwf	___fttol@lval+2,c
   624  000A28  6A0E               	clrf	___fttol@lval+3,c
   625  000A2A  0E8E               	movlw	142
   626  000A2C  5E0F               	subwf	___fttol@exp1,f,c
   627  000A2E  AE0F               	btfss	___fttol@exp1,7,c
   628  000A30  D016               	goto	l1198
   629  000A32  500F               	movf	___fttol@exp1,w,c
   630  000A34  0A80               	xorlw	128
   631  000A36  0F8F               	addlw	143
   632  000A38  B0D8               	btfsc	status,0,c
   633  000A3A  D009               	goto	l1194
   634  000A3C  0E00               	movlw	0
   635  000A3E  6E01               	movwf	?___fttol,c
   636  000A40  0E00               	movlw	0
   637  000A42  6E02               	movwf	?___fttol+1,c
   638  000A44  0E00               	movlw	0
   639  000A46  6E03               	movwf	?___fttol+2,c
   640  000A48  0E00               	movlw	0
   641  000A4A  6E04               	movwf	?___fttol+3,c
   642  000A4C  0012               	return	
   643  000A4E                     l1194:
   644  000A4E  90D8               	bcf	status,0,c
   645  000A50  320E               	rrcf	___fttol@lval+3,f,c
   646  000A52  320D               	rrcf	___fttol@lval+2,f,c
   647  000A54  320C               	rrcf	___fttol@lval+1,f,c
   648  000A56  320B               	rrcf	___fttol@lval,f,c
   649  000A58  3E0F               	incfsz	___fttol@exp1,f,c
   650  000A5A  D7F9               	goto	l1194
   651  000A5C  D015               	goto	l1208
   652  000A5E                     l1198:
   653  000A5E  0E17               	movlw	23
   654  000A60  640F               	cpfsgt	___fttol@exp1,c
   655  000A62  D00F               	goto	l1206
   656  000A64  0E00               	movlw	0
   657  000A66  6E01               	movwf	?___fttol,c
   658  000A68  0E00               	movlw	0
   659  000A6A  6E02               	movwf	?___fttol+1,c
   660  000A6C  0E00               	movlw	0
   661  000A6E  6E03               	movwf	?___fttol+2,c
   662  000A70  0E00               	movlw	0
   663  000A72  6E04               	movwf	?___fttol+3,c
   664  000A74  0012               	return	
   665  000A76                     l1204:
   666  000A76  90D8               	bcf	status,0,c
   667  000A78  360B               	rlcf	___fttol@lval,f,c
   668  000A7A  360C               	rlcf	___fttol@lval+1,f,c
   669  000A7C  360D               	rlcf	___fttol@lval+2,f,c
   670  000A7E  360E               	rlcf	___fttol@lval+3,f,c
   671  000A80  060F               	decf	___fttol@exp1,f,c
   672  000A82                     l1206:
   673  000A82  500F               	movf	___fttol@exp1,w,c
   674  000A84  A4D8               	btfss	status,2,c
   675  000A86  D7F7               	goto	l1204
   676  000A88                     l1208:
   677  000A88  500A               	movf	___fttol@sign1,w,c
   678  000A8A  B4D8               	btfsc	status,2,c
   679  000A8C  D008               	goto	l1212
   680  000A8E  1E0E               	comf	___fttol@lval+3,f,c
   681  000A90  1E0D               	comf	___fttol@lval+2,f,c
   682  000A92  1E0C               	comf	___fttol@lval+1,f,c
   683  000A94  6C0B               	negf	___fttol@lval,c
   684  000A96  0E00               	movlw	0
   685  000A98  220C               	addwfc	___fttol@lval+1,f,c
   686  000A9A  220D               	addwfc	___fttol@lval+2,f,c
   687  000A9C  220E               	addwfc	___fttol@lval+3,f,c
   688  000A9E                     l1212:
   689  000A9E  C00B  F001         	movff	___fttol@lval,?___fttol
   690  000AA2  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   691  000AA6  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   692  000AAA  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   693  000AAE  0012               	return	
   694  000AB0                     __end_of___fttol:
   695                           	opt stack 0
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           status	equ	0xFD8
   699                           
   700 ;; *************** function ___ftdiv *****************
   701 ;; Defined at:
   702 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  f1              3   12[COMRAM] float 
   705 ;;  f2              3   15[COMRAM] float 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  f3              3   22[COMRAM] float 
   708 ;;  sign            1   26[COMRAM] unsigned char 
   709 ;;  exp             1   25[COMRAM] unsigned char 
   710 ;;  cntr            1   21[COMRAM] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  3   12[COMRAM] float 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   720 ;;      Params:         6       0       0       0       0       0       0       0       0
   721 ;;      Locals:         6       0       0       0       0       0       0       0       0
   722 ;;      Temps:          3       0       0       0       0       0       0       0       0
   723 ;;      Totals:        15       0       0       0       0       0       0       0       0
   724 ;;Total ram usage:       15 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    1
   727 ;; This function calls:
   728 ;;		___ftpack
   729 ;; This function is called by:
   730 ;;		_USART_Init
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text4
   735  000AB0                     __ptext4:
   736                           	opt stack 0
   737  000AB0                     ___ftdiv:
   738                           	opt stack 28
   739                           
   740                           ;incstack = 0
   741  000AB0  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
   742  000AB4  6A14               	clrf	(??___ftdiv+1)& (0+255),c
   743  000AB6  6A15               	clrf	(??___ftdiv+2)& (0+255),c
   744  000AB8  340E               	rlcf	___ftdiv@f1+1,w,c
   745  000ABA  3613               	rlcf	??___ftdiv& (0+255),f,c
   746  000ABC  E301               	bnc	u841
   747  000ABE  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
   748  000AC0                     u841:
   749  000AC0  5013               	movf	??___ftdiv,w,c
   750  000AC2  6E1A               	movwf	___ftdiv@exp,c
   751  000AC4  501A               	movf	___ftdiv@exp,w,c
   752  000AC6  A4D8               	btfss	status,2,c
   753  000AC8  D007               	goto	l1118
   754  000ACA  0E00               	movlw	0
   755  000ACC  6E0D               	movwf	?___ftdiv,c
   756  000ACE  0E00               	movlw	0
   757  000AD0  6E0E               	movwf	?___ftdiv+1,c
   758  000AD2  0E00               	movlw	0
   759  000AD4  6E0F               	movwf	?___ftdiv+2,c
   760  000AD6  0012               	return	
   761  000AD8                     l1118:
   762  000AD8  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
   763  000ADC  6A14               	clrf	(??___ftdiv+1)& (0+255),c
   764  000ADE  6A15               	clrf	(??___ftdiv+2)& (0+255),c
   765  000AE0  3411               	rlcf	___ftdiv@f2+1,w,c
   766  000AE2  3613               	rlcf	??___ftdiv& (0+255),f,c
   767  000AE4  E301               	bnc	u861
   768  000AE6  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
   769  000AE8                     u861:
   770  000AE8  5013               	movf	??___ftdiv,w,c
   771  000AEA  6E1B               	movwf	___ftdiv@sign,c
   772  000AEC  501B               	movf	___ftdiv@sign,w,c
   773  000AEE  A4D8               	btfss	status,2,c
   774  000AF0  D007               	goto	l1124
   775  000AF2  0E00               	movlw	0
   776  000AF4  6E0D               	movwf	?___ftdiv,c
   777  000AF6  0E00               	movlw	0
   778  000AF8  6E0E               	movwf	?___ftdiv+1,c
   779  000AFA  0E00               	movlw	0
   780  000AFC  6E0F               	movwf	?___ftdiv+2,c
   781  000AFE  0012               	return	
   782  000B00                     l1124:
   783  000B00  0E00               	movlw	0
   784  000B02  6E17               	movwf	___ftdiv@f3,c
   785  000B04  0E00               	movlw	0
   786  000B06  6E18               	movwf	___ftdiv@f3+1,c
   787  000B08  0E00               	movlw	0
   788  000B0A  6E19               	movwf	___ftdiv@f3+2,c
   789  000B0C  501B               	movf	___ftdiv@sign,w,c
   790  000B0E  0F89               	addlw	137
   791  000B10  5E1A               	subwf	___ftdiv@exp,f,c
   792  000B12  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
   793  000B16  5012               	movf	___ftdiv@f2+2,w,c
   794  000B18  1A1B               	xorwf	___ftdiv@sign,f,c
   795  000B1A  0E80               	movlw	128
   796  000B1C  161B               	andwf	___ftdiv@sign,f,c
   797  000B1E  8E0E               	bsf	___ftdiv@f1+1,7,c
   798  000B20  0EFF               	movlw	255
   799  000B22  160D               	andwf	___ftdiv@f1,f,c
   800  000B24  0EFF               	movlw	255
   801  000B26  160E               	andwf	___ftdiv@f1+1,f,c
   802  000B28  0E00               	movlw	0
   803  000B2A  160F               	andwf	___ftdiv@f1+2,f,c
   804  000B2C  8E11               	bsf	___ftdiv@f2+1,7,c
   805  000B2E  0EFF               	movlw	255
   806  000B30  1610               	andwf	___ftdiv@f2,f,c
   807  000B32  0EFF               	movlw	255
   808  000B34  1611               	andwf	___ftdiv@f2+1,f,c
   809  000B36  0E00               	movlw	0
   810  000B38  1612               	andwf	___ftdiv@f2+2,f,c
   811  000B3A  0E18               	movlw	24
   812  000B3C  6E16               	movwf	___ftdiv@cntr,c
   813  000B3E                     l1144:
   814  000B3E  90D8               	bcf	status,0,c
   815  000B40  3617               	rlcf	___ftdiv@f3,f,c
   816  000B42  3618               	rlcf	___ftdiv@f3+1,f,c
   817  000B44  3619               	rlcf	___ftdiv@f3+2,f,c
   818  000B46  5010               	movf	___ftdiv@f2,w,c
   819  000B48  5C0D               	subwf	___ftdiv@f1,w,c
   820  000B4A  5011               	movf	___ftdiv@f2+1,w,c
   821  000B4C  580E               	subwfb	___ftdiv@f1+1,w,c
   822  000B4E  5012               	movf	___ftdiv@f2+2,w,c
   823  000B50  580F               	subwfb	___ftdiv@f1+2,w,c
   824  000B52  A0D8               	btfss	status,0,c
   825  000B54  D007               	goto	l379
   826  000B56  5010               	movf	___ftdiv@f2,w,c
   827  000B58  5E0D               	subwf	___ftdiv@f1,f,c
   828  000B5A  5011               	movf	___ftdiv@f2+1,w,c
   829  000B5C  5A0E               	subwfb	___ftdiv@f1+1,f,c
   830  000B5E  5012               	movf	___ftdiv@f2+2,w,c
   831  000B60  5A0F               	subwfb	___ftdiv@f1+2,f,c
   832  000B62  8017               	bsf	___ftdiv@f3,0,c
   833  000B64                     l379:
   834  000B64  90D8               	bcf	status,0,c
   835  000B66  360D               	rlcf	___ftdiv@f1,f,c
   836  000B68  360E               	rlcf	___ftdiv@f1+1,f,c
   837  000B6A  360F               	rlcf	___ftdiv@f1+2,f,c
   838  000B6C  2E16               	decfsz	___ftdiv@cntr,f,c
   839  000B6E  D7E7               	goto	l1144
   840  000B70  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
   841  000B74  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
   842  000B78  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
   843  000B7C  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
   844  000B80  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
   845  000B84  ECCB  F005         	call	___ftpack	;wreg free
   846  000B88  C001  F00D         	movff	?___ftpack,?___ftdiv
   847  000B8C  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
   848  000B90  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
   849  000B94  0012               	return	
   850  000B96                     __end_of___ftdiv:
   851                           	opt stack 0
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           status	equ	0xFD8
   855                           
   856 ;; *************** function ___ftadd *****************
   857 ;; Defined at:
   858 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  f1              3   27[COMRAM] float 
   861 ;;  f2              3   30[COMRAM] float 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  exp1            1   38[COMRAM] unsigned char 
   864 ;;  exp2            1   37[COMRAM] unsigned char 
   865 ;;  sign            1   36[COMRAM] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  3   27[COMRAM] float 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   875 ;;      Params:         6       0       0       0       0       0       0       0       0
   876 ;;      Locals:         3       0       0       0       0       0       0       0       0
   877 ;;      Temps:          3       0       0       0       0       0       0       0       0
   878 ;;      Totals:        12       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:       12 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    1
   882 ;; This function calls:
   883 ;;		___ftpack
   884 ;; This function is called by:
   885 ;;		_USART_Init
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text5
   890  000810                     __ptext5:
   891                           	opt stack 0
   892  000810                     ___ftadd:
   893                           	opt stack 28
   894                           
   895                           ;incstack = 0
   896  000810  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
   897  000814  6A23               	clrf	(??___ftadd+1)& (0+255),c
   898  000816  6A24               	clrf	(??___ftadd+2)& (0+255),c
   899  000818  341D               	rlcf	___ftadd@f1+1,w,c
   900  00081A  3622               	rlcf	??___ftadd& (0+255),f,c
   901  00081C  E301               	bnc	u631
   902  00081E  8023               	bsf	(??___ftadd+1)& (0+255),0,c
   903  000820                     u631:
   904  000820  5022               	movf	??___ftadd,w,c
   905  000822  6E27               	movwf	___ftadd@exp1,c
   906  000824  C021  F022         	movff	___ftadd@f2+2,??___ftadd
   907  000828  6A23               	clrf	(??___ftadd+1)& (0+255),c
   908  00082A  6A24               	clrf	(??___ftadd+2)& (0+255),c
   909  00082C  3420               	rlcf	___ftadd@f2+1,w,c
   910  00082E  3622               	rlcf	??___ftadd& (0+255),f,c
   911  000830  E301               	bnc	u641
   912  000832  8023               	bsf	(??___ftadd+1)& (0+255),0,c
   913  000834                     u641:
   914  000834  5022               	movf	??___ftadd,w,c
   915  000836  6E26               	movwf	___ftadd@exp2,c
   916  000838  5027               	movf	___ftadd@exp1,w,c
   917  00083A  B4D8               	btfsc	status,2,c
   918  00083C  D00B               	goto	l344
   919  00083E  5026               	movf	___ftadd@exp2,w,c
   920  000840  5C27               	subwf	___ftadd@exp1,w,c
   921  000842  B0D8               	btfsc	status,0,c
   922  000844  D00E               	goto	l1050
   923  000846  5027               	movf	___ftadd@exp1,w,c
   924  000848  0800               	sublw	0
   925  00084A  2426               	addwf	___ftadd@exp2,w,c
   926  00084C  6E22               	movwf	??___ftadd& (0+255),c
   927  00084E  0E18               	movlw	24
   928  000850  6422               	cpfsgt	??___ftadd,c
   929  000852  D007               	goto	l1050
   930  000854                     l344:
   931  000854  C01F  F01C         	movff	___ftadd@f2,?___ftadd
   932  000858  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
   933  00085C  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
   934  000860  0012               	return	
   935  000862                     l1050:
   936  000862  5026               	movf	___ftadd@exp2,w,c
   937  000864  B4D8               	btfsc	status,2,c
   938  000866  D00B               	goto	l348
   939  000868  5027               	movf	___ftadd@exp1,w,c
   940  00086A  5C26               	subwf	___ftadd@exp2,w,c
   941  00086C  B0D8               	btfsc	status,0,c
   942  00086E  D00E               	goto	l1056
   943  000870  5026               	movf	___ftadd@exp2,w,c
   944  000872  0800               	sublw	0
   945  000874  2427               	addwf	___ftadd@exp1,w,c
   946  000876  6E22               	movwf	??___ftadd& (0+255),c
   947  000878  0E18               	movlw	24
   948  00087A  6422               	cpfsgt	??___ftadd,c
   949  00087C  D007               	goto	l1056
   950  00087E                     l348:
   951  00087E  C01C  F01C         	movff	___ftadd@f1,?___ftadd
   952  000882  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
   953  000886  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
   954  00088A  0012               	return	
   955  00088C                     l1056:
   956  00088C  0E06               	movlw	6
   957  00088E  6E25               	movwf	___ftadd@sign,c
   958  000890  BE1E               	btfsc	___ftadd@f1+2,7,c
   959  000892  8E25               	bsf	___ftadd@sign,7,c
   960  000894  BE21               	btfsc	___ftadd@f2+2,7,c
   961  000896  8C25               	bsf	___ftadd@sign,6,c
   962  000898  8E1D               	bsf	___ftadd@f1+1,7,c
   963  00089A  0EFF               	movlw	255
   964  00089C  161C               	andwf	___ftadd@f1,f,c
   965  00089E  0EFF               	movlw	255
   966  0008A0  161D               	andwf	___ftadd@f1+1,f,c
   967  0008A2  0E00               	movlw	0
   968  0008A4  161E               	andwf	___ftadd@f1+2,f,c
   969  0008A6  8E20               	bsf	___ftadd@f2+1,7,c
   970  0008A8  0EFF               	movlw	255
   971  0008AA  161F               	andwf	___ftadd@f2,f,c
   972  0008AC  0EFF               	movlw	255
   973  0008AE  1620               	andwf	___ftadd@f2+1,f,c
   974  0008B0  0E00               	movlw	0
   975  0008B2  1621               	andwf	___ftadd@f2+2,f,c
   976  0008B4  5026               	movf	___ftadd@exp2,w,c
   977  0008B6  5C27               	subwf	___ftadd@exp1,w,c
   978  0008B8  B0D8               	btfsc	status,0,c
   979  0008BA  D01B               	goto	l1082
   980  0008BC                     l1072:
   981  0008BC  90D8               	bcf	status,0,c
   982  0008BE  361F               	rlcf	___ftadd@f2,f,c
   983  0008C0  3620               	rlcf	___ftadd@f2+1,f,c
   984  0008C2  3621               	rlcf	___ftadd@f2+2,f,c
   985  0008C4  0626               	decf	___ftadd@exp2,f,c
   986  0008C6  5027               	movf	___ftadd@exp1,w,c
   987  0008C8  1826               	xorwf	___ftadd@exp2,w,c
   988  0008CA  B4D8               	btfsc	status,2,c
   989  0008CC  D00D               	goto	l1080
   990  0008CE  0625               	decf	___ftadd@sign,f,c
   991  0008D0  C025  F022         	movff	___ftadd@sign,??___ftadd
   992  0008D4  0E07               	movlw	7
   993  0008D6  1622               	andwf	??___ftadd,f,c
   994  0008D8  B4D8               	btfsc	status,2,c
   995  0008DA  D006               	goto	l1080
   996  0008DC  D7EF               	goto	l1072
   997  0008DE                     l1078:
   998  0008DE  90D8               	bcf	status,0,c
   999  0008E0  321E               	rrcf	___ftadd@f1+2,f,c
  1000  0008E2  321D               	rrcf	___ftadd@f1+1,f,c
  1001  0008E4  321C               	rrcf	___ftadd@f1,f,c
  1002  0008E6  2A27               	incf	___ftadd@exp1,f,c
  1003  0008E8                     l1080:
  1004  0008E8  5026               	movf	___ftadd@exp2,w,c
  1005  0008EA  1827               	xorwf	___ftadd@exp1,w,c
  1006  0008EC  B4D8               	btfsc	status,2,c
  1007  0008EE  D01F               	goto	l359
  1008  0008F0  D7F6               	goto	l1078
  1009  0008F2                     l1082:
  1010  0008F2  5027               	movf	___ftadd@exp1,w,c
  1011  0008F4  5C26               	subwf	___ftadd@exp2,w,c
  1012  0008F6  B0D8               	btfsc	status,0,c
  1013  0008F8  D01A               	goto	l359
  1014  0008FA                     l1084:
  1015  0008FA  90D8               	bcf	status,0,c
  1016  0008FC  361C               	rlcf	___ftadd@f1,f,c
  1017  0008FE  361D               	rlcf	___ftadd@f1+1,f,c
  1018  000900  361E               	rlcf	___ftadd@f1+2,f,c
  1019  000902  0627               	decf	___ftadd@exp1,f,c
  1020  000904  5027               	movf	___ftadd@exp1,w,c
  1021  000906  1826               	xorwf	___ftadd@exp2,w,c
  1022  000908  B4D8               	btfsc	status,2,c
  1023  00090A  D00D               	goto	l1092
  1024  00090C  0625               	decf	___ftadd@sign,f,c
  1025  00090E  C025  F022         	movff	___ftadd@sign,??___ftadd
  1026  000912  0E07               	movlw	7
  1027  000914  1622               	andwf	??___ftadd,f,c
  1028  000916  B4D8               	btfsc	status,2,c
  1029  000918  D006               	goto	l1092
  1030  00091A  D7EF               	goto	l1084
  1031  00091C                     l1090:
  1032  00091C  90D8               	bcf	status,0,c
  1033  00091E  3221               	rrcf	___ftadd@f2+2,f,c
  1034  000920  3220               	rrcf	___ftadd@f2+1,f,c
  1035  000922  321F               	rrcf	___ftadd@f2,f,c
  1036  000924  2A26               	incf	___ftadd@exp2,f,c
  1037  000926                     l1092:
  1038  000926  5026               	movf	___ftadd@exp2,w,c
  1039  000928  1827               	xorwf	___ftadd@exp1,w,c
  1040  00092A  A4D8               	btfss	status,2,c
  1041  00092C  D7F7               	goto	l1090
  1042  00092E                     l359:
  1043  00092E  AE25               	btfss	___ftadd@sign,7,c
  1044  000930  D00C               	goto	l368
  1045  000932  0EFF               	movlw	255
  1046  000934  1A1C               	xorwf	___ftadd@f1,f,c
  1047  000936  0EFF               	movlw	255
  1048  000938  1A1D               	xorwf	___ftadd@f1+1,f,c
  1049  00093A  0EFF               	movlw	255
  1050  00093C  1A1E               	xorwf	___ftadd@f1+2,f,c
  1051  00093E  0E01               	movlw	1
  1052  000940  261C               	addwf	___ftadd@f1,f,c
  1053  000942  0E00               	movlw	0
  1054  000944  221D               	addwfc	___ftadd@f1+1,f,c
  1055  000946  0E00               	movlw	0
  1056  000948  221E               	addwfc	___ftadd@f1+2,f,c
  1057  00094A                     l368:
  1058  00094A  AC25               	btfss	___ftadd@sign,6,c
  1059  00094C  D00C               	goto	l1098
  1060  00094E  0EFF               	movlw	255
  1061  000950  1A1F               	xorwf	___ftadd@f2,f,c
  1062  000952  0EFF               	movlw	255
  1063  000954  1A20               	xorwf	___ftadd@f2+1,f,c
  1064  000956  0EFF               	movlw	255
  1065  000958  1A21               	xorwf	___ftadd@f2+2,f,c
  1066  00095A  0E01               	movlw	1
  1067  00095C  261F               	addwf	___ftadd@f2,f,c
  1068  00095E  0E00               	movlw	0
  1069  000960  2220               	addwfc	___ftadd@f2+1,f,c
  1070  000962  0E00               	movlw	0
  1071  000964  2221               	addwfc	___ftadd@f2+2,f,c
  1072  000966                     l1098:
  1073  000966  0E00               	movlw	0
  1074  000968  6E25               	movwf	___ftadd@sign,c
  1075  00096A  501C               	movf	___ftadd@f1,w,c
  1076  00096C  261F               	addwf	___ftadd@f2,f,c
  1077  00096E  501D               	movf	___ftadd@f1+1,w,c
  1078  000970  2220               	addwfc	___ftadd@f2+1,f,c
  1079  000972  501E               	movf	___ftadd@f1+2,w,c
  1080  000974  2221               	addwfc	___ftadd@f2+2,f,c
  1081  000976  AE21               	btfss	___ftadd@f2+2,7,c
  1082  000978  D00E               	goto	l1108
  1083  00097A  0EFF               	movlw	255
  1084  00097C  1A1F               	xorwf	___ftadd@f2,f,c
  1085  00097E  0EFF               	movlw	255
  1086  000980  1A20               	xorwf	___ftadd@f2+1,f,c
  1087  000982  0EFF               	movlw	255
  1088  000984  1A21               	xorwf	___ftadd@f2+2,f,c
  1089  000986  0E01               	movlw	1
  1090  000988  261F               	addwf	___ftadd@f2,f,c
  1091  00098A  0E00               	movlw	0
  1092  00098C  2220               	addwfc	___ftadd@f2+1,f,c
  1093  00098E  0E00               	movlw	0
  1094  000990  2221               	addwfc	___ftadd@f2+2,f,c
  1095  000992  0E01               	movlw	1
  1096  000994  6E25               	movwf	___ftadd@sign,c
  1097  000996                     l1108:
  1098  000996  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  1099  00099A  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1100  00099E  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1101  0009A2  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  1102  0009A6  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  1103  0009AA  ECCB  F005         	call	___ftpack	;wreg free
  1104  0009AE  C001  F01C         	movff	?___ftpack,?___ftadd
  1105  0009B2  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  1106  0009B6  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  1107  0009BA  0012               	return	
  1108  0009BC                     __end_of___ftadd:
  1109                           	opt stack 0
  1110                           tblptru	equ	0xFF8
  1111                           tblptrh	equ	0xFF7
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function ___awtoft *****************
  1115 ;; Defined at:
  1116 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  c               2    8[COMRAM] int 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  sign            1   11[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  3    8[COMRAM] float 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1130 ;;      Params:         3       0       0       0       0       0       0       0       0
  1131 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1133 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1134 ;;Total ram usage:        4 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    1
  1137 ;; This function calls:
  1138 ;;		___ftpack
  1139 ;; This function is called by:
  1140 ;;		_USART_Init
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text6
  1145  000D04                     __ptext6:
  1146                           	opt stack 0
  1147  000D04                     ___awtoft:
  1148                           	opt stack 28
  1149                           
  1150                           ;incstack = 0
  1151  000D04  0E00               	movlw	0
  1152  000D06  6E0C               	movwf	___awtoft@sign,c
  1153  000D08  AE0A               	btfss	___awtoft@c+1,7,c
  1154  000D0A  D006               	goto	l1166
  1155  000D0C  6C09               	negf	___awtoft@c,c
  1156  000D0E  1E0A               	comf	___awtoft@c+1,f,c
  1157  000D10  B0D8               	btfsc	status,0,c
  1158  000D12  2A0A               	incf	___awtoft@c+1,f,c
  1159  000D14  0E01               	movlw	1
  1160  000D16  6E0C               	movwf	___awtoft@sign,c
  1161  000D18                     l1166:
  1162  000D18  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1163  000D1C  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1164  000D20  6A03               	clrf	___ftpack@arg+2,c
  1165  000D22  0E8E               	movlw	142
  1166  000D24  6E04               	movwf	___ftpack@exp,c
  1167  000D26  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1168  000D2A  ECCB  F005         	call	___ftpack	;wreg free
  1169  000D2E  C001  F009         	movff	?___ftpack,?___awtoft
  1170  000D32  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1171  000D36  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1172  000D3A  0012               	return	
  1173  000D3C                     __end_of___awtoft:
  1174                           	opt stack 0
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function ___ftpack *****************
  1180 ;; Defined at:
  1181 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  arg             3    0[COMRAM] unsigned um
  1184 ;;  exp             1    3[COMRAM] unsigned char 
  1185 ;;  sign            1    4[COMRAM] unsigned char 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  3    0[COMRAM] float 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1197 ;;      Params:         5       0       0       0       0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1199 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1200 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1201 ;;Total ram usage:        8 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		___awtoft
  1207 ;;		___ftadd
  1208 ;;		___ftdiv
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text7
  1213  000B96                     __ptext7:
  1214                           	opt stack 0
  1215  000B96                     ___ftpack:
  1216                           	opt stack 28
  1217                           
  1218                           ;incstack = 0
  1219  000B96  5004               	movf	___ftpack@exp,w,c
  1220  000B98  B4D8               	btfsc	status,2,c
  1221  000B9A  D005               	goto	l1002
  1222  000B9C  5001               	movf	___ftpack@arg,w,c
  1223  000B9E  1002               	iorwf	___ftpack@arg+1,w,c
  1224  000BA0  1003               	iorwf	___ftpack@arg+2,w,c
  1225  000BA2  A4D8               	btfss	status,2,c
  1226  000BA4  D00C               	goto	l1008
  1227  000BA6                     l1002:
  1228  000BA6  0E00               	movlw	0
  1229  000BA8  6E01               	movwf	?___ftpack,c
  1230  000BAA  0E00               	movlw	0
  1231  000BAC  6E02               	movwf	?___ftpack+1,c
  1232  000BAE  0E00               	movlw	0
  1233  000BB0  6E03               	movwf	?___ftpack+2,c
  1234  000BB2  0012               	return	
  1235  000BB4                     l1006:
  1236  000BB4  2A04               	incf	___ftpack@exp,f,c
  1237  000BB6  90D8               	bcf	status,0,c
  1238  000BB8  3203               	rrcf	___ftpack@arg+2,f,c
  1239  000BBA  3202               	rrcf	___ftpack@arg+1,f,c
  1240  000BBC  3201               	rrcf	___ftpack@arg,f,c
  1241  000BBE                     l1008:
  1242  000BBE  0E00               	movlw	0
  1243  000BC0  1401               	andwf	___ftpack@arg,w,c
  1244  000BC2  6E06               	movwf	??___ftpack& (0+255),c
  1245  000BC4  0E00               	movlw	0
  1246  000BC6  1402               	andwf	___ftpack@arg+1,w,c
  1247  000BC8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1248  000BCA  0EFE               	movlw	254
  1249  000BCC  1403               	andwf	___ftpack@arg+2,w,c
  1250  000BCE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1251  000BD0  5006               	movf	??___ftpack,w,c
  1252  000BD2  1007               	iorwf	??___ftpack+1,w,c
  1253  000BD4  1008               	iorwf	??___ftpack+2,w,c
  1254  000BD6  B4D8               	btfsc	status,2,c
  1255  000BD8  D00C               	goto	l1014
  1256  000BDA  D7EC               	goto	l1006
  1257  000BDC                     l1010:
  1258  000BDC  2A04               	incf	___ftpack@exp,f,c
  1259  000BDE  0E01               	movlw	1
  1260  000BE0  2601               	addwf	___ftpack@arg,f,c
  1261  000BE2  0E00               	movlw	0
  1262  000BE4  2202               	addwfc	___ftpack@arg+1,f,c
  1263  000BE6  0E00               	movlw	0
  1264  000BE8  2203               	addwfc	___ftpack@arg+2,f,c
  1265  000BEA  90D8               	bcf	status,0,c
  1266  000BEC  3203               	rrcf	___ftpack@arg+2,f,c
  1267  000BEE  3202               	rrcf	___ftpack@arg+1,f,c
  1268  000BF0  3201               	rrcf	___ftpack@arg,f,c
  1269  000BF2                     l1014:
  1270  000BF2  0E00               	movlw	0
  1271  000BF4  1401               	andwf	___ftpack@arg,w,c
  1272  000BF6  6E06               	movwf	??___ftpack& (0+255),c
  1273  000BF8  0E00               	movlw	0
  1274  000BFA  1402               	andwf	___ftpack@arg+1,w,c
  1275  000BFC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1276  000BFE  0EFF               	movlw	255
  1277  000C00  1403               	andwf	___ftpack@arg+2,w,c
  1278  000C02  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1279  000C04  5006               	movf	??___ftpack,w,c
  1280  000C06  1007               	iorwf	??___ftpack+1,w,c
  1281  000C08  1008               	iorwf	??___ftpack+2,w,c
  1282  000C0A  B4D8               	btfsc	status,2,c
  1283  000C0C  D006               	goto	l1018
  1284  000C0E  D7E6               	goto	l1010
  1285  000C10                     l1016:
  1286  000C10  0604               	decf	___ftpack@exp,f,c
  1287  000C12  90D8               	bcf	status,0,c
  1288  000C14  3601               	rlcf	___ftpack@arg,f,c
  1289  000C16  3602               	rlcf	___ftpack@arg+1,f,c
  1290  000C18  3603               	rlcf	___ftpack@arg+2,f,c
  1291  000C1A                     l1018:
  1292  000C1A  BE02               	btfsc	___ftpack@arg+1,7,c
  1293  000C1C  D003               	goto	l321
  1294  000C1E  0E02               	movlw	2
  1295  000C20  6004               	cpfslt	___ftpack@exp,c
  1296  000C22  D7F6               	goto	l1016
  1297  000C24                     l321:
  1298  000C24  A004               	btfss	___ftpack@exp,0,c
  1299  000C26  9E02               	bcf	___ftpack@arg+1,7,c
  1300  000C28  90D8               	bcf	status,0,c
  1301  000C2A  3204               	rrcf	___ftpack@exp,f,c
  1302  000C2C  5004               	movf	___ftpack@exp,w,c
  1303  000C2E  1203               	iorwf	___ftpack@arg+2,f,c
  1304  000C30  5005               	movf	___ftpack@sign,w,c
  1305  000C32  A4D8               	btfss	status,2,c
  1306  000C34  8E03               	bsf	___ftpack@arg+2,7,c
  1307  000C36  C001  F001         	movff	___ftpack@arg,?___ftpack
  1308  000C3A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1309  000C3E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1310  000C42  0012               	return	
  1311  000C44                     __end_of___ftpack:
  1312                           	opt stack 0
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _EEPROM_WriteString *****************
  1318 ;; Defined at:
  1319 ;;		line 53 in file "IO_EEPROM.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  address         2    3[COMRAM] int 
  1322 ;;  data            2    5[COMRAM] PTR unsigned char 
  1323 ;;		 -> STR_1(13), 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1335 ;;      Params:         4       0       0       0       0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1338 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1339 ;;Total ram usage:        4 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    1
  1342 ;; This function calls:
  1343 ;;		_EEPROM_Write
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text8
  1350  000D3C                     __ptext8:
  1351                           	opt stack 0
  1352  000D3C                     _EEPROM_WriteString:
  1353                           	opt stack 29
  1354                           
  1355                           ;IO_EEPROM.c: 55: while(*data!=0){
  1356                           
  1357                           ;incstack = 0
  1358  000D3C  D011               	goto	l1232
  1359  000D3E                     l1226:
  1360                           
  1361                           ;IO_EEPROM.c: 56: EEPROM_Write(address,*data);
  1362  000D3E  C004  F001         	movff	EEPROM_WriteString@address,EEPROM_Write@address
  1363  000D42  C005  F002         	movff	EEPROM_WriteString@address+1,EEPROM_Write@address+1
  1364  000D46  C006  FFF6         	movff	EEPROM_WriteString@data,tblptrl
  1365  000D4A  C007  FFF7         	movff	EEPROM_WriteString@data+1,tblptrh
  1366  000D4E                     	if	0	;tblptru may be non-zero
  1367  000D4E                     	endif
  1368  000D4E                     	if	0	;tblptru may be non-zero
  1369  000D4E                     	endif
  1370  000D4E  0008               	tblrd		*
  1371  000D50  CFF5 F003          	movff	tablat,EEPROM_Write@data
  1372  000D54  ECBA  F006         	call	_EEPROM_Write	;wreg free
  1373                           
  1374                           ;IO_EEPROM.c: 57: address++;
  1375  000D58  4A04               	infsnz	EEPROM_WriteString@address,f,c
  1376  000D5A  2A05               	incf	EEPROM_WriteString@address+1,f,c
  1377                           
  1378                           ;IO_EEPROM.c: 58: *data++;
  1379  000D5C  4A06               	infsnz	EEPROM_WriteString@data,f,c
  1380  000D5E  2A07               	incf	EEPROM_WriteString@data+1,f,c
  1381  000D60                     l1232:
  1382  000D60  C006  FFF6         	movff	EEPROM_WriteString@data,tblptrl
  1383  000D64  C007  FFF7         	movff	EEPROM_WriteString@data+1,tblptrh
  1384  000D68                     	if	0	;tblptru may be non-zero
  1385  000D68                     	endif
  1386  000D68                     	if	0	;tblptru may be non-zero
  1387  000D68                     	endif
  1388  000D68  0008               	tblrd		*
  1389  000D6A  50F5               	movf	tablat,w,c
  1390  000D6C  0900               	iorlw	0
  1391  000D6E  B4D8               	btfsc	status,2,c
  1392  000D70  0012               	return	
  1393  000D72  D7E5               	goto	l1226
  1394  000D74                     __end_of_EEPROM_WriteString:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _EEPROM_Write *****************
  1403 ;; Defined at:
  1404 ;;		line 31 in file "IO_EEPROM.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  address         2    0[COMRAM] int 
  1407 ;;  data            1    2[COMRAM] unsigned char 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1419 ;;      Params:         3       0       0       0       0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1422 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1423 ;;Total ram usage:        3 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_EEPROM_WriteString
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text9
  1433  000D74                     __ptext9:
  1434                           	opt stack 0
  1435  000D74                     _EEPROM_Write:
  1436                           	opt stack 29
  1437                           
  1438                           ;IO_EEPROM.c: 33: EEADR=address;
  1439                           
  1440                           ;incstack = 0
  1441  000D74  C001  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  1442                           
  1443                           ;IO_EEPROM.c: 34: EEDATA=data;
  1444  000D78  C003  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  1445                           
  1446                           ;IO_EEPROM.c: 35: EECON1bits.EEPGD=0;
  1447  000D7C  9EA6               	bcf	4006,7,c	;volatile
  1448                           
  1449                           ;IO_EEPROM.c: 36: EECON1bits.CFGS=0;
  1450  000D7E  9CA6               	bcf	4006,6,c	;volatile
  1451                           
  1452                           ;IO_EEPROM.c: 37: EECON1bits.WREN=1;
  1453  000D80  84A6               	bsf	4006,2,c	;volatile
  1454                           
  1455                           ;IO_EEPROM.c: 38: INTCONbits.GIE=0;
  1456  000D82  9EF2               	bcf	intcon,7,c	;volatile
  1457                           
  1458                           ;IO_EEPROM.c: 41: EECON2=0x55;
  1459  000D84  0E55               	movlw	85
  1460  000D86  6EA7               	movwf	4007,c	;volatile
  1461                           
  1462                           ;IO_EEPROM.c: 42: EECON2=0xaa;
  1463  000D88  0EAA               	movlw	170
  1464  000D8A  6EA7               	movwf	4007,c	;volatile
  1465                           
  1466                           ;IO_EEPROM.c: 44: EECON1bits.WR=1;
  1467  000D8C  82A6               	bsf	4006,1,c	;volatile
  1468                           
  1469                           ;IO_EEPROM.c: 45: INTCONbits.GIE=1;
  1470  000D8E  8EF2               	bsf	intcon,7,c	;volatile
  1471  000D90                     l84:
  1472  000D90  A8A1               	btfss	4001,4,c	;volatile
  1473  000D92  D7FE               	goto	l84
  1474                           
  1475                           ;IO_EEPROM.c: 49: PIR2bits.EEIF=0;
  1476  000D94  98A1               	bcf	4001,4,c	;volatile
  1477  000D96  0012               	return		;funcret
  1478  000D98                     __end_of_EEPROM_Write:
  1479                           	opt stack 0
  1480                           tblptru	equ	0xFF8
  1481                           tblptrh	equ	0xFF7
  1482                           tblptrl	equ	0xFF6
  1483                           tablat	equ	0xFF5
  1484                           intcon	equ	0xFF2
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _EEPROM_Read *****************
  1488 ;; Defined at:
  1489 ;;		line 62 in file "IO_EEPROM.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  address         2    0[COMRAM] int 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      unsigned char 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1503 ;;      Params:         2       0       0       0       0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1506 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1507 ;;Total ram usage:        2 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text10
  1517  000DA6                     __ptext10:
  1518                           	opt stack 0
  1519  000DA6                     _EEPROM_Read:
  1520                           	opt stack 30
  1521                           
  1522                           ;IO_EEPROM.c: 64: EEADR=address;
  1523                           
  1524                           ;incstack = 0
  1525  000DA6  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  1526                           
  1527                           ;IO_EEPROM.c: 65: EECON1bits.WREN=0;
  1528  000DAA  94A6               	bcf	4006,2,c	;volatile
  1529                           
  1530                           ;IO_EEPROM.c: 66: EECON1bits.EEPGD=0;
  1531  000DAC  9EA6               	bcf	4006,7,c	;volatile
  1532                           
  1533                           ;IO_EEPROM.c: 67: EECON1bits.RD=1;
  1534  000DAE  80A6               	bsf	4006,0,c	;volatile
  1535                           
  1536                           ;IO_EEPROM.c: 68: return(EEDATA);
  1537  000DB0  50A8               	movf	4008,w,c	;volatile
  1538  000DB2  0012               	return	
  1539  000DB4                     __end_of_EEPROM_Read:
  1540                           	opt stack 0
  1541                           tblptru	equ	0xFF8
  1542                           tblptrh	equ	0xFF7
  1543                           tblptrl	equ	0xFF6
  1544                           tablat	equ	0xFF5
  1545                           intcon	equ	0xFF2
  1546                           status	equ	0xFD8
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           intcon	equ	0xFF2
  1552                           status	equ	0xFD8
  1553                           
  1554                           	psect	rparam
  1555  0000                     tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           intcon	equ	0xFF2
  1560                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     47      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EEPROM_WriteString@data	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _USART_Init->___ftadd
    ___ftdiv->___awtoft
    ___ftadd->___ftdiv
    ___awtoft->___ftpack
    _EEPROM_WriteString->_EEPROM_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8893
                                             44 COMRAM     3     3      0
                        _EEPROM_Read
                 _EEPROM_WriteString
                         _USART_Init
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (1) _USART_TransmitChar                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           5     3      2    8355
                                             39 COMRAM     5     3      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2541
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3203
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2186
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteString                                   4     0      4     368
                                              3 COMRAM     4     0      4
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         3     0      3     172
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     0      2      86
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
   _EEPROM_WriteString
     _EEPROM_Write
   _USART_Init
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
   _USART_TransmitChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     2F      2F       1       49.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Dec 04 09:58:14 2019

              main@Data_read 002F                           l30 0DB6                           l84 0D90  
                         l78 0D02                  __CFG_BOR$ON 000000                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                 ___ftadd@exp1 0027                 ___ftadd@exp2 0026  
               ___ftadd@sign 0025                          l321 0C24                          l344 0854  
                        l348 087E                          l359 092E                          l368 094A  
                        l379 0B64                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        u631 0820                          u641 0834                          u901 09CC  
                        u920 0A06                          u841 0AC0                          u861 0AE8  
                        u925 09FE                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0016  
               ___ftdiv@sign 001B                 __CFG_WDT$OFF 000000                         l1010 0BDC  
                       l1002 0BA6                         l1014 0BF2                         l1006 0BB4  
                       l1016 0C10                         l1008 0BBE                         l1018 0C1A  
                       l1050 0862                         l1108 0996                         l1124 0B00  
                       l1212 0A9E                         l1204 0A76                         l1118 0AD8  
                       l1206 0A82                         l1232 0D60                         l1080 08E8  
                       l1072 08BC                         l1056 088C                         l1144 0B3E  
                       l1208 0A88                         l1226 0D3E                         l1090 091C  
                       l1082 08F2                         l1250 0CFC                         l1092 0926  
                       l1084 08FA                         l1166 0D18                         l1078 08DE  
                       l1246 0CE4                         l1176 09E8                         l1098 0966  
                       l1194 0A4E                         l1198 0A5E                         STR_1 0801  
                       _RCIF 007CF5                         _TXIF 007CF4                         _main 0CB6  
               ___ftpack@arg 0001                 ___ftpack@exp 0004                         start 0000  
              __CFG_IESO$OFF 000000                 ___param_bank 000000                 ___fttol@exp1 000F  
       __end_of_EEPROM_Write 0D98                 ___fttol@lval 000B               __CFG_CCP2MX$ON 000000  
                      ?_main 0001                        _EEADR 000FA9              __end_of___ftadd 09BC  
            __end_of___ftdiv 0B96              __end_of___fttol 0AB0                        _RCREG 000FAE  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _TXREG 000FAD  
                      _TXSTA 000FAC                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
              ___awtoft@sign 000C                ___ftpack@sign 0005                        main@i 002D  
                      tablat 000FF5                        status 000FD8               __CFG_ICPRT$OFF 000000  
           EEPROM_Write@data 0003               __CFG_PBADEN$ON 000000         __size_of_EEPROM_Read 000E  
                ?_USART_Init 0028               __CFG_MCLRE$OFF 000000              __initialization 0D98  
               __end_of_main 0D04                       ??_main 002D                ___fttol@sign1 000A  
              __activetblptr 000001                       _EEDATA 000FA8                       _EECON2 000FA7  
           __end_of___awtoft 0D3C             __end_of___ftpack 0C44                       _OSCCON 000FD3  
                     _TRISC6 007CA6                       _TRISC7 007CA7               __CFG_XINST$OFF 000000  
                  ??___ftadd 0022               __CFG_STVREN$ON 000000                    ??___ftdiv 0013  
                  ??___fttol 0005   __end_of_USART_TransmitChar 0DC0                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
        __size_of_USART_Init 0072                   __accesstop 0060      __end_of__initialization 0D98  
                 ___ftadd@f1 001C                   ___ftadd@f2 001F                ___rparam_used 000001  
                 ___ftdiv@f1 000D                   ___ftdiv@f2 0010                   ___ftdiv@f3 0017  
      __size_of_EEPROM_Write 0024                   ___awtoft@c 0009                   ___fttol@f1 0001  
             __pcstackCOMRAM 0001                 _EEPROM_Write 0D74  __size_of_EEPROM_WriteString 0038  
                  ?___awtoft 0009                    ?___ftpack 0001              __CFG_VREGEN$OFF 000000  
               ??_USART_Init 002A                      __Hparam 0000                      __Lparam 0000  
                    ___ftadd 0810                      ___ftdiv 0AB0                      ___fttol 09BC  
               __psmallconst 0800                      __pcinit 0D98                   ??___awtoft 000C  
                 ??___ftpack 0006                      __ramtop 0800                      __ptext0 0CB6  
                    __ptext1 0DB4                      __ptext2 0C44                      __ptext3 09BC  
                    __ptext4 0AB0                      __ptext5 0810                      __ptext6 0D04  
                    __ptext7 0B96                      __ptext8 0D3C                      __ptext9 0D74  
             USART_Init@temp 002A           __end_of_USART_Init 0CB6         end_of_initialization 0D98  
              ??_EEPROM_Read 0003       EEPROM_WriteString@data 0006          USART_Init@baud_rate 0028  
      USART_TransmitChar@out 0001                  ___ftdiv@exp 001A           _USART_TransmitChar 0DB4  
        __end_of_EEPROM_Read 0DB4          ?_USART_TransmitChar 0001          start_initialization 0D98  
       ??_USART_TransmitChar 0001             __CFG_LPT1OSC$OFF 000000            __size_of___awtoft 0038  
          __size_of___ftpack 00AE    EEPROM_WriteString@address 0004   __end_of_EEPROM_WriteString 0D74  
                _EEPROM_Read 0DA6                     ?___ftadd 001C                     ?___ftdiv 000D  
                   ?___fttol 0001                  __smallconst 0800                     _PIR2bits 000FA1  
           __CFG_WDTPS$32768 000000                   _EECON1bits 000FA6                     __Hrparam 0000  
                   __Lrparam 0000                 __Lsmallconst 0800             __size_of___ftadd 01AC  
           __size_of___ftdiv 00E6             __size_of___fttol 00F4                     ___awtoft 0D04  
                   ___ftpack 0B96                     __ptext10 0DA6                ?_EEPROM_Write 0001  
              __size_of_main 004E                   _INTCONbits 000FF2               ??_EEPROM_Write 0004  
__size_of_USART_TransmitChar 000C                 ?_EEPROM_Read 0001           EEPROM_Read@address 0001  
         _EEPROM_WriteString 0D3C          __CFG_FOSC$INTOSC_EC 000000          ?_EEPROM_WriteString 0004  
       ??_EEPROM_WriteString 0008                   _USART_Init 0C44          EEPROM_Write@address 0001  
