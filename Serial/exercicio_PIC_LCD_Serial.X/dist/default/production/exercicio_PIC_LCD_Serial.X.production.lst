

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Nov 13 09:20:36 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  0025D2                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _tela_exibida
    93  0025D2  0002               	dw	2
    94                           
    95                           	psect	idataBANK0
    96  00255E                     __pidataBANK0:
    97                           	opt stack 0
    98                           
    99                           ;initializer for _qtdDias_mes
   100  00255E  0000               	dw	0
   101  002560  001F               	dw	31
   102  002562  001C               	dw	28
   103  002564  001F               	dw	31
   104  002566  001E               	dw	30
   105  002568  001F               	dw	31
   106  00256A  001E               	dw	30
   107  00256C  001F               	dw	31
   108  00256E  001F               	dw	31
   109  002570  001E               	dw	30
   110  002572  001F               	dw	31
   111  002574  001E               	dw	30
   112  002576  001F               	dw	31
   113                           
   114                           	psect	smallconst
   115  000800                     __psmallconst:
   116                           	opt stack 0
   117  000800  00                 	db	0
   118  000801                     _dpowers:
   119                           	opt stack 0
   120  000801  0001               	dw	1
   121  000803  000A               	dw	10
   122  000805  0064               	dw	100
   123  000807  03E8               	dw	1000
   124  000809  2710               	dw	10000
   125  00080B                     __end_of_dpowers:
   126                           	opt stack 0
   127  0000                     _TMR0	set	4054
   128  0000                     _TRISBbits	set	3987
   129  0000                     _PORTB	set	3969
   130  0000                     _LATBbits	set	3978
   131  0000                     _PIR1bits	set	3998
   132  0000                     _TXSTA	set	4012
   133  0000                     _RCSTA	set	4011
   134  0000                     _TRISDbits	set	3989
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISCbits	set	3988
   137  0000                     _INTCONbits	set	4082
   138  0000                     _T0CONbits	set	4053
   139  0000                     _PORTAbits	set	3968
   140  0000                     _TRISA	set	3986
   141  0000                     _TRISAbits	set	3986
   142  0000                     _ADCON1	set	4033
   143  0000                     _SPBRG	set	4015
   144  0000                     _PORTCbits	set	3970
   145  0000                     _RCREG	set	4014
   146  0000                     _TXREG	set	4013
   147  0000                     _PORTDbits	set	3971
   148  0000                     _TMR0IF	set	32658
   149  0000                     _PEIE	set	32662
   150  0000                     _RCIE	set	31981
   151  0000                     _RCIP	set	31997
   152  0000                     _RCIF	set	31989
   153  0000                     _TXIF	set	31988
   154  00080B                     STR_3:
   155  00080B  25                 	db	37
   156  00080C  64                 	db	100	;'d'
   157  00080D  25                 	db	37
   158  00080E  64                 	db	100	;'d'
   159  00080F  3A                 	db	58	;':'
   160  000810  25                 	db	37
   161  000811  64                 	db	100	;'d'
   162  000812  25                 	db	37
   163  000813  64                 	db	100	;'d'
   164  000814  3A                 	db	58	;':'
   165  000815  25                 	db	37
   166  000816  64                 	db	100	;'d'
   167  000817  25                 	db	37
   168  000818  64                 	db	100	;'d'
   169  000819  20                 	db	32
   170  00081A  20                 	db	32
   171  00081B  20                 	db	32
   172  00081C  20                 	db	32
   173  00081D  20                 	db	32
   174  00081E  20                 	db	32
   175  00081F  20                 	db	32
   176  000820  20                 	db	32
   177  000821  00                 	db	0
   178  000822                     STR_1:
   179  000822  48                 	db	72	;'H'
   180  000823  4F                 	db	79	;'O'
   181  000824  52                 	db	82	;'R'
   182  000825  41                 	db	65	;'A'
   183  000826  3A                 	db	58	;':'
   184  000827  20                 	db	32
   185  000828  25                 	db	37
   186  000829  64                 	db	100	;'d'
   187  00082A  25                 	db	37
   188  00082B  64                 	db	100	;'d'
   189  00082C  3A                 	db	58	;':'
   190  00082D  25                 	db	37
   191  00082E  64                 	db	100	;'d'
   192  00082F  25                 	db	37
   193  000830  64                 	db	100	;'d'
   194  000831  3A                 	db	58	;':'
   195  000832  25                 	db	37
   196  000833  64                 	db	100	;'d'
   197  000834  25                 	db	37
   198  000835  64                 	db	100	;'d'
   199  000836  20                 	db	32
   200  000837  00                 	db	0
   201  000838                     STR_2:
   202  000838  44                 	db	68	;'D'
   203  000839  41                 	db	65	;'A'
   204  00083A  54                 	db	84	;'T'
   205  00083B  41                 	db	65	;'A'
   206  00083C  3A                 	db	58	;':'
   207  00083D  20                 	db	32
   208  00083E  25                 	db	37
   209  00083F  64                 	db	100	;'d'
   210  000840  25                 	db	37
   211  000841  64                 	db	100	;'d'
   212  000842  3A                 	db	58	;':'
   213  000843  25                 	db	37
   214  000844  64                 	db	100	;'d'
   215  000845  25                 	db	37
   216  000846  64                 	db	100	;'d'
   217  000847  3A                 	db	58	;':'
   218  000848  25                 	db	37
   219  000849  64                 	db	100	;'d'
   220  00084A  25                 	db	37
   221  00084B  64                 	db	100	;'d'
   222  00084C  00                 	db	0
   223  00084D                     STR_6:
   224  00084D  25                 	db	37
   225  00084E  64                 	db	100	;'d'
   226  00084F  20                 	db	32
   227  000850  25                 	db	37
   228  000851  64                 	db	100	;'d'
   229  000852  20                 	db	32
   230  000853  25                 	db	37
   231  000854  64                 	db	100	;'d'
   232  000855  20                 	db	32
   233  000856  20                 	db	32
   234  000857  20                 	db	32
   235  000858  20                 	db	32
   236  000859  20                 	db	32
   237  00085A  20                 	db	32
   238  00085B  20                 	db	32
   239  00085C  20                 	db	32
   240  00085D  20                 	db	32
   241  00085E  20                 	db	32
   242  00085F  20                 	db	32
   243  000860  00                 	db	0
   244  000861                     STR_5:
   245  000861  53                 	db	83	;'S'
   246  000862  45                 	db	69	;'E'
   247  000863  52                 	db	82	;'R'
   248  000864  49                 	db	73	;'I'
   249  000865  41                 	db	65	;'A'
   250  000866  4C                 	db	76	;'L'
   251  000867  3A                 	db	58	;':'
   252  000868  20                 	db	32
   253  000869  20                 	db	32
   254  00086A  20                 	db	32
   255  00086B  20                 	db	32
   256  00086C  20                 	db	32
   257  00086D  20                 	db	32
   258  00086E  20                 	db	32
   259  00086F  20                 	db	32
   260  000870  20                 	db	32
   261  000871  00                 	db	0
   262  000872                     STR_4:
   263  000872  44                 	db	68	;'D'
   264  000873  45                 	db	69	;'E'
   265  000874  53                 	db	83	;'S'
   266  000875  50                 	db	80	;'P'
   267  000876  45                 	db	69	;'E'
   268  000877  52                 	db	82	;'R'
   269  000878  54                 	db	84	;'T'
   270  000879  41                 	db	65	;'A'
   271  00087A  44                 	db	68	;'D'
   272  00087B  4F                 	db	79	;'O'
   273  00087C  52                 	db	82	;'R'
   274  00087D  2E                 	db	46
   275  00087E  20                 	db	32
   276  00087F  20                 	db	32
   277  000880  00                 	db	0
   278                           
   279                           ; #config settings
   280  000881  00                 	db	0	; dummy byte at the end
   281  0000                     
   282                           	psect	cinit
   283  002200                     __pcinit:
   284                           	opt stack 0
   285  002200                     start_initialization:
   286                           	opt stack 0
   287  002200                     __initialization:
   288                           	opt stack 0
   289                           
   290                           ; Initialize objects allocated to BANK0 (26 bytes)
   291                           ; load TBLPTR registers with __pidataBANK0
   292  002200  0E5E               	movlw	low __pidataBANK0
   293  002202  6EF6               	movwf	tblptrl,c
   294  002204  0E25               	movlw	high __pidataBANK0
   295  002206  6EF7               	movwf	tblptrh,c
   296  002208  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   297  00220A  6EF8               	movwf	tblptru,c
   298  00220C  EE00  F0A3         	lfsr	0,__pdataBANK0
   299  002210  EE10 F01A          	lfsr	1,26
   300  002214                     copy_data0:
   301  002214  0009               	tblrd		*+
   302  002216  CFF5 FFEE          	movff	tablat,postinc0
   303  00221A  50E5               	movf	postdec1,w,c
   304  00221C  50E1               	movf	fsr1l,w,c
   305  00221E  E1FA               	bnz	copy_data0
   306                           
   307                           ; Initialize objects allocated to COMRAM (2 bytes)
   308                           ; load TBLPTR registers with __pidataCOMRAM
   309  002220  0ED2               	movlw	low __pidataCOMRAM
   310  002222  6EF6               	movwf	tblptrl,c
   311  002224  0E25               	movlw	high __pidataCOMRAM
   312  002226  6EF7               	movwf	tblptrh,c
   313  002228  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   314  00222A  6EF8               	movwf	tblptru,c
   315  00222C  0009               	tblrd		*+	;fetch initializer
   316  00222E  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   317  002232  0009               	tblrd		*+	;fetch initializer
   318  002234  CFF5 F050          	movff	tablat,__pdataCOMRAM+1
   319                           
   320                           ; Clear objects allocated to BANK0 (30 bytes)
   321  002238  EE00  F085         	lfsr	0,__pbssBANK0
   322  00223C  0E1E               	movlw	30
   323  00223E                     clear_0:
   324  00223E  6AEE               	clrf	postinc0,c
   325  002240  06E8               	decf	wreg,f,c
   326  002242  E1FD               	bnz	clear_0
   327                           
   328                           ; Clear objects allocated to COMRAM (31 bytes)
   329  002244  EE00  F030         	lfsr	0,__pbssCOMRAM
   330  002248  0E1F               	movlw	31
   331  00224A                     clear_1:
   332  00224A  6AEE               	clrf	postinc0,c
   333  00224C  06E8               	decf	wreg,f,c
   334  00224E  E1FD               	bnz	clear_1
   335  002250                     end_of_initialization:
   336                           	opt stack 0
   337  002250                     __end_of__initialization:
   338                           	opt stack 0
   339  002250  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   340  002252  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   341  002254  0E00               	movlw	low (__Lmediumconst shr (0+16))
   342  002256  6EF8               	movwf	tblptru,c
   343  002258  0100               	movlb	0
   344  00225A  EF5C  F00C         	goto	_main	;jump to C main() function
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	bssCOMRAM
   355  000030                     __pbssCOMRAM:
   356                           	opt stack 0
   357  000030                     _ESTADO_COMUNICACAO:
   358                           	opt stack 0
   359  000030                     	ds	2
   360  000032                     _numero_entrada_terminal:
   361                           	opt stack 0
   362  000032                     	ds	2
   363  000034                     _controle_tempo_despertar:
   364                           	opt stack 0
   365  000034                     	ds	2
   366  000036                     _cursor:
   367                           	opt stack 0
   368  000036                     	ds	2
   369  000038                     _contador:
   370                           	opt stack 0
   371  000038                     	ds	2
   372  00003A                     _serial_data:
   373                           	opt stack 0
   374  00003A                     	ds	1
   375  00003B                     _despertar:
   376                           	opt stack 0
   377  00003B                     	ds	1
   378  00003C                     _flag_time:
   379                           	opt stack 0
   380  00003C                     	ds	1
   381  00003D                     _Calendario:
   382                           	opt stack 0
   383  00003D                     	ds	6
   384  000043                     _Despertador:
   385                           	opt stack 0
   386  000043                     	ds	6
   387  000049                     _Relogio:
   388                           	opt stack 0
   389  000049                     	ds	6
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           postdec1	equ	0xFE5
   397                           fsr1l	equ	0xFE1
   398                           
   399                           	psect	dataCOMRAM
   400  00004F                     __pdataCOMRAM:
   401                           	opt stack 0
   402  00004F                     _tela_exibida:
   403                           	opt stack 0
   404  00004F                     	ds	2
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           postdec1	equ	0xFE5
   412                           fsr1l	equ	0xFE1
   413                           
   414                           	psect	bssBANK0
   415  000085                     __pbssBANK0:
   416                           	opt stack 0
   417  000085                     _BUFF_RESP:
   418                           	opt stack 0
   419  000085                     	ds	7
   420  00008C                     _BUFF_COM:
   421                           	opt stack 0
   422  00008C                     	ds	7
   423  000093                     _str:
   424                           	opt stack 0
   425  000093                     	ds	16
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	dataBANK0
   436  0000A3                     __pdataBANK0:
   437                           	opt stack 0
   438  0000A3                     _qtdDias_mes:
   439                           	opt stack 0
   440  0000A3                     	ds	26
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           postdec1	equ	0xFE5
   448                           fsr1l	equ	0xFE1
   449                           
   450                           	psect	cstackBANK0
   451  000060                     __pcstackBANK0:
   452                           	opt stack 0
   453  000060                     sprintf@ap:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x0
   457  000060                     	ds	2
   458  000062                     sprintf@flag:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x2
   462  000062                     	ds	1
   463  000063                     sprintf@prec:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x3
   467  000063                     	ds	1
   468  000064                     sprintf@val:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x4
   472  000064                     	ds	2
   473  000066                     sprintf@c:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x6
   477  000066                     	ds	1
   478  000067                     exibir_lcd@Relogio:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x7
   482  000067                     	ds	2
   483  000069                     exibir_lcd@Despertador:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x9
   487  000069                     	ds	2
   488  00006B                     exibir_lcd@Calendario:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0xB
   492  00006B                     	ds	2
   493  00006D                     exibir_lcd@g:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0xD
   497  00006D                     	ds	2
   498  00006F                     exibir_lcd@h:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0xF
   502  00006F                     	ds	2
   503  000071                     exibir_lcd@i:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x11
   507  000071                     	ds	2
   508  000073                     exibir_lcd@j:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x13
   512  000073                     	ds	2
   513  000075                     exibir_lcd@k:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x15
   517  000075                     	ds	2
   518  000077                     exibir_lcd@l:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x17
   522  000077                     	ds	2
   523  000079                     exibir_lcd@a:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x19
   527  000079                     	ds	2
   528  00007B                     exibir_lcd@b:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x1B
   532  00007B                     	ds	2
   533  00007D                     exibir_lcd@c:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x1D
   537  00007D                     	ds	2
   538  00007F                     exibir_lcd@d:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x1F
   542  00007F                     	ds	2
   543  000081                     exibir_lcd@e:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x21
   547  000081                     	ds	2
   548  000083                     exibir_lcd@f:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x23
   552  000083                     	ds	2
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562                           	psect	cstackCOMRAM
   563  000001                     __pcstackCOMRAM:
   564                           	opt stack 0
   565  000001                     ??_SerialRxPinInterrupt:
   566  000001                     
   567                           ; 2 bytes @ 0x0
   568  000001                     	ds	14
   569  00000F                     ??_Delay10KTCYx:
   570  00000F                     ??_trata_comando:
   571  00000F                     ?___awmod:
   572                           	opt stack 0
   573  00000F                     ?___lwdiv:
   574                           	opt stack 0
   575  00000F                     Delay10TCYx@unit:
   576                           	opt stack 0
   577  00000F                     Delay1KTCYx@unit:
   578                           	opt stack 0
   579  00000F                     tratar_relogio@Relogio:
   580                           	opt stack 0
   581  00000F                     controla_despertador@Despertador:
   582                           	opt stack 0
   583  00000F                     tx_data@cont:
   584                           	opt stack 0
   585  00000F                     ___awmod@dividend:
   586                           	opt stack 0
   587  00000F                     ___lwdiv@dividend:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0xE
   591  00000F                     	ds	1
   592  000010                     ??_SetDDRamAddr:
   593  000010                     WriteCmdXLCD@cmd:
   594                           	opt stack 0
   595  000010                     WriteDataXLCD@data:
   596                           	opt stack 0
   597  000010                     Delay10KTCYx@unit:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0xF
   601  000010                     	ds	1
   602  000011                     ??_maquina_estado:
   603  000011                     tratar_relogio@Calendario:
   604                           	opt stack 0
   605  000011                     putrsXLCD@buffer:
   606                           	opt stack 0
   607  000011                     ___awmod@divisor:
   608                           	opt stack 0
   609  000011                     ___lwdiv@divisor:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x10
   613  000011                     	ds	2
   614  000013                     ??_tratar_relogio:
   615  000013                     SetDDRamAddr@DDaddr:
   616                           	opt stack 0
   617  000013                     ___awmod@counter:
   618                           	opt stack 0
   619  000013                     ___lwdiv@counter:
   620                           	opt stack 0
   621  000013                     incrementa_variavel@Relogio:
   622                           	opt stack 0
   623  000013                     decrementa_variavel@Relogio:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x12
   627  000013                     	ds	1
   628  000014                     OpenXLCD@lcdtype:
   629                           	opt stack 0
   630  000014                     ___awmod@sign:
   631                           	opt stack 0
   632  000014                     ___lwdiv@quotient:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x13
   636  000014                     	ds	1
   637  000015                     ?___awdiv:
   638                           	opt stack 0
   639  000015                     incrementa_variavel@Despertador:
   640                           	opt stack 0
   641  000015                     decrementa_variavel@Despertador:
   642                           	opt stack 0
   643  000015                     ___awdiv@dividend:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x14
   647  000015                     	ds	1
   648  000016                     ?___lwmod:
   649                           	opt stack 0
   650  000016                     ___lwmod@dividend:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x15
   654  000016                     	ds	1
   655  000017                     incrementa_variavel@Calendario:
   656                           	opt stack 0
   657  000017                     decrementa_variavel@Calendario:
   658                           	opt stack 0
   659  000017                     ___awdiv@divisor:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x16
   663  000017                     	ds	1
   664  000018                     ___lwmod@divisor:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x17
   668  000018                     	ds	1
   669  000019                     ??_incrementa_variavel:
   670  000019                     ??_decrementa_variavel:
   671  000019                     ___awdiv@counter:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x18
   675  000019                     	ds	1
   676  00001A                     ___awdiv@sign:
   677                           	opt stack 0
   678  00001A                     ___lwmod@counter:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x19
   682  00001A                     	ds	1
   683  00001B                     ?_sprintf:
   684                           	opt stack 0
   685  00001B                     sprintf@sp:
   686                           	opt stack 0
   687  00001B                     ___awdiv@quotient:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x1A
   691  00001B                     	ds	2
   692  00001D                     checa_botao@Relogio:
   693                           	opt stack 0
   694  00001D                     sprintf@f:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x1C
   698  00001D                     	ds	2
   699  00001F                     checa_botao@Despertador:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x1E
   703  00001F                     	ds	2
   704  000021                     checa_botao@Calendario:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x20
   708  000021                     	ds	2
   709  000023                     ??_checa_botao:
   710                           
   711                           ; 1 bytes @ 0x22
   712  000023                     	ds	8
   713  00002B                     ??_sprintf:
   714                           
   715                           ; 1 bytes @ 0x2A
   716  00002B                     	ds	1
   717  00002C                     ??_exibir_lcd:
   718  00002C                     
   719                           ; 1 bytes @ 0x2B
   720  00002C                     	ds	2
   721  00002E                     ??_main:
   722                           
   723                           ; 1 bytes @ 0x2D
   724  00002E                     	ds	2
   725                           tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           postdec1	equ	0xFE5
   732                           fsr1l	equ	0xFE1
   733                           
   734 ;;
   735 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   736 ;;
   737 ;; *************** function _main *****************
   738 ;; Defined at:
   739 ;;		line 23 in file "exercicio_PIC_LCD_Serial.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   753 ;;      Params:         0       0       0       0       0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0       0       0
   755 ;;      Temps:          2       0       0       0       0       0       0       0       0
   756 ;;      Totals:         2       0       0       0       0       0       0       0       0
   757 ;;Total ram usage:        2 bytes
   758 ;; Hardware stack levels required when called:    8
   759 ;; This function calls:
   760 ;;		_WriteCmdXLCD
   761 ;;		_checa_botao
   762 ;;		_exibir_lcd
   763 ;;		_init_XLCD
   764 ;;		_maquina_estado
   765 ;;		_pisca_cursor
   766 ;;		_tratar_relogio
   767 ;; This function is called by:
   768 ;;		Startup code after reset
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text0
   773  0018B8                     __ptext0:
   774                           	opt stack 0
   775  0018B8                     _main:
   776                           	opt stack 23
   777                           
   778                           ;exercicio_PIC_LCD_Serial.c: 26: SPBRG = (((20000000/64)/9600)-1);
   779                           
   780                           ;incstack = 0
   781  0018B8  0E1F               	movlw	31
   782  0018BA  6EAF               	movwf	4015,c	;volatile
   783                           
   784                           ;exercicio_PIC_LCD_Serial.c: 28: ADCON1 = 15;
   785  0018BC  0E0F               	movlw	15
   786  0018BE  6EC1               	movwf	4033,c	;volatile
   787                           
   788                           ;exercicio_PIC_LCD_Serial.c: 29: TRISAbits.RA1 = 1;
   789  0018C0  8292               	bsf	3986,1,c	;volatile
   790                           
   791                           ;exercicio_PIC_LCD_Serial.c: 30: TRISA = 1;
   792  0018C2  0E01               	movlw	1
   793  0018C4  6E92               	movwf	3986,c	;volatile
   794                           
   795                           ;exercicio_PIC_LCD_Serial.c: 31: PORTAbits.AN1 = 0;
   796  0018C6  9280               	bcf	3968,1,c	;volatile
   797                           
   798                           ;exercicio_PIC_LCD_Serial.c: 36: Relogio.segundo=0;
   799  0018C8  0E00               	movlw	0
   800  0018CA  6E4C               	movwf	_Relogio+3,c
   801  0018CC  0E00               	movlw	0
   802  0018CE  6E4B               	movwf	_Relogio+2,c
   803                           
   804                           ;exercicio_PIC_LCD_Serial.c: 37: Relogio.minuto=0;
   805  0018D0  0E00               	movlw	0
   806  0018D2  6E4A               	movwf	_Relogio+1,c
   807  0018D4  0E00               	movlw	0
   808  0018D6  6E49               	movwf	_Relogio,c
   809                           
   810                           ;exercicio_PIC_LCD_Serial.c: 38: Relogio.hora=0;
   811  0018D8  0E00               	movlw	0
   812  0018DA  6E4E               	movwf	_Relogio+5,c
   813  0018DC  0E00               	movlw	0
   814  0018DE  6E4D               	movwf	_Relogio+4,c
   815                           
   816                           ;exercicio_PIC_LCD_Serial.c: 40: Despertador.segundo=5;
   817  0018E0  0E00               	movlw	0
   818  0018E2  6E46               	movwf	_Despertador+3,c
   819  0018E4  0E05               	movlw	5
   820  0018E6  6E45               	movwf	_Despertador+2,c
   821                           
   822                           ;exercicio_PIC_LCD_Serial.c: 41: Despertador.minuto=0;
   823  0018E8  0E00               	movlw	0
   824  0018EA  6E44               	movwf	_Despertador+1,c
   825  0018EC  0E00               	movlw	0
   826  0018EE  6E43               	movwf	_Despertador,c
   827                           
   828                           ;exercicio_PIC_LCD_Serial.c: 42: Despertador.hora=0;
   829  0018F0  0E00               	movlw	0
   830  0018F2  6E48               	movwf	_Despertador+5,c
   831  0018F4  0E00               	movlw	0
   832  0018F6  6E47               	movwf	_Despertador+4,c
   833                           
   834                           ;exercicio_PIC_LCD_Serial.c: 44: Calendario.dia=1;
   835  0018F8  0E00               	movlw	0
   836  0018FA  6E3E               	movwf	_Calendario+1,c
   837  0018FC  0E01               	movlw	1
   838  0018FE  6E3D               	movwf	_Calendario,c
   839                           
   840                           ;exercicio_PIC_LCD_Serial.c: 45: Calendario.mes=1;
   841  001900  0E00               	movlw	0
   842  001902  6E40               	movwf	_Calendario+3,c
   843  001904  0E01               	movlw	1
   844  001906  6E3F               	movwf	_Calendario+2,c
   845                           
   846                           ;exercicio_PIC_LCD_Serial.c: 46: Calendario.ano=19;
   847  001908  0E00               	movlw	0
   848  00190A  6E42               	movwf	_Calendario+5,c
   849  00190C  0E13               	movlw	19
   850  00190E  6E41               	movwf	_Calendario+4,c
   851                           
   852                           ;exercicio_PIC_LCD_Serial.c: 48: T0CONbits.TMR0ON=1;
   853  001910  8ED5               	bsf	4053,7,c	;volatile
   854                           
   855                           ;exercicio_PIC_LCD_Serial.c: 50: INTCONbits.TMR0IE=1;
   856  001912  8AF2               	bsf	intcon,5,c	;volatile
   857                           
   858                           ;exercicio_PIC_LCD_Serial.c: 51: INTCONbits.TMR0IF=0;
   859  001914  94F2               	bcf	intcon,2,c	;volatile
   860                           
   861                           ;exercicio_PIC_LCD_Serial.c: 54: T0CONbits.T08BIT=0;
   862  001916  9CD5               	bcf	4053,6,c	;volatile
   863                           
   864                           ;exercicio_PIC_LCD_Serial.c: 55: T0CONbits.PSA=0;
   865  001918  96D5               	bcf	4053,3,c	;volatile
   866                           
   867                           ;exercicio_PIC_LCD_Serial.c: 56: T0CONbits.T0PS0=1;
   868  00191A  80D5               	bsf	4053,0,c	;volatile
   869                           
   870                           ;exercicio_PIC_LCD_Serial.c: 57: T0CONbits.T0PS1=0;
   871  00191C  92D5               	bcf	4053,1,c	;volatile
   872                           
   873                           ;exercicio_PIC_LCD_Serial.c: 58: T0CONbits.T0PS2=1;
   874  00191E  84D5               	bsf	4053,2,c	;volatile
   875                           
   876                           ;exercicio_PIC_LCD_Serial.c: 59: T0CONbits.T0CS=0;
   877  001920  9AD5               	bcf	4053,5,c	;volatile
   878                           
   879                           ;exercicio_PIC_LCD_Serial.c: 61: TMR0=2535;
   880  001922  0E09               	movlw	9
   881  001924  6ED7               	movwf	4055,c	;volatile
   882  001926  0EE7               	movlw	231
   883  001928  6ED6               	movwf	4054,c	;volatile
   884                           
   885                           ;exercicio_PIC_LCD_Serial.c: 63: T0CONbits.TMR0ON=1;
   886  00192A  8ED5               	bsf	4053,7,c	;volatile
   887                           
   888                           ;exercicio_PIC_LCD_Serial.c: 66: INTCONbits.GIEH=1;
   889  00192C  8EF2               	bsf	intcon,7,c	;volatile
   890                           
   891                           ;exercicio_PIC_LCD_Serial.c: 67: INTCONbits.GIEL=1;
   892  00192E  8CF2               	bsf	intcon,6,c	;volatile
   893                           
   894                           ;exercicio_PIC_LCD_Serial.c: 69: init_XLCD();
   895  001930  ECA0  F012         	call	_init_XLCD	;wreg free
   896                           
   897                           ;exercicio_PIC_LCD_Serial.c: 74: TRISAbits.TRISA0=0;
   898  001934  9092               	bcf	3986,0,c	;volatile
   899                           
   900                           ;exercicio_PIC_LCD_Serial.c: 75: TRISAbits.TRISA1=0;
   901  001936  9292               	bcf	3986,1,c	;volatile
   902                           
   903                           ;exercicio_PIC_LCD_Serial.c: 76: TRISCbits.TRISC0=0;
   904  001938  9094               	bcf	3988,0,c	;volatile
   905                           
   906                           ;exercicio_PIC_LCD_Serial.c: 79: TRISB=0x00;
   907  00193A  0E00               	movlw	0
   908  00193C  6E93               	movwf	3987,c	;volatile
   909                           
   910                           ;exercicio_PIC_LCD_Serial.c: 82: TRISDbits.TRISD0=1;
   911  00193E  8095               	bsf	3989,0,c	;volatile
   912                           
   913                           ;exercicio_PIC_LCD_Serial.c: 83: TRISDbits.TRISD1=1;
   914  001940  8295               	bsf	3989,1,c	;volatile
   915                           
   916                           ;exercicio_PIC_LCD_Serial.c: 84: TRISDbits.TRISD2=1;
   917  001942  8495               	bsf	3989,2,c	;volatile
   918                           
   919                           ;exercicio_PIC_LCD_Serial.c: 85: TRISDbits.TRISD3=1;
   920  001944  8695               	bsf	3989,3,c	;volatile
   921                           
   922                           ;exercicio_PIC_LCD_Serial.c: 88: TRISCbits.RC6=0;
   923  001946  9C94               	bcf	3988,6,c	;volatile
   924                           
   925                           ;exercicio_PIC_LCD_Serial.c: 89: TRISCbits.RC7=1;
   926  001948  8E94               	bsf	3988,7,c	;volatile
   927                           
   928                           ;exercicio_PIC_LCD_Serial.c: 92: RCSTA = 0b10010000;
   929  00194A  0E90               	movlw	144
   930  00194C  6EAB               	movwf	4011,c	;volatile
   931                           
   932                           ;exercicio_PIC_LCD_Serial.c: 93: TXSTA = 0b00100000;
   933  00194E  0E20               	movlw	32
   934  001950  6EAC               	movwf	4012,c	;volatile
   935                           
   936                           ;exercicio_PIC_LCD_Serial.c: 96: RCIF = 0;
   937  001952  9A9E               	bcf	3998,5,c	;volatile
   938                           
   939                           ;exercicio_PIC_LCD_Serial.c: 97: RCIP = 0;
   940  001954  9A9F               	bcf	3999,5,c	;volatile
   941                           
   942                           ;exercicio_PIC_LCD_Serial.c: 98: RCIE = 1;
   943  001956  8A9D               	bsf	3997,5,c	;volatile
   944                           
   945                           ;exercicio_PIC_LCD_Serial.c: 99: PEIE = 1;
   946  001958  8CF2               	bsf	intcon,6,c	;volatile
   947                           
   948                           ;exercicio_PIC_LCD_Serial.c: 101: ESTADO_COMUNICACAO = '0';
   949  00195A  0E00               	movlw	0
   950  00195C  6E31               	movwf	_ESTADO_COMUNICACAO+1,c
   951  00195E  0E30               	movlw	48
   952  001960  6E30               	movwf	_ESTADO_COMUNICACAO,c
   953  001962                     l3244:
   954                           
   955                           ;exercicio_PIC_LCD_Serial.c: 107: maquina_estado();
   956  001962  EC31  F012         	call	_maquina_estado	;wreg free
   957                           
   958                           ;exercicio_PIC_LCD_Serial.c: 109: checa_botao(&Relogio, &Despertador, &Calendario);
   959  001966  0E49               	movlw	low _Relogio
   960  001968  6E1D               	movwf	checa_botao@Relogio,c
   961  00196A  0E00               	movlw	high _Relogio
   962  00196C  6E1E               	movwf	checa_botao@Relogio+1,c
   963  00196E  0E43               	movlw	low _Despertador
   964  001970  6E1F               	movwf	checa_botao@Despertador,c
   965  001972  0E00               	movlw	high _Despertador
   966  001974  6E20               	movwf	checa_botao@Despertador+1,c
   967  001976  0E3D               	movlw	low _Calendario
   968  001978  6E21               	movwf	checa_botao@Calendario,c
   969  00197A  0E00               	movlw	high _Calendario
   970  00197C  6E22               	movwf	checa_botao@Calendario+1,c
   971  00197E  EC8C  F00F         	call	_checa_botao	;wreg free
   972                           
   973                           ;exercicio_PIC_LCD_Serial.c: 112: if(flag_time==1){
   974  001982  043C               	decf	_flag_time,w,c
   975  001984  A4D8               	btfss	status,2,c
   976  001986  D039               	goto	l3270
   977                           
   978                           ;exercicio_PIC_LCD_Serial.c: 113: tratar_relogio(&Relogio, &Calendario);
   979  001988  0E49               	movlw	low _Relogio
   980  00198A  6E0F               	movwf	tratar_relogio@Relogio,c
   981  00198C  0E00               	movlw	high _Relogio
   982  00198E  6E10               	movwf	tratar_relogio@Relogio+1,c
   983  001990  0E3D               	movlw	low _Calendario
   984  001992  6E11               	movwf	tratar_relogio@Calendario,c
   985  001994  0E00               	movlw	high _Calendario
   986  001996  6E12               	movwf	tratar_relogio@Calendario+1,c
   987  001998  EC99  F007         	call	_tratar_relogio	;wreg free
   988                           
   989                           ;exercicio_PIC_LCD_Serial.c: 116: WriteCmdXLCD(0x0C);
   990  00199C  0E0C               	movlw	12
   991  00199E  EC12  F012         	call	_WriteCmdXLCD
   992                           
   993                           ;exercicio_PIC_LCD_Serial.c: 117: exibir_lcd(&Relogio, &Despertador, &Calendario);
   994  0019A2  0E49               	movlw	low _Relogio
   995  0019A4  0100               	movlb	0	; () banked
   996  0019A6  6F67               	movwf	exibir_lcd@Relogio& (0+255),b
   997  0019A8  0E00               	movlw	high _Relogio
   998  0019AA  0100               	movlb	0	; () banked
   999  0019AC  6F68               	movwf	(exibir_lcd@Relogio+1)& (0+255),b
  1000  0019AE  0E43               	movlw	low _Despertador
  1001  0019B0  0100               	movlb	0	; () banked
  1002  0019B2  6F69               	movwf	exibir_lcd@Despertador& (0+255),b
  1003  0019B4  0E00               	movlw	high _Despertador
  1004  0019B6  0100               	movlb	0	; () banked
  1005  0019B8  6F6A               	movwf	(exibir_lcd@Despertador+1)& (0+255),b
  1006  0019BA  0E3D               	movlw	low _Calendario
  1007  0019BC  0100               	movlb	0	; () banked
  1008  0019BE  6F6B               	movwf	exibir_lcd@Calendario& (0+255),b
  1009  0019C0  0E00               	movlw	high _Calendario
  1010  0019C2  0100               	movlb	0	; () banked
  1011  0019C4  6F6C               	movwf	(exibir_lcd@Calendario+1)& (0+255),b
  1012  0019C6  EC41  F004         	call	_exibir_lcd	;wreg free
  1013                           
  1014                           ;exercicio_PIC_LCD_Serial.c: 119: WriteCmdXLCD(0x0F);
  1015  0019CA  0E0F               	movlw	15
  1016  0019CC  EC12  F012         	call	_WriteCmdXLCD
  1017                           
  1018                           ;exercicio_PIC_LCD_Serial.c: 121: pisca_cursor();
  1019  0019D0  EC86  F00E         	call	_pisca_cursor	;wreg free
  1020                           
  1021                           ;exercicio_PIC_LCD_Serial.c: 124: PORTAbits.RA0=1;
  1022  0019D4  8080               	bsf	3968,0,c	;volatile
  1023                           
  1024                           ;exercicio_PIC_LCD_Serial.c: 125: _delay((unsigned long)((70)*(20000000/4000.0)));
  1025  0019D6  0E02               	movlw	2
  1026  0019D8  6E2F               	movwf	(??_main+1)& (0+255),c
  1027  0019DA  0EC7               	movlw	199
  1028  0019DC  6E2E               	movwf	??_main& (0+255),c
  1029  0019DE  0E88               	movlw	136
  1030  0019E0                     u3257:
  1031  0019E0  2EE8               	decfsz	wreg,f,c
  1032  0019E2  D7FE               	bra	u3257
  1033  0019E4  2E2E               	decfsz	??_main& (0+255),f,c
  1034  0019E6  D7FC               	bra	u3257
  1035  0019E8  2E2F               	decfsz	(??_main+1)& (0+255),f,c
  1036  0019EA  D7FA               	bra	u3257
  1037  0019EC  D000               	nop2	
  1038                           
  1039                           ;exercicio_PIC_LCD_Serial.c: 126: PORTAbits.RA0=0;
  1040  0019EE  9080               	bcf	3968,0,c	;volatile
  1041                           
  1042                           ;exercicio_PIC_LCD_Serial.c: 127: if(despertar) controle_tempo_despertar++;
  1043  0019F0  503B               	movf	_despertar,w,c
  1044  0019F2  B4D8               	btfsc	status,2,c
  1045  0019F4  D002               	goto	l3270
  1046  0019F6  4A34               	infsnz	_controle_tempo_despertar,f,c
  1047  0019F8  2A35               	incf	_controle_tempo_despertar+1,f,c
  1048  0019FA                     l3270:
  1049                           
  1050                           ;exercicio_PIC_LCD_Serial.c: 128: }
  1051                           ;exercicio_PIC_LCD_Serial.c: 131: if(Relogio.segundo==Despertador.segundo
  1052                           ;exercicio_PIC_LCD_Serial.c: 132: && Relogio.minuto==Despertador.minuto
  1053                           ;exercicio_PIC_LCD_Serial.c: 133: && Relogio.hora==Despertador.hora) despertar=1;
  1054  0019FA  5045               	movf	_Despertador+2,w,c
  1055  0019FC  184B               	xorwf	_Relogio+2,w,c
  1056  0019FE  E114               	bnz	l3278
  1057  001A00  5046               	movf	_Despertador+3,w,c
  1058  001A02  184C               	xorwf	_Relogio+3,w,c
  1059  001A04  A4D8               	btfss	status,2,c
  1060  001A06  D010               	goto	l3278
  1061  001A08  5043               	movf	_Despertador,w,c
  1062  001A0A  1849               	xorwf	_Relogio,w,c
  1063  001A0C  E10D               	bnz	l3278
  1064  001A0E  5044               	movf	_Despertador+1,w,c
  1065  001A10  184A               	xorwf	_Relogio+1,w,c
  1066  001A12  A4D8               	btfss	status,2,c
  1067  001A14  D009               	goto	l3278
  1068  001A16  5047               	movf	_Despertador+4,w,c
  1069  001A18  184D               	xorwf	_Relogio+4,w,c
  1070  001A1A  E106               	bnz	l3278
  1071  001A1C  5048               	movf	_Despertador+5,w,c
  1072  001A1E  184E               	xorwf	_Relogio+5,w,c
  1073  001A20  A4D8               	btfss	status,2,c
  1074  001A22  D002               	goto	l3278
  1075  001A24  0E01               	movlw	1
  1076  001A26  6E3B               	movwf	_despertar,c
  1077  001A28                     l3278:
  1078                           
  1079                           ;exercicio_PIC_LCD_Serial.c: 135: if(despertar==1 && controle_tempo_despertar<10) PORTAb
      +                          its.RA1=1;
  1080  001A28  043B               	decf	_despertar,w,c
  1081  001A2A  A4D8               	btfss	status,2,c
  1082  001A2C  D00A               	goto	l325
  1083  001A2E  BE35               	btfsc	_controle_tempo_despertar+1,7,c
  1084  001A30  D006               	goto	l3282
  1085  001A32  5035               	movf	_controle_tempo_despertar+1,w,c
  1086  001A34  E106               	bnz	l325
  1087  001A36  0E0A               	movlw	10
  1088  001A38  5C34               	subwf	_controle_tempo_despertar,w,c
  1089  001A3A  B0D8               	btfsc	status,0,c
  1090  001A3C  D002               	goto	l325
  1091  001A3E                     l3282:
  1092  001A3E  8280               	bsf	3968,1,c	;volatile
  1093  001A40  D001               	goto	l3284
  1094  001A42                     l325:
  1095                           
  1096                           ;exercicio_PIC_LCD_Serial.c: 136: else PORTAbits.RA1=0;
  1097  001A42  9280               	bcf	3968,1,c	;volatile
  1098  001A44                     l3284:
  1099                           
  1100                           ;exercicio_PIC_LCD_Serial.c: 138: if(controle_tempo_despertar==10){
  1101  001A44  0E0A               	movlw	10
  1102  001A46  1834               	xorwf	_controle_tempo_despertar,w,c
  1103  001A48  1035               	iorwf	_controle_tempo_despertar+1,w,c
  1104  001A4A  A4D8               	btfss	status,2,c
  1105  001A4C  D78A               	goto	l3244
  1106                           
  1107                           ;exercicio_PIC_LCD_Serial.c: 139: controle_tempo_despertar=0;
  1108  001A4E  0E00               	movlw	0
  1109  001A50  6E35               	movwf	_controle_tempo_despertar+1,c
  1110  001A52  0E00               	movlw	0
  1111  001A54  6E34               	movwf	_controle_tempo_despertar,c
  1112                           
  1113                           ;exercicio_PIC_LCD_Serial.c: 140: despertar=0;
  1114  001A56  0E00               	movlw	0
  1115  001A58  6E3B               	movwf	_despertar,c
  1116  001A5A  D783               	goto	l3244
  1117  001A5C                     __end_of_main:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           intcon	equ	0xFF2
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           status	equ	0xFD8
  1129                           
  1130 ;; *************** function _tratar_relogio *****************
  1131 ;; Defined at:
  1132 ;;		line 3 in file "relogio.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  Relogio         2   14[COMRAM] PTR struct .
  1135 ;;		 -> Relogio(6), 
  1136 ;;  Calendario      2   16[COMRAM] PTR struct .
  1137 ;;		 -> Calendario(6), 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1149 ;;      Params:         4       0       0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1151 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1152 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1153 ;;Total ram usage:       11 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text1
  1164  000F32                     __ptext1:
  1165                           	opt stack 0
  1166  000F32                     _tratar_relogio:
  1167                           	opt stack 29
  1168                           
  1169                           ;relogio.c: 5: Relogio->segundo++;
  1170                           
  1171                           ;incstack = 0
  1172  000F32  EE20 F002          	lfsr	2,2
  1173  000F36  500F               	movf	tratar_relogio@Relogio,w,c
  1174  000F38  26D9               	addwf	fsr2l,f,c
  1175  000F3A  5010               	movf	tratar_relogio@Relogio+1,w,c
  1176  000F3C  22DA               	addwfc	fsr2h,f,c
  1177  000F3E  2ADE               	incf	postinc2,f,c
  1178  000F40  0E00               	movlw	0
  1179  000F42  22DD               	addwfc	postdec2,f,c
  1180                           
  1181                           ;relogio.c: 7: if(Relogio->segundo>59){
  1182  000F44  EE20 F002          	lfsr	2,2
  1183  000F48  500F               	movf	tratar_relogio@Relogio,w,c
  1184  000F4A  26D9               	addwf	fsr2l,f,c
  1185  000F4C  5010               	movf	tratar_relogio@Relogio+1,w,c
  1186  000F4E  22DA               	addwfc	fsr2h,f,c
  1187  000F50  0E01               	movlw	1
  1188  000F52  BEDB               	btfsc	plusw2,7,c
  1189  000F54  D018               	goto	l168
  1190  000F56  0E01               	movlw	1
  1191  000F58  50DB               	movf	plusw2,w,c
  1192  000F5A  E104               	bnz	u2750
  1193  000F5C  0E3C               	movlw	60
  1194  000F5E  5CDE               	subwf	postinc2,w,c
  1195  000F60  A0D8               	btfss	status,0,c
  1196  000F62  D011               	goto	l168
  1197  000F64                     u2750:
  1198                           
  1199                           ;relogio.c: 8: Relogio->minuto++;
  1200  000F64  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1201  000F68  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1202  000F6C  2ADE               	incf	postinc2,f,c
  1203  000F6E  0E00               	movlw	0
  1204  000F70  22DD               	addwfc	postdec2,f,c
  1205                           
  1206                           ;relogio.c: 9: Relogio->segundo=0;
  1207  000F72  EE20 F002          	lfsr	2,2
  1208  000F76  500F               	movf	tratar_relogio@Relogio,w,c
  1209  000F78  26D9               	addwf	fsr2l,f,c
  1210  000F7A  5010               	movf	tratar_relogio@Relogio+1,w,c
  1211  000F7C  22DA               	addwfc	fsr2h,f,c
  1212  000F7E  0E00               	movlw	0
  1213  000F80  6EDE               	movwf	postinc2,c
  1214  000F82  0E00               	movlw	0
  1215  000F84  6EDD               	movwf	postdec2,c
  1216  000F86                     l168:
  1217                           
  1218                           ;relogio.c: 10: }
  1219                           ;relogio.c: 11: if(Relogio->segundo<0){
  1220  000F86  EE20 F002          	lfsr	2,2
  1221  000F8A  500F               	movf	tratar_relogio@Relogio,w,c
  1222  000F8C  26D9               	addwf	fsr2l,f,c
  1223  000F8E  5010               	movf	tratar_relogio@Relogio+1,w,c
  1224  000F90  22DA               	addwfc	fsr2h,f,c
  1225  000F92  0E01               	movlw	1
  1226  000F94  AEDB               	btfss	plusw2,7,c
  1227  000F96  D011               	goto	l169
  1228                           
  1229                           ;relogio.c: 12: Relogio->segundo=59;
  1230  000F98  EE20 F002          	lfsr	2,2
  1231  000F9C  500F               	movf	tratar_relogio@Relogio,w,c
  1232  000F9E  26D9               	addwf	fsr2l,f,c
  1233  000FA0  5010               	movf	tratar_relogio@Relogio+1,w,c
  1234  000FA2  22DA               	addwfc	fsr2h,f,c
  1235  000FA4  0E3B               	movlw	59
  1236  000FA6  6EDE               	movwf	postinc2,c
  1237  000FA8  0E00               	movlw	0
  1238  000FAA  6EDD               	movwf	postdec2,c
  1239                           
  1240                           ;relogio.c: 13: Relogio->minuto--;
  1241  000FAC  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1242  000FB0  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1243  000FB4  06DE               	decf	postinc2,f,c
  1244  000FB6  0E00               	movlw	0
  1245  000FB8  5ADD               	subwfb	postdec2,f,c
  1246  000FBA                     l169:
  1247                           
  1248                           ;relogio.c: 14: }
  1249                           ;relogio.c: 16: if(Relogio->minuto>59){
  1250  000FBA  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1251  000FBE  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1252  000FC2  0E01               	movlw	1
  1253  000FC4  BEDB               	btfsc	plusw2,7,c
  1254  000FC6  D018               	goto	l2810
  1255  000FC8  0E01               	movlw	1
  1256  000FCA  50DB               	movf	plusw2,w,c
  1257  000FCC  E104               	bnz	u2770
  1258  000FCE  0E3C               	movlw	60
  1259  000FD0  5CDE               	subwf	postinc2,w,c
  1260  000FD2  A0D8               	btfss	status,0,c
  1261  000FD4  D011               	goto	l2810
  1262  000FD6                     u2770:
  1263                           
  1264                           ;relogio.c: 17: Relogio->hora++;
  1265  000FD6  EE20 F004          	lfsr	2,4
  1266  000FDA  500F               	movf	tratar_relogio@Relogio,w,c
  1267  000FDC  26D9               	addwf	fsr2l,f,c
  1268  000FDE  5010               	movf	tratar_relogio@Relogio+1,w,c
  1269  000FE0  22DA               	addwfc	fsr2h,f,c
  1270  000FE2  2ADE               	incf	postinc2,f,c
  1271  000FE4  0E00               	movlw	0
  1272  000FE6  22DD               	addwfc	postdec2,f,c
  1273                           
  1274                           ;relogio.c: 18: Relogio->minuto=0;
  1275  000FE8  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1276  000FEC  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1277  000FF0  0E00               	movlw	0
  1278  000FF2  6EDE               	movwf	postinc2,c
  1279  000FF4  0E00               	movlw	0
  1280  000FF6  6EDD               	movwf	postdec2,c
  1281  000FF8                     l2810:
  1282                           
  1283                           ;relogio.c: 19: }
  1284                           ;relogio.c: 20: if(Relogio->minuto<0){
  1285  000FF8  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1286  000FFC  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1287  001000  0E01               	movlw	1
  1288  001002  AEDB               	btfss	plusw2,7,c
  1289  001004  D011               	goto	l2816
  1290                           
  1291                           ;relogio.c: 21: Relogio->minuto=59;
  1292  001006  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1293  00100A  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1294  00100E  0E3B               	movlw	59
  1295  001010  6EDE               	movwf	postinc2,c
  1296  001012  0E00               	movlw	0
  1297  001014  6EDD               	movwf	postdec2,c
  1298                           
  1299                           ;relogio.c: 22: Relogio->hora--;
  1300  001016  EE20 F004          	lfsr	2,4
  1301  00101A  500F               	movf	tratar_relogio@Relogio,w,c
  1302  00101C  26D9               	addwf	fsr2l,f,c
  1303  00101E  5010               	movf	tratar_relogio@Relogio+1,w,c
  1304  001020  22DA               	addwfc	fsr2h,f,c
  1305  001022  06DE               	decf	postinc2,f,c
  1306  001024  0E00               	movlw	0
  1307  001026  5ADD               	subwfb	postdec2,f,c
  1308  001028                     l2816:
  1309                           
  1310                           ;relogio.c: 23: }
  1311                           ;relogio.c: 25: if(Relogio->hora>23){
  1312  001028  EE20 F004          	lfsr	2,4
  1313  00102C  500F               	movf	tratar_relogio@Relogio,w,c
  1314  00102E  26D9               	addwf	fsr2l,f,c
  1315  001030  5010               	movf	tratar_relogio@Relogio+1,w,c
  1316  001032  22DA               	addwfc	fsr2h,f,c
  1317  001034  0E01               	movlw	1
  1318  001036  BEDB               	btfsc	plusw2,7,c
  1319  001038  D018               	goto	l172
  1320  00103A  0E01               	movlw	1
  1321  00103C  50DB               	movf	plusw2,w,c
  1322  00103E  E104               	bnz	u2790
  1323  001040  0E18               	movlw	24
  1324  001042  5CDE               	subwf	postinc2,w,c
  1325  001044  A0D8               	btfss	status,0,c
  1326  001046  D011               	goto	l172
  1327  001048                     u2790:
  1328                           
  1329                           ;relogio.c: 26: Calendario->dia++;
  1330  001048  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1331  00104C  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1332  001050  2ADE               	incf	postinc2,f,c
  1333  001052  0E00               	movlw	0
  1334  001054  22DD               	addwfc	postdec2,f,c
  1335                           
  1336                           ;relogio.c: 27: Relogio->hora=0;
  1337  001056  EE20 F004          	lfsr	2,4
  1338  00105A  500F               	movf	tratar_relogio@Relogio,w,c
  1339  00105C  26D9               	addwf	fsr2l,f,c
  1340  00105E  5010               	movf	tratar_relogio@Relogio+1,w,c
  1341  001060  22DA               	addwfc	fsr2h,f,c
  1342  001062  0E00               	movlw	0
  1343  001064  6EDE               	movwf	postinc2,c
  1344  001066  0E00               	movlw	0
  1345  001068  6EDD               	movwf	postdec2,c
  1346  00106A                     l172:
  1347                           
  1348                           ;relogio.c: 28: }
  1349                           ;relogio.c: 29: if(Relogio->hora<0){
  1350  00106A  EE20 F004          	lfsr	2,4
  1351  00106E  500F               	movf	tratar_relogio@Relogio,w,c
  1352  001070  26D9               	addwf	fsr2l,f,c
  1353  001072  5010               	movf	tratar_relogio@Relogio+1,w,c
  1354  001074  22DA               	addwfc	fsr2h,f,c
  1355  001076  0E01               	movlw	1
  1356  001078  AEDB               	btfss	plusw2,7,c
  1357  00107A  D011               	goto	l2822
  1358                           
  1359                           ;relogio.c: 30: Relogio->hora=23;
  1360  00107C  EE20 F004          	lfsr	2,4
  1361  001080  500F               	movf	tratar_relogio@Relogio,w,c
  1362  001082  26D9               	addwf	fsr2l,f,c
  1363  001084  5010               	movf	tratar_relogio@Relogio+1,w,c
  1364  001086  22DA               	addwfc	fsr2h,f,c
  1365  001088  0E17               	movlw	23
  1366  00108A  6EDE               	movwf	postinc2,c
  1367  00108C  0E00               	movlw	0
  1368  00108E  6EDD               	movwf	postdec2,c
  1369                           
  1370                           ;relogio.c: 31: Calendario->dia--;
  1371  001090  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1372  001094  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1373  001098  06DE               	decf	postinc2,f,c
  1374  00109A  0E00               	movlw	0
  1375  00109C  5ADD               	subwfb	postdec2,f,c
  1376  00109E                     l2822:
  1377                           
  1378                           ;relogio.c: 32: }
  1379                           ;relogio.c: 34: if(Calendario->dia>qtdDias_mes[Calendario->mes]){
  1380  00109E  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1381  0010A2  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1382  0010A6  EE10 F002          	lfsr	1,2
  1383  0010AA  5011               	movf	tratar_relogio@Calendario,w,c
  1384  0010AC  26E1               	addwf	fsr1l,f,c
  1385  0010AE  5012               	movf	tratar_relogio@Calendario+1,w,c
  1386  0010B0  22E2               	addwfc	fsr1h,f,c
  1387  0010B2  CFE6 F015          	movff	postinc1,??_tratar_relogio+2
  1388  0010B6  CFE5 F016          	movff	postdec1,??_tratar_relogio+3
  1389  0010BA  90D8               	bcf	status,0,c
  1390  0010BC  3615               	rlcf	??_tratar_relogio+2,f,c
  1391  0010BE  3616               	rlcf	??_tratar_relogio+3,f,c
  1392  0010C0  0EA3               	movlw	low _qtdDias_mes
  1393  0010C2  2415               	addwf	??_tratar_relogio+2,w,c
  1394  0010C4  6EE1               	movwf	fsr1l,c
  1395  0010C6  0E00               	movlw	high _qtdDias_mes
  1396  0010C8  2016               	addwfc	??_tratar_relogio+3,w,c
  1397  0010CA  6EE2               	movwf	fsr1h,c
  1398  0010CC  50DE               	movf	postinc2,w,c
  1399  0010CE  5CE6               	subwf	postinc1,w,c
  1400  0010D0  50E6               	movf	postinc1,w,c
  1401  0010D2  0A80               	xorlw	128
  1402  0010D4  6E19               	movwf	(??_tratar_relogio+6)& (0+255),c
  1403  0010D6  50DE               	movf	postinc2,w,c
  1404  0010D8  0A80               	xorlw	128
  1405  0010DA  5819               	subwfb	(??_tratar_relogio+6)& (0+255),w,c
  1406  0010DC  B0D8               	btfsc	status,0,c
  1407  0010DE  D011               	goto	l2828
  1408                           
  1409                           ;relogio.c: 35: Calendario->mes++;
  1410  0010E0  EE20 F002          	lfsr	2,2
  1411  0010E4  5011               	movf	tratar_relogio@Calendario,w,c
  1412  0010E6  26D9               	addwf	fsr2l,f,c
  1413  0010E8  5012               	movf	tratar_relogio@Calendario+1,w,c
  1414  0010EA  22DA               	addwfc	fsr2h,f,c
  1415  0010EC  2ADE               	incf	postinc2,f,c
  1416  0010EE  0E00               	movlw	0
  1417  0010F0  22DD               	addwfc	postdec2,f,c
  1418                           
  1419                           ;relogio.c: 36: Calendario->dia=1;
  1420  0010F2  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1421  0010F6  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1422  0010FA  0E01               	movlw	1
  1423  0010FC  6EDE               	movwf	postinc2,c
  1424  0010FE  0E00               	movlw	0
  1425  001100  6EDD               	movwf	postdec2,c
  1426  001102                     l2828:
  1427                           
  1428                           ;relogio.c: 37: }
  1429                           ;relogio.c: 38: if(Calendario->dia<1){
  1430  001102  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1431  001106  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1432  00110A  0E01               	movlw	1
  1433  00110C  BEDB               	btfsc	plusw2,7,c
  1434  00110E  D006               	goto	l2830
  1435  001110  0E01               	movlw	1
  1436  001112  50DB               	movf	plusw2,w,c
  1437  001114  E127               	bnz	l2834
  1438  001116  04DE               	decf	postinc2,w,c
  1439  001118  B0D8               	btfsc	status,0,c
  1440  00111A  D024               	goto	l2834
  1441  00111C                     l2830:
  1442                           
  1443                           ;relogio.c: 39: Calendario->mes--;
  1444  00111C  EE20 F002          	lfsr	2,2
  1445  001120  5011               	movf	tratar_relogio@Calendario,w,c
  1446  001122  26D9               	addwf	fsr2l,f,c
  1447  001124  5012               	movf	tratar_relogio@Calendario+1,w,c
  1448  001126  22DA               	addwfc	fsr2h,f,c
  1449  001128  06DE               	decf	postinc2,f,c
  1450  00112A  0E00               	movlw	0
  1451  00112C  5ADD               	subwfb	postdec2,f,c
  1452                           
  1453                           ;relogio.c: 40: Calendario->dia=qtdDias_mes[Calendario->mes];
  1454  00112E  EE20 F002          	lfsr	2,2
  1455  001132  5011               	movf	tratar_relogio@Calendario,w,c
  1456  001134  26D9               	addwf	fsr2l,f,c
  1457  001136  5012               	movf	tratar_relogio@Calendario+1,w,c
  1458  001138  22DA               	addwfc	fsr2h,f,c
  1459  00113A  CFDE F013          	movff	postinc2,??_tratar_relogio
  1460  00113E  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1461  001142  90D8               	bcf	status,0,c
  1462  001144  3613               	rlcf	??_tratar_relogio,f,c
  1463  001146  3614               	rlcf	??_tratar_relogio+1,f,c
  1464  001148  0EA3               	movlw	low _qtdDias_mes
  1465  00114A  2413               	addwf	??_tratar_relogio,w,c
  1466  00114C  6ED9               	movwf	fsr2l,c
  1467  00114E  0E00               	movlw	high _qtdDias_mes
  1468  001150  2014               	addwfc	??_tratar_relogio+1,w,c
  1469  001152  6EDA               	movwf	fsr2h,c
  1470  001154  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1471  001158  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1472  00115C  CFDE FFE6          	movff	postinc2,postinc1
  1473  001160  CFDD FFE5          	movff	postdec2,postdec1
  1474  001164                     l2834:
  1475                           
  1476                           ;relogio.c: 41: }
  1477                           ;relogio.c: 43: if(Calendario->mes>12){
  1478  001164  EE20 F002          	lfsr	2,2
  1479  001168  5011               	movf	tratar_relogio@Calendario,w,c
  1480  00116A  26D9               	addwf	fsr2l,f,c
  1481  00116C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1482  00116E  22DA               	addwfc	fsr2h,f,c
  1483  001170  0E01               	movlw	1
  1484  001172  BEDB               	btfsc	plusw2,7,c
  1485  001174  D01A               	goto	l176
  1486  001176  0E01               	movlw	1
  1487  001178  50DB               	movf	plusw2,w,c
  1488  00117A  E104               	bnz	u2830
  1489  00117C  0E0D               	movlw	13
  1490  00117E  5CDE               	subwf	postinc2,w,c
  1491  001180  A0D8               	btfss	status,0,c
  1492  001182  D013               	goto	l176
  1493  001184                     u2830:
  1494                           
  1495                           ;relogio.c: 44: Calendario->ano++;
  1496  001184  EE20 F004          	lfsr	2,4
  1497  001188  5011               	movf	tratar_relogio@Calendario,w,c
  1498  00118A  26D9               	addwf	fsr2l,f,c
  1499  00118C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1500  00118E  22DA               	addwfc	fsr2h,f,c
  1501  001190  2ADE               	incf	postinc2,f,c
  1502  001192  0E00               	movlw	0
  1503  001194  22DD               	addwfc	postdec2,f,c
  1504                           
  1505                           ;relogio.c: 45: Calendario->mes=1;
  1506  001196  EE20 F002          	lfsr	2,2
  1507  00119A  5011               	movf	tratar_relogio@Calendario,w,c
  1508  00119C  26D9               	addwf	fsr2l,f,c
  1509  00119E  5012               	movf	tratar_relogio@Calendario+1,w,c
  1510  0011A0  22DA               	addwfc	fsr2h,f,c
  1511  0011A2  0E01               	movlw	1
  1512  0011A4  6EDE               	movwf	postinc2,c
  1513  0011A6  0E00               	movlw	0
  1514  0011A8  6EDD               	movwf	postdec2,c
  1515  0011AA                     l176:
  1516                           
  1517                           ;relogio.c: 46: }
  1518                           ;relogio.c: 47: if(Calendario->mes<1){
  1519  0011AA  EE20 F002          	lfsr	2,2
  1520  0011AE  5011               	movf	tratar_relogio@Calendario,w,c
  1521  0011B0  26D9               	addwf	fsr2l,f,c
  1522  0011B2  5012               	movf	tratar_relogio@Calendario+1,w,c
  1523  0011B4  22DA               	addwfc	fsr2h,f,c
  1524  0011B6  0E01               	movlw	1
  1525  0011B8  BEDB               	btfsc	plusw2,7,c
  1526  0011BA  D006               	goto	l2838
  1527  0011BC  0E01               	movlw	1
  1528  0011BE  50DB               	movf	plusw2,w,c
  1529  0011C0  E131               	bnz	l2844
  1530  0011C2  04DE               	decf	postinc2,w,c
  1531  0011C4  B0D8               	btfsc	status,0,c
  1532  0011C6  D02E               	goto	l2844
  1533  0011C8                     l2838:
  1534                           
  1535                           ;relogio.c: 48: Calendario->mes=12;
  1536  0011C8  EE20 F002          	lfsr	2,2
  1537  0011CC  5011               	movf	tratar_relogio@Calendario,w,c
  1538  0011CE  26D9               	addwf	fsr2l,f,c
  1539  0011D0  5012               	movf	tratar_relogio@Calendario+1,w,c
  1540  0011D2  22DA               	addwfc	fsr2h,f,c
  1541  0011D4  0E0C               	movlw	12
  1542  0011D6  6EDE               	movwf	postinc2,c
  1543  0011D8  0E00               	movlw	0
  1544  0011DA  6EDD               	movwf	postdec2,c
  1545                           
  1546                           ;relogio.c: 49: Calendario->dia=qtdDias_mes[Calendario->mes];
  1547  0011DC  EE20 F002          	lfsr	2,2
  1548  0011E0  5011               	movf	tratar_relogio@Calendario,w,c
  1549  0011E2  26D9               	addwf	fsr2l,f,c
  1550  0011E4  5012               	movf	tratar_relogio@Calendario+1,w,c
  1551  0011E6  22DA               	addwfc	fsr2h,f,c
  1552  0011E8  CFDE F013          	movff	postinc2,??_tratar_relogio
  1553  0011EC  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1554  0011F0  90D8               	bcf	status,0,c
  1555  0011F2  3613               	rlcf	??_tratar_relogio,f,c
  1556  0011F4  3614               	rlcf	??_tratar_relogio+1,f,c
  1557  0011F6  0EA3               	movlw	low _qtdDias_mes
  1558  0011F8  2413               	addwf	??_tratar_relogio,w,c
  1559  0011FA  6ED9               	movwf	fsr2l,c
  1560  0011FC  0E00               	movlw	high _qtdDias_mes
  1561  0011FE  2014               	addwfc	??_tratar_relogio+1,w,c
  1562  001200  6EDA               	movwf	fsr2h,c
  1563  001202  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1564  001206  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1565  00120A  CFDE FFE6          	movff	postinc2,postinc1
  1566  00120E  CFDD FFE5          	movff	postdec2,postdec1
  1567                           
  1568                           ;relogio.c: 50: Calendario->ano--;
  1569  001212  EE20 F004          	lfsr	2,4
  1570  001216  5011               	movf	tratar_relogio@Calendario,w,c
  1571  001218  26D9               	addwf	fsr2l,f,c
  1572  00121A  5012               	movf	tratar_relogio@Calendario+1,w,c
  1573  00121C  22DA               	addwfc	fsr2h,f,c
  1574  00121E  06DE               	decf	postinc2,f,c
  1575  001220  0E00               	movlw	0
  1576  001222  5ADD               	subwfb	postdec2,f,c
  1577  001224                     l2844:
  1578                           
  1579                           ;relogio.c: 51: }
  1580                           ;relogio.c: 53: if(Calendario->ano>=100){
  1581  001224  EE20 F004          	lfsr	2,4
  1582  001228  5011               	movf	tratar_relogio@Calendario,w,c
  1583  00122A  26D9               	addwf	fsr2l,f,c
  1584  00122C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1585  00122E  22DA               	addwfc	fsr2h,f,c
  1586  001230  0E01               	movlw	1
  1587  001232  BEDB               	btfsc	plusw2,7,c
  1588  001234  D011               	goto	l178
  1589  001236  0E01               	movlw	1
  1590  001238  50DB               	movf	plusw2,w,c
  1591  00123A  E104               	bnz	u2850
  1592  00123C  0E64               	movlw	100
  1593  00123E  5CDE               	subwf	postinc2,w,c
  1594  001240  A0D8               	btfss	status,0,c
  1595  001242  D00A               	goto	l178
  1596  001244                     u2850:
  1597                           
  1598                           ;relogio.c: 54: Calendario->ano=00;
  1599  001244  EE20 F004          	lfsr	2,4
  1600  001248  5011               	movf	tratar_relogio@Calendario,w,c
  1601  00124A  26D9               	addwf	fsr2l,f,c
  1602  00124C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1603  00124E  22DA               	addwfc	fsr2h,f,c
  1604  001250  0E00               	movlw	0
  1605  001252  6EDE               	movwf	postinc2,c
  1606  001254  0E00               	movlw	0
  1607  001256  6EDD               	movwf	postdec2,c
  1608  001258                     l178:
  1609                           
  1610                           ;relogio.c: 55: }
  1611                           ;relogio.c: 56: if(Calendario->ano<0){
  1612  001258  EE20 F004          	lfsr	2,4
  1613  00125C  5011               	movf	tratar_relogio@Calendario,w,c
  1614  00125E  26D9               	addwf	fsr2l,f,c
  1615  001260  5012               	movf	tratar_relogio@Calendario+1,w,c
  1616  001262  22DA               	addwfc	fsr2h,f,c
  1617  001264  0E01               	movlw	1
  1618  001266  AEDB               	btfss	plusw2,7,c
  1619  001268  0012               	return	
  1620                           
  1621                           ;relogio.c: 57: Calendario->ano=99;
  1622  00126A  EE20 F004          	lfsr	2,4
  1623  00126E  5011               	movf	tratar_relogio@Calendario,w,c
  1624  001270  26D9               	addwf	fsr2l,f,c
  1625  001272  5012               	movf	tratar_relogio@Calendario+1,w,c
  1626  001274  22DA               	addwfc	fsr2h,f,c
  1627  001276  0E63               	movlw	99
  1628  001278  6EDE               	movwf	postinc2,c
  1629  00127A  0E00               	movlw	0
  1630  00127C  6EDD               	movwf	postdec2,c
  1631  00127E  0012               	return	
  1632  001280                     __end_of_tratar_relogio:
  1633                           	opt stack 0
  1634                           tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           intcon	equ	0xFF2
  1639                           postinc0	equ	0xFEE
  1640                           wreg	equ	0xFE8
  1641                           postinc1	equ	0xFE6
  1642                           postdec1	equ	0xFE5
  1643                           fsr1h	equ	0xFE2
  1644                           fsr1l	equ	0xFE1
  1645                           postinc2	equ	0xFDE
  1646                           postdec2	equ	0xFDD
  1647                           plusw2	equ	0xFDB
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _pisca_cursor *****************
  1653 ;; Defined at:
  1654 ;;		line 176 in file "display_LCD.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    4
  1675 ;; This function calls:
  1676 ;;		_SetDDRamAddr
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text2
  1683  001D0C                     __ptext2:
  1684                           	opt stack 0
  1685  001D0C                     _pisca_cursor:
  1686                           	opt stack 26
  1687                           
  1688                           ;display_LCD.c: 177: if(tela_exibida==0){
  1689                           
  1690                           ;incstack = 0
  1691  001D0C  504F               	movf	_tela_exibida,w,c
  1692  001D0E  1050               	iorwf	_tela_exibida+1,w,c
  1693  001D10  A4D8               	btfss	status,2,c
  1694  001D12  D05E               	goto	l2774
  1695                           
  1696                           ;display_LCD.c: 178: if(cursor==0) SetDDRamAddr(0x06);
  1697  001D14  5036               	movf	_cursor,w,c
  1698  001D16  1037               	iorwf	_cursor+1,w,c
  1699  001D18  A4D8               	btfss	status,2,c
  1700  001D1A  D003               	goto	l2730
  1701  001D1C  0E06               	movlw	6
  1702  001D1E  EC86  F011         	call	_SetDDRamAddr
  1703  001D22                     l2730:
  1704                           
  1705                           ;display_LCD.c: 179: if(cursor==1) SetDDRamAddr(0x07);
  1706  001D22  0436               	decf	_cursor,w,c
  1707  001D24  1037               	iorwf	_cursor+1,w,c
  1708  001D26  A4D8               	btfss	status,2,c
  1709  001D28  D003               	goto	l2734
  1710  001D2A  0E07               	movlw	7
  1711  001D2C  EC86  F011         	call	_SetDDRamAddr
  1712  001D30                     l2734:
  1713                           
  1714                           ;display_LCD.c: 180: if(cursor==2) SetDDRamAddr(0x09);
  1715  001D30  0E02               	movlw	2
  1716  001D32  1836               	xorwf	_cursor,w,c
  1717  001D34  1037               	iorwf	_cursor+1,w,c
  1718  001D36  A4D8               	btfss	status,2,c
  1719  001D38  D003               	goto	l2738
  1720  001D3A  0E09               	movlw	9
  1721  001D3C  EC86  F011         	call	_SetDDRamAddr
  1722  001D40                     l2738:
  1723                           
  1724                           ;display_LCD.c: 181: if(cursor==3) SetDDRamAddr(0x0A);
  1725  001D40  0E03               	movlw	3
  1726  001D42  1836               	xorwf	_cursor,w,c
  1727  001D44  1037               	iorwf	_cursor+1,w,c
  1728  001D46  A4D8               	btfss	status,2,c
  1729  001D48  D003               	goto	l2742
  1730  001D4A  0E0A               	movlw	10
  1731  001D4C  EC86  F011         	call	_SetDDRamAddr
  1732  001D50                     l2742:
  1733                           
  1734                           ;display_LCD.c: 182: if(cursor==4) SetDDRamAddr(0x0C);
  1735  001D50  0E04               	movlw	4
  1736  001D52  1836               	xorwf	_cursor,w,c
  1737  001D54  1037               	iorwf	_cursor+1,w,c
  1738  001D56  A4D8               	btfss	status,2,c
  1739  001D58  D003               	goto	l2746
  1740  001D5A  0E0C               	movlw	12
  1741  001D5C  EC86  F011         	call	_SetDDRamAddr
  1742  001D60                     l2746:
  1743                           
  1744                           ;display_LCD.c: 183: if(cursor==5) SetDDRamAddr(0x0D);
  1745  001D60  0E05               	movlw	5
  1746  001D62  1836               	xorwf	_cursor,w,c
  1747  001D64  1037               	iorwf	_cursor+1,w,c
  1748  001D66  A4D8               	btfss	status,2,c
  1749  001D68  D003               	goto	l2750
  1750  001D6A  0E0D               	movlw	13
  1751  001D6C  EC86  F011         	call	_SetDDRamAddr
  1752  001D70                     l2750:
  1753                           
  1754                           ;display_LCD.c: 184: if(cursor==6) SetDDRamAddr(0x46);
  1755  001D70  0E06               	movlw	6
  1756  001D72  1836               	xorwf	_cursor,w,c
  1757  001D74  1037               	iorwf	_cursor+1,w,c
  1758  001D76  A4D8               	btfss	status,2,c
  1759  001D78  D003               	goto	l2754
  1760  001D7A  0E46               	movlw	70
  1761  001D7C  EC86  F011         	call	_SetDDRamAddr
  1762  001D80                     l2754:
  1763                           
  1764                           ;display_LCD.c: 185: if(cursor==7) SetDDRamAddr(0x47);
  1765  001D80  0E07               	movlw	7
  1766  001D82  1836               	xorwf	_cursor,w,c
  1767  001D84  1037               	iorwf	_cursor+1,w,c
  1768  001D86  A4D8               	btfss	status,2,c
  1769  001D88  D003               	goto	l2758
  1770  001D8A  0E47               	movlw	71
  1771  001D8C  EC86  F011         	call	_SetDDRamAddr
  1772  001D90                     l2758:
  1773                           
  1774                           ;display_LCD.c: 186: if(cursor==8) SetDDRamAddr(0x49);
  1775  001D90  0E08               	movlw	8
  1776  001D92  1836               	xorwf	_cursor,w,c
  1777  001D94  1037               	iorwf	_cursor+1,w,c
  1778  001D96  A4D8               	btfss	status,2,c
  1779  001D98  D003               	goto	l2762
  1780  001D9A  0E49               	movlw	73
  1781  001D9C  EC86  F011         	call	_SetDDRamAddr
  1782  001DA0                     l2762:
  1783                           
  1784                           ;display_LCD.c: 187: if(cursor==9) SetDDRamAddr(0x4A);
  1785  001DA0  0E09               	movlw	9
  1786  001DA2  1836               	xorwf	_cursor,w,c
  1787  001DA4  1037               	iorwf	_cursor+1,w,c
  1788  001DA6  A4D8               	btfss	status,2,c
  1789  001DA8  D003               	goto	l2766
  1790  001DAA  0E4A               	movlw	74
  1791  001DAC  EC86  F011         	call	_SetDDRamAddr
  1792  001DB0                     l2766:
  1793                           
  1794                           ;display_LCD.c: 188: if(cursor==10) SetDDRamAddr(0x4C);
  1795  001DB0  0E0A               	movlw	10
  1796  001DB2  1836               	xorwf	_cursor,w,c
  1797  001DB4  1037               	iorwf	_cursor+1,w,c
  1798  001DB6  A4D8               	btfss	status,2,c
  1799  001DB8  D003               	goto	l2770
  1800  001DBA  0E4C               	movlw	76
  1801  001DBC  EC86  F011         	call	_SetDDRamAddr
  1802  001DC0                     l2770:
  1803                           
  1804                           ;display_LCD.c: 189: if(cursor==11) SetDDRamAddr(0x4D);
  1805  001DC0  0E0B               	movlw	11
  1806  001DC2  1836               	xorwf	_cursor,w,c
  1807  001DC4  1037               	iorwf	_cursor+1,w,c
  1808  001DC6  A4D8               	btfss	status,2,c
  1809  001DC8  D003               	goto	l2774
  1810  001DCA  0E4D               	movlw	77
  1811  001DCC  EC86  F011         	call	_SetDDRamAddr
  1812  001DD0                     l2774:
  1813                           
  1814                           ;display_LCD.c: 190: }
  1815                           ;display_LCD.c: 192: if(tela_exibida==1){
  1816  001DD0  044F               	decf	_tela_exibida,w,c
  1817  001DD2  1050               	iorwf	_tela_exibida+1,w,c
  1818  001DD4  A4D8               	btfss	status,2,c
  1819  001DD6  0012               	return	
  1820                           
  1821                           ;display_LCD.c: 193: if(cursor==0) SetDDRamAddr(0x40);
  1822  001DD8  5036               	movf	_cursor,w,c
  1823  001DDA  1037               	iorwf	_cursor+1,w,c
  1824  001DDC  A4D8               	btfss	status,2,c
  1825  001DDE  D003               	goto	l2780
  1826  001DE0  0E40               	movlw	64
  1827  001DE2  EC86  F011         	call	_SetDDRamAddr
  1828  001DE6                     l2780:
  1829                           
  1830                           ;display_LCD.c: 194: if(cursor==1) SetDDRamAddr(0x41);
  1831  001DE6  0436               	decf	_cursor,w,c
  1832  001DE8  1037               	iorwf	_cursor+1,w,c
  1833  001DEA  A4D8               	btfss	status,2,c
  1834  001DEC  D003               	goto	l2784
  1835  001DEE  0E41               	movlw	65
  1836  001DF0  EC86  F011         	call	_SetDDRamAddr
  1837  001DF4                     l2784:
  1838                           
  1839                           ;display_LCD.c: 195: if(cursor==2) SetDDRamAddr(0x43);
  1840  001DF4  0E02               	movlw	2
  1841  001DF6  1836               	xorwf	_cursor,w,c
  1842  001DF8  1037               	iorwf	_cursor+1,w,c
  1843  001DFA  A4D8               	btfss	status,2,c
  1844  001DFC  D003               	goto	l2788
  1845  001DFE  0E43               	movlw	67
  1846  001E00  EC86  F011         	call	_SetDDRamAddr
  1847  001E04                     l2788:
  1848                           
  1849                           ;display_LCD.c: 196: if(cursor==3) SetDDRamAddr(0x44);
  1850  001E04  0E03               	movlw	3
  1851  001E06  1836               	xorwf	_cursor,w,c
  1852  001E08  1037               	iorwf	_cursor+1,w,c
  1853  001E0A  A4D8               	btfss	status,2,c
  1854  001E0C  D003               	goto	l2792
  1855  001E0E  0E44               	movlw	68
  1856  001E10  EC86  F011         	call	_SetDDRamAddr
  1857  001E14                     l2792:
  1858                           
  1859                           ;display_LCD.c: 197: if(cursor==4) SetDDRamAddr(0x46);
  1860  001E14  0E04               	movlw	4
  1861  001E16  1836               	xorwf	_cursor,w,c
  1862  001E18  1037               	iorwf	_cursor+1,w,c
  1863  001E1A  A4D8               	btfss	status,2,c
  1864  001E1C  D003               	goto	l2796
  1865  001E1E  0E46               	movlw	70
  1866  001E20  EC86  F011         	call	_SetDDRamAddr
  1867  001E24                     l2796:
  1868                           
  1869                           ;display_LCD.c: 198: if(cursor==5) SetDDRamAddr(0x47);
  1870  001E24  0E05               	movlw	5
  1871  001E26  1836               	xorwf	_cursor,w,c
  1872  001E28  1037               	iorwf	_cursor+1,w,c
  1873  001E2A  A4D8               	btfss	status,2,c
  1874  001E2C  0012               	return	
  1875  001E2E  0E47               	movlw	71
  1876  001E30  EC86  F011         	call	_SetDDRamAddr
  1877  001E34  0012               	return	
  1878  001E36                     __end_of_pisca_cursor:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           intcon	equ	0xFF2
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postinc1	equ	0xFE6
  1888                           postdec1	equ	0xFE5
  1889                           fsr1h	equ	0xFE2
  1890                           fsr1l	equ	0xFE1
  1891                           postinc2	equ	0xFDE
  1892                           postdec2	equ	0xFDD
  1893                           plusw2	equ	0xFDB
  1894                           fsr2h	equ	0xFDA
  1895                           fsr2l	equ	0xFD9
  1896                           status	equ	0xFD8
  1897                           
  1898 ;; *************** function _maquina_estado *****************
  1899 ;; Defined at:
  1900 ;;		line 87 in file "serial.h"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        2 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    2
  1921 ;; This function calls:
  1922 ;;		_trata_comando
  1923 ;;		_tx_data
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text3
  1930  002462                     __ptext3:
  1931                           	opt stack 0
  1932  002462                     _maquina_estado:
  1933                           	opt stack 28
  1934                           
  1935                           ;serial.h: 88: switch(ESTADO_COMUNICACAO){
  1936                           
  1937                           ;incstack = 0
  1938  002462  D00A               	goto	l2860
  1939  002464                     l2852:
  1940                           
  1941                           ;serial.h: 90: trata_comando();
  1942  002464  EC88  F012         	call	_trata_comando	;wreg free
  1943                           
  1944                           ;serial.h: 91: break;
  1945  002468  0012               	return	
  1946  00246A                     l2854:
  1947                           
  1948                           ;serial.h: 94: tx_data();
  1949  00246A  EC6C  F012         	call	_tx_data	;wreg free
  1950                           
  1951                           ;serial.h: 95: ESTADO_COMUNICACAO = '0';
  1952  00246E  0E00               	movlw	0
  1953  002470  6E31               	movwf	_ESTADO_COMUNICACAO+1,c
  1954  002472  0E30               	movlw	48
  1955  002474  6E30               	movwf	_ESTADO_COMUNICACAO,c
  1956                           
  1957                           ;serial.h: 100: };
  1958                           
  1959                           ;serial.h: 99: break;
  1960                           
  1961                           ;serial.h: 98: case '0':
  1962                           
  1963                           ;serial.h: 96: break;
  1964  002476  0012               	return	
  1965  002478                     l2860:
  1966  002478  C030  F011         	movff	_ESTADO_COMUNICACAO,??_maquina_estado
  1967  00247C  C031  F012         	movff	_ESTADO_COMUNICACAO+1,??_maquina_estado+1
  1968                           
  1969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1970                           ; Switch size 1, requested type "space"
  1971                           ; Number of cases is 1, Range of values is 0 to 0
  1972                           ; switch strategies available:
  1973                           ; Name         Instructions Cycles
  1974                           ; simple_byte            4     3 (average)
  1975                           ;	Chosen strategy is simple_byte
  1976  002480  5012               	movf	??_maquina_estado+1,w,c
  1977  002482  0A00               	xorlw	0	; case 0
  1978  002484  A4D8               	btfss	status,2,c
  1979  002486  0012               	return	
  1980                           
  1981                           ; Switch size 1, requested type "space"
  1982                           ; Number of cases is 3, Range of values is 48 to 50
  1983                           ; switch strategies available:
  1984                           ; Name         Instructions Cycles
  1985                           ; simple_byte           10     6 (average)
  1986                           ;	Chosen strategy is simple_byte
  1987  002488  5011               	movf	??_maquina_estado,w,c
  1988  00248A  0A30               	xorlw	48	; case 48
  1989  00248C  B4D8               	btfsc	status,2,c
  1990  00248E  0012               	return	
  1991  002490  0A01               	xorlw	1	; case 49
  1992  002492  B4D8               	btfsc	status,2,c
  1993  002494  D7E7               	goto	l2852
  1994  002496  0A03               	xorlw	3	; case 50
  1995  002498  A4D8               	btfss	status,2,c
  1996  00249A  0012               	return	
  1997  00249C  D7E6               	goto	l2854
  1998  00249E                     __end_of_maquina_estado:
  1999                           	opt stack 0
  2000                           tblptru	equ	0xFF8
  2001                           tblptrh	equ	0xFF7
  2002                           tblptrl	equ	0xFF6
  2003                           tablat	equ	0xFF5
  2004                           intcon	equ	0xFF2
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           postinc1	equ	0xFE6
  2008                           postdec1	equ	0xFE5
  2009                           fsr1h	equ	0xFE2
  2010                           fsr1l	equ	0xFE1
  2011                           postinc2	equ	0xFDE
  2012                           postdec2	equ	0xFDD
  2013                           plusw2	equ	0xFDB
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _tx_data *****************
  2019 ;; Defined at:
  2020 ;;		line 45 in file "serial.h"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  cont            2   14[COMRAM] int 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0
  2035 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2037 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:        2 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_maquina_estado
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text4
  2049  0024D8                     __ptext4:
  2050                           	opt stack 0
  2051  0024D8                     _tx_data:
  2052                           	opt stack 28
  2053  0024D8                     l290:
  2054  0024D8  A89E               	btfss	3998,4,c	;volatile
  2055  0024DA  D7FE               	goto	l290
  2056                           
  2057                           ;serial.h: 49: for (cont=0; cont<3; cont++) {
  2058  0024DC  0E00               	movlw	0
  2059  0024DE  6E10               	movwf	tx_data@cont+1,c
  2060  0024E0  0E00               	movlw	0
  2061  0024E2  6E0F               	movwf	tx_data@cont,c
  2062  0024E4                     l2544:
  2063  0024E4  BE10               	btfsc	tx_data@cont+1,7,c
  2064  0024E6  D006               	goto	l295
  2065  0024E8  5010               	movf	tx_data@cont+1,w,c
  2066  0024EA  E111               	bnz	l298
  2067  0024EC  0E03               	movlw	3
  2068  0024EE  5C0F               	subwf	tx_data@cont,w,c
  2069  0024F0  B0D8               	btfsc	status,0,c
  2070  0024F2  0012               	return	
  2071  0024F4                     l295:
  2072  0024F4  A89E               	btfss	3998,4,c	;volatile
  2073  0024F6  D7FE               	goto	l295
  2074                           
  2075                           ;serial.h: 51: TXREG = BUFF_RESP[cont];
  2076  0024F8  0E85               	movlw	low _BUFF_RESP
  2077  0024FA  240F               	addwf	tx_data@cont,w,c
  2078  0024FC  6ED9               	movwf	fsr2l,c
  2079  0024FE  0E00               	movlw	high _BUFF_RESP
  2080  002500  2010               	addwfc	tx_data@cont+1,w,c
  2081  002502  6EDA               	movwf	fsr2h,c
  2082  002504  50DF               	movf	indf2,w,c
  2083  002506  6EAD               	movwf	4013,c	;volatile
  2084  002508  4A0F               	infsnz	tx_data@cont,f,c
  2085  00250A  2A10               	incf	tx_data@cont+1,f,c
  2086  00250C  D7EB               	goto	l2544
  2087  00250E                     l298:
  2088  00250E  0012               	return		;funcret
  2089  002510                     __end_of_tx_data:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           intcon	equ	0xFF2
  2096                           postinc0	equ	0xFEE
  2097                           wreg	equ	0xFE8
  2098                           postinc1	equ	0xFE6
  2099                           postdec1	equ	0xFE5
  2100                           fsr1h	equ	0xFE2
  2101                           fsr1l	equ	0xFE1
  2102                           indf2	equ	0xFDF
  2103                           postinc2	equ	0xFDE
  2104                           postdec2	equ	0xFDD
  2105                           plusw2	equ	0xFDB
  2106                           fsr2h	equ	0xFDA
  2107                           fsr2l	equ	0xFD9
  2108                           status	equ	0xFD8
  2109                           
  2110 ;; *************** function _trata_comando *****************
  2111 ;; Defined at:
  2112 ;;		line 73 in file "serial.h"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2128 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2129 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2130 ;;Total ram usage:        2 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    1
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_maquina_estado
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text5
  2141  002510                     __ptext5:
  2142                           	opt stack 0
  2143  002510                     _trata_comando:
  2144                           	opt stack 28
  2145                           
  2146                           ;serial.h: 76: PORTCbits.RC0=1;
  2147                           
  2148                           ;incstack = 0
  2149  002510  8082               	bsf	3970,0,c	;volatile
  2150                           
  2151                           ;serial.h: 77: _delay((unsigned long)((180)*(20000000/4000.0)));
  2152  002512  0E05               	movlw	5
  2153  002514  6E10               	movwf	(??_trata_comando+1)& (0+255),c
  2154  002516  0E91               	movlw	145
  2155  002518  6E0F               	movwf	??_trata_comando& (0+255),c
  2156  00251A  0ED0               	movlw	208
  2157  00251C                     u3267:
  2158  00251C  2EE8               	decfsz	wreg,f,c
  2159  00251E  D7FE               	bra	u3267
  2160  002520  2E0F               	decfsz	??_trata_comando& (0+255),f,c
  2161  002522  D7FC               	bra	u3267
  2162  002524  2E10               	decfsz	(??_trata_comando+1)& (0+255),f,c
  2163  002526  D7FA               	bra	u3267
  2164                           
  2165                           ;serial.h: 78: PORTCbits.RC0=0;
  2166  002528  9082               	bcf	3970,0,c	;volatile
  2167                           
  2168                           ;serial.h: 80: BUFF_RESP[0] = BUFF_COM[0];
  2169  00252A  C08C  F085         	movff	_BUFF_COM,_BUFF_RESP
  2170                           
  2171                           ;serial.h: 81: BUFF_RESP[1] = BUFF_COM[1];
  2172  00252E  C08D  F086         	movff	_BUFF_COM+1,_BUFF_RESP+1
  2173                           
  2174                           ;serial.h: 82: BUFF_RESP[2] = BUFF_COM[2];
  2175  002532  C08E  F087         	movff	_BUFF_COM+2,_BUFF_RESP+2
  2176                           
  2177                           ;serial.h: 84: ESTADO_COMUNICACAO = '2';
  2178  002536  0E00               	movlw	0
  2179  002538  6E31               	movwf	_ESTADO_COMUNICACAO+1,c
  2180  00253A  0E32               	movlw	50
  2181  00253C  6E30               	movwf	_ESTADO_COMUNICACAO,c
  2182  00253E  0012               	return		;funcret
  2183  002540                     __end_of_trata_comando:
  2184                           	opt stack 0
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           intcon	equ	0xFF2
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           postinc1	equ	0xFE6
  2193                           postdec1	equ	0xFE5
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           indf2	equ	0xFDF
  2197                           postinc2	equ	0xFDE
  2198                           postdec2	equ	0xFDD
  2199                           plusw2	equ	0xFDB
  2200                           fsr2h	equ	0xFDA
  2201                           fsr2l	equ	0xFD9
  2202                           status	equ	0xFD8
  2203                           
  2204 ;; *************** function _init_XLCD *****************
  2205 ;; Defined at:
  2206 ;;		line 24 in file "display_LCD.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2220 ;;      Params:         0       0       0       0       0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2223 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    5
  2227 ;; This function calls:
  2228 ;;		_BusyXLCD
  2229 ;;		_OpenXLCD
  2230 ;;		_WriteCmdXLCD
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text6
  2237  002540                     __ptext6:
  2238                           	opt stack 0
  2239  002540                     _init_XLCD:
  2240                           	opt stack 25
  2241                           
  2242                           ;display_LCD.c: 25: OpenXLCD(0b00101100&0b00111000);
  2243                           
  2244                           ;incstack = 0
  2245  002540  0E28               	movlw	40
  2246  002542  ECF5  F00F         	call	_OpenXLCD
  2247  002546                     l2650:
  2248  002546  EC4F  F012         	call	_BusyXLCD	;wreg free
  2249  00254A  0900               	iorlw	0
  2250  00254C  A4D8               	btfss	status,2,c
  2251  00254E  D7FB               	goto	l2650
  2252                           
  2253                           ;display_LCD.c: 27: WriteCmdXLCD(0x06);
  2254  002550  0E06               	movlw	6
  2255  002552  EC12  F012         	call	_WriteCmdXLCD
  2256                           
  2257                           ;display_LCD.c: 28: WriteCmdXLCD(0x0C);
  2258  002556  0E0C               	movlw	12
  2259  002558  EC12  F012         	call	_WriteCmdXLCD
  2260  00255C  0012               	return		;funcret
  2261  00255E                     __end_of_init_XLCD:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           intcon	equ	0xFF2
  2268                           postinc0	equ	0xFEE
  2269                           wreg	equ	0xFE8
  2270                           postinc1	equ	0xFE6
  2271                           postdec1	equ	0xFE5
  2272                           fsr1h	equ	0xFE2
  2273                           fsr1l	equ	0xFE1
  2274                           indf2	equ	0xFDF
  2275                           postinc2	equ	0xFDE
  2276                           postdec2	equ	0xFDD
  2277                           plusw2	equ	0xFDB
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _OpenXLCD *****************
  2283 ;; Defined at:
  2284 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  lcdtype         1    wreg     unsigned char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  lcdtype         1   19[COMRAM] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2298 ;;      Params:         0       0       0       0       0       0       0       0       0
  2299 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2301 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    4
  2305 ;; This function calls:
  2306 ;;		_BusyXLCD
  2307 ;;		_Delay10KTCYx
  2308 ;;		_DelayPORXLCD
  2309 ;;		_SetDDRamAddr
  2310 ;;		_WriteCmdXLCD
  2311 ;; This function is called by:
  2312 ;;		_init_XLCD
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text7
  2317  001FEA                     __ptext7:
  2318                           	opt stack 0
  2319  001FEA                     _OpenXLCD:
  2320                           	opt stack 25
  2321                           
  2322                           ;incstack = 0
  2323                           ;OpenXLCD@lcdtype stored from wreg
  2324  001FEA  6E14               	movwf	OpenXLCD@lcdtype,c
  2325  001FEC  0EF0               	movlw	240
  2326  001FEE  1681               	andwf	3969,f,c	;volatile
  2327  001FF0  0EF0               	movlw	240
  2328  001FF2  1693               	andwf	3987,f,c	;volatile
  2329  001FF4  9C93               	bcf	3987,6,c	;volatile
  2330  001FF6  9A93               	bcf	3987,5,c	;volatile
  2331  001FF8  9893               	bcf	3987,4,c	;volatile
  2332  001FFA  9C8A               	bcf	3978,6,c	;volatile
  2333  001FFC  9A8A               	bcf	3978,5,c	;volatile
  2334  001FFE  988A               	bcf	3978,4,c	;volatile
  2335  002000  ECDE  F012         	call	_DelayPORXLCD	;wreg free
  2336  002004  0E30               	movlw	48
  2337  002006  EC12  F012         	call	_WriteCmdXLCD
  2338  00200A  0E05               	movlw	5
  2339  00200C  ECBC  F012         	call	_Delay10KTCYx
  2340  002010  0E30               	movlw	48
  2341  002012  EC12  F012         	call	_WriteCmdXLCD
  2342  002016  0E01               	movlw	1
  2343  002018  ECBC  F012         	call	_Delay10KTCYx
  2344  00201C  0E32               	movlw	50
  2345  00201E  EC12  F012         	call	_WriteCmdXLCD
  2346  002022                     l2354:
  2347  002022  EC4F  F012         	call	_BusyXLCD	;wreg free
  2348  002026  0900               	iorlw	0
  2349  002028  A4D8               	btfss	status,2,c
  2350  00202A  D7FB               	goto	l2354
  2351  00202C                     l2356:
  2352  00202C  EC4F  F012         	call	_BusyXLCD	;wreg free
  2353  002030  0900               	iorlw	0
  2354  002032  A4D8               	btfss	status,2,c
  2355  002034  D7FB               	goto	l2356
  2356  002036  5014               	movf	OpenXLCD@lcdtype,w,c
  2357  002038  EC12  F012         	call	_WriteCmdXLCD
  2358  00203C                     l2360:
  2359  00203C  EC4F  F012         	call	_BusyXLCD	;wreg free
  2360  002040  0900               	iorlw	0
  2361  002042  A4D8               	btfss	status,2,c
  2362  002044  D7FB               	goto	l2360
  2363  002046  0E08               	movlw	8
  2364  002048  EC12  F012         	call	_WriteCmdXLCD
  2365  00204C                     l2364:
  2366  00204C  EC4F  F012         	call	_BusyXLCD	;wreg free
  2367  002050  0900               	iorlw	0
  2368  002052  A4D8               	btfss	status,2,c
  2369  002054  D7FB               	goto	l2364
  2370  002056  0E0F               	movlw	15
  2371  002058  EC12  F012         	call	_WriteCmdXLCD
  2372  00205C                     l2368:
  2373  00205C  EC4F  F012         	call	_BusyXLCD	;wreg free
  2374  002060  0900               	iorlw	0
  2375  002062  A4D8               	btfss	status,2,c
  2376  002064  D7FB               	goto	l2368
  2377  002066  0E01               	movlw	1
  2378  002068  EC12  F012         	call	_WriteCmdXLCD
  2379  00206C                     l2372:
  2380  00206C  EC4F  F012         	call	_BusyXLCD	;wreg free
  2381  002070  0900               	iorlw	0
  2382  002072  A4D8               	btfss	status,2,c
  2383  002074  D7FB               	goto	l2372
  2384  002076  0E04               	movlw	4
  2385  002078  EC12  F012         	call	_WriteCmdXLCD
  2386  00207C                     l2376:
  2387  00207C  EC4F  F012         	call	_BusyXLCD	;wreg free
  2388  002080  0900               	iorlw	0
  2389  002082  A4D8               	btfss	status,2,c
  2390  002084  D7FB               	goto	l2376
  2391  002086  0E80               	movlw	128
  2392  002088  EC86  F011         	call	_SetDDRamAddr
  2393  00208C  0012               	return	
  2394  00208E                     __end_of_OpenXLCD:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           intcon	equ	0xFF2
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           postinc1	equ	0xFE6
  2404                           postdec1	equ	0xFE5
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           indf2	equ	0xFDF
  2408                           postinc2	equ	0xFDE
  2409                           postdec2	equ	0xFDD
  2410                           plusw2	equ	0xFDB
  2411                           fsr2h	equ	0xFDA
  2412                           fsr2l	equ	0xFD9
  2413                           status	equ	0xFD8
  2414                           
  2415 ;; *************** function _DelayPORXLCD *****************
  2416 ;; Defined at:
  2417 ;;		line 11 in file "display_LCD.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2434 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    2
  2438 ;; This function calls:
  2439 ;;		_Delay1KTCYx
  2440 ;; This function is called by:
  2441 ;;		_OpenXLCD
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text8
  2446  0025BC                     __ptext8:
  2447                           	opt stack 0
  2448  0025BC                     _DelayPORXLCD:
  2449                           	opt stack 26
  2450                           
  2451                           ;display_LCD.c: 12: Delay1KTCYx(180);
  2452                           
  2453                           ;incstack = 0
  2454  0025BC  0EB4               	movlw	180
  2455  0025BE  ECC7  F012         	call	_Delay1KTCYx
  2456  0025C2  0012               	return	
  2457  0025C4                     __end_of_DelayPORXLCD:
  2458                           	opt stack 0
  2459                           tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           intcon	equ	0xFF2
  2464                           postinc0	equ	0xFEE
  2465                           wreg	equ	0xFE8
  2466                           postinc1	equ	0xFE6
  2467                           postdec1	equ	0xFE5
  2468                           fsr1h	equ	0xFE2
  2469                           fsr1l	equ	0xFE1
  2470                           indf2	equ	0xFDF
  2471                           postinc2	equ	0xFDE
  2472                           postdec2	equ	0xFDD
  2473                           plusw2	equ	0xFDB
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _Delay1KTCYx *****************
  2479 ;; Defined at:
  2480 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  unit            1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  unit            1   14[COMRAM] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0
  2495 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2497 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2498 ;;Total ram usage:        1 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    1
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_DelayPORXLCD
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text9
  2509  00258E                     __ptext9:
  2510                           	opt stack 0
  2511  00258E                     _Delay1KTCYx:
  2512                           	opt stack 26
  2513                           
  2514                           ;incstack = 0
  2515                           ;Delay1KTCYx@unit stored from wreg
  2516  00258E  6E0F               	movwf	Delay1KTCYx@unit,c
  2517  002590  0EC8               	movlw	200
  2518  002592                     u3277:
  2519  002592  D000               	nop2	
  2520  002594  2EE8               	decfsz	wreg,f,c
  2521  002596  D7FD               	bra	u3277
  2522  002598  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  2523  00259A  D7FA               	goto	l1210
  2524  00259C  0012               	return	
  2525  00259E                     __end_of_Delay1KTCYx:
  2526                           	opt stack 0
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           intcon	equ	0xFF2
  2532                           postinc0	equ	0xFEE
  2533                           wreg	equ	0xFE8
  2534                           postinc1	equ	0xFE6
  2535                           postdec1	equ	0xFE5
  2536                           fsr1h	equ	0xFE2
  2537                           fsr1l	equ	0xFE1
  2538                           indf2	equ	0xFDF
  2539                           postinc2	equ	0xFDE
  2540                           postdec2	equ	0xFDD
  2541                           plusw2	equ	0xFDB
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           
  2546 ;; *************** function _Delay10KTCYx *****************
  2547 ;; Defined at:
  2548 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  unit            1    wreg     unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  unit            1   15[COMRAM] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0
  2563 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2564 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2565 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2566 ;;Total ram usage:        2 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_OpenXLCD
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text10
  2577  002578                     __ptext10:
  2578                           	opt stack 0
  2579  002578                     _Delay10KTCYx:
  2580                           	opt stack 27
  2581                           
  2582                           ;incstack = 0
  2583                           ;Delay10KTCYx@unit stored from wreg
  2584  002578  6E10               	movwf	Delay10KTCYx@unit,c
  2585  00257A  0E0D               	movlw	13
  2586  00257C  6E0F               	movwf	??_Delay10KTCYx& (0+255),c
  2587  00257E  0EFC               	movlw	252
  2588  002580                     u3287:
  2589  002580  2EE8               	decfsz	wreg,f,c
  2590  002582  D7FE               	bra	u3287
  2591  002584  2E0F               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2592  002586  D7FC               	bra	u3287
  2593  002588  2E10               	decfsz	Delay10KTCYx@unit,f,c
  2594  00258A  D7F7               	goto	l1368
  2595  00258C  0012               	return	
  2596  00258E                     __end_of_Delay10KTCYx:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           intcon	equ	0xFF2
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           postinc1	equ	0xFE6
  2606                           postdec1	equ	0xFE5
  2607                           fsr1h	equ	0xFE2
  2608                           fsr1l	equ	0xFE1
  2609                           indf2	equ	0xFDF
  2610                           postinc2	equ	0xFDE
  2611                           postdec2	equ	0xFDD
  2612                           plusw2	equ	0xFDB
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _exibir_lcd *****************
  2618 ;; Defined at:
  2619 ;;		line 31 in file "display_LCD.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  Relogio         2    7[BANK0 ] PTR struct .
  2622 ;;		 -> Relogio(6), 
  2623 ;;  Despertador     2    9[BANK0 ] PTR struct .
  2624 ;;		 -> Despertador(6), 
  2625 ;;  Calendario      2   11[BANK0 ] PTR struct .
  2626 ;;		 -> Calendario(6), 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  f               2   35[BANK0 ] int 
  2629 ;;  e               2   33[BANK0 ] int 
  2630 ;;  d               2   31[BANK0 ] int 
  2631 ;;  c               2   29[BANK0 ] int 
  2632 ;;  b               2   27[BANK0 ] int 
  2633 ;;  a               2   25[BANK0 ] int 
  2634 ;;  l               2   23[BANK0 ] int 
  2635 ;;  k               2   21[BANK0 ] int 
  2636 ;;  j               2   19[BANK0 ] int 
  2637 ;;  i               2   17[BANK0 ] int 
  2638 ;;  h               2   15[BANK0 ] int 
  2639 ;;  g               2   13[BANK0 ] int 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2649 ;;      Params:         0       6       0       0       0       0       0       0       0
  2650 ;;      Locals:         0      24       0       0       0       0       0       0       0
  2651 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2652 ;;      Totals:         2      30       0       0       0       0       0       0       0
  2653 ;;Total ram usage:       32 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    7
  2656 ;; This function calls:
  2657 ;;		_SetDDRamAddr
  2658 ;;		___awdiv
  2659 ;;		___awmod
  2660 ;;		_gambiarra
  2661 ;;		_putrsXLCD
  2662 ;;		_sprintf
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text11
  2669  000882                     __ptext11:
  2670                           	opt stack 0
  2671  000882                     _exibir_lcd:
  2672                           	opt stack 23
  2673                           
  2674                           ;display_LCD.c: 33: int a, b, c, d, e, f, g, h, i, j, k, l;
  2675                           ;display_LCD.c: 36: if(tela_exibida==0){
  2676                           
  2677                           ;incstack = 0
  2678  000882  504F               	movf	_tela_exibida,w,c
  2679  000884  1050               	iorwf	_tela_exibida+1,w,c
  2680  000886  A4D8               	btfss	status,2,c
  2681  000888  D22A               	goto	l3160
  2682                           
  2683                           ;display_LCD.c: 37: a=((Relogio->hora)/10)-(((Relogio->hora)%10)/10);
  2684  00088A  0100               	movlb	0	; () banked
  2685  00088C  EE20 F004          	lfsr	2,4
  2686  000890  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2687  000892  26D9               	addwf	fsr2l,f,c
  2688  000894  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2689  000896  22DA               	addwfc	fsr2h,f,c
  2690  000898  CFDE F015          	movff	postinc2,___awdiv@dividend
  2691  00089C  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2692  0008A0  0E00               	movlw	0
  2693  0008A2  6E18               	movwf	___awdiv@divisor+1,c
  2694  0008A4  0E0A               	movlw	10
  2695  0008A6  6E17               	movwf	___awdiv@divisor,c
  2696  0008A8  EC47  F010         	call	___awdiv	;wreg free
  2697  0008AC  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2698  0008B0  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2699  0008B4  0E00               	movlw	0
  2700  0008B6  6E12               	movwf	___awmod@divisor+1,c
  2701  0008B8  0E0A               	movlw	10
  2702  0008BA  6E11               	movwf	___awmod@divisor,c
  2703  0008BC  0100               	movlb	0	; () banked
  2704  0008BE  EE20 F004          	lfsr	2,4
  2705  0008C2  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2706  0008C4  26D9               	addwf	fsr2l,f,c
  2707  0008C6  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2708  0008C8  22DA               	addwfc	fsr2h,f,c
  2709  0008CA  CFDE F00F          	movff	postinc2,___awmod@dividend
  2710  0008CE  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2711  0008D2  ECC8  F010         	call	___awmod	;wreg free
  2712  0008D6  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2713  0008DA  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2714  0008DE  0E00               	movlw	0
  2715  0008E0  6E18               	movwf	___awdiv@divisor+1,c
  2716  0008E2  0E0A               	movlw	10
  2717  0008E4  6E17               	movwf	___awdiv@divisor,c
  2718  0008E6  EC47  F010         	call	___awdiv	;wreg free
  2719  0008EA  1E15               	comf	?___awdiv,f,c
  2720  0008EC  1E16               	comf	?___awdiv+1,f,c
  2721  0008EE  4A15               	infsnz	?___awdiv,f,c
  2722  0008F0  2A16               	incf	?___awdiv+1,f,c
  2723  0008F2  5015               	movf	?___awdiv,w,c
  2724  0008F4  242C               	addwf	??_exibir_lcd,w,c
  2725  0008F6  0100               	movlb	0	; () banked
  2726  0008F8  6F79               	movwf	exibir_lcd@a& (0+255),b
  2727  0008FA  5016               	movf	?___awdiv+1,w,c
  2728  0008FC  202D               	addwfc	??_exibir_lcd+1,w,c
  2729  0008FE  0100               	movlb	0	; () banked
  2730  000900  6F7A               	movwf	(exibir_lcd@a+1)& (0+255),b
  2731                           
  2732                           ;display_LCD.c: 38: b=Relogio->hora%10;
  2733  000902  0100               	movlb	0	; () banked
  2734  000904  EE20 F004          	lfsr	2,4
  2735  000908  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2736  00090A  26D9               	addwf	fsr2l,f,c
  2737  00090C  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2738  00090E  22DA               	addwfc	fsr2h,f,c
  2739  000910  CFDE F00F          	movff	postinc2,___awmod@dividend
  2740  000914  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2741  000918  0E00               	movlw	0
  2742  00091A  6E12               	movwf	___awmod@divisor+1,c
  2743  00091C  0E0A               	movlw	10
  2744  00091E  6E11               	movwf	___awmod@divisor,c
  2745  000920  ECC8  F010         	call	___awmod	;wreg free
  2746  000924  C00F  F07B         	movff	?___awmod,exibir_lcd@b
  2747  000928  C010  F07C         	movff	?___awmod+1,exibir_lcd@b+1
  2748                           
  2749                           ;display_LCD.c: 39: c=((Relogio->minuto)/10)-(((Relogio->minuto)%10)/10);
  2750  00092C  C067  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2751  000930  C068  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2752  000934  CFDE F015          	movff	postinc2,___awdiv@dividend
  2753  000938  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2754  00093C  0E00               	movlw	0
  2755  00093E  6E18               	movwf	___awdiv@divisor+1,c
  2756  000940  0E0A               	movlw	10
  2757  000942  6E17               	movwf	___awdiv@divisor,c
  2758  000944  EC47  F010         	call	___awdiv	;wreg free
  2759  000948  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2760  00094C  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2761  000950  0E00               	movlw	0
  2762  000952  6E12               	movwf	___awmod@divisor+1,c
  2763  000954  0E0A               	movlw	10
  2764  000956  6E11               	movwf	___awmod@divisor,c
  2765  000958  C067  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2766  00095C  C068  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2767  000960  CFDE F00F          	movff	postinc2,___awmod@dividend
  2768  000964  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2769  000968  ECC8  F010         	call	___awmod	;wreg free
  2770  00096C  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2771  000970  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2772  000974  0E00               	movlw	0
  2773  000976  6E18               	movwf	___awdiv@divisor+1,c
  2774  000978  0E0A               	movlw	10
  2775  00097A  6E17               	movwf	___awdiv@divisor,c
  2776  00097C  EC47  F010         	call	___awdiv	;wreg free
  2777  000980  1E15               	comf	?___awdiv,f,c
  2778  000982  1E16               	comf	?___awdiv+1,f,c
  2779  000984  4A15               	infsnz	?___awdiv,f,c
  2780  000986  2A16               	incf	?___awdiv+1,f,c
  2781  000988  5015               	movf	?___awdiv,w,c
  2782  00098A  242C               	addwf	??_exibir_lcd,w,c
  2783  00098C  0100               	movlb	0	; () banked
  2784  00098E  6F7D               	movwf	exibir_lcd@c& (0+255),b
  2785  000990  5016               	movf	?___awdiv+1,w,c
  2786  000992  202D               	addwfc	??_exibir_lcd+1,w,c
  2787  000994  0100               	movlb	0	; () banked
  2788  000996  6F7E               	movwf	(exibir_lcd@c+1)& (0+255),b
  2789                           
  2790                           ;display_LCD.c: 40: d=Relogio->minuto%10;
  2791  000998  C067  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2792  00099C  C068  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2793  0009A0  CFDE F00F          	movff	postinc2,___awmod@dividend
  2794  0009A4  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2795  0009A8  0E00               	movlw	0
  2796  0009AA  6E12               	movwf	___awmod@divisor+1,c
  2797  0009AC  0E0A               	movlw	10
  2798  0009AE  6E11               	movwf	___awmod@divisor,c
  2799  0009B0  ECC8  F010         	call	___awmod	;wreg free
  2800  0009B4  C00F  F07F         	movff	?___awmod,exibir_lcd@d
  2801  0009B8  C010  F080         	movff	?___awmod+1,exibir_lcd@d+1
  2802                           
  2803                           ;display_LCD.c: 41: e=((Relogio->segundo)/10)-(((Relogio->segundo)%10)/10);
  2804  0009BC  0100               	movlb	0	; () banked
  2805  0009BE  EE20 F002          	lfsr	2,2
  2806  0009C2  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2807  0009C4  26D9               	addwf	fsr2l,f,c
  2808  0009C6  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2809  0009C8  22DA               	addwfc	fsr2h,f,c
  2810  0009CA  CFDE F015          	movff	postinc2,___awdiv@dividend
  2811  0009CE  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2812  0009D2  0E00               	movlw	0
  2813  0009D4  6E18               	movwf	___awdiv@divisor+1,c
  2814  0009D6  0E0A               	movlw	10
  2815  0009D8  6E17               	movwf	___awdiv@divisor,c
  2816  0009DA  EC47  F010         	call	___awdiv	;wreg free
  2817  0009DE  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2818  0009E2  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2819  0009E6  0E00               	movlw	0
  2820  0009E8  6E12               	movwf	___awmod@divisor+1,c
  2821  0009EA  0E0A               	movlw	10
  2822  0009EC  6E11               	movwf	___awmod@divisor,c
  2823  0009EE  0100               	movlb	0	; () banked
  2824  0009F0  EE20 F002          	lfsr	2,2
  2825  0009F4  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2826  0009F6  26D9               	addwf	fsr2l,f,c
  2827  0009F8  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2828  0009FA  22DA               	addwfc	fsr2h,f,c
  2829  0009FC  CFDE F00F          	movff	postinc2,___awmod@dividend
  2830  000A00  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2831  000A04  ECC8  F010         	call	___awmod	;wreg free
  2832  000A08  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2833  000A0C  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2834  000A10  0E00               	movlw	0
  2835  000A12  6E18               	movwf	___awdiv@divisor+1,c
  2836  000A14  0E0A               	movlw	10
  2837  000A16  6E17               	movwf	___awdiv@divisor,c
  2838  000A18  EC47  F010         	call	___awdiv	;wreg free
  2839  000A1C  1E15               	comf	?___awdiv,f,c
  2840  000A1E  1E16               	comf	?___awdiv+1,f,c
  2841  000A20  4A15               	infsnz	?___awdiv,f,c
  2842  000A22  2A16               	incf	?___awdiv+1,f,c
  2843  000A24  5015               	movf	?___awdiv,w,c
  2844  000A26  242C               	addwf	??_exibir_lcd,w,c
  2845  000A28  0100               	movlb	0	; () banked
  2846  000A2A  6F81               	movwf	exibir_lcd@e& (0+255),b
  2847  000A2C  5016               	movf	?___awdiv+1,w,c
  2848  000A2E  202D               	addwfc	??_exibir_lcd+1,w,c
  2849  000A30  0100               	movlb	0	; () banked
  2850  000A32  6F82               	movwf	(exibir_lcd@e+1)& (0+255),b
  2851                           
  2852                           ;display_LCD.c: 42: f=Relogio->segundo%10;
  2853  000A34  0100               	movlb	0	; () banked
  2854  000A36  EE20 F002          	lfsr	2,2
  2855  000A3A  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2856  000A3C  26D9               	addwf	fsr2l,f,c
  2857  000A3E  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2858  000A40  22DA               	addwfc	fsr2h,f,c
  2859  000A42  CFDE F00F          	movff	postinc2,___awmod@dividend
  2860  000A46  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2861  000A4A  0E00               	movlw	0
  2862  000A4C  6E12               	movwf	___awmod@divisor+1,c
  2863  000A4E  0E0A               	movlw	10
  2864  000A50  6E11               	movwf	___awmod@divisor,c
  2865  000A52  ECC8  F010         	call	___awmod	;wreg free
  2866  000A56  C00F  F083         	movff	?___awmod,exibir_lcd@f
  2867  000A5A  C010  F084         	movff	?___awmod+1,exibir_lcd@f+1
  2868                           
  2869                           ;display_LCD.c: 43: sprintf(str, "HORA: %d%d:%d%d:%d%d ", a, b, c, d, e, f);
  2870  000A5E  0E93               	movlw	low _str
  2871  000A60  6E1B               	movwf	sprintf@sp,c
  2872  000A62  0E00               	movlw	high _str
  2873  000A64  6E1C               	movwf	sprintf@sp+1,c
  2874  000A66  0E22               	movlw	low STR_1
  2875  000A68  6E1D               	movwf	sprintf@f,c
  2876  000A6A  0E08               	movlw	high STR_1
  2877  000A6C  6E1E               	movwf	sprintf@f+1,c
  2878  000A6E  C079  F01F         	movff	exibir_lcd@a,?_sprintf+4
  2879  000A72  C07A  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  2880  000A76  C07B  F021         	movff	exibir_lcd@b,?_sprintf+6
  2881  000A7A  C07C  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  2882  000A7E  C07D  F023         	movff	exibir_lcd@c,?_sprintf+8
  2883  000A82  C07E  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  2884  000A86  C07F  F025         	movff	exibir_lcd@d,?_sprintf+10
  2885  000A8A  C080  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  2886  000A8E  C081  F027         	movff	exibir_lcd@e,?_sprintf+12
  2887  000A92  C082  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  2888  000A96  C083  F029         	movff	exibir_lcd@f,?_sprintf+14
  2889  000A9A  C084  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  2890  000A9E  EC2E  F00D         	call	_sprintf	;wreg free
  2891                           
  2892                           ;display_LCD.c: 44: SetDDRamAddr(0x00);
  2893  000AA2  0E00               	movlw	0
  2894  000AA4  EC86  F011         	call	_SetDDRamAddr
  2895                           
  2896                           ;display_LCD.c: 45: putrsXLCD(str);
  2897  000AA8  0E93               	movlw	low _str
  2898  000AAA  6E11               	movwf	putrsXLCD@buffer,c
  2899  000AAC  0E00               	movlw	high _str
  2900  000AAE  6E12               	movwf	putrsXLCD@buffer+1,c
  2901  000AB0  EC2F  F011         	call	_putrsXLCD	;wreg free
  2902                           
  2903                           ;display_LCD.c: 47: g=((Calendario->dia)/10)-(((Calendario->dia)%10)/10);
  2904  000AB4  C06B  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2905  000AB8  C06C  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2906  000ABC  CFDE F015          	movff	postinc2,___awdiv@dividend
  2907  000AC0  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2908  000AC4  0E00               	movlw	0
  2909  000AC6  6E18               	movwf	___awdiv@divisor+1,c
  2910  000AC8  0E0A               	movlw	10
  2911  000ACA  6E17               	movwf	___awdiv@divisor,c
  2912  000ACC  EC47  F010         	call	___awdiv	;wreg free
  2913  000AD0  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2914  000AD4  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2915  000AD8  0E00               	movlw	0
  2916  000ADA  6E12               	movwf	___awmod@divisor+1,c
  2917  000ADC  0E0A               	movlw	10
  2918  000ADE  6E11               	movwf	___awmod@divisor,c
  2919  000AE0  C06B  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2920  000AE4  C06C  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2921  000AE8  CFDE F00F          	movff	postinc2,___awmod@dividend
  2922  000AEC  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2923  000AF0  ECC8  F010         	call	___awmod	;wreg free
  2924  000AF4  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2925  000AF8  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2926  000AFC  0E00               	movlw	0
  2927  000AFE  6E18               	movwf	___awdiv@divisor+1,c
  2928  000B00  0E0A               	movlw	10
  2929  000B02  6E17               	movwf	___awdiv@divisor,c
  2930  000B04  EC47  F010         	call	___awdiv	;wreg free
  2931  000B08  1E15               	comf	?___awdiv,f,c
  2932  000B0A  1E16               	comf	?___awdiv+1,f,c
  2933  000B0C  4A15               	infsnz	?___awdiv,f,c
  2934  000B0E  2A16               	incf	?___awdiv+1,f,c
  2935  000B10  5015               	movf	?___awdiv,w,c
  2936  000B12  242C               	addwf	??_exibir_lcd,w,c
  2937  000B14  0100               	movlb	0	; () banked
  2938  000B16  6F6D               	movwf	exibir_lcd@g& (0+255),b
  2939  000B18  5016               	movf	?___awdiv+1,w,c
  2940  000B1A  202D               	addwfc	??_exibir_lcd+1,w,c
  2941  000B1C  0100               	movlb	0	; () banked
  2942  000B1E  6F6E               	movwf	(exibir_lcd@g+1)& (0+255),b
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;display_LCD.c: 48: h=Calendario->dia%10;
  2946  000B20  C06B  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2947  000B24  C06C  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2948  000B28  CFDE F00F          	movff	postinc2,___awmod@dividend
  2949  000B2C  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2950  000B30  0E00               	movlw	0
  2951  000B32  6E12               	movwf	___awmod@divisor+1,c
  2952  000B34  0E0A               	movlw	10
  2953  000B36  6E11               	movwf	___awmod@divisor,c
  2954  000B38  ECC8  F010         	call	___awmod	;wreg free
  2955  000B3C  C00F  F06F         	movff	?___awmod,exibir_lcd@h
  2956  000B40  C010  F070         	movff	?___awmod+1,exibir_lcd@h+1
  2957                           
  2958                           ;display_LCD.c: 49: i=((Calendario->mes)/10)-(((Calendario->mes)%10)/10);
  2959  000B44  0100               	movlb	0	; () banked
  2960  000B46  EE20 F002          	lfsr	2,2
  2961  000B4A  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  2962  000B4C  26D9               	addwf	fsr2l,f,c
  2963  000B4E  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2964  000B50  22DA               	addwfc	fsr2h,f,c
  2965  000B52  CFDE F015          	movff	postinc2,___awdiv@dividend
  2966  000B56  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2967  000B5A  0E00               	movlw	0
  2968  000B5C  6E18               	movwf	___awdiv@divisor+1,c
  2969  000B5E  0E0A               	movlw	10
  2970  000B60  6E17               	movwf	___awdiv@divisor,c
  2971  000B62  EC47  F010         	call	___awdiv	;wreg free
  2972  000B66  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2973  000B6A  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2974  000B6E  0E00               	movlw	0
  2975  000B70  6E12               	movwf	___awmod@divisor+1,c
  2976  000B72  0E0A               	movlw	10
  2977  000B74  6E11               	movwf	___awmod@divisor,c
  2978  000B76  0100               	movlb	0	; () banked
  2979  000B78  EE20 F002          	lfsr	2,2
  2980  000B7C  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  2981  000B7E  26D9               	addwf	fsr2l,f,c
  2982  000B80  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2983  000B82  22DA               	addwfc	fsr2h,f,c
  2984  000B84  CFDE F00F          	movff	postinc2,___awmod@dividend
  2985  000B88  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2986  000B8C  ECC8  F010         	call	___awmod	;wreg free
  2987  000B90  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2988  000B94  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2989  000B98  0E00               	movlw	0
  2990  000B9A  6E18               	movwf	___awdiv@divisor+1,c
  2991  000B9C  0E0A               	movlw	10
  2992  000B9E  6E17               	movwf	___awdiv@divisor,c
  2993  000BA0  EC47  F010         	call	___awdiv	;wreg free
  2994  000BA4  1E15               	comf	?___awdiv,f,c
  2995  000BA6  1E16               	comf	?___awdiv+1,f,c
  2996  000BA8  4A15               	infsnz	?___awdiv,f,c
  2997  000BAA  2A16               	incf	?___awdiv+1,f,c
  2998  000BAC  5015               	movf	?___awdiv,w,c
  2999  000BAE  242C               	addwf	??_exibir_lcd,w,c
  3000  000BB0  0100               	movlb	0	; () banked
  3001  000BB2  6F71               	movwf	exibir_lcd@i& (0+255),b
  3002  000BB4  5016               	movf	?___awdiv+1,w,c
  3003  000BB6  202D               	addwfc	??_exibir_lcd+1,w,c
  3004  000BB8  0100               	movlb	0	; () banked
  3005  000BBA  6F72               	movwf	(exibir_lcd@i+1)& (0+255),b
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;display_LCD.c: 50: j=Calendario->mes%10;
  3009  000BBC  0100               	movlb	0	; () banked
  3010  000BBE  EE20 F002          	lfsr	2,2
  3011  000BC2  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  3012  000BC4  26D9               	addwf	fsr2l,f,c
  3013  000BC6  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3014  000BC8  22DA               	addwfc	fsr2h,f,c
  3015  000BCA  CFDE F00F          	movff	postinc2,___awmod@dividend
  3016  000BCE  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3017  000BD2  0E00               	movlw	0
  3018  000BD4  6E12               	movwf	___awmod@divisor+1,c
  3019  000BD6  0E0A               	movlw	10
  3020  000BD8  6E11               	movwf	___awmod@divisor,c
  3021  000BDA  ECC8  F010         	call	___awmod	;wreg free
  3022  000BDE  C00F  F073         	movff	?___awmod,exibir_lcd@j
  3023  000BE2  C010  F074         	movff	?___awmod+1,exibir_lcd@j+1
  3024                           
  3025                           ;display_LCD.c: 51: k=((Calendario->ano)/10)-(((Calendario->ano)%10)/10);
  3026  000BE6  0100               	movlb	0	; () banked
  3027  000BE8  EE20 F004          	lfsr	2,4
  3028  000BEC  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  3029  000BEE  26D9               	addwf	fsr2l,f,c
  3030  000BF0  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3031  000BF2  22DA               	addwfc	fsr2h,f,c
  3032  000BF4  CFDE F015          	movff	postinc2,___awdiv@dividend
  3033  000BF8  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3034  000BFC  0E00               	movlw	0
  3035  000BFE  6E18               	movwf	___awdiv@divisor+1,c
  3036  000C00  0E0A               	movlw	10
  3037  000C02  6E17               	movwf	___awdiv@divisor,c
  3038  000C04  EC47  F010         	call	___awdiv	;wreg free
  3039  000C08  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  3040  000C0C  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  3041  000C10  0E00               	movlw	0
  3042  000C12  6E12               	movwf	___awmod@divisor+1,c
  3043  000C14  0E0A               	movlw	10
  3044  000C16  6E11               	movwf	___awmod@divisor,c
  3045  000C18  0100               	movlb	0	; () banked
  3046  000C1A  EE20 F004          	lfsr	2,4
  3047  000C1E  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  3048  000C20  26D9               	addwf	fsr2l,f,c
  3049  000C22  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3050  000C24  22DA               	addwfc	fsr2h,f,c
  3051  000C26  CFDE F00F          	movff	postinc2,___awmod@dividend
  3052  000C2A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3053  000C2E  ECC8  F010         	call	___awmod	;wreg free
  3054  000C32  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3055  000C36  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3056  000C3A  0E00               	movlw	0
  3057  000C3C  6E18               	movwf	___awdiv@divisor+1,c
  3058  000C3E  0E0A               	movlw	10
  3059  000C40  6E17               	movwf	___awdiv@divisor,c
  3060  000C42  EC47  F010         	call	___awdiv	;wreg free
  3061  000C46  1E15               	comf	?___awdiv,f,c
  3062  000C48  1E16               	comf	?___awdiv+1,f,c
  3063  000C4A  4A15               	infsnz	?___awdiv,f,c
  3064  000C4C  2A16               	incf	?___awdiv+1,f,c
  3065  000C4E  5015               	movf	?___awdiv,w,c
  3066  000C50  242C               	addwf	??_exibir_lcd,w,c
  3067  000C52  0100               	movlb	0	; () banked
  3068  000C54  6F75               	movwf	exibir_lcd@k& (0+255),b
  3069  000C56  5016               	movf	?___awdiv+1,w,c
  3070  000C58  202D               	addwfc	??_exibir_lcd+1,w,c
  3071  000C5A  0100               	movlb	0	; () banked
  3072  000C5C  6F76               	movwf	(exibir_lcd@k+1)& (0+255),b
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;display_LCD.c: 52: l=Calendario->ano%10;
  3076  000C5E  0100               	movlb	0	; () banked
  3077  000C60  EE20 F004          	lfsr	2,4
  3078  000C64  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  3079  000C66  26D9               	addwf	fsr2l,f,c
  3080  000C68  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3081  000C6A  22DA               	addwfc	fsr2h,f,c
  3082  000C6C  CFDE F00F          	movff	postinc2,___awmod@dividend
  3083  000C70  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3084  000C74  0E00               	movlw	0
  3085  000C76  6E12               	movwf	___awmod@divisor+1,c
  3086  000C78  0E0A               	movlw	10
  3087  000C7A  6E11               	movwf	___awmod@divisor,c
  3088  000C7C  ECC8  F010         	call	___awmod	;wreg free
  3089  000C80  C00F  F077         	movff	?___awmod,exibir_lcd@l
  3090  000C84  C010  F078         	movff	?___awmod+1,exibir_lcd@l+1
  3091                           
  3092                           ;display_LCD.c: 53: sprintf(str, "DATA: %d%d:%d%d:%d%d", g, h, i, j, k, l);
  3093  000C88  0E93               	movlw	low _str
  3094  000C8A  6E1B               	movwf	sprintf@sp,c
  3095  000C8C  0E00               	movlw	high _str
  3096  000C8E  6E1C               	movwf	sprintf@sp+1,c
  3097  000C90  0E38               	movlw	low STR_2
  3098  000C92  6E1D               	movwf	sprintf@f,c
  3099  000C94  0E08               	movlw	high STR_2
  3100  000C96  6E1E               	movwf	sprintf@f+1,c
  3101  000C98  C06D  F01F         	movff	exibir_lcd@g,?_sprintf+4
  3102  000C9C  C06E  F020         	movff	exibir_lcd@g+1,?_sprintf+5
  3103  000CA0  C06F  F021         	movff	exibir_lcd@h,?_sprintf+6
  3104  000CA4  C070  F022         	movff	exibir_lcd@h+1,?_sprintf+7
  3105  000CA8  C071  F023         	movff	exibir_lcd@i,?_sprintf+8
  3106  000CAC  C072  F024         	movff	exibir_lcd@i+1,?_sprintf+9
  3107  000CB0  C073  F025         	movff	exibir_lcd@j,?_sprintf+10
  3108  000CB4  C074  F026         	movff	exibir_lcd@j+1,?_sprintf+11
  3109  000CB8  C075  F027         	movff	exibir_lcd@k,?_sprintf+12
  3110  000CBC  C076  F028         	movff	exibir_lcd@k+1,?_sprintf+13
  3111  000CC0  C077  F029         	movff	exibir_lcd@l,?_sprintf+14
  3112  000CC4  C078  F02A         	movff	exibir_lcd@l+1,?_sprintf+15
  3113  000CC8  EC2E  F00D         	call	_sprintf	;wreg free
  3114                           
  3115                           ;display_LCD.c: 54: SetDDRamAddr(0x40);
  3116  000CCC  0E40               	movlw	64
  3117  000CCE  EC86  F011         	call	_SetDDRamAddr
  3118                           
  3119                           ;display_LCD.c: 55: putrsXLCD(str);
  3120  000CD2  0E93               	movlw	low _str
  3121  000CD4  6E11               	movwf	putrsXLCD@buffer,c
  3122  000CD6  0E00               	movlw	high _str
  3123  000CD8  6E12               	movwf	putrsXLCD@buffer+1,c
  3124  000CDA  EC2F  F011         	call	_putrsXLCD	;wreg free
  3125  000CDE                     l3160:
  3126                           
  3127                           ;display_LCD.c: 56: }
  3128                           ;display_LCD.c: 59: if(tela_exibida==1){
  3129  000CDE  044F               	decf	_tela_exibida,w,c
  3130  000CE0  1050               	iorwf	_tela_exibida+1,w,c
  3131  000CE2  A4D8               	btfss	status,2,c
  3132  000CE4  D11E               	goto	l3174
  3133                           
  3134                           ;display_LCD.c: 60: a=((Despertador->hora)/10)-(((Despertador->hora)%10)/10);
  3135  000CE6  0100               	movlb	0	; () banked
  3136  000CE8  EE20 F004          	lfsr	2,4
  3137  000CEC  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3138  000CEE  26D9               	addwf	fsr2l,f,c
  3139  000CF0  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3140  000CF2  22DA               	addwfc	fsr2h,f,c
  3141  000CF4  CFDE F015          	movff	postinc2,___awdiv@dividend
  3142  000CF8  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3143  000CFC  0E00               	movlw	0
  3144  000CFE  6E18               	movwf	___awdiv@divisor+1,c
  3145  000D00  0E0A               	movlw	10
  3146  000D02  6E17               	movwf	___awdiv@divisor,c
  3147  000D04  EC47  F010         	call	___awdiv	;wreg free
  3148  000D08  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  3149  000D0C  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  3150  000D10  0E00               	movlw	0
  3151  000D12  6E12               	movwf	___awmod@divisor+1,c
  3152  000D14  0E0A               	movlw	10
  3153  000D16  6E11               	movwf	___awmod@divisor,c
  3154  000D18  0100               	movlb	0	; () banked
  3155  000D1A  EE20 F004          	lfsr	2,4
  3156  000D1E  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3157  000D20  26D9               	addwf	fsr2l,f,c
  3158  000D22  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3159  000D24  22DA               	addwfc	fsr2h,f,c
  3160  000D26  CFDE F00F          	movff	postinc2,___awmod@dividend
  3161  000D2A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3162  000D2E  ECC8  F010         	call	___awmod	;wreg free
  3163  000D32  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3164  000D36  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3165  000D3A  0E00               	movlw	0
  3166  000D3C  6E18               	movwf	___awdiv@divisor+1,c
  3167  000D3E  0E0A               	movlw	10
  3168  000D40  6E17               	movwf	___awdiv@divisor,c
  3169  000D42  EC47  F010         	call	___awdiv	;wreg free
  3170  000D46  1E15               	comf	?___awdiv,f,c
  3171  000D48  1E16               	comf	?___awdiv+1,f,c
  3172  000D4A  4A15               	infsnz	?___awdiv,f,c
  3173  000D4C  2A16               	incf	?___awdiv+1,f,c
  3174  000D4E  5015               	movf	?___awdiv,w,c
  3175  000D50  242C               	addwf	??_exibir_lcd,w,c
  3176  000D52  0100               	movlb	0	; () banked
  3177  000D54  6F79               	movwf	exibir_lcd@a& (0+255),b
  3178  000D56  5016               	movf	?___awdiv+1,w,c
  3179  000D58  202D               	addwfc	??_exibir_lcd+1,w,c
  3180  000D5A  0100               	movlb	0	; () banked
  3181  000D5C  6F7A               	movwf	(exibir_lcd@a+1)& (0+255),b
  3182                           
  3183                           ;display_LCD.c: 61: b=Despertador->hora%10;
  3184  000D5E  0100               	movlb	0	; () banked
  3185  000D60  EE20 F004          	lfsr	2,4
  3186  000D64  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3187  000D66  26D9               	addwf	fsr2l,f,c
  3188  000D68  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3189  000D6A  22DA               	addwfc	fsr2h,f,c
  3190  000D6C  CFDE F00F          	movff	postinc2,___awmod@dividend
  3191  000D70  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3192  000D74  0E00               	movlw	0
  3193  000D76  6E12               	movwf	___awmod@divisor+1,c
  3194  000D78  0E0A               	movlw	10
  3195  000D7A  6E11               	movwf	___awmod@divisor,c
  3196  000D7C  ECC8  F010         	call	___awmod	;wreg free
  3197  000D80  C00F  F07B         	movff	?___awmod,exibir_lcd@b
  3198  000D84  C010  F07C         	movff	?___awmod+1,exibir_lcd@b+1
  3199                           
  3200                           ;display_LCD.c: 62: c=((Despertador->minuto)/10)-(((Despertador->minuto)%10)/10);
  3201  000D88  C069  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3202  000D8C  C06A  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3203  000D90  CFDE F015          	movff	postinc2,___awdiv@dividend
  3204  000D94  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3205  000D98  0E00               	movlw	0
  3206  000D9A  6E18               	movwf	___awdiv@divisor+1,c
  3207  000D9C  0E0A               	movlw	10
  3208  000D9E  6E17               	movwf	___awdiv@divisor,c
  3209  000DA0  EC47  F010         	call	___awdiv	;wreg free
  3210  000DA4  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  3211  000DA8  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  3212  000DAC  0E00               	movlw	0
  3213  000DAE  6E12               	movwf	___awmod@divisor+1,c
  3214  000DB0  0E0A               	movlw	10
  3215  000DB2  6E11               	movwf	___awmod@divisor,c
  3216  000DB4  C069  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3217  000DB8  C06A  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3218  000DBC  CFDE F00F          	movff	postinc2,___awmod@dividend
  3219  000DC0  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3220  000DC4  ECC8  F010         	call	___awmod	;wreg free
  3221  000DC8  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3222  000DCC  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3223  000DD0  0E00               	movlw	0
  3224  000DD2  6E18               	movwf	___awdiv@divisor+1,c
  3225  000DD4  0E0A               	movlw	10
  3226  000DD6  6E17               	movwf	___awdiv@divisor,c
  3227  000DD8  EC47  F010         	call	___awdiv	;wreg free
  3228  000DDC  1E15               	comf	?___awdiv,f,c
  3229  000DDE  1E16               	comf	?___awdiv+1,f,c
  3230  000DE0  4A15               	infsnz	?___awdiv,f,c
  3231  000DE2  2A16               	incf	?___awdiv+1,f,c
  3232  000DE4  5015               	movf	?___awdiv,w,c
  3233  000DE6  242C               	addwf	??_exibir_lcd,w,c
  3234  000DE8  0100               	movlb	0	; () banked
  3235  000DEA  6F7D               	movwf	exibir_lcd@c& (0+255),b
  3236  000DEC  5016               	movf	?___awdiv+1,w,c
  3237  000DEE  202D               	addwfc	??_exibir_lcd+1,w,c
  3238  000DF0  0100               	movlb	0	; () banked
  3239  000DF2  6F7E               	movwf	(exibir_lcd@c+1)& (0+255),b
  3240                           
  3241                           ;display_LCD.c: 63: d=Despertador->minuto%10;
  3242  000DF4  C069  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3243  000DF8  C06A  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3244  000DFC  CFDE F00F          	movff	postinc2,___awmod@dividend
  3245  000E00  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3246  000E04  0E00               	movlw	0
  3247  000E06  6E12               	movwf	___awmod@divisor+1,c
  3248  000E08  0E0A               	movlw	10
  3249  000E0A  6E11               	movwf	___awmod@divisor,c
  3250  000E0C  ECC8  F010         	call	___awmod	;wreg free
  3251  000E10  C00F  F07F         	movff	?___awmod,exibir_lcd@d
  3252  000E14  C010  F080         	movff	?___awmod+1,exibir_lcd@d+1
  3253                           
  3254                           ;display_LCD.c: 64: e=((Despertador->segundo)/10)-(((Despertador->segundo)%10)/10);
  3255  000E18  0100               	movlb	0	; () banked
  3256  000E1A  EE20 F002          	lfsr	2,2
  3257  000E1E  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3258  000E20  26D9               	addwf	fsr2l,f,c
  3259  000E22  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3260  000E24  22DA               	addwfc	fsr2h,f,c
  3261  000E26  CFDE F015          	movff	postinc2,___awdiv@dividend
  3262  000E2A  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3263  000E2E  0E00               	movlw	0
  3264  000E30  6E18               	movwf	___awdiv@divisor+1,c
  3265  000E32  0E0A               	movlw	10
  3266  000E34  6E17               	movwf	___awdiv@divisor,c
  3267  000E36  EC47  F010         	call	___awdiv	;wreg free
  3268  000E3A  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  3269  000E3E  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  3270  000E42  0E00               	movlw	0
  3271  000E44  6E12               	movwf	___awmod@divisor+1,c
  3272  000E46  0E0A               	movlw	10
  3273  000E48  6E11               	movwf	___awmod@divisor,c
  3274  000E4A  0100               	movlb	0	; () banked
  3275  000E4C  EE20 F002          	lfsr	2,2
  3276  000E50  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3277  000E52  26D9               	addwf	fsr2l,f,c
  3278  000E54  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3279  000E56  22DA               	addwfc	fsr2h,f,c
  3280  000E58  CFDE F00F          	movff	postinc2,___awmod@dividend
  3281  000E5C  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3282  000E60  ECC8  F010         	call	___awmod	;wreg free
  3283  000E64  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3284  000E68  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3285  000E6C  0E00               	movlw	0
  3286  000E6E  6E18               	movwf	___awdiv@divisor+1,c
  3287  000E70  0E0A               	movlw	10
  3288  000E72  6E17               	movwf	___awdiv@divisor,c
  3289  000E74  EC47  F010         	call	___awdiv	;wreg free
  3290  000E78  1E15               	comf	?___awdiv,f,c
  3291  000E7A  1E16               	comf	?___awdiv+1,f,c
  3292  000E7C  4A15               	infsnz	?___awdiv,f,c
  3293  000E7E  2A16               	incf	?___awdiv+1,f,c
  3294  000E80  5015               	movf	?___awdiv,w,c
  3295  000E82  242C               	addwf	??_exibir_lcd,w,c
  3296  000E84  0100               	movlb	0	; () banked
  3297  000E86  6F81               	movwf	exibir_lcd@e& (0+255),b
  3298  000E88  5016               	movf	?___awdiv+1,w,c
  3299  000E8A  202D               	addwfc	??_exibir_lcd+1,w,c
  3300  000E8C  0100               	movlb	0	; () banked
  3301  000E8E  6F82               	movwf	(exibir_lcd@e+1)& (0+255),b
  3302                           
  3303                           ;display_LCD.c: 65: f=Despertador->segundo%10;
  3304  000E90  0100               	movlb	0	; () banked
  3305  000E92  EE20 F002          	lfsr	2,2
  3306  000E96  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3307  000E98  26D9               	addwf	fsr2l,f,c
  3308  000E9A  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3309  000E9C  22DA               	addwfc	fsr2h,f,c
  3310  000E9E  CFDE F00F          	movff	postinc2,___awmod@dividend
  3311  000EA2  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3312  000EA6  0E00               	movlw	0
  3313  000EA8  6E12               	movwf	___awmod@divisor+1,c
  3314  000EAA  0E0A               	movlw	10
  3315  000EAC  6E11               	movwf	___awmod@divisor,c
  3316  000EAE  ECC8  F010         	call	___awmod	;wreg free
  3317  000EB2  C00F  F083         	movff	?___awmod,exibir_lcd@f
  3318  000EB6  C010  F084         	movff	?___awmod+1,exibir_lcd@f+1
  3319                           
  3320                           ;display_LCD.c: 67: sprintf(str, "%d%d:%d%d:%d%d        ", a, b, c, d, e, f);
  3321  000EBA  0E93               	movlw	low _str
  3322  000EBC  6E1B               	movwf	sprintf@sp,c
  3323  000EBE  0E00               	movlw	high _str
  3324  000EC0  6E1C               	movwf	sprintf@sp+1,c
  3325  000EC2  0E0B               	movlw	low STR_3
  3326  000EC4  6E1D               	movwf	sprintf@f,c
  3327  000EC6  0E08               	movlw	high STR_3
  3328  000EC8  6E1E               	movwf	sprintf@f+1,c
  3329  000ECA  C079  F01F         	movff	exibir_lcd@a,?_sprintf+4
  3330  000ECE  C07A  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  3331  000ED2  C07B  F021         	movff	exibir_lcd@b,?_sprintf+6
  3332  000ED6  C07C  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  3333  000EDA  C07D  F023         	movff	exibir_lcd@c,?_sprintf+8
  3334  000EDE  C07E  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  3335  000EE2  C07F  F025         	movff	exibir_lcd@d,?_sprintf+10
  3336  000EE6  C080  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  3337  000EEA  C081  F027         	movff	exibir_lcd@e,?_sprintf+12
  3338  000EEE  C082  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  3339  000EF2  C083  F029         	movff	exibir_lcd@f,?_sprintf+14
  3340  000EF6  C084  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  3341  000EFA  EC2E  F00D         	call	_sprintf	;wreg free
  3342                           
  3343                           ;display_LCD.c: 68: SetDDRamAddr(0x00);
  3344  000EFE  0E00               	movlw	0
  3345  000F00  EC86  F011         	call	_SetDDRamAddr
  3346                           
  3347                           ;display_LCD.c: 69: putrsXLCD("DESPERTADOR.  ");
  3348  000F04  0E72               	movlw	low STR_4
  3349  000F06  6E11               	movwf	putrsXLCD@buffer,c
  3350  000F08  0E08               	movlw	high STR_4
  3351  000F0A  6E12               	movwf	putrsXLCD@buffer+1,c
  3352  000F0C  EC2F  F011         	call	_putrsXLCD	;wreg free
  3353                           
  3354                           ;display_LCD.c: 70: SetDDRamAddr(0x40);
  3355  000F10  0E40               	movlw	64
  3356  000F12  EC86  F011         	call	_SetDDRamAddr
  3357                           
  3358                           ;display_LCD.c: 71: putrsXLCD(str);
  3359  000F16  0E93               	movlw	low _str
  3360  000F18  6E11               	movwf	putrsXLCD@buffer,c
  3361  000F1A  0E00               	movlw	high _str
  3362  000F1C  6E12               	movwf	putrsXLCD@buffer+1,c
  3363  000F1E  EC2F  F011         	call	_putrsXLCD	;wreg free
  3364  000F22                     l3174:
  3365                           
  3366                           ;display_LCD.c: 72: }
  3367                           ;display_LCD.c: 74: if(tela_exibida==2){
  3368  000F22  0E02               	movlw	2
  3369  000F24  184F               	xorwf	_tela_exibida,w,c
  3370  000F26  1050               	iorwf	_tela_exibida+1,w,c
  3371  000F28  A4D8               	btfss	status,2,c
  3372  000F2A  0012               	return	
  3373                           
  3374                           ;display_LCD.c: 75: gambiarra();
  3375  000F2C  ECE6  F012         	call	_gambiarra	;wreg free
  3376  000F30  0012               	return	
  3377  000F32                     __end_of_exibir_lcd:
  3378                           	opt stack 0
  3379                           tblptru	equ	0xFF8
  3380                           tblptrh	equ	0xFF7
  3381                           tblptrl	equ	0xFF6
  3382                           tablat	equ	0xFF5
  3383                           intcon	equ	0xFF2
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           postinc1	equ	0xFE6
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           indf2	equ	0xFDF
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           plusw2	equ	0xFDB
  3394                           fsr2h	equ	0xFDA
  3395                           fsr2l	equ	0xFD9
  3396                           status	equ	0xFD8
  3397                           
  3398 ;; *************** function _gambiarra *****************
  3399 ;; Defined at:
  3400 ;;		line 175 in file "exercicio_PIC_LCD_Serial.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2   18[None  ] int 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3414 ;;      Params:         0       0       0       0       0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3417 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3418 ;;Total ram usage:        0 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    6
  3421 ;; This function calls:
  3422 ;;		_gambiarra_pro_serial
  3423 ;; This function is called by:
  3424 ;;		_exibir_lcd
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text12
  3429  0025CC                     __ptext12:
  3430                           	opt stack 0
  3431  0025CC                     _gambiarra:
  3432                           	opt stack 23
  3433                           
  3434                           ;exercicio_PIC_LCD_Serial.c: 176: gambiarra_pro_serial();
  3435                           
  3436                           ;incstack = 0
  3437  0025CC  EC89  F010         	call	_gambiarra_pro_serial	;wreg free
  3438  0025D0  0012               	return		;funcret
  3439  0025D2                     __end_of_gambiarra:
  3440                           	opt stack 0
  3441                           tblptru	equ	0xFF8
  3442                           tblptrh	equ	0xFF7
  3443                           tblptrl	equ	0xFF6
  3444                           tablat	equ	0xFF5
  3445                           intcon	equ	0xFF2
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           postinc1	equ	0xFE6
  3449                           postdec1	equ	0xFE5
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           indf2	equ	0xFDF
  3453                           postinc2	equ	0xFDE
  3454                           postdec2	equ	0xFDD
  3455                           plusw2	equ	0xFDB
  3456                           fsr2h	equ	0xFDA
  3457                           fsr2l	equ	0xFD9
  3458                           status	equ	0xFD8
  3459                           
  3460 ;; *************** function _gambiarra_pro_serial *****************
  3461 ;; Defined at:
  3462 ;;		line 61 in file "serial.h"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    5
  3483 ;; This function calls:
  3484 ;;		_SetDDRamAddr
  3485 ;;		_WriteCmdXLCD
  3486 ;;		_putrsXLCD
  3487 ;;		_sprintf
  3488 ;; This function is called by:
  3489 ;;		_gambiarra
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text13
  3494  002112                     __ptext13:
  3495                           	opt stack 0
  3496  002112                     _gambiarra_pro_serial:
  3497                           	opt stack 23
  3498                           
  3499                           ;serial.h: 64: WriteCmdXLCD(0x0C);
  3500                           
  3501                           ;incstack = 0
  3502  002112  0E0C               	movlw	12
  3503  002114  EC12  F012         	call	_WriteCmdXLCD
  3504                           
  3505                           ;serial.h: 65: SetDDRamAddr(0x00);
  3506  002118  0E00               	movlw	0
  3507  00211A  EC86  F011         	call	_SetDDRamAddr
  3508                           
  3509                           ;serial.h: 66: sprintf(str, "SERIAL:         ");
  3510  00211E  0E93               	movlw	low _str
  3511  002120  6E1B               	movwf	sprintf@sp,c
  3512  002122  0E00               	movlw	high _str
  3513  002124  6E1C               	movwf	sprintf@sp+1,c
  3514  002126  0E61               	movlw	low STR_5
  3515  002128  6E1D               	movwf	sprintf@f,c
  3516  00212A  0E08               	movlw	high STR_5
  3517  00212C  6E1E               	movwf	sprintf@f+1,c
  3518  00212E  EC2E  F00D         	call	_sprintf	;wreg free
  3519                           
  3520                           ;serial.h: 67: putrsXLCD(str);
  3521  002132  0E93               	movlw	low _str
  3522  002134  6E11               	movwf	putrsXLCD@buffer,c
  3523  002136  0E00               	movlw	high _str
  3524  002138  6E12               	movwf	putrsXLCD@buffer+1,c
  3525  00213A  EC2F  F011         	call	_putrsXLCD	;wreg free
  3526                           
  3527                           ;serial.h: 68: SetDDRamAddr(0x40);
  3528  00213E  0E40               	movlw	64
  3529  002140  EC86  F011         	call	_SetDDRamAddr
  3530                           
  3531                           ;serial.h: 69: sprintf(str, "%d %d %d           ", BUFF_RESP[1]-48, BUFF_RESP[2]-48, BUF
      +                          F_RESP[0]-48);
  3532  002144  0E93               	movlw	low _str
  3533  002146  6E1B               	movwf	sprintf@sp,c
  3534  002148  0E00               	movlw	high _str
  3535  00214A  6E1C               	movwf	sprintf@sp+1,c
  3536  00214C  0E4D               	movlw	low STR_6
  3537  00214E  6E1D               	movwf	sprintf@f,c
  3538  002150  0E08               	movlw	high STR_6
  3539  002152  6E1E               	movwf	sprintf@f+1,c
  3540  002154  0ED0               	movlw	208
  3541  002156  0100               	movlb	0	; () banked
  3542  002158  2586               	addwf	(_BUFF_RESP+1)& (0+255),w,b
  3543  00215A  6E1F               	movwf	?_sprintf+4,c
  3544  00215C  6A20               	clrf	?_sprintf+5,c
  3545  00215E  0EFF               	movlw	255
  3546  002160  2220               	addwfc	?_sprintf+5,f,c
  3547  002162  0ED0               	movlw	208
  3548  002164  0100               	movlb	0	; () banked
  3549  002166  2587               	addwf	(_BUFF_RESP+2)& (0+255),w,b
  3550  002168  6E21               	movwf	?_sprintf+6,c
  3551  00216A  6A22               	clrf	?_sprintf+7,c
  3552  00216C  0EFF               	movlw	255
  3553  00216E  2222               	addwfc	?_sprintf+7,f,c
  3554  002170  0ED0               	movlw	208
  3555  002172  0100               	movlb	0	; () banked
  3556  002174  2585               	addwf	_BUFF_RESP& (0+255),w,b
  3557  002176  6E23               	movwf	?_sprintf+8,c
  3558  002178  6A24               	clrf	?_sprintf+9,c
  3559  00217A  0EFF               	movlw	255
  3560  00217C  2224               	addwfc	?_sprintf+9,f,c
  3561  00217E  EC2E  F00D         	call	_sprintf	;wreg free
  3562                           
  3563                           ;serial.h: 70: putrsXLCD(str);
  3564  002182  0E93               	movlw	low _str
  3565  002184  6E11               	movwf	putrsXLCD@buffer,c
  3566  002186  0E00               	movlw	high _str
  3567  002188  6E12               	movwf	putrsXLCD@buffer+1,c
  3568  00218A  EC2F  F011         	call	_putrsXLCD	;wreg free
  3569  00218E  0012               	return		;funcret
  3570  002190                     __end_of_gambiarra_pro_serial:
  3571                           	opt stack 0
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           intcon	equ	0xFF2
  3577                           postinc0	equ	0xFEE
  3578                           wreg	equ	0xFE8
  3579                           postinc1	equ	0xFE6
  3580                           postdec1	equ	0xFE5
  3581                           fsr1h	equ	0xFE2
  3582                           fsr1l	equ	0xFE1
  3583                           indf2	equ	0xFDF
  3584                           postinc2	equ	0xFDE
  3585                           postdec2	equ	0xFDD
  3586                           plusw2	equ	0xFDB
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function _sprintf *****************
  3592 ;; Defined at:
  3593 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  sp              2   26[COMRAM] PTR unsigned char 
  3596 ;;		 -> str(16), 
  3597 ;;  f               2   28[COMRAM] PTR const unsigned char 
  3598 ;;		 -> STR_6(20), STR_5(17), STR_3(23), STR_2(21), 
  3599 ;;		 -> STR_1(22), 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  tmpval          4    0        struct .
  3602 ;;  cp              3    0        PTR const unsigned char 
  3603 ;;  val             2    4[BANK0 ] unsigned int 
  3604 ;;  ap              2    0[BANK0 ] PTR void [1]
  3605 ;;		 -> ?_sprintf(2), 
  3606 ;;  len             2    0        unsigned int 
  3607 ;;  c               1    6[BANK0 ] char 
  3608 ;;  prec            1    3[BANK0 ] char 
  3609 ;;  flag            1    2[BANK0 ] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  2   26[COMRAM] int 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3619 ;;      Params:        16       0       0       0       0       0       0       0       0
  3620 ;;      Locals:         0       7       0       0       0       0       0       0       0
  3621 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3622 ;;      Totals:        17       7       0       0       0       0       0       0       0
  3623 ;;Total ram usage:       24 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    2
  3626 ;; This function calls:
  3627 ;;		___lwdiv
  3628 ;;		___lwmod
  3629 ;; This function is called by:
  3630 ;;		_exibir_lcd
  3631 ;;		_gambiarra_pro_serial
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text14
  3636  001A5C                     __ptext14:
  3637                           	opt stack 0
  3638  001A5C                     _sprintf:
  3639                           	opt stack 27
  3640                           
  3641                           ;doprnt.c: 494: va_list ap;
  3642                           ;doprnt.c: 499: signed char c;
  3643                           ;doprnt.c: 506: signed char prec;
  3644                           ;doprnt.c: 508: unsigned char flag;
  3645                           ;doprnt.c: 523: union {
  3646                           ;doprnt.c: 524: unsigned long vd;
  3647                           ;doprnt.c: 525: double integ;
  3648                           ;doprnt.c: 526: } tmpval;
  3649                           ;doprnt.c: 528: unsigned int val;
  3650                           ;doprnt.c: 529: unsigned len;
  3651                           ;doprnt.c: 530: const char * cp;
  3652                           ;doprnt.c: 533: *ap = __va_start();
  3653                           
  3654                           ;incstack = 0
  3655  001A5C  0E1F               	movlw	low (?_sprintf+4)
  3656  001A5E  0100               	movlb	0	; () banked
  3657  001A60  6F60               	movwf	sprintf@ap& (0+255),b
  3658  001A62  0E00               	movlw	high (?_sprintf+4)
  3659  001A64  0100               	movlb	0	; () banked
  3660  001A66  6F61               	movwf	(sprintf@ap+1)& (0+255),b
  3661                           
  3662                           ;doprnt.c: 536: while(c = *f++) {
  3663  001A68  D09D               	goto	l3114
  3664  001A6A                     l3062:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;doprnt.c: 538: if(c != '%')
  3668  001A6A  0E25               	movlw	37
  3669  001A6C  0100               	movlb	0	; () banked
  3670  001A6E  1966               	xorwf	sprintf@c& (0+255),w,b
  3671  001A70  B4D8               	btfsc	status,2,c
  3672  001A72  D009               	goto	l3068
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;doprnt.c: 540: {
  3676                           ;doprnt.c: 541: ((*sp++ = (c)));
  3677  001A74  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3678  001A78  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3679  001A7C  C066  FFDF         	movff	sprintf@c,indf2
  3680                           
  3681                           ; BSR set to: 0
  3682  001A80  4A1B               	infsnz	sprintf@sp,f,c
  3683  001A82  2A1C               	incf	sprintf@sp+1,f,c
  3684                           
  3685                           ;doprnt.c: 542: continue;
  3686  001A84  D08F               	goto	l3114
  3687  001A86                     l3068:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;doprnt.c: 543: }
  3691                           ;doprnt.c: 548: flag = 0;
  3692  001A86  0E00               	movlw	0
  3693  001A88  0100               	movlb	0	; () banked
  3694  001A8A  6F62               	movwf	sprintf@flag& (0+255),b
  3695                           
  3696                           ; BSR set to: 0
  3697                           
  3698                           ; BSR set to: 0
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;doprnt.c: 822: }
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;doprnt.c: 813: continue;
  3705                           
  3706                           ;doprnt.c: 802: default:
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;doprnt.c: 698: case 'i':
  3710                           ;doprnt.c: 699: break;
  3711                           
  3712                           ; BSR set to: 0
  3713                           
  3714                           ;doprnt.c: 697: case 'd':
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;doprnt.c: 638: goto alldone;
  3718                           
  3719                           ;doprnt.c: 637: case 0:
  3720                           
  3721                           ;doprnt.c: 635: switch(c = *f++) {
  3722  001A8C  C01D  FFF6         	movff	sprintf@f,tblptrl
  3723  001A90  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  3724  001A94  4A1D               	infsnz	sprintf@f,f,c
  3725  001A96  2A1E               	incf	sprintf@f+1,f,c
  3726  001A98                     	if	0	;tblptru may be non-zero
  3727  001A98                     	endif
  3728  001A98                     	if	0	;tblptru may be non-zero
  3729  001A98                     	endif
  3730  001A98  0008               	tblrd		*
  3731  001A9A  CFF5 F066          	movff	tablat,sprintf@c
  3732  001A9E  0100               	movlb	0	; () banked
  3733  001AA0  5166               	movf	sprintf@c& (0+255),w,b
  3734                           
  3735                           ; Switch size 1, requested type "space"
  3736                           ; Number of cases is 3, Range of values is 0 to 105
  3737                           ; switch strategies available:
  3738                           ; Name         Instructions Cycles
  3739                           ; simple_byte           10     6 (average)
  3740                           ;	Chosen strategy is simple_byte
  3741  001AA2  0A00               	xorlw	0	; case 0
  3742  001AA4  B4D8               	btfsc	status,2,c
  3743  001AA6  D08B               	goto	l3116
  3744  001AA8  0A64               	xorlw	100	; case 100
  3745  001AAA  B4D8               	btfsc	status,2,c
  3746  001AAC  D003               	goto	l3074
  3747  001AAE  0A0D               	xorlw	13	; case 105
  3748  001AB0  A4D8               	btfss	status,2,c
  3749  001AB2  D078               	goto	l3114
  3750  001AB4                     l3074:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;doprnt.c: 1253: {
  3754                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3755  001AB4  C060  FFD9         	movff	sprintf@ap,fsr2l
  3756  001AB8  C061  FFDA         	movff	sprintf@ap+1,fsr2h
  3757  001ABC  CFDE F064          	movff	postinc2,sprintf@val
  3758  001AC0  CFDD F065          	movff	postdec2,sprintf@val+1
  3759                           
  3760                           ; BSR set to: 0
  3761  001AC4  0E02               	movlw	2
  3762  001AC6  0100               	movlb	0	; () banked
  3763  001AC8  2760               	addwf	sprintf@ap& (0+255),f,b
  3764  001ACA  0E00               	movlw	0
  3765  001ACC  2361               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;doprnt.c: 1261: if((int)val < 0) {
  3769  001ACE  0100               	movlb	0	; () banked
  3770  001AD0  AF65               	btfss	(sprintf@val+1)& (0+255),7,b
  3771  001AD2  D008               	goto	l3084
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;doprnt.c: 1262: flag |= 0x03;
  3775  001AD4  0E03               	movlw	3
  3776  001AD6  0100               	movlb	0	; () banked
  3777  001AD8  1362               	iorwf	sprintf@flag& (0+255),f,b
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;doprnt.c: 1263: val = -val;
  3781  001ADA  0100               	movlb	0	; () banked
  3782  001ADC  6D64               	negf	sprintf@val& (0+255),b
  3783  001ADE  1F65               	comf	(sprintf@val+1)& (0+255),f,b
  3784  001AE0  B0D8               	btfsc	status,0,c
  3785  001AE2  2B65               	incf	(sprintf@val+1)& (0+255),f,b
  3786  001AE4                     l3084:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;doprnt.c: 1264: }
  3790                           ;doprnt.c: 1266: }
  3791                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3792  001AE4  0E01               	movlw	1
  3793  001AE6  0100               	movlb	0	; () banked
  3794  001AE8  6F66               	movwf	sprintf@c& (0+255),b
  3795  001AEA                     l3086:
  3796                           
  3797                           ; BSR set to: 0
  3798  001AEA  0E05               	movlw	5
  3799  001AEC  0100               	movlb	0	; () banked
  3800  001AEE  1966               	xorwf	sprintf@c& (0+255),w,b
  3801  001AF0  B4D8               	btfsc	status,2,c
  3802  001AF2  D016               	goto	l3098
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;doprnt.c: 1306: if(val < dpowers[c])
  3806                           
  3807                           ; BSR set to: 0
  3808                           
  3809                           ; BSR set to: 0
  3810  001AF4  0100               	movlb	0	; () banked
  3811  001AF6  5166               	movf	sprintf@c& (0+255),w,b
  3812  001AF8  0D02               	mullw	2
  3813  001AFA  0E01               	movlw	low _dpowers
  3814  001AFC  24F3               	addwf	prodl,w,c
  3815  001AFE  6EF6               	movwf	tblptrl,c
  3816  001B00  0E08               	movlw	high _dpowers
  3817  001B02  20F4               	addwfc	prodh,w,c
  3818  001B04  6EF7               	movwf	tblptrh,c
  3819  001B06                     	if	0	;There are less than 3 active tblptr bytes
  3820  001B06                     	endif
  3821  001B06  0009               	tblrd		*+
  3822  001B08  50F5               	movf	tablat,w,c
  3823  001B0A  0100               	movlb	0	; () banked
  3824  001B0C  5D64               	subwf	sprintf@val& (0+255),w,b
  3825  001B0E  0009               	tblrd		*+
  3826  001B10  50F5               	movf	tablat,w,c
  3827  001B12  0100               	movlb	0	; () banked
  3828  001B14  5965               	subwfb	(sprintf@val+1)& (0+255),w,b
  3829  001B16  A0D8               	btfss	status,0,c
  3830  001B18  D003               	goto	l3098
  3831                           
  3832                           ; BSR set to: 0
  3833                           
  3834                           ; BSR set to: 0
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;doprnt.c: 1307: break;
  3838  001B1A  0100               	movlb	0	; () banked
  3839  001B1C  2B66               	incf	sprintf@c& (0+255),f,b
  3840  001B1E  D7E5               	goto	l3086
  3841  001B20                     l3098:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;doprnt.c: 1422: {
  3845                           ;doprnt.c: 1438: if(flag & 0x03)
  3846  001B20  C062  F02B         	movff	sprintf@flag,??_sprintf
  3847  001B24  0E03               	movlw	3
  3848  001B26  162B               	andwf	??_sprintf,f,c
  3849  001B28  B4D8               	btfsc	status,2,c
  3850  001B2A  D008               	goto	l3104
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3854  001B2C  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3855  001B30  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3856  001B34  0E2D               	movlw	45
  3857  001B36  6EDF               	movwf	indf2,c
  3858                           
  3859                           ; BSR set to: 0
  3860  001B38  4A1B               	infsnz	sprintf@sp,f,c
  3861  001B3A  2A1C               	incf	sprintf@sp+1,f,c
  3862  001B3C                     l3104:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;doprnt.c: 1469: }
  3866                           ;doprnt.c: 1472: prec = c;
  3867  001B3C  C066  F063         	movff	sprintf@c,sprintf@prec
  3868                           
  3869                           ;doprnt.c: 1474: while(prec--) {
  3870  001B40  D02B               	goto	l3112
  3871  001B42                     l3106:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;doprnt.c: 1478: {
  3875                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3876  001B42  0100               	movlb	0	; () banked
  3877  001B44  5163               	movf	sprintf@prec& (0+255),w,b
  3878  001B46  0D02               	mullw	2
  3879  001B48  0E01               	movlw	low _dpowers
  3880  001B4A  24F3               	addwf	prodl,w,c
  3881  001B4C  6EF6               	movwf	tblptrl,c
  3882  001B4E  0E08               	movlw	high _dpowers
  3883  001B50  20F4               	addwfc	prodh,w,c
  3884  001B52  6EF7               	movwf	tblptrh,c
  3885  001B54                     	if	0	;There are less than 3 active tblptr bytes
  3886  001B54                     	endif
  3887  001B54  0009               	tblrd		*+
  3888  001B56  CFF5 F011          	movff	tablat,___lwdiv@divisor
  3889  001B5A  000A               	tblrd		*-
  3890  001B5C  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  3891  001B60  C064  F00F         	movff	sprintf@val,___lwdiv@dividend
  3892  001B64  C065  F010         	movff	sprintf@val+1,___lwdiv@dividend+1
  3893  001B68  EC5D  F011         	call	___lwdiv	;wreg free
  3894  001B6C  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  3895  001B70  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  3896  001B74  0E00               	movlw	0
  3897  001B76  6E19               	movwf	___lwmod@divisor+1,c
  3898  001B78  0E0A               	movlw	10
  3899  001B7A  6E18               	movwf	___lwmod@divisor,c
  3900  001B7C  ECD2  F011         	call	___lwmod	;wreg free
  3901  001B80  5016               	movf	?___lwmod,w,c
  3902  001B82  0F30               	addlw	48
  3903  001B84  0100               	movlb	0	; () banked
  3904  001B86  6F66               	movwf	sprintf@c& (0+255),b
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;doprnt.c: 1523: }
  3908                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3909  001B88  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3910  001B8C  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3911  001B90  C066  FFDF         	movff	sprintf@c,indf2
  3912                           
  3913                           ; BSR set to: 0
  3914  001B94  4A1B               	infsnz	sprintf@sp,f,c
  3915  001B96  2A1C               	incf	sprintf@sp+1,f,c
  3916  001B98                     l3112:
  3917                           
  3918                           ; BSR set to: 0
  3919  001B98  0100               	movlb	0	; () banked
  3920  001B9A  0763               	decf	sprintf@prec& (0+255),f,b
  3921  001B9C  0100               	movlb	0	; () banked
  3922  001B9E  2963               	incf	sprintf@prec& (0+255),w,b
  3923  001BA0  A4D8               	btfss	status,2,c
  3924  001BA2  D7CF               	goto	l3106
  3925  001BA4                     l3114:
  3926                           
  3927                           ; BSR set to: 0
  3928  001BA4  C01D  FFF6         	movff	sprintf@f,tblptrl
  3929  001BA8  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  3930  001BAC  4A1D               	infsnz	sprintf@f,f,c
  3931  001BAE  2A1E               	incf	sprintf@f+1,f,c
  3932  001BB0                     	if	0	;tblptru may be non-zero
  3933  001BB0                     	endif
  3934  001BB0                     	if	0	;tblptru may be non-zero
  3935  001BB0                     	endif
  3936  001BB0  0008               	tblrd		*
  3937  001BB2  CFF5 F066          	movff	tablat,sprintf@c
  3938  001BB6  0100               	movlb	0	; () banked
  3939  001BB8  5166               	movf	sprintf@c& (0+255),w,b
  3940  001BBA  A4D8               	btfss	status,2,c
  3941  001BBC  D756               	goto	l3062
  3942  001BBE                     l3116:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;doprnt.c: 1538: *sp = 0;
  3946  001BBE  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3947  001BC2  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3948  001BC6  0E00               	movlw	0
  3949  001BC8  6EDF               	movwf	indf2,c
  3950  001BCA  0012               	return	
  3951  001BCC                     __end_of_sprintf:
  3952                           	opt stack 0
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           prodh	equ	0xFF4
  3958                           prodl	equ	0xFF3
  3959                           intcon	equ	0xFF2
  3960                           postinc0	equ	0xFEE
  3961                           wreg	equ	0xFE8
  3962                           postinc1	equ	0xFE6
  3963                           postdec1	equ	0xFE5
  3964                           fsr1h	equ	0xFE2
  3965                           fsr1l	equ	0xFE1
  3966                           indf2	equ	0xFDF
  3967                           postinc2	equ	0xFDE
  3968                           postdec2	equ	0xFDD
  3969                           plusw2	equ	0xFDB
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function ___lwmod *****************
  3975 ;; Defined at:
  3976 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  dividend        2   21[COMRAM] unsigned int 
  3979 ;;  divisor         2   23[COMRAM] unsigned int 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  counter         1   25[COMRAM] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  2   21[COMRAM] unsigned int 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3991 ;;      Params:         4       0       0       0       0       0       0       0       0
  3992 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3994 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3995 ;;Total ram usage:        5 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_sprintf
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text15
  4006  0023A4                     __ptext15:
  4007                           	opt stack 0
  4008  0023A4                     ___lwmod:
  4009                           	opt stack 27
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;incstack = 0
  4013  0023A4  5018               	movf	___lwmod@divisor,w,c
  4014  0023A6  1019               	iorwf	___lwmod@divisor+1,w,c
  4015  0023A8  B4D8               	btfsc	status,2,c
  4016  0023AA  D018               	goto	l905
  4017  0023AC  0E01               	movlw	1
  4018  0023AE  6E1A               	movwf	___lwmod@counter,c
  4019  0023B0  D004               	goto	l3050
  4020  0023B2                     l3048:
  4021  0023B2  90D8               	bcf	status,0,c
  4022  0023B4  3618               	rlcf	___lwmod@divisor,f,c
  4023  0023B6  3619               	rlcf	___lwmod@divisor+1,f,c
  4024  0023B8  2A1A               	incf	___lwmod@counter,f,c
  4025  0023BA                     l3050:
  4026  0023BA  AE19               	btfss	___lwmod@divisor+1,7,c
  4027  0023BC  D7FA               	goto	l3048
  4028  0023BE                     l3052:
  4029  0023BE  5018               	movf	___lwmod@divisor,w,c
  4030  0023C0  5C16               	subwf	___lwmod@dividend,w,c
  4031  0023C2  5019               	movf	___lwmod@divisor+1,w,c
  4032  0023C4  5817               	subwfb	___lwmod@dividend+1,w,c
  4033  0023C6  A0D8               	btfss	status,0,c
  4034  0023C8  D004               	goto	l3056
  4035  0023CA  5018               	movf	___lwmod@divisor,w,c
  4036  0023CC  5E16               	subwf	___lwmod@dividend,f,c
  4037  0023CE  5019               	movf	___lwmod@divisor+1,w,c
  4038  0023D0  5A17               	subwfb	___lwmod@dividend+1,f,c
  4039  0023D2                     l3056:
  4040  0023D2  90D8               	bcf	status,0,c
  4041  0023D4  3219               	rrcf	___lwmod@divisor+1,f,c
  4042  0023D6  3218               	rrcf	___lwmod@divisor,f,c
  4043  0023D8  2E1A               	decfsz	___lwmod@counter,f,c
  4044  0023DA  D7F1               	goto	l3052
  4045  0023DC                     l905:
  4046  0023DC  C016  F016         	movff	___lwmod@dividend,?___lwmod
  4047  0023E0  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  4048  0023E4  0012               	return		;funcret
  4049  0023E6                     __end_of___lwmod:
  4050                           	opt stack 0
  4051                           tblptru	equ	0xFF8
  4052                           tblptrh	equ	0xFF7
  4053                           tblptrl	equ	0xFF6
  4054                           tablat	equ	0xFF5
  4055                           prodh	equ	0xFF4
  4056                           prodl	equ	0xFF3
  4057                           intcon	equ	0xFF2
  4058                           postinc0	equ	0xFEE
  4059                           wreg	equ	0xFE8
  4060                           postinc1	equ	0xFE6
  4061                           postdec1	equ	0xFE5
  4062                           fsr1h	equ	0xFE2
  4063                           fsr1l	equ	0xFE1
  4064                           indf2	equ	0xFDF
  4065                           postinc2	equ	0xFDE
  4066                           postdec2	equ	0xFDD
  4067                           plusw2	equ	0xFDB
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function ___lwdiv *****************
  4073 ;; Defined at:
  4074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  dividend        2   14[COMRAM] unsigned int 
  4077 ;;  divisor         2   16[COMRAM] unsigned int 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  quotient        2   19[COMRAM] unsigned int 
  4080 ;;  counter         1   18[COMRAM] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  2   14[COMRAM] unsigned int 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4090 ;;      Params:         4       0       0       0       0       0       0       0       0
  4091 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4093 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4094 ;;Total ram usage:        7 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_sprintf
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text16
  4105  0022BA                     __ptext16:
  4106                           	opt stack 0
  4107  0022BA                     ___lwdiv:
  4108                           	opt stack 27
  4109                           
  4110                           ;incstack = 0
  4111  0022BA  0E00               	movlw	0
  4112  0022BC  6E15               	movwf	___lwdiv@quotient+1,c
  4113  0022BE  0E00               	movlw	0
  4114  0022C0  6E14               	movwf	___lwdiv@quotient,c
  4115  0022C2  5011               	movf	___lwdiv@divisor,w,c
  4116  0022C4  1012               	iorwf	___lwdiv@divisor+1,w,c
  4117  0022C6  B4D8               	btfsc	status,2,c
  4118  0022C8  D01C               	goto	l895
  4119  0022CA  0E01               	movlw	1
  4120  0022CC  6E13               	movwf	___lwdiv@counter,c
  4121  0022CE  D004               	goto	l3030
  4122  0022D0                     l3028:
  4123  0022D0  90D8               	bcf	status,0,c
  4124  0022D2  3611               	rlcf	___lwdiv@divisor,f,c
  4125  0022D4  3612               	rlcf	___lwdiv@divisor+1,f,c
  4126  0022D6  2A13               	incf	___lwdiv@counter,f,c
  4127  0022D8                     l3030:
  4128  0022D8  AE12               	btfss	___lwdiv@divisor+1,7,c
  4129  0022DA  D7FA               	goto	l3028
  4130  0022DC                     l3032:
  4131  0022DC  90D8               	bcf	status,0,c
  4132  0022DE  3614               	rlcf	___lwdiv@quotient,f,c
  4133  0022E0  3615               	rlcf	___lwdiv@quotient+1,f,c
  4134  0022E2  5011               	movf	___lwdiv@divisor,w,c
  4135  0022E4  5C0F               	subwf	___lwdiv@dividend,w,c
  4136  0022E6  5012               	movf	___lwdiv@divisor+1,w,c
  4137  0022E8  5810               	subwfb	___lwdiv@dividend+1,w,c
  4138  0022EA  A0D8               	btfss	status,0,c
  4139  0022EC  D005               	goto	l3040
  4140  0022EE  5011               	movf	___lwdiv@divisor,w,c
  4141  0022F0  5E0F               	subwf	___lwdiv@dividend,f,c
  4142  0022F2  5012               	movf	___lwdiv@divisor+1,w,c
  4143  0022F4  5A10               	subwfb	___lwdiv@dividend+1,f,c
  4144  0022F6  8014               	bsf	___lwdiv@quotient,0,c
  4145  0022F8                     l3040:
  4146  0022F8  90D8               	bcf	status,0,c
  4147  0022FA  3212               	rrcf	___lwdiv@divisor+1,f,c
  4148  0022FC  3211               	rrcf	___lwdiv@divisor,f,c
  4149  0022FE  2E13               	decfsz	___lwdiv@counter,f,c
  4150  002300  D7ED               	goto	l3032
  4151  002302                     l895:
  4152  002302  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  4153  002306  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4154  00230A  0012               	return		;funcret
  4155  00230C                     __end_of___lwdiv:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           prodh	equ	0xFF4
  4162                           prodl	equ	0xFF3
  4163                           intcon	equ	0xFF2
  4164                           postinc0	equ	0xFEE
  4165                           wreg	equ	0xFE8
  4166                           postinc1	equ	0xFE6
  4167                           postdec1	equ	0xFE5
  4168                           fsr1h	equ	0xFE2
  4169                           fsr1l	equ	0xFE1
  4170                           indf2	equ	0xFDF
  4171                           postinc2	equ	0xFDE
  4172                           postdec2	equ	0xFDD
  4173                           plusw2	equ	0xFDB
  4174                           fsr2h	equ	0xFDA
  4175                           fsr2l	equ	0xFD9
  4176                           status	equ	0xFD8
  4177                           
  4178 ;; *************** function _putrsXLCD *****************
  4179 ;; Defined at:
  4180 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  buffer          2   16[COMRAM] PTR const unsigned char 
  4183 ;;		 -> STR_4(15), str(16), 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4195 ;;      Params:         2       0       0       0       0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4198 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    4
  4202 ;; This function calls:
  4203 ;;		_BusyXLCD
  4204 ;;		_WriteDataXLCD
  4205 ;; This function is called by:
  4206 ;;		_exibir_lcd
  4207 ;;		_gambiarra_pro_serial
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text17
  4212  00225E                     __ptext17:
  4213                           	opt stack 0
  4214  00225E                     _putrsXLCD:
  4215                           	opt stack 25
  4216                           
  4217                           ;incstack = 0
  4218  00225E  D019               	goto	l2294
  4219  002260                     l2288:
  4220  002260  EC4F  F012         	call	_BusyXLCD	;wreg free
  4221  002264  0900               	iorlw	0
  4222  002266  A4D8               	btfss	status,2,c
  4223  002268  D7FB               	goto	l2288
  4224  00226A  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  4225  00226E  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  4226  002272  6AF8               	clrf	tblptru,c
  4227  002274  0E07               	movlw	(high __ramtop+-1)
  4228  002276  64F7               	cpfsgt	tblptrh,c
  4229  002278  D003               	bra	u1707
  4230  00227A  0008               	tblrd		*
  4231  00227C  50F5               	movf	tablat,w,c
  4232  00227E  D005               	bra	u1700
  4233  002280                     u1707:
  4234  002280  CFF6 FFE1          	movff	tblptrl,fsr1l
  4235  002284  CFF7 FFE2          	movff	tblptrh,fsr1h
  4236  002288  50E7               	movf	indf1,w,c
  4237  00228A                     u1700:
  4238  00228A  ECF3  F011         	call	_WriteDataXLCD
  4239  00228E  4A11               	infsnz	putrsXLCD@buffer,f,c
  4240  002290  2A12               	incf	putrsXLCD@buffer+1,f,c
  4241  002292                     l2294:
  4242  002292  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  4243  002296  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  4244  00229A  6AF8               	clrf	tblptru,c
  4245  00229C  0E07               	movlw	(high __ramtop+-1)
  4246  00229E  64F7               	cpfsgt	tblptrh,c
  4247  0022A0  D003               	bra	u1717
  4248  0022A2  0008               	tblrd		*
  4249  0022A4  50F5               	movf	tablat,w,c
  4250  0022A6  D005               	bra	u1710
  4251  0022A8                     u1717:
  4252  0022A8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4253  0022AC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4254  0022B0  50E7               	movf	indf1,w,c
  4255  0022B2                     u1710:
  4256  0022B2  0900               	iorlw	0
  4257  0022B4  B4D8               	btfsc	status,2,c
  4258  0022B6  0012               	return	
  4259  0022B8  D7D3               	goto	l2288
  4260  0022BA                     __end_of_putrsXLCD:
  4261                           	opt stack 0
  4262                           tblptru	equ	0xFF8
  4263                           tblptrh	equ	0xFF7
  4264                           tblptrl	equ	0xFF6
  4265                           tablat	equ	0xFF5
  4266                           prodh	equ	0xFF4
  4267                           prodl	equ	0xFF3
  4268                           intcon	equ	0xFF2
  4269                           postinc0	equ	0xFEE
  4270                           wreg	equ	0xFE8
  4271                           indf1	equ	0xFE7
  4272                           postinc1	equ	0xFE6
  4273                           postdec1	equ	0xFE5
  4274                           fsr1h	equ	0xFE2
  4275                           fsr1l	equ	0xFE1
  4276                           indf2	equ	0xFDF
  4277                           postinc2	equ	0xFDE
  4278                           postdec2	equ	0xFDD
  4279                           plusw2	equ	0xFDB
  4280                           fsr2h	equ	0xFDA
  4281                           fsr2l	equ	0xFD9
  4282                           status	equ	0xFD8
  4283                           
  4284 ;; *************** function _WriteDataXLCD *****************
  4285 ;; Defined at:
  4286 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  data            1    wreg     unsigned char 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  data            1   15[COMRAM] unsigned char 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4300 ;;      Params:         0       0       0       0       0       0       0       0       0
  4301 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4303 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4304 ;;Total ram usage:        1 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    3
  4307 ;; This function calls:
  4308 ;;		_DelayFor18TCY
  4309 ;; This function is called by:
  4310 ;;		_putrsXLCD
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text18
  4315  0023E6                     __ptext18:
  4316                           	opt stack 0
  4317  0023E6                     _WriteDataXLCD:
  4318                           	opt stack 25
  4319                           
  4320                           ;incstack = 0
  4321                           ;WriteDataXLCD@data stored from wreg
  4322  0023E6  6E10               	movwf	WriteDataXLCD@data,c
  4323  0023E8  0EF0               	movlw	240
  4324  0023EA  1693               	andwf	3987,f,c	;volatile
  4325  0023EC  0EF0               	movlw	240
  4326  0023EE  1681               	andwf	3969,f,c	;volatile
  4327  0023F0  3810               	swapf	WriteDataXLCD@data,w,c
  4328  0023F2  0B0F               	andlw	15
  4329  0023F4  0B0F               	andlw	15
  4330  0023F6  1281               	iorwf	3969,f,c	;volatile
  4331  0023F8  8A8A               	bsf	3978,5,c	;volatile
  4332  0023FA  9C8A               	bcf	3978,6,c	;volatile
  4333  0023FC  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4334  002400  888A               	bsf	3978,4,c	;volatile
  4335  002402  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4336  002406  988A               	bcf	3978,4,c	;volatile
  4337  002408  0EF0               	movlw	240
  4338  00240A  1681               	andwf	3969,f,c	;volatile
  4339  00240C  5010               	movf	WriteDataXLCD@data,w,c
  4340  00240E  0B0F               	andlw	15
  4341  002410  1281               	iorwf	3969,f,c	;volatile
  4342  002412  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4343  002416  888A               	bsf	3978,4,c	;volatile
  4344  002418  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4345  00241C  988A               	bcf	3978,4,c	;volatile
  4346  00241E  0E0F               	movlw	15
  4347  002420  1293               	iorwf	3987,f,c	;volatile
  4348  002422  0012               	return	
  4349  002424                     __end_of_WriteDataXLCD:
  4350                           	opt stack 0
  4351                           tblptru	equ	0xFF8
  4352                           tblptrh	equ	0xFF7
  4353                           tblptrl	equ	0xFF6
  4354                           tablat	equ	0xFF5
  4355                           prodh	equ	0xFF4
  4356                           prodl	equ	0xFF3
  4357                           intcon	equ	0xFF2
  4358                           postinc0	equ	0xFEE
  4359                           wreg	equ	0xFE8
  4360                           indf1	equ	0xFE7
  4361                           postinc1	equ	0xFE6
  4362                           postdec1	equ	0xFE5
  4363                           fsr1h	equ	0xFE2
  4364                           fsr1l	equ	0xFE1
  4365                           indf2	equ	0xFDF
  4366                           postinc2	equ	0xFDE
  4367                           postdec2	equ	0xFDD
  4368                           plusw2	equ	0xFDB
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _BusyXLCD *****************
  4374 ;; Defined at:
  4375 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      unsigned char 
  4382 ;; Registers used:
  4383 ;;		wreg, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4392 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4393 ;;Total ram usage:        0 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    3
  4396 ;; This function calls:
  4397 ;;		_DelayFor18TCY
  4398 ;; This function is called by:
  4399 ;;		_init_XLCD
  4400 ;;		_OpenXLCD
  4401 ;;		_putrsXLCD
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text19
  4406  00249E                     __ptext19:
  4407                           	opt stack 0
  4408  00249E                     _BusyXLCD:
  4409                           	opt stack 25
  4410                           
  4411                           ;incstack = 0
  4412  00249E  8C8A               	bsf	3978,6,c	;volatile
  4413  0024A0  9A8A               	bcf	3978,5,c	;volatile
  4414  0024A2  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4415  0024A6  888A               	bsf	3978,4,c	;volatile
  4416  0024A8  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4417  0024AC  A681               	btfss	3969,3,c	;volatile
  4418  0024AE  D00A               	goto	l381
  4419  0024B0  988A               	bcf	3978,4,c	;volatile
  4420  0024B2  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4421  0024B6  888A               	bsf	3978,4,c	;volatile
  4422  0024B8  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4423  0024BC  988A               	bcf	3978,4,c	;volatile
  4424  0024BE  9C8A               	bcf	3978,6,c	;volatile
  4425  0024C0  0E01               	movlw	1
  4426  0024C2  0012               	return	
  4427  0024C4                     l381:
  4428  0024C4  988A               	bcf	3978,4,c	;volatile
  4429  0024C6  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4430  0024CA  888A               	bsf	3978,4,c	;volatile
  4431  0024CC  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4432  0024D0  988A               	bcf	3978,4,c	;volatile
  4433  0024D2  9C8A               	bcf	3978,6,c	;volatile
  4434  0024D4  0E00               	movlw	0
  4435  0024D6  0012               	return	
  4436  0024D8                     __end_of_BusyXLCD:
  4437                           	opt stack 0
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           prodh	equ	0xFF4
  4443                           prodl	equ	0xFF3
  4444                           intcon	equ	0xFF2
  4445                           postinc0	equ	0xFEE
  4446                           wreg	equ	0xFE8
  4447                           indf1	equ	0xFE7
  4448                           postinc1	equ	0xFE6
  4449                           postdec1	equ	0xFE5
  4450                           fsr1h	equ	0xFE2
  4451                           fsr1l	equ	0xFE1
  4452                           indf2	equ	0xFDF
  4453                           postinc2	equ	0xFDE
  4454                           postdec2	equ	0xFDD
  4455                           plusw2	equ	0xFDB
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _WriteCmdXLCD *****************
  4461 ;; Defined at:
  4462 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  cmd             1    wreg     unsigned char 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  cmd             1   15[COMRAM] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0
  4477 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4479 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4480 ;;Total ram usage:        1 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    3
  4483 ;; This function calls:
  4484 ;;		_DelayFor18TCY
  4485 ;; This function is called by:
  4486 ;;		_init_XLCD
  4487 ;;		_gambiarra_pro_serial
  4488 ;;		_main
  4489 ;;		_OpenXLCD
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text20
  4494  002424                     __ptext20:
  4495                           	opt stack 0
  4496  002424                     _WriteCmdXLCD:
  4497                           	opt stack 26
  4498                           
  4499                           ;incstack = 0
  4500                           ;WriteCmdXLCD@cmd stored from wreg
  4501  002424  6E10               	movwf	WriteCmdXLCD@cmd,c
  4502  002426  0EF0               	movlw	240
  4503  002428  1693               	andwf	3987,f,c	;volatile
  4504  00242A  0EF0               	movlw	240
  4505  00242C  1681               	andwf	3969,f,c	;volatile
  4506  00242E  3810               	swapf	WriteCmdXLCD@cmd,w,c
  4507  002430  0B0F               	andlw	15
  4508  002432  0B0F               	andlw	15
  4509  002434  1281               	iorwf	3969,f,c	;volatile
  4510  002436  9C8A               	bcf	3978,6,c	;volatile
  4511  002438  9A8A               	bcf	3978,5,c	;volatile
  4512  00243A  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4513  00243E  888A               	bsf	3978,4,c	;volatile
  4514  002440  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4515  002444  988A               	bcf	3978,4,c	;volatile
  4516  002446  0EF0               	movlw	240
  4517  002448  1681               	andwf	3969,f,c	;volatile
  4518  00244A  5010               	movf	WriteCmdXLCD@cmd,w,c
  4519  00244C  0B0F               	andlw	15
  4520  00244E  1281               	iorwf	3969,f,c	;volatile
  4521  002450  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4522  002454  888A               	bsf	3978,4,c	;volatile
  4523  002456  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4524  00245A  988A               	bcf	3978,4,c	;volatile
  4525  00245C  0E0F               	movlw	15
  4526  00245E  1293               	iorwf	3987,f,c	;volatile
  4527  002460  0012               	return	
  4528  002462                     __end_of_WriteCmdXLCD:
  4529                           	opt stack 0
  4530                           tblptru	equ	0xFF8
  4531                           tblptrh	equ	0xFF7
  4532                           tblptrl	equ	0xFF6
  4533                           tablat	equ	0xFF5
  4534                           prodh	equ	0xFF4
  4535                           prodl	equ	0xFF3
  4536                           intcon	equ	0xFF2
  4537                           postinc0	equ	0xFEE
  4538                           wreg	equ	0xFE8
  4539                           indf1	equ	0xFE7
  4540                           postinc1	equ	0xFE6
  4541                           postdec1	equ	0xFE5
  4542                           fsr1h	equ	0xFE2
  4543                           fsr1l	equ	0xFE1
  4544                           indf2	equ	0xFDF
  4545                           postinc2	equ	0xFDE
  4546                           postdec2	equ	0xFDD
  4547                           plusw2	equ	0xFDB
  4548                           fsr2h	equ	0xFDA
  4549                           fsr2l	equ	0xFD9
  4550                           status	equ	0xFD8
  4551                           
  4552 ;; *************** function _SetDDRamAddr *****************
  4553 ;; Defined at:
  4554 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  DDaddr          1    wreg     unsigned char 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  DDaddr          1   18[COMRAM] unsigned char 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4568 ;;      Params:         0       0       0       0       0       0       0       0       0
  4569 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4570 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4571 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4572 ;;Total ram usage:        4 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    3
  4575 ;; This function calls:
  4576 ;;		_DelayFor18TCY
  4577 ;; This function is called by:
  4578 ;;		_exibir_lcd
  4579 ;;		_pisca_cursor
  4580 ;;		_gambiarra_pro_serial
  4581 ;;		_OpenXLCD
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text21
  4586  00230C                     __ptext21:
  4587                           	opt stack 0
  4588  00230C                     _SetDDRamAddr:
  4589                           	opt stack 26
  4590                           
  4591                           ;incstack = 0
  4592                           ;SetDDRamAddr@DDaddr stored from wreg
  4593  00230C  6E13               	movwf	SetDDRamAddr@DDaddr,c
  4594  00230E  0EF0               	movlw	240
  4595  002310  1693               	andwf	3987,f,c	;volatile
  4596  002312  0EF0               	movlw	240
  4597  002314  1681               	andwf	3969,f,c	;volatile
  4598  002316  5013               	movf	SetDDRamAddr@DDaddr,w,c
  4599  002318  6E10               	movwf	??_SetDDRamAddr& (0+255),c
  4600  00231A  6A11               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4601  00231C  8E10               	bsf	??_SetDDRamAddr,7,c
  4602  00231E  0E04               	movlw	4
  4603  002320  6E12               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4604  002322                     u1685:
  4605  002322  3411               	rlcf	??_SetDDRamAddr+1,w,c
  4606  002324  3211               	rrcf	??_SetDDRamAddr+1,f,c
  4607  002326  3210               	rrcf	??_SetDDRamAddr,f,c
  4608  002328  2E12               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4609  00232A  D7FB               	goto	u1685
  4610  00232C  5010               	movf	??_SetDDRamAddr,w,c
  4611  00232E  0B0F               	andlw	15
  4612  002330  1281               	iorwf	3969,f,c	;volatile
  4613  002332  9C8A               	bcf	3978,6,c	;volatile
  4614  002334  9A8A               	bcf	3978,5,c	;volatile
  4615  002336  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4616  00233A  888A               	bsf	3978,4,c	;volatile
  4617  00233C  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4618  002340  988A               	bcf	3978,4,c	;volatile
  4619  002342  0EF0               	movlw	240
  4620  002344  1681               	andwf	3969,f,c	;volatile
  4621  002346  5013               	movf	SetDDRamAddr@DDaddr,w,c
  4622  002348  0B0F               	andlw	15
  4623  00234A  1281               	iorwf	3969,f,c	;volatile
  4624  00234C  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4625  002350  888A               	bsf	3978,4,c	;volatile
  4626  002352  ECE2  F012         	call	_DelayFor18TCY	;wreg free
  4627  002356  988A               	bcf	3978,4,c	;volatile
  4628  002358  0E0F               	movlw	15
  4629  00235A  1293               	iorwf	3987,f,c	;volatile
  4630  00235C  0012               	return	
  4631  00235E                     __end_of_SetDDRamAddr:
  4632                           	opt stack 0
  4633                           tblptru	equ	0xFF8
  4634                           tblptrh	equ	0xFF7
  4635                           tblptrl	equ	0xFF6
  4636                           tablat	equ	0xFF5
  4637                           prodh	equ	0xFF4
  4638                           prodl	equ	0xFF3
  4639                           intcon	equ	0xFF2
  4640                           postinc0	equ	0xFEE
  4641                           wreg	equ	0xFE8
  4642                           indf1	equ	0xFE7
  4643                           postinc1	equ	0xFE6
  4644                           postdec1	equ	0xFE5
  4645                           fsr1h	equ	0xFE2
  4646                           fsr1l	equ	0xFE1
  4647                           indf2	equ	0xFDF
  4648                           postinc2	equ	0xFDE
  4649                           postdec2	equ	0xFDD
  4650                           plusw2	equ	0xFDB
  4651                           fsr2h	equ	0xFDA
  4652                           fsr2l	equ	0xFD9
  4653                           status	equ	0xFD8
  4654                           
  4655 ;; *************** function _DelayFor18TCY *****************
  4656 ;; Defined at:
  4657 ;;		line 7 in file "display_LCD.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    2
  4678 ;; This function calls:
  4679 ;;		_Delay10TCYx
  4680 ;; This function is called by:
  4681 ;;		_BusyXLCD
  4682 ;;		_SetDDRamAddr
  4683 ;;		_WriteCmdXLCD
  4684 ;;		_WriteDataXLCD
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text22
  4689  0025C4                     __ptext22:
  4690                           	opt stack 0
  4691  0025C4                     _DelayFor18TCY:
  4692                           	opt stack 26
  4693                           
  4694                           ;display_LCD.c: 8: Delay10TCYx(120);
  4695                           
  4696                           ;incstack = 0
  4697  0025C4  0E78               	movlw	120
  4698  0025C6  ECCF  F012         	call	_Delay10TCYx
  4699  0025CA  0012               	return		;funcret
  4700  0025CC                     __end_of_DelayFor18TCY:
  4701                           	opt stack 0
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           intcon	equ	0xFF2
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           indf1	equ	0xFE7
  4712                           postinc1	equ	0xFE6
  4713                           postdec1	equ	0xFE5
  4714                           fsr1h	equ	0xFE2
  4715                           fsr1l	equ	0xFE1
  4716                           indf2	equ	0xFDF
  4717                           postinc2	equ	0xFDE
  4718                           postdec2	equ	0xFDD
  4719                           plusw2	equ	0xFDB
  4720                           fsr2h	equ	0xFDA
  4721                           fsr2l	equ	0xFD9
  4722                           status	equ	0xFD8
  4723                           
  4724 ;; *************** function _Delay10TCYx *****************
  4725 ;; Defined at:
  4726 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  unit            1    wreg     unsigned char 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  unit            1   14[COMRAM] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4743 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:        1 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_DelayFor18TCY
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text23
  4755  00259E                     __ptext23:
  4756                           	opt stack 0
  4757  00259E                     _Delay10TCYx:
  4758                           	opt stack 26
  4759                           
  4760                           ;incstack = 0
  4761                           ;Delay10TCYx@unit stored from wreg
  4762  00259E  6E0F               	movwf	Delay10TCYx@unit,c
  4763  0025A0  0E03               	movlw	3
  4764  0025A2                     u3297:
  4765  0025A2  2EE8               	decfsz	wreg,f,c
  4766  0025A4  D7FE               	bra	u3297
  4767  0025A6  F000               	nop	
  4768  0025A8  2E0F               	decfsz	Delay10TCYx@unit,f,c
  4769  0025AA  D7FA               	goto	l2074
  4770  0025AC  0012               	return	
  4771  0025AE                     __end_of_Delay10TCYx:
  4772                           	opt stack 0
  4773                           tblptru	equ	0xFF8
  4774                           tblptrh	equ	0xFF7
  4775                           tblptrl	equ	0xFF6
  4776                           tablat	equ	0xFF5
  4777                           prodh	equ	0xFF4
  4778                           prodl	equ	0xFF3
  4779                           intcon	equ	0xFF2
  4780                           postinc0	equ	0xFEE
  4781                           wreg	equ	0xFE8
  4782                           indf1	equ	0xFE7
  4783                           postinc1	equ	0xFE6
  4784                           postdec1	equ	0xFE5
  4785                           fsr1h	equ	0xFE2
  4786                           fsr1l	equ	0xFE1
  4787                           indf2	equ	0xFDF
  4788                           postinc2	equ	0xFDE
  4789                           postdec2	equ	0xFDD
  4790                           plusw2	equ	0xFDB
  4791                           fsr2h	equ	0xFDA
  4792                           fsr2l	equ	0xFD9
  4793                           status	equ	0xFD8
  4794                           
  4795 ;; *************** function ___awmod *****************
  4796 ;; Defined at:
  4797 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  dividend        2   14[COMRAM] int 
  4800 ;;  divisor         2   16[COMRAM] int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  sign            1   19[COMRAM] unsigned char 
  4803 ;;  counter         1   18[COMRAM] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2   14[COMRAM] int 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4813 ;;      Params:         4       0       0       0       0       0       0       0       0
  4814 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4816 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4817 ;;Total ram usage:        6 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    1
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_exibir_lcd
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text24
  4828  002190                     __ptext24:
  4829                           	opt stack 0
  4830  002190                     ___awmod:
  4831                           	opt stack 28
  4832                           
  4833                           ;incstack = 0
  4834  002190  0E00               	movlw	0
  4835  002192  6E14               	movwf	___awmod@sign,c
  4836  002194  AE10               	btfss	___awmod@dividend+1,7,c
  4837  002196  D006               	goto	l2620
  4838  002198  6C0F               	negf	___awmod@dividend,c
  4839  00219A  1E10               	comf	___awmod@dividend+1,f,c
  4840  00219C  B0D8               	btfsc	status,0,c
  4841  00219E  2A10               	incf	___awmod@dividend+1,f,c
  4842  0021A0  0E01               	movlw	1
  4843  0021A2  6E14               	movwf	___awmod@sign,c
  4844  0021A4                     l2620:
  4845  0021A4  AE12               	btfss	___awmod@divisor+1,7,c
  4846  0021A6  D004               	goto	l2624
  4847  0021A8  6C11               	negf	___awmod@divisor,c
  4848  0021AA  1E12               	comf	___awmod@divisor+1,f,c
  4849  0021AC  B0D8               	btfsc	status,0,c
  4850  0021AE  2A12               	incf	___awmod@divisor+1,f,c
  4851  0021B0                     l2624:
  4852  0021B0  5011               	movf	___awmod@divisor,w,c
  4853  0021B2  1012               	iorwf	___awmod@divisor+1,w,c
  4854  0021B4  B4D8               	btfsc	status,2,c
  4855  0021B6  D018               	goto	l2640
  4856  0021B8  0E01               	movlw	1
  4857  0021BA  6E13               	movwf	___awmod@counter,c
  4858  0021BC  D004               	goto	l2630
  4859  0021BE                     l2628:
  4860  0021BE  90D8               	bcf	status,0,c
  4861  0021C0  3611               	rlcf	___awmod@divisor,f,c
  4862  0021C2  3612               	rlcf	___awmod@divisor+1,f,c
  4863  0021C4  2A13               	incf	___awmod@counter,f,c
  4864  0021C6                     l2630:
  4865  0021C6  AE12               	btfss	___awmod@divisor+1,7,c
  4866  0021C8  D7FA               	goto	l2628
  4867  0021CA                     l2632:
  4868  0021CA  5011               	movf	___awmod@divisor,w,c
  4869  0021CC  5C0F               	subwf	___awmod@dividend,w,c
  4870  0021CE  5012               	movf	___awmod@divisor+1,w,c
  4871  0021D0  5810               	subwfb	___awmod@dividend+1,w,c
  4872  0021D2  A0D8               	btfss	status,0,c
  4873  0021D4  D004               	goto	l2636
  4874  0021D6  5011               	movf	___awmod@divisor,w,c
  4875  0021D8  5E0F               	subwf	___awmod@dividend,f,c
  4876  0021DA  5012               	movf	___awmod@divisor+1,w,c
  4877  0021DC  5A10               	subwfb	___awmod@dividend+1,f,c
  4878  0021DE                     l2636:
  4879  0021DE  90D8               	bcf	status,0,c
  4880  0021E0  3212               	rrcf	___awmod@divisor+1,f,c
  4881  0021E2  3211               	rrcf	___awmod@divisor,f,c
  4882  0021E4  2E13               	decfsz	___awmod@counter,f,c
  4883  0021E6  D7F1               	goto	l2632
  4884  0021E8                     l2640:
  4885  0021E8  5014               	movf	___awmod@sign,w,c
  4886  0021EA  B4D8               	btfsc	status,2,c
  4887  0021EC  D004               	goto	l2644
  4888  0021EE  6C0F               	negf	___awmod@dividend,c
  4889  0021F0  1E10               	comf	___awmod@dividend+1,f,c
  4890  0021F2  B0D8               	btfsc	status,0,c
  4891  0021F4  2A10               	incf	___awmod@dividend+1,f,c
  4892  0021F6                     l2644:
  4893  0021F6  C00F  F00F         	movff	___awmod@dividend,?___awmod
  4894  0021FA  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  4895  0021FE  0012               	return	
  4896  002200                     __end_of___awmod:
  4897                           	opt stack 0
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           prodh	equ	0xFF4
  4903                           prodl	equ	0xFF3
  4904                           intcon	equ	0xFF2
  4905                           postinc0	equ	0xFEE
  4906                           wreg	equ	0xFE8
  4907                           indf1	equ	0xFE7
  4908                           postinc1	equ	0xFE6
  4909                           postdec1	equ	0xFE5
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           indf2	equ	0xFDF
  4913                           postinc2	equ	0xFDE
  4914                           postdec2	equ	0xFDD
  4915                           plusw2	equ	0xFDB
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function ___awdiv *****************
  4921 ;; Defined at:
  4922 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  dividend        2   20[COMRAM] int 
  4925 ;;  divisor         2   22[COMRAM] int 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;  quotient        2   26[COMRAM] int 
  4928 ;;  sign            1   25[COMRAM] unsigned char 
  4929 ;;  counter         1   24[COMRAM] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  2   20[COMRAM] int 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4939 ;;      Params:         4       0       0       0       0       0       0       0       0
  4940 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4942 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4943 ;;Total ram usage:        8 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    1
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_exibir_lcd
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text25
  4954  00208E                     __ptext25:
  4955                           	opt stack 0
  4956  00208E                     ___awdiv:
  4957                           	opt stack 28
  4958                           
  4959                           ;incstack = 0
  4960  00208E  0E00               	movlw	0
  4961  002090  6E1A               	movwf	___awdiv@sign,c
  4962  002092  AE18               	btfss	___awdiv@divisor+1,7,c
  4963  002094  D006               	goto	l2576
  4964  002096  6C17               	negf	___awdiv@divisor,c
  4965  002098  1E18               	comf	___awdiv@divisor+1,f,c
  4966  00209A  B0D8               	btfsc	status,0,c
  4967  00209C  2A18               	incf	___awdiv@divisor+1,f,c
  4968  00209E  0E01               	movlw	1
  4969  0020A0  6E1A               	movwf	___awdiv@sign,c
  4970  0020A2                     l2576:
  4971  0020A2  AE16               	btfss	___awdiv@dividend+1,7,c
  4972  0020A4  D006               	goto	l2582
  4973  0020A6  6C15               	negf	___awdiv@dividend,c
  4974  0020A8  1E16               	comf	___awdiv@dividend+1,f,c
  4975  0020AA  B0D8               	btfsc	status,0,c
  4976  0020AC  2A16               	incf	___awdiv@dividend+1,f,c
  4977  0020AE  0E01               	movlw	1
  4978  0020B0  1A1A               	xorwf	___awdiv@sign,f,c
  4979  0020B2                     l2582:
  4980  0020B2  0E00               	movlw	0
  4981  0020B4  6E1C               	movwf	___awdiv@quotient+1,c
  4982  0020B6  0E00               	movlw	0
  4983  0020B8  6E1B               	movwf	___awdiv@quotient,c
  4984  0020BA  5017               	movf	___awdiv@divisor,w,c
  4985  0020BC  1018               	iorwf	___awdiv@divisor+1,w,c
  4986  0020BE  B4D8               	btfsc	status,2,c
  4987  0020C0  D01C               	goto	l2604
  4988  0020C2  0E01               	movlw	1
  4989  0020C4  6E19               	movwf	___awdiv@counter,c
  4990  0020C6  D004               	goto	l2590
  4991  0020C8                     l2588:
  4992  0020C8  90D8               	bcf	status,0,c
  4993  0020CA  3617               	rlcf	___awdiv@divisor,f,c
  4994  0020CC  3618               	rlcf	___awdiv@divisor+1,f,c
  4995  0020CE  2A19               	incf	___awdiv@counter,f,c
  4996  0020D0                     l2590:
  4997  0020D0  AE18               	btfss	___awdiv@divisor+1,7,c
  4998  0020D2  D7FA               	goto	l2588
  4999  0020D4                     l2592:
  5000  0020D4  90D8               	bcf	status,0,c
  5001  0020D6  361B               	rlcf	___awdiv@quotient,f,c
  5002  0020D8  361C               	rlcf	___awdiv@quotient+1,f,c
  5003  0020DA  5017               	movf	___awdiv@divisor,w,c
  5004  0020DC  5C15               	subwf	___awdiv@dividend,w,c
  5005  0020DE  5018               	movf	___awdiv@divisor+1,w,c
  5006  0020E0  5816               	subwfb	___awdiv@dividend+1,w,c
  5007  0020E2  A0D8               	btfss	status,0,c
  5008  0020E4  D005               	goto	l2600
  5009  0020E6  5017               	movf	___awdiv@divisor,w,c
  5010  0020E8  5E15               	subwf	___awdiv@dividend,f,c
  5011  0020EA  5018               	movf	___awdiv@divisor+1,w,c
  5012  0020EC  5A16               	subwfb	___awdiv@dividend+1,f,c
  5013  0020EE  801B               	bsf	___awdiv@quotient,0,c
  5014  0020F0                     l2600:
  5015  0020F0  90D8               	bcf	status,0,c
  5016  0020F2  3218               	rrcf	___awdiv@divisor+1,f,c
  5017  0020F4  3217               	rrcf	___awdiv@divisor,f,c
  5018  0020F6  2E19               	decfsz	___awdiv@counter,f,c
  5019  0020F8  D7ED               	goto	l2592
  5020  0020FA                     l2604:
  5021  0020FA  501A               	movf	___awdiv@sign,w,c
  5022  0020FC  B4D8               	btfsc	status,2,c
  5023  0020FE  D004               	goto	l2608
  5024  002100  6C1B               	negf	___awdiv@quotient,c
  5025  002102  1E1C               	comf	___awdiv@quotient+1,f,c
  5026  002104  B0D8               	btfsc	status,0,c
  5027  002106  2A1C               	incf	___awdiv@quotient+1,f,c
  5028  002108                     l2608:
  5029  002108  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5030  00210C  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5031  002110  0012               	return	
  5032  002112                     __end_of___awdiv:
  5033                           	opt stack 0
  5034                           tblptru	equ	0xFF8
  5035                           tblptrh	equ	0xFF7
  5036                           tblptrl	equ	0xFF6
  5037                           tablat	equ	0xFF5
  5038                           prodh	equ	0xFF4
  5039                           prodl	equ	0xFF3
  5040                           intcon	equ	0xFF2
  5041                           postinc0	equ	0xFEE
  5042                           wreg	equ	0xFE8
  5043                           indf1	equ	0xFE7
  5044                           postinc1	equ	0xFE6
  5045                           postdec1	equ	0xFE5
  5046                           fsr1h	equ	0xFE2
  5047                           fsr1l	equ	0xFE1
  5048                           indf2	equ	0xFDF
  5049                           postinc2	equ	0xFDE
  5050                           postdec2	equ	0xFDD
  5051                           plusw2	equ	0xFDB
  5052                           fsr2h	equ	0xFDA
  5053                           fsr2l	equ	0xFD9
  5054                           status	equ	0xFD8
  5055                           
  5056 ;; *************** function _checa_botao *****************
  5057 ;; Defined at:
  5058 ;;		line 144 in file "display_LCD.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  Relogio         2   28[COMRAM] PTR struct .
  5061 ;;		 -> Relogio(6), 
  5062 ;;  Despertador     2   30[COMRAM] PTR struct .
  5063 ;;		 -> Despertador(6), 
  5064 ;;  Calendario      2   32[COMRAM] PTR struct .
  5065 ;;		 -> Calendario(6), 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5077 ;;      Params:         6       0       0       0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5079 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5080 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5081 ;;Total ram usage:        8 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    3
  5084 ;; This function calls:
  5085 ;;		_decrementa_variavel
  5086 ;;		_incrementa_variavel
  5087 ;;		_posiciona_cursor
  5088 ;;		_trocar_tela
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text26
  5095  001F18                     __ptext26:
  5096                           	opt stack 0
  5097  001F18                     _checa_botao:
  5098                           	opt stack 27
  5099                           
  5100                           ;display_LCD.c: 147: if(PORTDbits.RD0==1){
  5101                           
  5102                           ;incstack = 0
  5103  001F18  A083               	btfss	3971,0,c	;volatile
  5104  001F1A  D00F               	goto	l2706
  5105                           
  5106                           ;display_LCD.c: 148: _delay((unsigned long)((180)*(20000000/4000.0)));
  5107  001F1C  0E05               	movlw	5
  5108  001F1E  6E24               	movwf	(??_checa_botao+1)& (0+255),c
  5109  001F20  0E91               	movlw	145
  5110  001F22  6E23               	movwf	??_checa_botao& (0+255),c
  5111  001F24  0ED0               	movlw	208
  5112  001F26                     u3307:
  5113  001F26  2EE8               	decfsz	wreg,f,c
  5114  001F28  D7FE               	bra	u3307
  5115  001F2A  2E23               	decfsz	??_checa_botao& (0+255),f,c
  5116  001F2C  D7FC               	bra	u3307
  5117  001F2E  2E24               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5118  001F30  D7FA               	bra	u3307
  5119                           
  5120                           ;display_LCD.c: 149: trocar_tela();
  5121  001F32  ECD7  F012         	call	_trocar_tela	;wreg free
  5122  001F36                     l124:
  5123  001F36  B083               	btfsc	3971,0,c	;volatile
  5124  001F38  D7FE               	goto	l124
  5125  001F3A                     l2706:
  5126                           
  5127                           ;display_LCD.c: 151: }
  5128                           ;display_LCD.c: 152: if(tela_exibida>2) tela_exibida=0;
  5129  001F3A  BE50               	btfsc	_tela_exibida+1,7,c
  5130  001F3C  D00A               	goto	l2710
  5131  001F3E  5050               	movf	_tela_exibida+1,w,c
  5132  001F40  E104               	bnz	u2480
  5133  001F42  0E03               	movlw	3
  5134  001F44  5C4F               	subwf	_tela_exibida,w,c
  5135  001F46  A0D8               	btfss	status,0,c
  5136  001F48  D004               	goto	l2710
  5137  001F4A                     u2480:
  5138  001F4A  0E00               	movlw	0
  5139  001F4C  6E50               	movwf	_tela_exibida+1,c
  5140  001F4E  0E00               	movlw	0
  5141  001F50  6E4F               	movwf	_tela_exibida,c
  5142  001F52                     l2710:
  5143                           
  5144                           ;display_LCD.c: 155: if(PORTDbits.RD1==1){
  5145  001F52  A283               	btfss	3971,1,c	;volatile
  5146  001F54  D01B               	goto	l128
  5147                           
  5148                           ;display_LCD.c: 156: _delay((unsigned long)((180)*(20000000/4000.0)));
  5149  001F56  0E05               	movlw	5
  5150  001F58  6E24               	movwf	(??_checa_botao+1)& (0+255),c
  5151  001F5A  0E91               	movlw	145
  5152  001F5C  6E23               	movwf	??_checa_botao& (0+255),c
  5153  001F5E  0ED0               	movlw	208
  5154  001F60                     u3317:
  5155  001F60  2EE8               	decfsz	wreg,f,c
  5156  001F62  D7FE               	bra	u3317
  5157  001F64  2E23               	decfsz	??_checa_botao& (0+255),f,c
  5158  001F66  D7FC               	bra	u3317
  5159  001F68  2E24               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5160  001F6A  D7FA               	bra	u3317
  5161                           
  5162                           ;display_LCD.c: 157: incrementa_variavel(&Relogio, &Despertador, &Calendario);
  5163  001F6C  0E1D               	movlw	low checa_botao@Relogio
  5164  001F6E  6E13               	movwf	incrementa_variavel@Relogio,c
  5165  001F70  0E00               	movlw	high checa_botao@Relogio
  5166  001F72  6E14               	movwf	incrementa_variavel@Relogio+1,c
  5167  001F74  0E1F               	movlw	low checa_botao@Despertador
  5168  001F76  6E15               	movwf	incrementa_variavel@Despertador,c
  5169  001F78  0E00               	movlw	high checa_botao@Despertador
  5170  001F7A  6E16               	movwf	incrementa_variavel@Despertador+1,c
  5171  001F7C  0E21               	movlw	low checa_botao@Calendario
  5172  001F7E  6E17               	movwf	incrementa_variavel@Calendario,c
  5173  001F80  0E00               	movlw	high checa_botao@Calendario
  5174  001F82  6E18               	movwf	incrementa_variavel@Calendario+1,c
  5175  001F84  ECE0  F00A         	call	_incrementa_variavel	;wreg free
  5176  001F88                     l129:
  5177  001F88  B283               	btfsc	3971,1,c	;volatile
  5178  001F8A  D7FE               	goto	l129
  5179  001F8C                     l128:
  5180                           
  5181                           ;display_LCD.c: 159: }
  5182                           ;display_LCD.c: 162: if(PORTDbits.RD2==1){
  5183  001F8C  A483               	btfss	3971,2,c	;volatile
  5184  001F8E  D01B               	goto	l132
  5185                           
  5186                           ;display_LCD.c: 163: _delay((unsigned long)((180)*(20000000/4000.0)));
  5187  001F90  0E05               	movlw	5
  5188  001F92  6E24               	movwf	(??_checa_botao+1)& (0+255),c
  5189  001F94  0E91               	movlw	145
  5190  001F96  6E23               	movwf	??_checa_botao& (0+255),c
  5191  001F98  0ED0               	movlw	208
  5192  001F9A                     u3327:
  5193  001F9A  2EE8               	decfsz	wreg,f,c
  5194  001F9C  D7FE               	bra	u3327
  5195  001F9E  2E23               	decfsz	??_checa_botao& (0+255),f,c
  5196  001FA0  D7FC               	bra	u3327
  5197  001FA2  2E24               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5198  001FA4  D7FA               	bra	u3327
  5199                           
  5200                           ;display_LCD.c: 164: decrementa_variavel(&Relogio, &Despertador, &Calendario);
  5201  001FA6  0E1D               	movlw	low checa_botao@Relogio
  5202  001FA8  6E13               	movwf	decrementa_variavel@Relogio,c
  5203  001FAA  0E00               	movlw	high checa_botao@Relogio
  5204  001FAC  6E14               	movwf	decrementa_variavel@Relogio+1,c
  5205  001FAE  0E1F               	movlw	low checa_botao@Despertador
  5206  001FB0  6E15               	movwf	decrementa_variavel@Despertador,c
  5207  001FB2  0E00               	movlw	high checa_botao@Despertador
  5208  001FB4  6E16               	movwf	decrementa_variavel@Despertador+1,c
  5209  001FB6  0E21               	movlw	low checa_botao@Calendario
  5210  001FB8  6E17               	movwf	decrementa_variavel@Calendario,c
  5211  001FBA  0E00               	movlw	high checa_botao@Calendario
  5212  001FBC  6E18               	movwf	decrementa_variavel@Calendario+1,c
  5213  001FBE  EC40  F009         	call	_decrementa_variavel	;wreg free
  5214  001FC2                     l133:
  5215  001FC2  B483               	btfsc	3971,2,c	;volatile
  5216  001FC4  D7FE               	goto	l133
  5217  001FC6                     l132:
  5218                           
  5219                           ;display_LCD.c: 166: }
  5220                           ;display_LCD.c: 169: if(PORTDbits.RD3==1){
  5221  001FC6  A683               	btfss	3971,3,c	;volatile
  5222  001FC8  0012               	return	
  5223                           
  5224                           ;display_LCD.c: 170: _delay((unsigned long)((180)*(20000000/4000.0)));
  5225  001FCA  0E05               	movlw	5
  5226  001FCC  6E24               	movwf	(??_checa_botao+1)& (0+255),c
  5227  001FCE  0E91               	movlw	145
  5228  001FD0  6E23               	movwf	??_checa_botao& (0+255),c
  5229  001FD2  0ED0               	movlw	208
  5230  001FD4                     u3337:
  5231  001FD4  2EE8               	decfsz	wreg,f,c
  5232  001FD6  D7FE               	bra	u3337
  5233  001FD8  2E23               	decfsz	??_checa_botao& (0+255),f,c
  5234  001FDA  D7FC               	bra	u3337
  5235  001FDC  2E24               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5236  001FDE  D7FA               	bra	u3337
  5237                           
  5238                           ;display_LCD.c: 171: posiciona_cursor();
  5239  001FE0  ECAF  F011         	call	_posiciona_cursor	;wreg free
  5240  001FE4                     l137:
  5241  001FE4  A683               	btfss	3971,3,c	;volatile
  5242  001FE6  0012               	return	
  5243  001FE8  D7FD               	goto	l137
  5244  001FEA                     __end_of_checa_botao:
  5245                           	opt stack 0
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           postinc0	equ	0xFEE
  5254                           wreg	equ	0xFE8
  5255                           indf1	equ	0xFE7
  5256                           postinc1	equ	0xFE6
  5257                           postdec1	equ	0xFE5
  5258                           fsr1h	equ	0xFE2
  5259                           fsr1l	equ	0xFE1
  5260                           indf2	equ	0xFDF
  5261                           postinc2	equ	0xFDE
  5262                           postdec2	equ	0xFDD
  5263                           plusw2	equ	0xFDB
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function _trocar_tela *****************
  5269 ;; Defined at:
  5270 ;;		line 79 in file "display_LCD.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5287 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    1
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_checa_botao
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text27
  5299  0025AE                     __ptext27:
  5300                           	opt stack 0
  5301  0025AE                     _trocar_tela:
  5302                           	opt stack 28
  5303                           
  5304                           ;display_LCD.c: 80: tela_exibida++;
  5305                           
  5306                           ;incstack = 0
  5307  0025AE  4A4F               	infsnz	_tela_exibida,f,c
  5308  0025B0  2A50               	incf	_tela_exibida+1,f,c
  5309                           
  5310                           ;display_LCD.c: 81: cursor=0;
  5311  0025B2  0E00               	movlw	0
  5312  0025B4  6E37               	movwf	_cursor+1,c
  5313  0025B6  0E00               	movlw	0
  5314  0025B8  6E36               	movwf	_cursor,c
  5315  0025BA  0012               	return		;funcret
  5316  0025BC                     __end_of_trocar_tela:
  5317                           	opt stack 0
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           postinc0	equ	0xFEE
  5326                           wreg	equ	0xFE8
  5327                           indf1	equ	0xFE7
  5328                           postinc1	equ	0xFE6
  5329                           postdec1	equ	0xFE5
  5330                           fsr1h	equ	0xFE2
  5331                           fsr1l	equ	0xFE1
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           plusw2	equ	0xFDB
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _posiciona_cursor *****************
  5341 ;; Defined at:
  5342 ;;		line 138 in file "display_LCD.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    1
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_checa_botao
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text28
  5371  00235E                     __ptext28:
  5372                           	opt stack 0
  5373  00235E                     _posiciona_cursor:
  5374                           	opt stack 28
  5375                           
  5376                           ;display_LCD.c: 139: cursor++;
  5377                           
  5378                           ;incstack = 0
  5379  00235E  4A36               	infsnz	_cursor,f,c
  5380  002360  2A37               	incf	_cursor+1,f,c
  5381                           
  5382                           ;display_LCD.c: 140: if(cursor>11 && tela_exibida==0) cursor=0;
  5383  002362  BE37               	btfsc	_cursor+1,7,c
  5384  002364  D00E               	goto	l1596
  5385  002366  5037               	movf	_cursor+1,w,c
  5386  002368  E104               	bnz	u740
  5387  00236A  0E0C               	movlw	12
  5388  00236C  5C36               	subwf	_cursor,w,c
  5389  00236E  A0D8               	btfss	status,0,c
  5390  002370  D008               	goto	l1596
  5391  002372                     u740:
  5392  002372  504F               	movf	_tela_exibida,w,c
  5393  002374  1050               	iorwf	_tela_exibida+1,w,c
  5394  002376  A4D8               	btfss	status,2,c
  5395  002378  D004               	goto	l1596
  5396  00237A  0E00               	movlw	0
  5397  00237C  6E37               	movwf	_cursor+1,c
  5398  00237E  0E00               	movlw	0
  5399  002380  6E36               	movwf	_cursor,c
  5400  002382                     l1596:
  5401                           
  5402                           ;display_LCD.c: 141: if(cursor>5 && tela_exibida==1) cursor=0;
  5403  002382  BE37               	btfsc	_cursor+1,7,c
  5404  002384  0012               	return	
  5405  002386  5037               	movf	_cursor+1,w,c
  5406  002388  E104               	bnz	u760
  5407  00238A  0E06               	movlw	6
  5408  00238C  5C36               	subwf	_cursor,w,c
  5409  00238E  A0D8               	btfss	status,0,c
  5410  002390  0012               	return	
  5411  002392                     u760:
  5412  002392  044F               	decf	_tela_exibida,w,c
  5413  002394  1050               	iorwf	_tela_exibida+1,w,c
  5414  002396  A4D8               	btfss	status,2,c
  5415  002398  0012               	return	
  5416  00239A  0E00               	movlw	0
  5417  00239C  6E37               	movwf	_cursor+1,c
  5418  00239E  0E00               	movlw	0
  5419  0023A0  6E36               	movwf	_cursor,c
  5420  0023A2  0012               	return	
  5421  0023A4                     __end_of_posiciona_cursor:
  5422                           	opt stack 0
  5423                           tblptru	equ	0xFF8
  5424                           tblptrh	equ	0xFF7
  5425                           tblptrl	equ	0xFF6
  5426                           tablat	equ	0xFF5
  5427                           prodh	equ	0xFF4
  5428                           prodl	equ	0xFF3
  5429                           intcon	equ	0xFF2
  5430                           postinc0	equ	0xFEE
  5431                           wreg	equ	0xFE8
  5432                           indf1	equ	0xFE7
  5433                           postinc1	equ	0xFE6
  5434                           postdec1	equ	0xFE5
  5435                           fsr1h	equ	0xFE2
  5436                           fsr1l	equ	0xFE1
  5437                           indf2	equ	0xFDF
  5438                           postinc2	equ	0xFDE
  5439                           postdec2	equ	0xFDD
  5440                           plusw2	equ	0xFDB
  5441                           fsr2h	equ	0xFDA
  5442                           fsr2l	equ	0xFD9
  5443                           status	equ	0xFD8
  5444                           
  5445 ;; *************** function _incrementa_variavel *****************
  5446 ;; Defined at:
  5447 ;;		line 84 in file "display_LCD.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  Relogio         2   18[COMRAM] PTR struct .
  5450 ;;		 -> checa_botao@Relogio(2), 
  5451 ;;  Despertador     2   20[COMRAM] PTR struct .
  5452 ;;		 -> checa_botao@Despertador(2), 
  5453 ;;  Calendario      2   22[COMRAM] PTR struct .
  5454 ;;		 -> checa_botao@Calendario(2), 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5466 ;;      Params:         6       0       0       0       0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5468 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5469 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5470 ;;Total ram usage:        8 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    2
  5473 ;; This function calls:
  5474 ;;		_controla_despertador
  5475 ;; This function is called by:
  5476 ;;		_checa_botao
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text29
  5481  0015C0                     __ptext29:
  5482                           	opt stack 0
  5483  0015C0                     _incrementa_variavel:
  5484                           	opt stack 27
  5485                           
  5486                           ;display_LCD.c: 85: if(tela_exibida==0){
  5487                           
  5488                           ;incstack = 0
  5489  0015C0  504F               	movf	_tela_exibida,w,c
  5490  0015C2  1050               	iorwf	_tela_exibida+1,w,c
  5491  0015C4  A4D8               	btfss	status,2,c
  5492  0015C6  D0F4               	goto	l2434
  5493                           
  5494                           ;display_LCD.c: 86: if(cursor==0) Relogio->hora=Relogio->hora+10;
  5495  0015C8  5036               	movf	_cursor,w,c
  5496  0015CA  1037               	iorwf	_cursor+1,w,c
  5497  0015CC  A4D8               	btfss	status,2,c
  5498  0015CE  D018               	goto	l2390
  5499  0015D0  EE20 F004          	lfsr	2,4
  5500  0015D4  5013               	movf	incrementa_variavel@Relogio,w,c
  5501  0015D6  26D9               	addwf	fsr2l,f,c
  5502  0015D8  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5503  0015DA  22DA               	addwfc	fsr2h,f,c
  5504  0015DC  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5505  0015E0  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5506  0015E4  0E0A               	movlw	10
  5507  0015E6  2619               	addwf	??_incrementa_variavel,f,c
  5508  0015E8  0E00               	movlw	0
  5509  0015EA  221A               	addwfc	??_incrementa_variavel+1,f,c
  5510  0015EC  EE20 F004          	lfsr	2,4
  5511  0015F0  5013               	movf	incrementa_variavel@Relogio,w,c
  5512  0015F2  26D9               	addwf	fsr2l,f,c
  5513  0015F4  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5514  0015F6  22DA               	addwfc	fsr2h,f,c
  5515  0015F8  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5516  0015FC  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5517  001600                     l2390:
  5518                           
  5519                           ;display_LCD.c: 87: if(cursor==1) Relogio->hora++;
  5520  001600  0436               	decf	_cursor,w,c
  5521  001602  1037               	iorwf	_cursor+1,w,c
  5522  001604  A4D8               	btfss	status,2,c
  5523  001606  D009               	goto	l2394
  5524  001608  EE20 F004          	lfsr	2,4
  5525  00160C  5013               	movf	incrementa_variavel@Relogio,w,c
  5526  00160E  26D9               	addwf	fsr2l,f,c
  5527  001610  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5528  001612  22DA               	addwfc	fsr2h,f,c
  5529  001614  2ADE               	incf	postinc2,f,c
  5530  001616  0E00               	movlw	0
  5531  001618  22DD               	addwfc	postdec2,f,c
  5532  00161A                     l2394:
  5533                           
  5534                           ;display_LCD.c: 88: if(cursor==2) Relogio->minuto=Relogio->minuto+10;
  5535  00161A  0E02               	movlw	2
  5536  00161C  1836               	xorwf	_cursor,w,c
  5537  00161E  1037               	iorwf	_cursor+1,w,c
  5538  001620  A4D8               	btfss	status,2,c
  5539  001622  D014               	goto	l2398
  5540  001624  C013  FFD9         	movff	incrementa_variavel@Relogio,fsr2l
  5541  001628  C014  FFDA         	movff	incrementa_variavel@Relogio+1,fsr2h
  5542  00162C  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5543  001630  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5544  001634  0E0A               	movlw	10
  5545  001636  2619               	addwf	??_incrementa_variavel,f,c
  5546  001638  0E00               	movlw	0
  5547  00163A  221A               	addwfc	??_incrementa_variavel+1,f,c
  5548  00163C  C013  FFD9         	movff	incrementa_variavel@Relogio,fsr2l
  5549  001640  C014  FFDA         	movff	incrementa_variavel@Relogio+1,fsr2h
  5550  001644  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5551  001648  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5552  00164C                     l2398:
  5553                           
  5554                           ;display_LCD.c: 89: if(cursor==3) Relogio->minuto++;
  5555  00164C  0E03               	movlw	3
  5556  00164E  1836               	xorwf	_cursor,w,c
  5557  001650  1037               	iorwf	_cursor+1,w,c
  5558  001652  A4D8               	btfss	status,2,c
  5559  001654  D007               	goto	l2402
  5560  001656  C013  FFD9         	movff	incrementa_variavel@Relogio,fsr2l
  5561  00165A  C014  FFDA         	movff	incrementa_variavel@Relogio+1,fsr2h
  5562  00165E  2ADE               	incf	postinc2,f,c
  5563  001660  0E00               	movlw	0
  5564  001662  22DD               	addwfc	postdec2,f,c
  5565  001664                     l2402:
  5566                           
  5567                           ;display_LCD.c: 90: if(cursor==4) Relogio->segundo=Relogio->segundo+10;
  5568  001664  0E04               	movlw	4
  5569  001666  1836               	xorwf	_cursor,w,c
  5570  001668  1037               	iorwf	_cursor+1,w,c
  5571  00166A  A4D8               	btfss	status,2,c
  5572  00166C  D018               	goto	l2406
  5573  00166E  EE20 F002          	lfsr	2,2
  5574  001672  5013               	movf	incrementa_variavel@Relogio,w,c
  5575  001674  26D9               	addwf	fsr2l,f,c
  5576  001676  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5577  001678  22DA               	addwfc	fsr2h,f,c
  5578  00167A  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5579  00167E  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5580  001682  0E0A               	movlw	10
  5581  001684  2619               	addwf	??_incrementa_variavel,f,c
  5582  001686  0E00               	movlw	0
  5583  001688  221A               	addwfc	??_incrementa_variavel+1,f,c
  5584  00168A  EE20 F002          	lfsr	2,2
  5585  00168E  5013               	movf	incrementa_variavel@Relogio,w,c
  5586  001690  26D9               	addwf	fsr2l,f,c
  5587  001692  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5588  001694  22DA               	addwfc	fsr2h,f,c
  5589  001696  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5590  00169A  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5591  00169E                     l2406:
  5592                           
  5593                           ;display_LCD.c: 91: if(cursor==5) Relogio->segundo++;
  5594  00169E  0E05               	movlw	5
  5595  0016A0  1836               	xorwf	_cursor,w,c
  5596  0016A2  1037               	iorwf	_cursor+1,w,c
  5597  0016A4  A4D8               	btfss	status,2,c
  5598  0016A6  D009               	goto	l2410
  5599  0016A8  EE20 F002          	lfsr	2,2
  5600  0016AC  5013               	movf	incrementa_variavel@Relogio,w,c
  5601  0016AE  26D9               	addwf	fsr2l,f,c
  5602  0016B0  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5603  0016B2  22DA               	addwfc	fsr2h,f,c
  5604  0016B4  2ADE               	incf	postinc2,f,c
  5605  0016B6  0E00               	movlw	0
  5606  0016B8  22DD               	addwfc	postdec2,f,c
  5607  0016BA                     l2410:
  5608                           
  5609                           ;display_LCD.c: 92: if(cursor==6) Calendario->dia=Calendario->dia+10;
  5610  0016BA  0E06               	movlw	6
  5611  0016BC  1836               	xorwf	_cursor,w,c
  5612  0016BE  1037               	iorwf	_cursor+1,w,c
  5613  0016C0  A4D8               	btfss	status,2,c
  5614  0016C2  D014               	goto	l2414
  5615  0016C4  C017  FFD9         	movff	incrementa_variavel@Calendario,fsr2l
  5616  0016C8  C018  FFDA         	movff	incrementa_variavel@Calendario+1,fsr2h
  5617  0016CC  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5618  0016D0  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5619  0016D4  0E0A               	movlw	10
  5620  0016D6  2619               	addwf	??_incrementa_variavel,f,c
  5621  0016D8  0E00               	movlw	0
  5622  0016DA  221A               	addwfc	??_incrementa_variavel+1,f,c
  5623  0016DC  C017  FFD9         	movff	incrementa_variavel@Calendario,fsr2l
  5624  0016E0  C018  FFDA         	movff	incrementa_variavel@Calendario+1,fsr2h
  5625  0016E4  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5626  0016E8  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5627  0016EC                     l2414:
  5628                           
  5629                           ;display_LCD.c: 93: if(cursor==7) Calendario->dia++;
  5630  0016EC  0E07               	movlw	7
  5631  0016EE  1836               	xorwf	_cursor,w,c
  5632  0016F0  1037               	iorwf	_cursor+1,w,c
  5633  0016F2  A4D8               	btfss	status,2,c
  5634  0016F4  D007               	goto	l2418
  5635  0016F6  C017  FFD9         	movff	incrementa_variavel@Calendario,fsr2l
  5636  0016FA  C018  FFDA         	movff	incrementa_variavel@Calendario+1,fsr2h
  5637  0016FE  2ADE               	incf	postinc2,f,c
  5638  001700  0E00               	movlw	0
  5639  001702  22DD               	addwfc	postdec2,f,c
  5640  001704                     l2418:
  5641                           
  5642                           ;display_LCD.c: 94: if(cursor==8) Calendario->mes=Calendario->mes+10;
  5643  001704  0E08               	movlw	8
  5644  001706  1836               	xorwf	_cursor,w,c
  5645  001708  1037               	iorwf	_cursor+1,w,c
  5646  00170A  A4D8               	btfss	status,2,c
  5647  00170C  D018               	goto	l2422
  5648  00170E  EE20 F002          	lfsr	2,2
  5649  001712  5017               	movf	incrementa_variavel@Calendario,w,c
  5650  001714  26D9               	addwf	fsr2l,f,c
  5651  001716  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5652  001718  22DA               	addwfc	fsr2h,f,c
  5653  00171A  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5654  00171E  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5655  001722  0E0A               	movlw	10
  5656  001724  2619               	addwf	??_incrementa_variavel,f,c
  5657  001726  0E00               	movlw	0
  5658  001728  221A               	addwfc	??_incrementa_variavel+1,f,c
  5659  00172A  EE20 F002          	lfsr	2,2
  5660  00172E  5017               	movf	incrementa_variavel@Calendario,w,c
  5661  001730  26D9               	addwf	fsr2l,f,c
  5662  001732  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5663  001734  22DA               	addwfc	fsr2h,f,c
  5664  001736  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5665  00173A  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5666  00173E                     l2422:
  5667                           
  5668                           ;display_LCD.c: 95: if(cursor==9) Calendario->mes++;
  5669  00173E  0E09               	movlw	9
  5670  001740  1836               	xorwf	_cursor,w,c
  5671  001742  1037               	iorwf	_cursor+1,w,c
  5672  001744  A4D8               	btfss	status,2,c
  5673  001746  D009               	goto	l2426
  5674  001748  EE20 F002          	lfsr	2,2
  5675  00174C  5017               	movf	incrementa_variavel@Calendario,w,c
  5676  00174E  26D9               	addwf	fsr2l,f,c
  5677  001750  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5678  001752  22DA               	addwfc	fsr2h,f,c
  5679  001754  2ADE               	incf	postinc2,f,c
  5680  001756  0E00               	movlw	0
  5681  001758  22DD               	addwfc	postdec2,f,c
  5682  00175A                     l2426:
  5683                           
  5684                           ;display_LCD.c: 96: if(cursor==10) Calendario->ano=Calendario->ano+10;
  5685  00175A  0E0A               	movlw	10
  5686  00175C  1836               	xorwf	_cursor,w,c
  5687  00175E  1037               	iorwf	_cursor+1,w,c
  5688  001760  A4D8               	btfss	status,2,c
  5689  001762  D018               	goto	l2430
  5690  001764  EE20 F004          	lfsr	2,4
  5691  001768  5017               	movf	incrementa_variavel@Calendario,w,c
  5692  00176A  26D9               	addwf	fsr2l,f,c
  5693  00176C  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5694  00176E  22DA               	addwfc	fsr2h,f,c
  5695  001770  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5696  001774  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5697  001778  0E0A               	movlw	10
  5698  00177A  2619               	addwf	??_incrementa_variavel,f,c
  5699  00177C  0E00               	movlw	0
  5700  00177E  221A               	addwfc	??_incrementa_variavel+1,f,c
  5701  001780  EE20 F004          	lfsr	2,4
  5702  001784  5017               	movf	incrementa_variavel@Calendario,w,c
  5703  001786  26D9               	addwf	fsr2l,f,c
  5704  001788  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5705  00178A  22DA               	addwfc	fsr2h,f,c
  5706  00178C  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5707  001790  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5708  001794                     l2430:
  5709                           
  5710                           ;display_LCD.c: 97: if(cursor==11) Calendario->ano++;
  5711  001794  0E0B               	movlw	11
  5712  001796  1836               	xorwf	_cursor,w,c
  5713  001798  1037               	iorwf	_cursor+1,w,c
  5714  00179A  A4D8               	btfss	status,2,c
  5715  00179C  D009               	goto	l2434
  5716  00179E  EE20 F004          	lfsr	2,4
  5717  0017A2  5017               	movf	incrementa_variavel@Calendario,w,c
  5718  0017A4  26D9               	addwf	fsr2l,f,c
  5719  0017A6  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5720  0017A8  22DA               	addwfc	fsr2h,f,c
  5721  0017AA  2ADE               	incf	postinc2,f,c
  5722  0017AC  0E00               	movlw	0
  5723  0017AE  22DD               	addwfc	postdec2,f,c
  5724  0017B0                     l2434:
  5725                           
  5726                           ;display_LCD.c: 98: }
  5727                           ;display_LCD.c: 100: if(tela_exibida==1){
  5728  0017B0  044F               	decf	_tela_exibida,w,c
  5729  0017B2  1050               	iorwf	_tela_exibida+1,w,c
  5730  0017B4  A4D8               	btfss	status,2,c
  5731  0017B6  0012               	return	
  5732                           
  5733                           ;display_LCD.c: 101: if(cursor==0) Despertador->hora=Despertador->hora+10;
  5734  0017B8  5036               	movf	_cursor,w,c
  5735  0017BA  1037               	iorwf	_cursor+1,w,c
  5736  0017BC  A4D8               	btfss	status,2,c
  5737  0017BE  D018               	goto	l2440
  5738  0017C0  EE20 F004          	lfsr	2,4
  5739  0017C4  5015               	movf	incrementa_variavel@Despertador,w,c
  5740  0017C6  26D9               	addwf	fsr2l,f,c
  5741  0017C8  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5742  0017CA  22DA               	addwfc	fsr2h,f,c
  5743  0017CC  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5744  0017D0  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5745  0017D4  0E0A               	movlw	10
  5746  0017D6  2619               	addwf	??_incrementa_variavel,f,c
  5747  0017D8  0E00               	movlw	0
  5748  0017DA  221A               	addwfc	??_incrementa_variavel+1,f,c
  5749  0017DC  EE20 F004          	lfsr	2,4
  5750  0017E0  5015               	movf	incrementa_variavel@Despertador,w,c
  5751  0017E2  26D9               	addwf	fsr2l,f,c
  5752  0017E4  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5753  0017E6  22DA               	addwfc	fsr2h,f,c
  5754  0017E8  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5755  0017EC  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5756  0017F0                     l2440:
  5757                           
  5758                           ;display_LCD.c: 102: if(cursor==1) Despertador->hora++;
  5759  0017F0  0436               	decf	_cursor,w,c
  5760  0017F2  1037               	iorwf	_cursor+1,w,c
  5761  0017F4  A4D8               	btfss	status,2,c
  5762  0017F6  D009               	goto	l2444
  5763  0017F8  EE20 F004          	lfsr	2,4
  5764  0017FC  5015               	movf	incrementa_variavel@Despertador,w,c
  5765  0017FE  26D9               	addwf	fsr2l,f,c
  5766  001800  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5767  001802  22DA               	addwfc	fsr2h,f,c
  5768  001804  2ADE               	incf	postinc2,f,c
  5769  001806  0E00               	movlw	0
  5770  001808  22DD               	addwfc	postdec2,f,c
  5771  00180A                     l2444:
  5772                           
  5773                           ;display_LCD.c: 103: if(cursor==2) Despertador->minuto=Despertador->minuto+10;
  5774  00180A  0E02               	movlw	2
  5775  00180C  1836               	xorwf	_cursor,w,c
  5776  00180E  1037               	iorwf	_cursor+1,w,c
  5777  001810  A4D8               	btfss	status,2,c
  5778  001812  D014               	goto	l2448
  5779  001814  C015  FFD9         	movff	incrementa_variavel@Despertador,fsr2l
  5780  001818  C016  FFDA         	movff	incrementa_variavel@Despertador+1,fsr2h
  5781  00181C  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5782  001820  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5783  001824  0E0A               	movlw	10
  5784  001826  2619               	addwf	??_incrementa_variavel,f,c
  5785  001828  0E00               	movlw	0
  5786  00182A  221A               	addwfc	??_incrementa_variavel+1,f,c
  5787  00182C  C015  FFD9         	movff	incrementa_variavel@Despertador,fsr2l
  5788  001830  C016  FFDA         	movff	incrementa_variavel@Despertador+1,fsr2h
  5789  001834  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5790  001838  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5791  00183C                     l2448:
  5792                           
  5793                           ;display_LCD.c: 104: if(cursor==3) Despertador->minuto++;
  5794  00183C  0E03               	movlw	3
  5795  00183E  1836               	xorwf	_cursor,w,c
  5796  001840  1037               	iorwf	_cursor+1,w,c
  5797  001842  A4D8               	btfss	status,2,c
  5798  001844  D007               	goto	l2452
  5799  001846  C015  FFD9         	movff	incrementa_variavel@Despertador,fsr2l
  5800  00184A  C016  FFDA         	movff	incrementa_variavel@Despertador+1,fsr2h
  5801  00184E  2ADE               	incf	postinc2,f,c
  5802  001850  0E00               	movlw	0
  5803  001852  22DD               	addwfc	postdec2,f,c
  5804  001854                     l2452:
  5805                           
  5806                           ;display_LCD.c: 105: if(cursor==4) Despertador->segundo=Despertador->segundo+10;
  5807  001854  0E04               	movlw	4
  5808  001856  1836               	xorwf	_cursor,w,c
  5809  001858  1037               	iorwf	_cursor+1,w,c
  5810  00185A  A4D8               	btfss	status,2,c
  5811  00185C  D018               	goto	l2456
  5812  00185E  EE20 F002          	lfsr	2,2
  5813  001862  5015               	movf	incrementa_variavel@Despertador,w,c
  5814  001864  26D9               	addwf	fsr2l,f,c
  5815  001866  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5816  001868  22DA               	addwfc	fsr2h,f,c
  5817  00186A  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5818  00186E  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5819  001872  0E0A               	movlw	10
  5820  001874  2619               	addwf	??_incrementa_variavel,f,c
  5821  001876  0E00               	movlw	0
  5822  001878  221A               	addwfc	??_incrementa_variavel+1,f,c
  5823  00187A  EE20 F002          	lfsr	2,2
  5824  00187E  5015               	movf	incrementa_variavel@Despertador,w,c
  5825  001880  26D9               	addwf	fsr2l,f,c
  5826  001882  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5827  001884  22DA               	addwfc	fsr2h,f,c
  5828  001886  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5829  00188A  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5830  00188E                     l2456:
  5831                           
  5832                           ;display_LCD.c: 106: if(cursor==5) Despertador->segundo++;
  5833  00188E  0E05               	movlw	5
  5834  001890  1836               	xorwf	_cursor,w,c
  5835  001892  1037               	iorwf	_cursor+1,w,c
  5836  001894  A4D8               	btfss	status,2,c
  5837  001896  D009               	goto	l2460
  5838  001898  EE20 F002          	lfsr	2,2
  5839  00189C  5015               	movf	incrementa_variavel@Despertador,w,c
  5840  00189E  26D9               	addwf	fsr2l,f,c
  5841  0018A0  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5842  0018A2  22DA               	addwfc	fsr2h,f,c
  5843  0018A4  2ADE               	incf	postinc2,f,c
  5844  0018A6  0E00               	movlw	0
  5845  0018A8  22DD               	addwfc	postdec2,f,c
  5846  0018AA                     l2460:
  5847                           
  5848                           ;display_LCD.c: 107: controla_despertador(Despertador);
  5849  0018AA  C015  F00F         	movff	incrementa_variavel@Despertador,controla_despertador@Despertador
  5850  0018AE  C016  F010         	movff	incrementa_variavel@Despertador+1,controla_despertador@Despertador+1
  5851  0018B2  ECE6  F00D         	call	_controla_despertador	;wreg free
  5852  0018B6  0012               	return	
  5853  0018B8                     __end_of_incrementa_variavel:
  5854                           	opt stack 0
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           postinc0	equ	0xFEE
  5863                           wreg	equ	0xFE8
  5864                           indf1	equ	0xFE7
  5865                           postinc1	equ	0xFE6
  5866                           postdec1	equ	0xFE5
  5867                           fsr1h	equ	0xFE2
  5868                           fsr1l	equ	0xFE1
  5869                           indf2	equ	0xFDF
  5870                           postinc2	equ	0xFDE
  5871                           postdec2	equ	0xFDD
  5872                           plusw2	equ	0xFDB
  5873                           fsr2h	equ	0xFDA
  5874                           fsr2l	equ	0xFD9
  5875                           status	equ	0xFD8
  5876                           
  5877 ;; *************** function _decrementa_variavel *****************
  5878 ;; Defined at:
  5879 ;;		line 111 in file "display_LCD.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  Relogio         2   18[COMRAM] PTR struct .
  5882 ;;		 -> checa_botao@Relogio(2), 
  5883 ;;  Despertador     2   20[COMRAM] PTR struct .
  5884 ;;		 -> checa_botao@Despertador(2), 
  5885 ;;  Calendario      2   22[COMRAM] PTR struct .
  5886 ;;		 -> checa_botao@Calendario(2), 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5898 ;;      Params:         6       0       0       0       0       0       0       0       0
  5899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5900 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5901 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5902 ;;Total ram usage:       10 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    2
  5905 ;; This function calls:
  5906 ;;		_controla_despertador
  5907 ;; This function is called by:
  5908 ;;		_checa_botao
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text30
  5913  001280                     __ptext30:
  5914                           	opt stack 0
  5915  001280                     _decrementa_variavel:
  5916                           	opt stack 27
  5917                           
  5918                           ;display_LCD.c: 112: if(tela_exibida==0){
  5919                           
  5920                           ;incstack = 0
  5921  001280  504F               	movf	_tela_exibida,w,c
  5922  001282  1050               	iorwf	_tela_exibida+1,w,c
  5923  001284  A4D8               	btfss	status,2,c
  5924  001286  D10C               	goto	l2512
  5925                           
  5926                           ;display_LCD.c: 113: if(cursor==0) Relogio->hora=Relogio->hora-10;
  5927  001288  5036               	movf	_cursor,w,c
  5928  00128A  1037               	iorwf	_cursor+1,w,c
  5929  00128C  A4D8               	btfss	status,2,c
  5930  00128E  D01C               	goto	l2468
  5931  001290  0EF6               	movlw	246
  5932  001292  6E19               	movwf	??_decrementa_variavel& (0+255),c
  5933  001294  0EFF               	movlw	255
  5934  001296  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  5935  001298  EE20 F004          	lfsr	2,4
  5936  00129C  5013               	movf	decrementa_variavel@Relogio,w,c
  5937  00129E  26D9               	addwf	fsr2l,f,c
  5938  0012A0  5014               	movf	decrementa_variavel@Relogio+1,w,c
  5939  0012A2  22DA               	addwfc	fsr2h,f,c
  5940  0012A4  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  5941  0012A8  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  5942  0012AC  5019               	movf	??_decrementa_variavel,w,c
  5943  0012AE  261B               	addwf	??_decrementa_variavel+2,f,c
  5944  0012B0  501A               	movf	??_decrementa_variavel+1,w,c
  5945  0012B2  221C               	addwfc	??_decrementa_variavel+3,f,c
  5946  0012B4  EE20 F004          	lfsr	2,4
  5947  0012B8  5013               	movf	decrementa_variavel@Relogio,w,c
  5948  0012BA  26D9               	addwf	fsr2l,f,c
  5949  0012BC  5014               	movf	decrementa_variavel@Relogio+1,w,c
  5950  0012BE  22DA               	addwfc	fsr2h,f,c
  5951  0012C0  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  5952  0012C4  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  5953  0012C8                     l2468:
  5954                           
  5955                           ;display_LCD.c: 114: if(cursor==1) Relogio->hora--;
  5956  0012C8  0436               	decf	_cursor,w,c
  5957  0012CA  1037               	iorwf	_cursor+1,w,c
  5958  0012CC  A4D8               	btfss	status,2,c
  5959  0012CE  D009               	goto	l2472
  5960  0012D0  EE20 F004          	lfsr	2,4
  5961  0012D4  5013               	movf	decrementa_variavel@Relogio,w,c
  5962  0012D6  26D9               	addwf	fsr2l,f,c
  5963  0012D8  5014               	movf	decrementa_variavel@Relogio+1,w,c
  5964  0012DA  22DA               	addwfc	fsr2h,f,c
  5965  0012DC  06DE               	decf	postinc2,f,c
  5966  0012DE  0E00               	movlw	0
  5967  0012E0  5ADD               	subwfb	postdec2,f,c
  5968  0012E2                     l2472:
  5969                           
  5970                           ;display_LCD.c: 115: if(cursor==2) Relogio->minuto=Relogio->minuto-10;
  5971  0012E2  0E02               	movlw	2
  5972  0012E4  1836               	xorwf	_cursor,w,c
  5973  0012E6  1037               	iorwf	_cursor+1,w,c
  5974  0012E8  A4D8               	btfss	status,2,c
  5975  0012EA  D018               	goto	l2476
  5976  0012EC  0EF6               	movlw	246
  5977  0012EE  6E19               	movwf	??_decrementa_variavel& (0+255),c
  5978  0012F0  0EFF               	movlw	255
  5979  0012F2  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  5980  0012F4  C013  FFD9         	movff	decrementa_variavel@Relogio,fsr2l
  5981  0012F8  C014  FFDA         	movff	decrementa_variavel@Relogio+1,fsr2h
  5982  0012FC  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  5983  001300  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  5984  001304  5019               	movf	??_decrementa_variavel,w,c
  5985  001306  261B               	addwf	??_decrementa_variavel+2,f,c
  5986  001308  501A               	movf	??_decrementa_variavel+1,w,c
  5987  00130A  221C               	addwfc	??_decrementa_variavel+3,f,c
  5988  00130C  C013  FFD9         	movff	decrementa_variavel@Relogio,fsr2l
  5989  001310  C014  FFDA         	movff	decrementa_variavel@Relogio+1,fsr2h
  5990  001314  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  5991  001318  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  5992  00131C                     l2476:
  5993                           
  5994                           ;display_LCD.c: 116: if(cursor==3) Relogio->minuto--;
  5995  00131C  0E03               	movlw	3
  5996  00131E  1836               	xorwf	_cursor,w,c
  5997  001320  1037               	iorwf	_cursor+1,w,c
  5998  001322  A4D8               	btfss	status,2,c
  5999  001324  D007               	goto	l2480
  6000  001326  C013  FFD9         	movff	decrementa_variavel@Relogio,fsr2l
  6001  00132A  C014  FFDA         	movff	decrementa_variavel@Relogio+1,fsr2h
  6002  00132E  06DE               	decf	postinc2,f,c
  6003  001330  0E00               	movlw	0
  6004  001332  5ADD               	subwfb	postdec2,f,c
  6005  001334                     l2480:
  6006                           
  6007                           ;display_LCD.c: 117: if(cursor==4) Relogio->segundo=Relogio->segundo-10;
  6008  001334  0E04               	movlw	4
  6009  001336  1836               	xorwf	_cursor,w,c
  6010  001338  1037               	iorwf	_cursor+1,w,c
  6011  00133A  A4D8               	btfss	status,2,c
  6012  00133C  D01C               	goto	l2484
  6013  00133E  0EF6               	movlw	246
  6014  001340  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6015  001342  0EFF               	movlw	255
  6016  001344  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6017  001346  EE20 F002          	lfsr	2,2
  6018  00134A  5013               	movf	decrementa_variavel@Relogio,w,c
  6019  00134C  26D9               	addwf	fsr2l,f,c
  6020  00134E  5014               	movf	decrementa_variavel@Relogio+1,w,c
  6021  001350  22DA               	addwfc	fsr2h,f,c
  6022  001352  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6023  001356  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6024  00135A  5019               	movf	??_decrementa_variavel,w,c
  6025  00135C  261B               	addwf	??_decrementa_variavel+2,f,c
  6026  00135E  501A               	movf	??_decrementa_variavel+1,w,c
  6027  001360  221C               	addwfc	??_decrementa_variavel+3,f,c
  6028  001362  EE20 F002          	lfsr	2,2
  6029  001366  5013               	movf	decrementa_variavel@Relogio,w,c
  6030  001368  26D9               	addwf	fsr2l,f,c
  6031  00136A  5014               	movf	decrementa_variavel@Relogio+1,w,c
  6032  00136C  22DA               	addwfc	fsr2h,f,c
  6033  00136E  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6034  001372  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6035  001376                     l2484:
  6036                           
  6037                           ;display_LCD.c: 118: if(cursor==5) Relogio->segundo--;
  6038  001376  0E05               	movlw	5
  6039  001378  1836               	xorwf	_cursor,w,c
  6040  00137A  1037               	iorwf	_cursor+1,w,c
  6041  00137C  A4D8               	btfss	status,2,c
  6042  00137E  D009               	goto	l2488
  6043  001380  EE20 F002          	lfsr	2,2
  6044  001384  5013               	movf	decrementa_variavel@Relogio,w,c
  6045  001386  26D9               	addwf	fsr2l,f,c
  6046  001388  5014               	movf	decrementa_variavel@Relogio+1,w,c
  6047  00138A  22DA               	addwfc	fsr2h,f,c
  6048  00138C  06DE               	decf	postinc2,f,c
  6049  00138E  0E00               	movlw	0
  6050  001390  5ADD               	subwfb	postdec2,f,c
  6051  001392                     l2488:
  6052                           
  6053                           ;display_LCD.c: 119: if(cursor==6) Calendario->dia=Calendario->dia-10;
  6054  001392  0E06               	movlw	6
  6055  001394  1836               	xorwf	_cursor,w,c
  6056  001396  1037               	iorwf	_cursor+1,w,c
  6057  001398  A4D8               	btfss	status,2,c
  6058  00139A  D018               	goto	l2492
  6059  00139C  0EF6               	movlw	246
  6060  00139E  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6061  0013A0  0EFF               	movlw	255
  6062  0013A2  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6063  0013A4  C017  FFD9         	movff	decrementa_variavel@Calendario,fsr2l
  6064  0013A8  C018  FFDA         	movff	decrementa_variavel@Calendario+1,fsr2h
  6065  0013AC  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6066  0013B0  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6067  0013B4  5019               	movf	??_decrementa_variavel,w,c
  6068  0013B6  261B               	addwf	??_decrementa_variavel+2,f,c
  6069  0013B8  501A               	movf	??_decrementa_variavel+1,w,c
  6070  0013BA  221C               	addwfc	??_decrementa_variavel+3,f,c
  6071  0013BC  C017  FFD9         	movff	decrementa_variavel@Calendario,fsr2l
  6072  0013C0  C018  FFDA         	movff	decrementa_variavel@Calendario+1,fsr2h
  6073  0013C4  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6074  0013C8  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6075  0013CC                     l2492:
  6076                           
  6077                           ;display_LCD.c: 120: if(cursor==7) Calendario->dia--;
  6078  0013CC  0E07               	movlw	7
  6079  0013CE  1836               	xorwf	_cursor,w,c
  6080  0013D0  1037               	iorwf	_cursor+1,w,c
  6081  0013D2  A4D8               	btfss	status,2,c
  6082  0013D4  D007               	goto	l2496
  6083  0013D6  C017  FFD9         	movff	decrementa_variavel@Calendario,fsr2l
  6084  0013DA  C018  FFDA         	movff	decrementa_variavel@Calendario+1,fsr2h
  6085  0013DE  06DE               	decf	postinc2,f,c
  6086  0013E0  0E00               	movlw	0
  6087  0013E2  5ADD               	subwfb	postdec2,f,c
  6088  0013E4                     l2496:
  6089                           
  6090                           ;display_LCD.c: 121: if(cursor==8) Calendario->mes=Calendario->mes-10;
  6091  0013E4  0E08               	movlw	8
  6092  0013E6  1836               	xorwf	_cursor,w,c
  6093  0013E8  1037               	iorwf	_cursor+1,w,c
  6094  0013EA  A4D8               	btfss	status,2,c
  6095  0013EC  D01C               	goto	l2500
  6096  0013EE  0EF6               	movlw	246
  6097  0013F0  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6098  0013F2  0EFF               	movlw	255
  6099  0013F4  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6100  0013F6  EE20 F002          	lfsr	2,2
  6101  0013FA  5017               	movf	decrementa_variavel@Calendario,w,c
  6102  0013FC  26D9               	addwf	fsr2l,f,c
  6103  0013FE  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6104  001400  22DA               	addwfc	fsr2h,f,c
  6105  001402  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6106  001406  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6107  00140A  5019               	movf	??_decrementa_variavel,w,c
  6108  00140C  261B               	addwf	??_decrementa_variavel+2,f,c
  6109  00140E  501A               	movf	??_decrementa_variavel+1,w,c
  6110  001410  221C               	addwfc	??_decrementa_variavel+3,f,c
  6111  001412  EE20 F002          	lfsr	2,2
  6112  001416  5017               	movf	decrementa_variavel@Calendario,w,c
  6113  001418  26D9               	addwf	fsr2l,f,c
  6114  00141A  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6115  00141C  22DA               	addwfc	fsr2h,f,c
  6116  00141E  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6117  001422  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6118  001426                     l2500:
  6119                           
  6120                           ;display_LCD.c: 122: if(cursor==9) Calendario->mes--;
  6121  001426  0E09               	movlw	9
  6122  001428  1836               	xorwf	_cursor,w,c
  6123  00142A  1037               	iorwf	_cursor+1,w,c
  6124  00142C  A4D8               	btfss	status,2,c
  6125  00142E  D009               	goto	l2504
  6126  001430  EE20 F002          	lfsr	2,2
  6127  001434  5017               	movf	decrementa_variavel@Calendario,w,c
  6128  001436  26D9               	addwf	fsr2l,f,c
  6129  001438  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6130  00143A  22DA               	addwfc	fsr2h,f,c
  6131  00143C  06DE               	decf	postinc2,f,c
  6132  00143E  0E00               	movlw	0
  6133  001440  5ADD               	subwfb	postdec2,f,c
  6134  001442                     l2504:
  6135                           
  6136                           ;display_LCD.c: 123: if(cursor==10) Calendario->ano=Calendario->ano-10;
  6137  001442  0E0A               	movlw	10
  6138  001444  1836               	xorwf	_cursor,w,c
  6139  001446  1037               	iorwf	_cursor+1,w,c
  6140  001448  A4D8               	btfss	status,2,c
  6141  00144A  D01C               	goto	l2508
  6142  00144C  0EF6               	movlw	246
  6143  00144E  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6144  001450  0EFF               	movlw	255
  6145  001452  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6146  001454  EE20 F004          	lfsr	2,4
  6147  001458  5017               	movf	decrementa_variavel@Calendario,w,c
  6148  00145A  26D9               	addwf	fsr2l,f,c
  6149  00145C  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6150  00145E  22DA               	addwfc	fsr2h,f,c
  6151  001460  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6152  001464  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6153  001468  5019               	movf	??_decrementa_variavel,w,c
  6154  00146A  261B               	addwf	??_decrementa_variavel+2,f,c
  6155  00146C  501A               	movf	??_decrementa_variavel+1,w,c
  6156  00146E  221C               	addwfc	??_decrementa_variavel+3,f,c
  6157  001470  EE20 F004          	lfsr	2,4
  6158  001474  5017               	movf	decrementa_variavel@Calendario,w,c
  6159  001476  26D9               	addwf	fsr2l,f,c
  6160  001478  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6161  00147A  22DA               	addwfc	fsr2h,f,c
  6162  00147C  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6163  001480  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6164  001484                     l2508:
  6165                           
  6166                           ;display_LCD.c: 124: if(cursor==11) Calendario->ano--;
  6167  001484  0E0B               	movlw	11
  6168  001486  1836               	xorwf	_cursor,w,c
  6169  001488  1037               	iorwf	_cursor+1,w,c
  6170  00148A  A4D8               	btfss	status,2,c
  6171  00148C  D009               	goto	l2512
  6172  00148E  EE20 F004          	lfsr	2,4
  6173  001492  5017               	movf	decrementa_variavel@Calendario,w,c
  6174  001494  26D9               	addwf	fsr2l,f,c
  6175  001496  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6176  001498  22DA               	addwfc	fsr2h,f,c
  6177  00149A  06DE               	decf	postinc2,f,c
  6178  00149C  0E00               	movlw	0
  6179  00149E  5ADD               	subwfb	postdec2,f,c
  6180  0014A0                     l2512:
  6181                           
  6182                           ;display_LCD.c: 125: }
  6183                           ;display_LCD.c: 127: if(tela_exibida==1){
  6184  0014A0  044F               	decf	_tela_exibida,w,c
  6185  0014A2  1050               	iorwf	_tela_exibida+1,w,c
  6186  0014A4  A4D8               	btfss	status,2,c
  6187  0014A6  0012               	return	
  6188                           
  6189                           ;display_LCD.c: 128: if(cursor==0) Despertador->hora=Despertador->hora-10;
  6190  0014A8  5036               	movf	_cursor,w,c
  6191  0014AA  1037               	iorwf	_cursor+1,w,c
  6192  0014AC  A4D8               	btfss	status,2,c
  6193  0014AE  D01C               	goto	l2518
  6194  0014B0  0EF6               	movlw	246
  6195  0014B2  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6196  0014B4  0EFF               	movlw	255
  6197  0014B6  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6198  0014B8  EE20 F004          	lfsr	2,4
  6199  0014BC  5015               	movf	decrementa_variavel@Despertador,w,c
  6200  0014BE  26D9               	addwf	fsr2l,f,c
  6201  0014C0  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6202  0014C2  22DA               	addwfc	fsr2h,f,c
  6203  0014C4  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6204  0014C8  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6205  0014CC  5019               	movf	??_decrementa_variavel,w,c
  6206  0014CE  261B               	addwf	??_decrementa_variavel+2,f,c
  6207  0014D0  501A               	movf	??_decrementa_variavel+1,w,c
  6208  0014D2  221C               	addwfc	??_decrementa_variavel+3,f,c
  6209  0014D4  EE20 F004          	lfsr	2,4
  6210  0014D8  5015               	movf	decrementa_variavel@Despertador,w,c
  6211  0014DA  26D9               	addwf	fsr2l,f,c
  6212  0014DC  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6213  0014DE  22DA               	addwfc	fsr2h,f,c
  6214  0014E0  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6215  0014E4  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6216  0014E8                     l2518:
  6217                           
  6218                           ;display_LCD.c: 129: if(cursor==1) Despertador->hora--;
  6219  0014E8  0436               	decf	_cursor,w,c
  6220  0014EA  1037               	iorwf	_cursor+1,w,c
  6221  0014EC  A4D8               	btfss	status,2,c
  6222  0014EE  D009               	goto	l2522
  6223  0014F0  EE20 F004          	lfsr	2,4
  6224  0014F4  5015               	movf	decrementa_variavel@Despertador,w,c
  6225  0014F6  26D9               	addwf	fsr2l,f,c
  6226  0014F8  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6227  0014FA  22DA               	addwfc	fsr2h,f,c
  6228  0014FC  06DE               	decf	postinc2,f,c
  6229  0014FE  0E00               	movlw	0
  6230  001500  5ADD               	subwfb	postdec2,f,c
  6231  001502                     l2522:
  6232                           
  6233                           ;display_LCD.c: 130: if(cursor==2) Despertador->minuto=Despertador->minuto-10;
  6234  001502  0E02               	movlw	2
  6235  001504  1836               	xorwf	_cursor,w,c
  6236  001506  1037               	iorwf	_cursor+1,w,c
  6237  001508  A4D8               	btfss	status,2,c
  6238  00150A  D018               	goto	l2526
  6239  00150C  0EF6               	movlw	246
  6240  00150E  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6241  001510  0EFF               	movlw	255
  6242  001512  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6243  001514  C015  FFD9         	movff	decrementa_variavel@Despertador,fsr2l
  6244  001518  C016  FFDA         	movff	decrementa_variavel@Despertador+1,fsr2h
  6245  00151C  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6246  001520  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6247  001524  5019               	movf	??_decrementa_variavel,w,c
  6248  001526  261B               	addwf	??_decrementa_variavel+2,f,c
  6249  001528  501A               	movf	??_decrementa_variavel+1,w,c
  6250  00152A  221C               	addwfc	??_decrementa_variavel+3,f,c
  6251  00152C  C015  FFD9         	movff	decrementa_variavel@Despertador,fsr2l
  6252  001530  C016  FFDA         	movff	decrementa_variavel@Despertador+1,fsr2h
  6253  001534  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6254  001538  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6255  00153C                     l2526:
  6256                           
  6257                           ;display_LCD.c: 131: if(cursor==3) Despertador->minuto--;
  6258  00153C  0E03               	movlw	3
  6259  00153E  1836               	xorwf	_cursor,w,c
  6260  001540  1037               	iorwf	_cursor+1,w,c
  6261  001542  A4D8               	btfss	status,2,c
  6262  001544  D007               	goto	l2530
  6263  001546  C015  FFD9         	movff	decrementa_variavel@Despertador,fsr2l
  6264  00154A  C016  FFDA         	movff	decrementa_variavel@Despertador+1,fsr2h
  6265  00154E  06DE               	decf	postinc2,f,c
  6266  001550  0E00               	movlw	0
  6267  001552  5ADD               	subwfb	postdec2,f,c
  6268  001554                     l2530:
  6269                           
  6270                           ;display_LCD.c: 132: if(cursor==4) Despertador->segundo=Despertador->segundo-10;
  6271  001554  0E04               	movlw	4
  6272  001556  1836               	xorwf	_cursor,w,c
  6273  001558  1037               	iorwf	_cursor+1,w,c
  6274  00155A  A4D8               	btfss	status,2,c
  6275  00155C  D01C               	goto	l2534
  6276  00155E  0EF6               	movlw	246
  6277  001560  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6278  001562  0EFF               	movlw	255
  6279  001564  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6280  001566  EE20 F002          	lfsr	2,2
  6281  00156A  5015               	movf	decrementa_variavel@Despertador,w,c
  6282  00156C  26D9               	addwf	fsr2l,f,c
  6283  00156E  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6284  001570  22DA               	addwfc	fsr2h,f,c
  6285  001572  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6286  001576  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6287  00157A  5019               	movf	??_decrementa_variavel,w,c
  6288  00157C  261B               	addwf	??_decrementa_variavel+2,f,c
  6289  00157E  501A               	movf	??_decrementa_variavel+1,w,c
  6290  001580  221C               	addwfc	??_decrementa_variavel+3,f,c
  6291  001582  EE20 F002          	lfsr	2,2
  6292  001586  5015               	movf	decrementa_variavel@Despertador,w,c
  6293  001588  26D9               	addwf	fsr2l,f,c
  6294  00158A  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6295  00158C  22DA               	addwfc	fsr2h,f,c
  6296  00158E  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6297  001592  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6298  001596                     l2534:
  6299                           
  6300                           ;display_LCD.c: 133: if(cursor==5) Despertador->segundo--;
  6301  001596  0E05               	movlw	5
  6302  001598  1836               	xorwf	_cursor,w,c
  6303  00159A  1037               	iorwf	_cursor+1,w,c
  6304  00159C  A4D8               	btfss	status,2,c
  6305  00159E  D009               	goto	l2538
  6306  0015A0  EE20 F002          	lfsr	2,2
  6307  0015A4  5015               	movf	decrementa_variavel@Despertador,w,c
  6308  0015A6  26D9               	addwf	fsr2l,f,c
  6309  0015A8  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6310  0015AA  22DA               	addwfc	fsr2h,f,c
  6311  0015AC  06DE               	decf	postinc2,f,c
  6312  0015AE  0E00               	movlw	0
  6313  0015B0  5ADD               	subwfb	postdec2,f,c
  6314  0015B2                     l2538:
  6315                           
  6316                           ;display_LCD.c: 134: controla_despertador(Despertador);
  6317  0015B2  C015  F00F         	movff	decrementa_variavel@Despertador,controla_despertador@Despertador
  6318  0015B6  C016  F010         	movff	decrementa_variavel@Despertador+1,controla_despertador@Despertador+1
  6319  0015BA  ECE6  F00D         	call	_controla_despertador	;wreg free
  6320  0015BE  0012               	return	
  6321  0015C0                     __end_of_decrementa_variavel:
  6322                           	opt stack 0
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           prodh	equ	0xFF4
  6328                           prodl	equ	0xFF3
  6329                           intcon	equ	0xFF2
  6330                           postinc0	equ	0xFEE
  6331                           wreg	equ	0xFE8
  6332                           indf1	equ	0xFE7
  6333                           postinc1	equ	0xFE6
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           plusw2	equ	0xFDB
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _controla_despertador *****************
  6346 ;; Defined at:
  6347 ;;		line 61 in file "relogio.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  Despertador     2   14[COMRAM] PTR struct .
  6350 ;;		 -> checa_botao@Despertador(2), 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;		None
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  1    wreg      void 
  6355 ;; Registers used:
  6356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6362 ;;      Params:         2       0       0       0       0       0       0       0       0
  6363 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6364 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6365 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6366 ;;Total ram usage:        4 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_incrementa_variavel
  6373 ;;		_decrementa_variavel
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text31
  6378  001BCC                     __ptext31:
  6379                           	opt stack 0
  6380  001BCC                     _controla_despertador:
  6381                           	opt stack 27
  6382                           
  6383                           ;relogio.c: 62: if(Despertador->segundo>59){
  6384                           
  6385                           ;incstack = 0
  6386  001BCC  EE20 F002          	lfsr	2,2
  6387  001BD0  500F               	movf	controla_despertador@Despertador,w,c
  6388  001BD2  26D9               	addwf	fsr2l,f,c
  6389  001BD4  5010               	movf	controla_despertador@Despertador+1,w,c
  6390  001BD6  22DA               	addwfc	fsr2h,f,c
  6391  001BD8  0E01               	movlw	1
  6392  001BDA  BEDB               	btfsc	plusw2,7,c
  6393  001BDC  D018               	goto	l183
  6394  001BDE  0E01               	movlw	1
  6395  001BE0  50DB               	movf	plusw2,w,c
  6396  001BE2  E104               	bnz	u1730
  6397  001BE4  0E3C               	movlw	60
  6398  001BE6  5CDE               	subwf	postinc2,w,c
  6399  001BE8  A0D8               	btfss	status,0,c
  6400  001BEA  D011               	goto	l183
  6401  001BEC                     u1730:
  6402                           
  6403                           ;relogio.c: 63: Despertador->minuto++;
  6404  001BEC  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6405  001BF0  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6406  001BF4  2ADE               	incf	postinc2,f,c
  6407  001BF6  0E00               	movlw	0
  6408  001BF8  22DD               	addwfc	postdec2,f,c
  6409                           
  6410                           ;relogio.c: 64: Despertador->segundo=0;
  6411  001BFA  EE20 F002          	lfsr	2,2
  6412  001BFE  500F               	movf	controla_despertador@Despertador,w,c
  6413  001C00  26D9               	addwf	fsr2l,f,c
  6414  001C02  5010               	movf	controla_despertador@Despertador+1,w,c
  6415  001C04  22DA               	addwfc	fsr2h,f,c
  6416  001C06  0E00               	movlw	0
  6417  001C08  6EDE               	movwf	postinc2,c
  6418  001C0A  0E00               	movlw	0
  6419  001C0C  6EDD               	movwf	postdec2,c
  6420  001C0E                     l183:
  6421                           
  6422                           ;relogio.c: 65: }
  6423                           ;relogio.c: 66: if(Despertador->segundo<0){
  6424  001C0E  EE20 F002          	lfsr	2,2
  6425  001C12  500F               	movf	controla_despertador@Despertador,w,c
  6426  001C14  26D9               	addwf	fsr2l,f,c
  6427  001C16  5010               	movf	controla_despertador@Despertador+1,w,c
  6428  001C18  22DA               	addwfc	fsr2h,f,c
  6429  001C1A  0E01               	movlw	1
  6430  001C1C  AEDB               	btfss	plusw2,7,c
  6431  001C1E  D011               	goto	l184
  6432                           
  6433                           ;relogio.c: 67: Despertador->segundo=59;
  6434  001C20  EE20 F002          	lfsr	2,2
  6435  001C24  500F               	movf	controla_despertador@Despertador,w,c
  6436  001C26  26D9               	addwf	fsr2l,f,c
  6437  001C28  5010               	movf	controla_despertador@Despertador+1,w,c
  6438  001C2A  22DA               	addwfc	fsr2h,f,c
  6439  001C2C  0E3B               	movlw	59
  6440  001C2E  6EDE               	movwf	postinc2,c
  6441  001C30  0E00               	movlw	0
  6442  001C32  6EDD               	movwf	postdec2,c
  6443                           
  6444                           ;relogio.c: 68: Despertador->minuto--;
  6445  001C34  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6446  001C38  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6447  001C3C  06DE               	decf	postinc2,f,c
  6448  001C3E  0E00               	movlw	0
  6449  001C40  5ADD               	subwfb	postdec2,f,c
  6450  001C42                     l184:
  6451                           
  6452                           ;relogio.c: 69: }
  6453                           ;relogio.c: 71: if(Despertador->minuto>59){
  6454  001C42  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6455  001C46  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6456  001C4A  0E01               	movlw	1
  6457  001C4C  BEDB               	btfsc	plusw2,7,c
  6458  001C4E  D018               	goto	l2306
  6459  001C50  0E01               	movlw	1
  6460  001C52  50DB               	movf	plusw2,w,c
  6461  001C54  E104               	bnz	u1750
  6462  001C56  0E3C               	movlw	60
  6463  001C58  5CDE               	subwf	postinc2,w,c
  6464  001C5A  A0D8               	btfss	status,0,c
  6465  001C5C  D011               	goto	l2306
  6466  001C5E                     u1750:
  6467                           
  6468                           ;relogio.c: 72: Despertador->hora++;
  6469  001C5E  EE20 F004          	lfsr	2,4
  6470  001C62  500F               	movf	controla_despertador@Despertador,w,c
  6471  001C64  26D9               	addwf	fsr2l,f,c
  6472  001C66  5010               	movf	controla_despertador@Despertador+1,w,c
  6473  001C68  22DA               	addwfc	fsr2h,f,c
  6474  001C6A  2ADE               	incf	postinc2,f,c
  6475  001C6C  0E00               	movlw	0
  6476  001C6E  22DD               	addwfc	postdec2,f,c
  6477                           
  6478                           ;relogio.c: 73: Despertador->minuto=0;
  6479  001C70  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6480  001C74  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6481  001C78  0E00               	movlw	0
  6482  001C7A  6EDE               	movwf	postinc2,c
  6483  001C7C  0E00               	movlw	0
  6484  001C7E  6EDD               	movwf	postdec2,c
  6485  001C80                     l2306:
  6486                           
  6487                           ;relogio.c: 74: }
  6488                           ;relogio.c: 75: if(Despertador->minuto<0){
  6489  001C80  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6490  001C84  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6491  001C88  0E01               	movlw	1
  6492  001C8A  AEDB               	btfss	plusw2,7,c
  6493  001C8C  D011               	goto	l2312
  6494                           
  6495                           ;relogio.c: 76: Despertador->minuto=59;
  6496  001C8E  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6497  001C92  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6498  001C96  0E3B               	movlw	59
  6499  001C98  6EDE               	movwf	postinc2,c
  6500  001C9A  0E00               	movlw	0
  6501  001C9C  6EDD               	movwf	postdec2,c
  6502                           
  6503                           ;relogio.c: 77: Despertador->hora--;
  6504  001C9E  EE20 F004          	lfsr	2,4
  6505  001CA2  500F               	movf	controla_despertador@Despertador,w,c
  6506  001CA4  26D9               	addwf	fsr2l,f,c
  6507  001CA6  5010               	movf	controla_despertador@Despertador+1,w,c
  6508  001CA8  22DA               	addwfc	fsr2h,f,c
  6509  001CAA  06DE               	decf	postinc2,f,c
  6510  001CAC  0E00               	movlw	0
  6511  001CAE  5ADD               	subwfb	postdec2,f,c
  6512  001CB0                     l2312:
  6513                           
  6514                           ;relogio.c: 78: }
  6515                           ;relogio.c: 80: if(Despertador->hora>23){
  6516  001CB0  EE20 F004          	lfsr	2,4
  6517  001CB4  500F               	movf	controla_despertador@Despertador,w,c
  6518  001CB6  26D9               	addwf	fsr2l,f,c
  6519  001CB8  5010               	movf	controla_despertador@Despertador+1,w,c
  6520  001CBA  22DA               	addwfc	fsr2h,f,c
  6521  001CBC  0E01               	movlw	1
  6522  001CBE  BEDB               	btfsc	plusw2,7,c
  6523  001CC0  D011               	goto	l187
  6524  001CC2  0E01               	movlw	1
  6525  001CC4  50DB               	movf	plusw2,w,c
  6526  001CC6  E104               	bnz	u1770
  6527  001CC8  0E18               	movlw	24
  6528  001CCA  5CDE               	subwf	postinc2,w,c
  6529  001CCC  A0D8               	btfss	status,0,c
  6530  001CCE  D00A               	goto	l187
  6531  001CD0                     u1770:
  6532                           
  6533                           ;relogio.c: 81: Despertador->hora=0;
  6534  001CD0  EE20 F004          	lfsr	2,4
  6535  001CD4  500F               	movf	controla_despertador@Despertador,w,c
  6536  001CD6  26D9               	addwf	fsr2l,f,c
  6537  001CD8  5010               	movf	controla_despertador@Despertador+1,w,c
  6538  001CDA  22DA               	addwfc	fsr2h,f,c
  6539  001CDC  0E00               	movlw	0
  6540  001CDE  6EDE               	movwf	postinc2,c
  6541  001CE0  0E00               	movlw	0
  6542  001CE2  6EDD               	movwf	postdec2,c
  6543  001CE4                     l187:
  6544                           
  6545                           ;relogio.c: 82: }
  6546                           ;relogio.c: 83: if(Despertador->hora<0){
  6547  001CE4  EE20 F004          	lfsr	2,4
  6548  001CE8  500F               	movf	controla_despertador@Despertador,w,c
  6549  001CEA  26D9               	addwf	fsr2l,f,c
  6550  001CEC  5010               	movf	controla_despertador@Despertador+1,w,c
  6551  001CEE  22DA               	addwfc	fsr2h,f,c
  6552  001CF0  0E01               	movlw	1
  6553  001CF2  AEDB               	btfss	plusw2,7,c
  6554  001CF4  0012               	return	
  6555                           
  6556                           ;relogio.c: 84: Despertador->hora=23;
  6557  001CF6  EE20 F004          	lfsr	2,4
  6558  001CFA  500F               	movf	controla_despertador@Despertador,w,c
  6559  001CFC  26D9               	addwf	fsr2l,f,c
  6560  001CFE  5010               	movf	controla_despertador@Despertador+1,w,c
  6561  001D00  22DA               	addwfc	fsr2h,f,c
  6562  001D02  0E17               	movlw	23
  6563  001D04  6EDE               	movwf	postinc2,c
  6564  001D06  0E00               	movlw	0
  6565  001D08  6EDD               	movwf	postdec2,c
  6566  001D0A  0012               	return	
  6567  001D0C                     __end_of_controla_despertador:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           prodh	equ	0xFF4
  6574                           prodl	equ	0xFF3
  6575                           intcon	equ	0xFF2
  6576                           postinc0	equ	0xFEE
  6577                           wreg	equ	0xFE8
  6578                           indf1	equ	0xFE7
  6579                           postinc1	equ	0xFE6
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           indf2	equ	0xFDF
  6584                           postinc2	equ	0xFDE
  6585                           postdec2	equ	0xFDD
  6586                           plusw2	equ	0xFDB
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _SerialRxPinInterrupt *****************
  6592 ;; Defined at:
  6593 ;;		line 146 in file "exercicio_PIC_LCD_Serial.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6609 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6610 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6611 ;;Total ram usage:       14 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		Interrupt level 2
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	intcode
  6621  000008                     __pintcode:
  6622                           	opt stack 0
  6623  000008                     _SerialRxPinInterrupt:
  6624                           	opt stack 23
  6625                           
  6626                           ;incstack = 0
  6627  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6628  00000A  ED1B  F00F         	call	int_func,f	;refresh shadow registers
  6629                           tblptru	equ	0xFF8
  6630                           tblptrh	equ	0xFF7
  6631                           tblptrl	equ	0xFF6
  6632                           tablat	equ	0xFF5
  6633                           prodh	equ	0xFF4
  6634                           prodl	equ	0xFF3
  6635                           intcon	equ	0xFF2
  6636                           postinc0	equ	0xFEE
  6637                           wreg	equ	0xFE8
  6638                           indf1	equ	0xFE7
  6639                           postinc1	equ	0xFE6
  6640                           postdec1	equ	0xFE5
  6641                           fsr1h	equ	0xFE2
  6642                           fsr1l	equ	0xFE1
  6643                           indf2	equ	0xFDF
  6644                           postinc2	equ	0xFDE
  6645                           postdec2	equ	0xFDD
  6646                           plusw2	equ	0xFDB
  6647                           fsr2h	equ	0xFDA
  6648                           fsr2l	equ	0xFD9
  6649                           status	equ	0xFD8
  6650                           
  6651                           	psect	intcode_body
  6652  001E36                     __pintcode_body:
  6653                           	opt stack 23
  6654  001E36                     int_func:
  6655                           	opt stack 23
  6656  001E36  0006               	pop		; remove dummy address from shadow register refresh
  6657  001E38  CFFA F001          	movff	pclath,??_SerialRxPinInterrupt
  6658  001E3C  CFFB F002          	movff	pclatu,??_SerialRxPinInterrupt+1
  6659  001E40  CFE9 F003          	movff	fsr0l,??_SerialRxPinInterrupt+2
  6660  001E44  CFEA F004          	movff	fsr0h,??_SerialRxPinInterrupt+3
  6661  001E48  CFE1 F005          	movff	fsr1l,??_SerialRxPinInterrupt+4
  6662  001E4C  CFE2 F006          	movff	fsr1h,??_SerialRxPinInterrupt+5
  6663  001E50  CFD9 F007          	movff	fsr2l,??_SerialRxPinInterrupt+6
  6664  001E54  CFDA F008          	movff	fsr2h,??_SerialRxPinInterrupt+7
  6665  001E58  CFF3 F009          	movff	prodl,??_SerialRxPinInterrupt+8
  6666  001E5C  CFF4 F00A          	movff	prodh,??_SerialRxPinInterrupt+9
  6667  001E60  CFF6 F00B          	movff	tblptrl,??_SerialRxPinInterrupt+10
  6668  001E64  CFF7 F00C          	movff	tblptrh,??_SerialRxPinInterrupt+11
  6669  001E68  CFF8 F00D          	movff	tblptru,??_SerialRxPinInterrupt+12
  6670  001E6C  CFF5 F00E          	movff	tablat,??_SerialRxPinInterrupt+13
  6671                           
  6672                           ;exercicio_PIC_LCD_Serial.c: 149: if(TMR0IF){
  6673  001E70  A4F2               	btfss	intcon,2,c	;volatile
  6674  001E72  D009               	goto	i2l2986
  6675                           
  6676                           ;exercicio_PIC_LCD_Serial.c: 150: TMR0=2535;
  6677  001E74  0E09               	movlw	9
  6678  001E76  6ED7               	movwf	4055,c	;volatile
  6679  001E78  0EE7               	movlw	231
  6680  001E7A  6ED6               	movwf	4054,c	;volatile
  6681                           
  6682                           ;exercicio_PIC_LCD_Serial.c: 151: INTCONbits.TMR0IF=0;
  6683  001E7C  94F2               	bcf	intcon,2,c	;volatile
  6684                           
  6685                           ;exercicio_PIC_LCD_Serial.c: 152: contador++;
  6686  001E7E  4A38               	infsnz	_contador,f,c
  6687  001E80  2A39               	incf	_contador+1,f,c
  6688                           
  6689                           ;exercicio_PIC_LCD_Serial.c: 153: flag_time=0;
  6690  001E82  0E00               	movlw	0
  6691  001E84  6E3C               	movwf	_flag_time,c
  6692  001E86                     i2l2986:
  6693                           
  6694                           ;exercicio_PIC_LCD_Serial.c: 154: }
  6695                           ;exercicio_PIC_LCD_Serial.c: 155: if(contador>0){
  6696  001E86  BE39               	btfsc	_contador+1,7,c
  6697  001E88  D00B               	goto	i2l2990
  6698  001E8A  5039               	movf	_contador+1,w,c
  6699  001E8C  E103               	bnz	i2u296_40
  6700  001E8E  0438               	decf	_contador,w,c
  6701  001E90  A0D8               	btfss	status,0,c
  6702  001E92  D006               	goto	i2l2990
  6703  001E94                     i2u296_40:
  6704                           
  6705                           ;exercicio_PIC_LCD_Serial.c: 156: flag_time=1;
  6706  001E94  0E01               	movlw	1
  6707  001E96  6E3C               	movwf	_flag_time,c
  6708                           
  6709                           ;exercicio_PIC_LCD_Serial.c: 157: contador=0;
  6710  001E98  0E00               	movlw	0
  6711  001E9A  6E39               	movwf	_contador+1,c
  6712  001E9C  0E00               	movlw	0
  6713  001E9E  6E38               	movwf	_contador,c
  6714  001EA0                     i2l2990:
  6715                           
  6716                           ;exercicio_PIC_LCD_Serial.c: 158: }
  6717                           ;exercicio_PIC_LCD_Serial.c: 161: if(PIR1bits.RCIF == 1){
  6718  001EA0  AA9E               	btfss	3998,5,c	;volatile
  6719  001EA2  D01C               	goto	i2l341
  6720                           
  6721                           ;exercicio_PIC_LCD_Serial.c: 162: if(numero_entrada_terminal<3){
  6722  001EA4  5033               	movf	_numero_entrada_terminal+1,w,c
  6723  001EA6  E111               	bnz	i2l336
  6724  001EA8  0E03               	movlw	3
  6725  001EAA  5C32               	subwf	_numero_entrada_terminal,w,c
  6726  001EAC  B0D8               	btfsc	status,0,c
  6727  001EAE  D00D               	goto	i2l336
  6728  001EB0                     i2l337:
  6729  001EB0  AA9E               	btfss	3998,5,c	;volatile
  6730  001EB2  D7FE               	goto	i2l337
  6731                           
  6732                           ;exercicio_PIC_LCD_Serial.c: 164: BUFF_COM[numero_entrada_terminal]= RCREG;
  6733  001EB4  0E8C               	movlw	low _BUFF_COM
  6734  001EB6  2432               	addwf	_numero_entrada_terminal,w,c
  6735  001EB8  6ED9               	movwf	fsr2l,c
  6736  001EBA  0E00               	movlw	high _BUFF_COM
  6737  001EBC  2033               	addwfc	_numero_entrada_terminal+1,w,c
  6738  001EBE  6EDA               	movwf	fsr2h,c
  6739  001EC0  CFAE FFDF          	movff	4014,indf2	;volatile
  6740                           
  6741                           ;exercicio_PIC_LCD_Serial.c: 165: numero_entrada_terminal++;
  6742  001EC4  4A32               	infsnz	_numero_entrada_terminal,f,c
  6743  001EC6  2A33               	incf	_numero_entrada_terminal+1,f,c
  6744                           
  6745                           ;exercicio_PIC_LCD_Serial.c: 166: }
  6746  001EC8  D009               	goto	i2l341
  6747  001ECA                     i2l336:
  6748                           
  6749                           ;exercicio_PIC_LCD_Serial.c: 167: else{
  6750                           ;exercicio_PIC_LCD_Serial.c: 168: PIR1bits.RCIF=0;
  6751  001ECA  9A9E               	bcf	3998,5,c	;volatile
  6752                           
  6753                           ;exercicio_PIC_LCD_Serial.c: 169: numero_entrada_terminal=0;
  6754  001ECC  0E00               	movlw	0
  6755  001ECE  6E33               	movwf	_numero_entrada_terminal+1,c
  6756  001ED0  0E00               	movlw	0
  6757  001ED2  6E32               	movwf	_numero_entrada_terminal,c
  6758                           
  6759                           ;exercicio_PIC_LCD_Serial.c: 170: ESTADO_COMUNICACAO = '1';
  6760  001ED4  0E00               	movlw	0
  6761  001ED6  6E31               	movwf	_ESTADO_COMUNICACAO+1,c
  6762  001ED8  0E31               	movlw	49
  6763  001EDA  6E30               	movwf	_ESTADO_COMUNICACAO,c
  6764  001EDC                     i2l341:
  6765  001EDC  C00E  FFF5         	movff	??_SerialRxPinInterrupt+13,tablat
  6766  001EE0  C00D  FFF8         	movff	??_SerialRxPinInterrupt+12,tblptru
  6767  001EE4  C00C  FFF7         	movff	??_SerialRxPinInterrupt+11,tblptrh
  6768  001EE8  C00B  FFF6         	movff	??_SerialRxPinInterrupt+10,tblptrl
  6769  001EEC  C00A  FFF4         	movff	??_SerialRxPinInterrupt+9,prodh
  6770  001EF0  C009  FFF3         	movff	??_SerialRxPinInterrupt+8,prodl
  6771  001EF4  C008  FFDA         	movff	??_SerialRxPinInterrupt+7,fsr2h
  6772  001EF8  C007  FFD9         	movff	??_SerialRxPinInterrupt+6,fsr2l
  6773  001EFC  C006  FFE2         	movff	??_SerialRxPinInterrupt+5,fsr1h
  6774  001F00  C005  FFE1         	movff	??_SerialRxPinInterrupt+4,fsr1l
  6775  001F04  C004  FFEA         	movff	??_SerialRxPinInterrupt+3,fsr0h
  6776  001F08  C003  FFE9         	movff	??_SerialRxPinInterrupt+2,fsr0l
  6777  001F0C  C002  FFFB         	movff	??_SerialRxPinInterrupt+1,pclatu
  6778  001F10  C001  FFFA         	movff	??_SerialRxPinInterrupt,pclath
  6779  001F14  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6780  001F16  0011               	retfie		f
  6781  001F18                     __end_of_SerialRxPinInterrupt:
  6782                           	opt stack 0
  6783                           pclatu	equ	0xFFB
  6784                           pclath	equ	0xFFA
  6785                           tblptru	equ	0xFF8
  6786                           tblptrh	equ	0xFF7
  6787                           tblptrl	equ	0xFF6
  6788                           tablat	equ	0xFF5
  6789                           prodh	equ	0xFF4
  6790                           prodl	equ	0xFF3
  6791                           intcon	equ	0xFF2
  6792                           postinc0	equ	0xFEE
  6793                           fsr0h	equ	0xFEA
  6794                           fsr0l	equ	0xFE9
  6795                           wreg	equ	0xFE8
  6796                           indf1	equ	0xFE7
  6797                           postinc1	equ	0xFE6
  6798                           postdec1	equ	0xFE5
  6799                           fsr1h	equ	0xFE2
  6800                           fsr1l	equ	0xFE1
  6801                           indf2	equ	0xFDF
  6802                           postinc2	equ	0xFDE
  6803                           postdec2	equ	0xFDD
  6804                           plusw2	equ	0xFDB
  6805                           fsr2h	equ	0xFDA
  6806                           fsr2l	equ	0xFD9
  6807                           status	equ	0xFD8
  6808                           pclatu	equ	0xFFB
  6809                           pclath	equ	0xFFA
  6810                           tblptru	equ	0xFF8
  6811                           tblptrh	equ	0xFF7
  6812                           tblptrl	equ	0xFF6
  6813                           tablat	equ	0xFF5
  6814                           prodh	equ	0xFF4
  6815                           prodl	equ	0xFF3
  6816                           intcon	equ	0xFF2
  6817                           postinc0	equ	0xFEE
  6818                           fsr0h	equ	0xFEA
  6819                           fsr0l	equ	0xFE9
  6820                           wreg	equ	0xFE8
  6821                           indf1	equ	0xFE7
  6822                           postinc1	equ	0xFE6
  6823                           postdec1	equ	0xFE5
  6824                           fsr1h	equ	0xFE2
  6825                           fsr1l	equ	0xFE1
  6826                           indf2	equ	0xFDF
  6827                           postinc2	equ	0xFDE
  6828                           postdec2	equ	0xFDD
  6829                           plusw2	equ	0xFDB
  6830                           fsr2h	equ	0xFDA
  6831                           fsr2l	equ	0xFD9
  6832                           status	equ	0xFD8
  6833                           
  6834                           	psect	rparam
  6835  0000                     pclatu	equ	0xFFB
  6836                           pclath	equ	0xFFA
  6837                           tblptru	equ	0xFF8
  6838                           tblptrh	equ	0xFF7
  6839                           tblptrl	equ	0xFF6
  6840                           tablat	equ	0xFF5
  6841                           prodh	equ	0xFF4
  6842                           prodl	equ	0xFF3
  6843                           intcon	equ	0xFF2
  6844                           postinc0	equ	0xFEE
  6845                           fsr0h	equ	0xFEA
  6846                           fsr0l	equ	0xFE9
  6847                           wreg	equ	0xFE8
  6848                           indf1	equ	0xFE7
  6849                           postinc1	equ	0xFE6
  6850                           postdec1	equ	0xFE5
  6851                           fsr1h	equ	0xFE2
  6852                           fsr1l	equ	0xFE1
  6853                           indf2	equ	0xFDF
  6854                           postinc2	equ	0xFDE
  6855                           postdec2	equ	0xFDD
  6856                           plusw2	equ	0xFDB
  6857                           fsr2h	equ	0xFDA
  6858                           fsr2l	equ	0xFD9
  6859                           status	equ	0xFD8
  6860                           
  6861                           	psect	temp
  6862  000051                     btemp:
  6863                           	opt stack 0
  6864  000051                     	ds	1
  6865  0000                     int$flags	set	btemp
  6866                           pclatu	equ	0xFFB
  6867                           pclath	equ	0xFFA
  6868                           tblptru	equ	0xFF8
  6869                           tblptrh	equ	0xFF7
  6870                           tblptrl	equ	0xFF6
  6871                           tablat	equ	0xFF5
  6872                           prodh	equ	0xFF4
  6873                           prodl	equ	0xFF3
  6874                           intcon	equ	0xFF2
  6875                           postinc0	equ	0xFEE
  6876                           fsr0h	equ	0xFEA
  6877                           fsr0l	equ	0xFE9
  6878                           wreg	equ	0xFE8
  6879                           indf1	equ	0xFE7
  6880                           postinc1	equ	0xFE6
  6881                           postdec1	equ	0xFE5
  6882                           fsr1h	equ	0xFE2
  6883                           fsr1l	equ	0xFE1
  6884                           indf2	equ	0xFDF
  6885                           postinc2	equ	0xFDE
  6886                           postdec2	equ	0xFDD
  6887                           plusw2	equ	0xFDB
  6888                           fsr2h	equ	0xFDA
  6889                           fsr2l	equ	0xFD9
  6890                           status	equ	0xFD8


Data Sizes:
    Strings     118
    Constant    10
    Data        28
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      80
    BANK0           160     37      93
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), str(BANK0[16]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_6(CODE[20]), STR_5(CODE[17]), STR_3(CODE[23]), STR_2(CODE[21]), 
		 -> STR_1(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> str(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    controla_despertador@Despertador	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Despertador(COMRAM[2]), 

    tratar_relogio@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    tratar_relogio@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 

    checa_botao@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    checa_botao@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(COMRAM[6]), 

    checa_botao@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 

    decrementa_variavel@Despertador	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Despertador(COMRAM[2]), 

    decrementa_variavel@Calendario	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Calendario(COMRAM[2]), 

    decrementa_variavel@Relogio	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Relogio(COMRAM[2]), 

    incrementa_variavel@Despertador	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Despertador(COMRAM[2]), 

    incrementa_variavel@Calendario	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Calendario(COMRAM[2]), 

    incrementa_variavel@Relogio	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Relogio(COMRAM[2]), 

    exibir_lcd@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(COMRAM[6]), 

    exibir_lcd@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    exibir_lcd@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_exibir_lcd
    _pisca_cursor->_SetDDRamAddr
    _maquina_estado->_trata_comando
    _maquina_estado->_tx_data
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _exibir_lcd->_sprintf
    _gambiarra_pro_serial->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putrsXLCD->_WriteDataXLCD
    _DelayFor18TCY->_Delay10TCYx
    ___awdiv->___awmod
    _checa_botao->_decrementa_variavel
    _incrementa_variavel->_controla_despertador
    _decrementa_variavel->_controla_despertador

Critical Paths under _SerialRxPinInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_exibir_lcd
    _exibir_lcd->_sprintf
    _gambiarra_pro_serial->_sprintf

Critical Paths under _SerialRxPinInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRxPinInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRxPinInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SerialRxPinInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SerialRxPinInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SerialRxPinInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SerialRxPinInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SerialRxPinInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15882
                                             45 COMRAM     2     2      0
                       _WriteCmdXLCD
                        _checa_botao
                         _exibir_lcd
                          _init_XLCD
                     _maquina_estado
                       _pisca_cursor
                     _tratar_relogio
 ---------------------------------------------------------------------------------
 (1) _tratar_relogio                                      11     7      4     986
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _pisca_cursor                                         0     0      0      66
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _maquina_estado                                       2     2      0      68
                                             16 COMRAM     2     2      0
                      _trata_comando
                            _tx_data
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      68
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trata_comando                                        2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     294
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     206
                                             19 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _exibir_lcd                                          32    26      6   11386
                                             43 COMRAM     2     2      0
                                              7 BANK0     30    24      6
                       _SetDDRamAddr
                            ___awdiv
                            ___awmod
                          _gambiarra
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _gambiarra                                            0     0      0    2896
               _gambiarra_pro_serial
 ---------------------------------------------------------------------------------
 (3) _gambiarra_pro_serial                                 0     0      0    2896
                       _SetDDRamAddr
                       _WriteCmdXLCD
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    17     16    2247
                                             26 COMRAM    17     1     16
                                              0 BANK0      7     7      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     517
                                             16 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      66
                                             15 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1988
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1992
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _checa_botao                                          8     2      6    3016
                                             28 COMRAM     8     2      6
                _decrementa_variavel
                _incrementa_variavel
                   _posiciona_cursor
                        _trocar_tela
 ---------------------------------------------------------------------------------
 (2) _trocar_tela                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _posiciona_cursor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _incrementa_variavel                                  8     2      6    1288
                                             18 COMRAM     8     2      6
               _controla_despertador
 ---------------------------------------------------------------------------------
 (2) _decrementa_variavel                                 10     4      6    1288
                                             18 COMRAM    10     4      6
               _controla_despertador
 ---------------------------------------------------------------------------------
 (3) _controla_despertador                                 4     2      2     480
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _SerialRxPinInterrupt                                14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCmdXLCD
     _DelayFor18TCY
       _Delay10TCYx
   _checa_botao
     _decrementa_variavel
       _controla_despertador
     _incrementa_variavel
       _controla_despertador
     _posiciona_cursor
     _trocar_tela
   _exibir_lcd
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _gambiarra
       _gambiarra_pro_serial
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _WriteCmdXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquina_estado
     _trata_comando
     _tx_data
   _pisca_cursor
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
   _tratar_relogio

 _SerialRxPinInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      5D       5       58.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AD      20        0.0%
DATA                 0      0      AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Nov 13 09:20:36 2019

   __end_of_gambiarra_pro_serial 2190                     ___awdiv@sign 001A  
               ??_maquina_estado 0011    __size_of_controla_despertador 0140  
                            l132 1FC6                              l124 1F36  
                            l133 1FC2                              l128 1F8C  
                            l137 1FE4                              l129 1F88  
                            l172 106A                              l325 1A42  
                            l183 1C0E                              l184 1C42  
                            l176 11AA                              l168 0F86  
                            l169 0FBA                              l290 24D8  
                            l178 1258                              l187 1CE4  
                            l381 24C4                              l295 24F4  
                            l298 250E                              l905 23DC  
                            l895 2302                              u740 2372  
                            u760 2392                              _str 0093  
          __size_of_WriteCmdXLCD 003E                     ___awmod@sign 0014  
                            wreg 000FE8                       _Calendario 003D  
                  _trata_comando 2510                      _trocar_tela 25AE  
                   __CFG_WDT$OFF 000000                             l1210 2590  
                           l3030 22D8                             l2312 1CB0  
                           l3040 22F8                             l3032 22DC  
                           l3112 1B98                             l3104 1B3C  
                           l2306 1C80                             l2410 16BA  
                           l2402 1664                             l2074 25A0  
                           l3050 23BA                             l3106 1B42  
                           l3114 1BA4                             l2500 1426  
                           l3028 22D0                             l3052 23BE  
                           l3116 1BBE                             l2430 1794  
                           l2422 173E                             l2414 16EC  
                           l2406 169E                             l3062 1A6A  
                           l2504 1442                             l2512 14A0  
                           l2440 17F0                             l2600 20F0  
                           l3056 23D2                             l3048 23B2  
                           l3160 0CDE                             l1368 257A  
                           l2360 203C                             l2530 1554  
                           l2522 1502                             l2426 175A  
                           l2418 1704                             l2434 17B0  
                           l3074 1AB4                             l2354 2022  
                           l2508 1484                             l2460 18AA  
                           l2452 1854                             l2444 180A  
                           l2604 20FA                             l2620 21A4  
                           l3084 1AE4                             l3068 1A86  
                           l2372 206C                             l2364 204C  
                           l2356 202C                             l3244 1962  
                           l2534 1596                             l2526 153C  
                           l2518 14E8                             l2390 1600  
                           l2710 1F52                             l2630 21C6  
                           l2294 2292                             l3086 1AEA  
                           l3174 0F22                             l3270 19FA  
                           l2480 1334                             l2472 12E2  
                           l2456 188E                             l2448 183C  
                           l2608 2108                             l2632 21CA  
                           l2640 21E8                             l2624 21B0  
                           l2288 2260                             l2376 207C  
                           l2368 205C                             l2544 24E4  
                           l2538 15B2                             l2394 161A  
                           l2706 1F3A                             l3098 1B20  
                           l2650 2546                             l2730 1D22  
                           l2810 0FF8                             l3282 1A3E  
                           l2492 13CC                             l2484 1376  
                           l2476 131C                             l2468 12C8  
                           l1596 2382                             l2644 21F6  
                           l2636 21DE                             l2628 21BE  
                           l3284 1A44                             l2398 164C  
                           l2590 20D0                             l2582 20B2  
                           l2750 1D70                             l2742 1D50  
                           l2734 1D30                             l2830 111C  
                           l2822 109E                             l3278 1A28  
                           l2496 13E4                             l2488 1392  
                           l2592 20D4                             l2576 20A2  
                           l2816 1028                             l2770 1DC0  
                           l2762 1DA0                             l2754 1D80  
                           l2746 1D60                             l2738 1D40  
                           l2834 1164                             l2588 20C8  
                           l2852 2464                             l2860 2478  
                           l2780 1DE6                             l2844 1224  
                           l2828 1102                             l2854 246A  
                           l2766 1DB0                             l2758 1D90  
                           l2774 1DD0                             l2838 11C8  
                           l2792 1E14                             l2784 1DF4  
                           l2796 1E24                             l2788 1E04  
                           STR_1 0822                             STR_2 0838  
                           STR_3 080B                             STR_4 0872  
                           STR_5 0861                             STR_6 084D  
                           u1700 228A                             u1710 22B2  
                           u1730 1BEC                             u3307 1F26  
                           u1707 2280                             u3317 1F60  
                           u1717 22A8                             u1750 1C5E  
                           u3327 1F9A                             u2480 1F4A  
                           u3337 1FD4                             u3257 19E0  
                           u1770 1CD0                             u3267 251C  
                           u1685 2322                             u3277 2592  
                           u2830 1184                             u2750 0F64  
                           u3287 2580                             u3297 25A2  
                           u2850 1244                             u2770 0FD6  
                           _PEIE 007F96                             u2790 1048  
                           _RCIE 007CED                             _RCIF 007CF5  
                           _RCIP 007CFD                             _TMR0 000FD6  
                           _TXIF 007CF4              _incrementa_variavel 15C0  
                           _main 18B8           checa_botao@Despertador 001F  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0051           __size_of_WriteDataXLCD 003E  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                     ___param_bank 000000  
                    _Delay10TCYx 259E            tratar_relogio@Relogio 000F  
                   _WriteCmdXLCD 2424                      _Delay1KTCYx 258E  
           ?_incrementa_variavel 0013                    ?_SetDDRamAddr 0001  
                          ?_main 0001                  __end_of___awdiv 2112  
                __end_of___awmod 2200        __size_of_posiciona_cursor 0046  
                ___awdiv@divisor 0017                  __end_of___lwdiv 230C  
                __end_of___lwmod 23E6                            i2l341 1EDC  
                          i2l336 1ECA                            i2l337 1EB0  
                ___awdiv@counter 0019                            _RCREG 000FAE  
                          _RCSTA 000FAB             __size_of_checa_botao 00D2  
                          _SPBRG 000FAF                            _PORTB 000F81  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD            __size_of_Delay10KTCYx 0016  
                          _TXSTA 000FAC                   ?_trata_comando 0001  
                __end_of_dpowers 080B                            pclath 000FFA  
                          tablat 000FF5                            plusw2 000FDB  
                __end_of_tx_data 2510                            status 000FD8  
                __end_of_sprintf 1BCC                  __initialization 2200  
                   __end_of_main 1A5C                 __end_of_BusyXLCD 24D8  
                 _tratar_relogio 0F32                     _Delay10KTCYx 2578  
          ??_incrementa_variavel 0019            __size_of_DelayPORXLCD 0008  
                 ??_SetDDRamAddr 0010                 __end_of_OpenXLCD 208E  
                         ??_main 002E                    __activetblptr 000002  
                  _WriteDataXLCD 23E6                      _Despertador 0043  
                         _ADCON1 000FC1                 ___awdiv@dividend 0015  
           _gambiarra_pro_serial 2112                           i2l2990 1EA0  
                         i2l2986 1E86                           _TMR0IF 007F92  
                   _DelayPORXLCD 25BC           __end_of_tratar_relogio 1280  
                    exibir_lcd@a 0079                      exibir_lcd@b 007B  
                    exibir_lcd@c 007D                      exibir_lcd@d 007F  
                    exibir_lcd@e 0081                      exibir_lcd@f 0083  
                    exibir_lcd@g 006D                      exibir_lcd@h 006F  
                    exibir_lcd@i 0071                      exibir_lcd@j 0073  
                    exibir_lcd@k 0075                      exibir_lcd@l 0077  
                      ??___awdiv 0019                        ??___awmod 0013  
                      ??___lwdiv 0013                        ??___lwmod 001A  
                         _cursor 0036                           clear_0 223E  
                         clear_1 224A                 ___awdiv@quotient 001B  
                ___awmod@divisor 0011                  ___awmod@counter 0013  
                 ?_WriteDataXLCD 0001            exibir_lcd@Despertador 0069  
                ??_trata_comando 000F                     __pdataCOMRAM 004F  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ??_tx_data 000F            ?_gambiarra_pro_serial 0001  
                      ??_sprintf 002B                       __accesstop 0060  
        __end_of__initialization 2250                  __CFG_PBADEN$OFF 000000  
                  ___rparam_used 000001    __size_of_SerialRxPinInterrupt 1F10  
                ?_tratar_relogio 000F                   __pcstackCOMRAM 0001  
                   __pidataBANK0 255E               __size_of_gambiarra 0006  
               _posiciona_cursor 235E      __end_of_decrementa_variavel 15C0  
                   ?_trocar_tela 0001           __size_of_DelayFor18TCY 0008  
                     __pbssBANK0 0085                        ?_BusyXLCD 0001  
   __end_of_controla_despertador 1D0C                  WriteCmdXLCD@cmd 0010  
           __end_of_SetDDRamAddr 235E               __size_of_init_XLCD 001E  
                      ?_OpenXLCD 0001                WriteDataXLCD@data 0010  
                   ?_Delay10TCYx 0001                    ?_pisca_cursor 0001  
                ??_WriteDataXLCD 0010                     ?_Delay1KTCYx 0001  
         ??_gambiarra_pro_serial 002C               __size_of_putrsXLCD 005C  
                     ??_BusyXLCD 0010                __end_of_gambiarra 25D2  
                     ??_OpenXLCD 0014                          __Hparam 0000  
                        _Relogio 0049                          __Lparam 0000  
                        ___awdiv 208E                    _DelayFor18TCY 25C4  
                        ___awmod 2190                   ??_pisca_cursor 0014  
                     _exibir_lcd 0882                          ___lwdiv 22BA  
                        ___lwmod 23A4                     __psmallconst 0800  
                  ??_checa_botao 0023                          __pcinit 2200  
                putrsXLCD@buffer 0011                  Delay10TCYx@unit 000F  
                        __ramtop 0800                          __ptext0 18B8  
                        __ptext1 0F32                          __ptext2 1D0C  
                        __ptext3 2462                          __ptext4 24D8  
                        __ptext5 2510                          __ptext6 2540  
                        __ptext7 1FEA                          __ptext8 25BC  
                        __ptext9 258E                        _BUFF_RESP 0085  
              __end_of_init_XLCD 255E                        _T0CONbits 000FD5  
                        _dpowers 0801                 ___awmod@dividend 000F  
                        _tx_data 24D8          __size_of_maquina_estado 003C  
                        _sprintf 1A5C                   __pintcode_body 1E36  
  decrementa_variavel@Calendario 0017             end_of_initialization 2250  
             _ESTADO_COMUNICACAO 0030                    __Lmediumconst 0000  
                        int_func 1E36         tratar_relogio@Calendario 0011  
    __end_of_incrementa_variavel 18B8                   ?_DelayFor18TCY 0001  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                __end_of_putrsXLCD 22BA  
           _controla_despertador 1BCC                        _PORTAbits 000F80  
                      _PORTCbits 000F82                        _PORTDbits 000F83  
controla_despertador@Despertador 000F                        _TRISAbits 000F92  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
            __end_of_checa_botao 1FEA                        _TRISDbits 000F95  
          __size_of_SetDDRamAddr 0052          _numero_entrada_terminal 0032  
             checa_botao@Relogio 001D             __size_of_trocar_tela 000E  
               ??_tratar_relogio 0013         __end_of_posiciona_cursor 23A4  
                    ?_exibir_lcd 0067             __size_of_Delay10TCYx 0010  
                  __pidataCOMRAM 25D2            ?_controla_despertador 000F  
                   _SetDDRamAddr 230C             __size_of_Delay1KTCYx 0010  
   __end_of_SerialRxPinInterrupt 1F18             exibir_lcd@Calendario 006B  
             SetDDRamAddr@DDaddr 0013            __end_of_trata_comando 2540  
            start_initialization 2200             __end_of_pisca_cursor 1E36  
              __size_of_BusyXLCD 003A                  ??_DelayFor18TCY 0010  
              __size_of_OpenXLCD 00A4                    ?_WriteCmdXLCD 0001  
                    tx_data@cont 000F                      __pdataBANK0 00A3  
                    _checa_botao 1F18                      __pbssCOMRAM 0030  
                  __pcstackBANK0 0060                   _maquina_estado 2462  
                Delay1KTCYx@unit 000F              __size_of_exibir_lcd 06B0  
   __size_of_decrementa_variavel 0340                      sprintf@flag 0062  
                    sprintf@prec 0063                 ___lwdiv@dividend 000F  
                      _gambiarra 25CC                        __pintcode 0008  
                 ??_WriteCmdXLCD 0010                         ?___awdiv 0015  
                       ?___awmod 000F                    ?_Delay10KTCYx 0001  
                      _flag_time 003C                         ?___lwdiv 000F  
         ??_controla_despertador 0011                         ?___lwmod 0016  
                      _despertar 003B            __end_of_WriteDataXLCD 2424  
                    __smallconst 0800           __end_of_maquina_estado 249E  
                      _init_XLCD 2540                 ___lwdiv@quotient 0014  
                       ?_tx_data 0001                         ?_sprintf 001B  
  __size_of_gambiarra_pro_serial 007E                         _BUFF_COM 008C  
                       _LATBbits 000F8A       incrementa_variavel@Relogio 0013  
                  ?_DelayPORXLCD 0001             _SerialRxPinInterrupt 0008  
                       _PIR1bits 000F9E                  OpenXLCD@lcdtype 0014  
                       i2u296_40 1E94                       ?_gambiarra 0001  
                 ??_Delay10KTCYx 000F       decrementa_variavel@Relogio 0013  
                      _putrsXLCD 225E                  ?_maquina_estado 0001  
          __size_of_pisca_cursor 012A                 Delay10KTCYx@unit 0010  
                     ?_init_XLCD 0001   incrementa_variavel@Despertador 0015  
                      copy_data0 2214                         _BusyXLCD 249E  
                 ??_DelayPORXLCD 0010                ?_posiciona_cursor 0001  
          ?_SerialRxPinInterrupt 0001                         _OpenXLCD 1FEA  
                       __Hrparam 0000               ??_posiciona_cursor 000F  
                       __Lrparam 0000                     ??_exibir_lcd 002C  
               __size_of___awdiv 0084                 __size_of___awmod 0070  
                   _pisca_cursor 1D0C                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042     __size_of_incrementa_variavel 02F8  
                   _tela_exibida 004F                       sprintf@val 0064  
                     ?_putrsXLCD 0011    incrementa_variavel@Calendario 0017  
                ___lwdiv@divisor 0011                  ___lwdiv@counter 0013  
                       __ptext10 2578                         __ptext11 0882  
                       __ptext20 2424                         __ptext12 25CC  
                       __ptext21 230C                         __ptext13 2112  
                       __ptext30 1280                         __ptext22 25C4  
                       __ptext14 1A5C                         __ptext31 1BCC  
                       __ptext23 259E                         __ptext15 23A4  
                       __ptext24 2190                         __ptext16 22BA  
                       __ptext25 208E                         __ptext17 225E  
                       __ptext26 1F18                         __ptext18 23E6  
                       __ptext27 25AE                         __ptext19 249E  
                       __ptext28 235E                         __ptext29 15C0  
                  ??_trocar_tela 000F                exibir_lcd@Relogio 0067  
           __end_of_WriteCmdXLCD 2462                 __size_of_tx_data 0038  
                       _contador 0038                 __size_of_sprintf 0170  
             __end_of_exibir_lcd 0F32                    __size_of_main 01A4  
                    ??_gambiarra 002C                    ??_Delay10TCYx 000F  
                       int$flags 0051                    ??_Delay1KTCYx 000F  
            _decrementa_variavel 1280                     ?_checa_botao 001D  
                     _INTCONbits 000FF2                      _qtdDias_mes 00A3  
                    ??_init_XLCD 0015             __end_of_Delay10KTCYx 258E  
                       intlevel2 0000                        sprintf@ap 0060  
           ?_decrementa_variavel 0013                        sprintf@sp 001B  
               ___lwmod@dividend 0016           ??_SerialRxPinInterrupt 0001  
            __end_of_trocar_tela 25BC                      _serial_data 003A  
         __size_of_trata_comando 0030            __end_of_DelayFor18TCY 25CC  
        __size_of_tratar_relogio 034E              __end_of_Delay10TCYx 25AE  
                       sprintf@c 0066                         sprintf@f 001D  
           __end_of_DelayPORXLCD 25C4                      ??_putrsXLCD 0013  
                ___lwmod@divisor 0018              __end_of_Delay1KTCYx 259E  
                ___lwmod@counter 001A            checa_botao@Calendario 0021  
          ??_decrementa_variavel 0019         _controle_tempo_despertar 0034  
 decrementa_variavel@Despertador 0015  
