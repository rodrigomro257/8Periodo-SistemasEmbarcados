

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Nov 12 22:08:46 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 1.41
    61                           ; Generated 25/01/2017 GMT
    62                           ; 
    63                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK0
    96  002D86                     __pidataBANK0:
    97                           	opt stack 0
    98                           
    99                           ;initializer for _qtdDias_mes
   100  002D86  0000               	dw	0
   101  002D88  001F               	dw	31
   102  002D8A  001C               	dw	28
   103  002D8C  001F               	dw	31
   104  002D8E  001E               	dw	30
   105  002D90  001F               	dw	31
   106  002D92  001E               	dw	30
   107  002D94  001F               	dw	31
   108  002D96  001F               	dw	31
   109  002D98  001E               	dw	30
   110  002D9A  001F               	dw	31
   111  002D9C  001E               	dw	30
   112  002D9E  001F               	dw	31
   113                           
   114                           	psect	smallconst
   115  000800                     __psmallconst:
   116                           	opt stack 0
   117  000800  00                 	db	0
   118  000801                     _dpowers:
   119                           	opt stack 0
   120  000801  0001               	dw	1
   121  000803  000A               	dw	10
   122  000805  0064               	dw	100
   123  000807  03E8               	dw	1000
   124  000809  2710               	dw	10000
   125  00080B                     __end_of_dpowers:
   126                           	opt stack 0
   127  0000                     _TMR0	set	4054
   128  0000                     _TRISBbits	set	3987
   129  0000                     _PORTB	set	3969
   130  0000                     _LATBbits	set	3978
   131  0000                     _ADRESL	set	4035
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADCON0bits	set	4034
   134  0000                     _PORTAbits	set	3968
   135  0000                     _TRISDbits	set	3989
   136  0000                     _TRISB	set	3987
   137  0000                     _TRISAbits	set	3986
   138  0000                     _TRISCbits	set	3988
   139  0000                     _TXSTA	set	4012
   140  0000                     _RCSTA	set	4011
   141  0000                     _INTCONbits	set	4082
   142  0000                     _T0CONbits	set	4053
   143  0000                     _PORTDbits	set	3971
   144  0000                     _ADCON1	set	4033
   145  0000                     _ADCON0	set	4034
   146  0000                     _ADCON2	set	4032
   147  0000                     _TMR0IF	set	32658
   148  0000                     _PEIE	set	32662
   149  0000                     _RCIE	set	31981
   150  0000                     _RCIP	set	31997
   151  0000                     _RCIF	set	31989
   152  00080B                     STR_4:
   153                           
   154                           ; BSR set to: 0
   155  00080B  25                 	db	37
   156  00080C  64                 	db	100	;'d'
   157  00080D  25                 	db	37
   158  00080E  64                 	db	100	;'d'
   159  00080F  3A                 	db	58	;':'
   160  000810  25                 	db	37
   161  000811  64                 	db	100	;'d'
   162  000812  25                 	db	37
   163  000813  64                 	db	100	;'d'
   164  000814  3A                 	db	58	;':'
   165  000815  25                 	db	37
   166  000816  64                 	db	100	;'d'
   167  000817  25                 	db	37
   168  000818  64                 	db	100	;'d'
   169  000819  20                 	db	32
   170  00081A  20                 	db	32
   171  00081B  20                 	db	32
   172  00081C  20                 	db	32
   173  00081D  20                 	db	32
   174  00081E  20                 	db	32
   175  00081F  20                 	db	32
   176  000820  20                 	db	32
   177  000821  00                 	db	0
   178  000822                     STR_2:
   179                           
   180                           ; BSR set to: 0
   181  000822  48                 	db	72	;'H'
   182  000823  4F                 	db	79	;'O'
   183  000824  52                 	db	82	;'R'
   184  000825  41                 	db	65	;'A'
   185  000826  3A                 	db	58	;':'
   186  000827  20                 	db	32
   187  000828  25                 	db	37
   188  000829  64                 	db	100	;'d'
   189  00082A  25                 	db	37
   190  00082B  64                 	db	100	;'d'
   191  00082C  3A                 	db	58	;':'
   192  00082D  25                 	db	37
   193  00082E  64                 	db	100	;'d'
   194  00082F  25                 	db	37
   195  000830  64                 	db	100	;'d'
   196  000831  3A                 	db	58	;':'
   197  000832  25                 	db	37
   198  000833  64                 	db	100	;'d'
   199  000834  25                 	db	37
   200  000835  64                 	db	100	;'d'
   201  000836  20                 	db	32
   202  000837  00                 	db	0
   203  000838                     STR_3:
   204                           
   205                           ; BSR set to: 0
   206  000838  44                 	db	68	;'D'
   207  000839  41                 	db	65	;'A'
   208  00083A  54                 	db	84	;'T'
   209  00083B  41                 	db	65	;'A'
   210  00083C  3A                 	db	58	;':'
   211  00083D  20                 	db	32
   212  00083E  25                 	db	37
   213  00083F  64                 	db	100	;'d'
   214  000840  25                 	db	37
   215  000841  64                 	db	100	;'d'
   216  000842  3A                 	db	58	;':'
   217  000843  25                 	db	37
   218  000844  64                 	db	100	;'d'
   219  000845  25                 	db	37
   220  000846  64                 	db	100	;'d'
   221  000847  3A                 	db	58	;':'
   222  000848  25                 	db	37
   223  000849  64                 	db	100	;'d'
   224  00084A  25                 	db	37
   225  00084B  64                 	db	100	;'d'
   226  00084C  20                 	db	32
   227  00084D  00                 	db	0
   228  00084E                     STR_6:
   229                           
   230                           ; BSR set to: 0
   231  00084E  54                 	db	84	;'T'
   232  00084F  45                 	db	69	;'E'
   233  000850  4D                 	db	77	;'M'
   234  000851  50                 	db	80	;'P'
   235  000852  45                 	db	69	;'E'
   236  000853  52                 	db	82	;'R'
   237  000854  41                 	db	65	;'A'
   238  000855  54                 	db	84	;'T'
   239  000856  55                 	db	85	;'U'
   240  000857  52                 	db	82	;'R'
   241  000858  41                 	db	65	;'A'
   242  000859  3A                 	db	58	;':'
   243  00085A  20                 	db	32
   244  00085B  20                 	db	32
   245  00085C  20                 	db	32
   246  00085D  20                 	db	32
   247  00085E  00                 	db	0
   248  00085F                     STR_5:
   249                           
   250                           ; BSR set to: 0
   251  00085F  44                 	db	68	;'D'
   252  000860  45                 	db	69	;'E'
   253  000861  53                 	db	83	;'S'
   254  000862  50                 	db	80	;'P'
   255  000863  45                 	db	69	;'E'
   256  000864  52                 	db	82	;'R'
   257  000865  54                 	db	84	;'T'
   258  000866  41                 	db	65	;'A'
   259  000867  44                 	db	68	;'D'
   260  000868  4F                 	db	79	;'O'
   261  000869  52                 	db	82	;'R'
   262  00086A  3A                 	db	58	;':'
   263  00086B  20                 	db	32
   264  00086C  20                 	db	32
   265  00086D  20                 	db	32
   266  00086E  20                 	db	32
   267  00086F  00                 	db	0
   268  000870                     STR_1:
   269                           
   270                           ; BSR set to: 0
   271  000870  25                 	db	37
   272  000871  64                 	db	100	;'d'
   273  000872  2C                 	db	44
   274  000873  25                 	db	37
   275  000874  64                 	db	100	;'d'
   276  000875  20                 	db	32
   277  000876  6F                 	db	111	;'o'
   278  000877  43                 	db	67	;'C'
   279  000878  20                 	db	32
   280  000879  20                 	db	32
   281  00087A  20                 	db	32
   282  00087B  20                 	db	32
   283  00087C  20                 	db	32
   284  00087D  20                 	db	32
   285  00087E  20                 	db	32
   286  00087F  20                 	db	32
   287  000880  00                 	db	0
   288                           
   289                           ; #config settings
   290  000881  00                 	db	0	; dummy byte at the end
   291  0000                     
   292                           	psect	cinit
   293  002BE2                     __pcinit:
   294                           	opt stack 0
   295  002BE2                     start_initialization:
   296                           	opt stack 0
   297  002BE2                     __initialization:
   298                           	opt stack 0
   299                           
   300                           ; Initialize objects allocated to BANK0 (26 bytes)
   301                           ; load TBLPTR registers with __pidataBANK0
   302  002BE2  0E86               	movlw	low __pidataBANK0
   303  002BE4  6EF6               	movwf	tblptrl,c
   304  002BE6  0E2D               	movlw	high __pidataBANK0
   305  002BE8  6EF7               	movwf	tblptrh,c
   306  002BEA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   307  002BEC  6EF8               	movwf	tblptru,c
   308  002BEE  EE00  F0C6         	lfsr	0,__pdataBANK0
   309  002BF2  EE10 F01A          	lfsr	1,26
   310  002BF6                     copy_data0:
   311  002BF6  0009               	tblrd		*+
   312  002BF8  CFF5 FFEE          	movff	tablat,postinc0
   313  002BFC  50E5               	movf	postdec1,w,c
   314  002BFE  50E1               	movf	fsr1l,w,c
   315  002C00  E1FA               	bnz	copy_data0
   316                           
   317                           ; Clear objects allocated to BANK0 (31 bytes)
   318  002C02  EE00  F0A7         	lfsr	0,__pbssBANK0
   319  002C06  0E1F               	movlw	31
   320  002C08                     clear_0:
   321  002C08  6AEE               	clrf	postinc0,c
   322  002C0A  06E8               	decf	wreg,f,c
   323  002C0C  E1FD               	bnz	clear_0
   324                           
   325                           ; Clear objects allocated to COMRAM (14 bytes)
   326  002C0E  EE00  F042         	lfsr	0,__pbssCOMRAM
   327  002C12  0E0E               	movlw	14
   328  002C14                     clear_1:
   329  002C14  6AEE               	clrf	postinc0,c
   330  002C16  06E8               	decf	wreg,f,c
   331  002C18  E1FD               	bnz	clear_1
   332  002C1A                     end_of_initialization:
   333                           	opt stack 0
   334  002C1A                     __end_of__initialization:
   335                           	opt stack 0
   336  002C1A  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   337  002C1C  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   338  002C1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   339  002C20  6EF8               	movwf	tblptru,c
   340  002C22  0100               	movlb	0
   341  002C24  EFE2  F00D         	goto	_main	;jump to C main() function
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           postdec1	equ	0xFE5
   349                           fsr1l	equ	0xFE1
   350                           
   351                           	psect	bssCOMRAM
   352  000042                     __pbssCOMRAM:
   353                           	opt stack 0
   354  000042                     _controle_tempo_despertar:
   355                           	opt stack 0
   356  000042                     	ds	2
   357  000044                     _cursor:
   358                           	opt stack 0
   359  000044                     	ds	2
   360  000046                     _ADCResult:
   361                           	opt stack 0
   362  000046                     	ds	2
   363  000048                     _despertar:
   364                           	opt stack 0
   365  000048                     	ds	1
   366  000049                     _flag_time:
   367                           	opt stack 0
   368  000049                     	ds	1
   369  00004A                     _Relogio:
   370                           	opt stack 0
   371  00004A                     	ds	6
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	bssBANK0
   382  0000A7                     __pbssBANK0:
   383                           	opt stack 0
   384  0000A7                     _valor_tensao:
   385                           	opt stack 0
   386  0000A7                     	ds	3
   387  0000AA                     _errno:
   388                           	opt stack 0
   389  0000AA                     	ds	2
   390  0000AC                     _contador:
   391                           	opt stack 0
   392  0000AC                     	ds	2
   393  0000AE                     _tela_exibida:
   394                           	opt stack 0
   395  0000AE                     	ds	2
   396  0000B0                     _temperatura_display:
   397                           	opt stack 0
   398  0000B0                     	ds	10
   399  0000BA                     _Calendario:
   400                           	opt stack 0
   401  0000BA                     	ds	6
   402  0000C0                     _Despertador:
   403                           	opt stack 0
   404  0000C0                     	ds	6
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           postdec1	equ	0xFE5
   412                           fsr1l	equ	0xFE1
   413                           
   414                           	psect	dataBANK0
   415  0000C6                     __pdataBANK0:
   416                           	opt stack 0
   417  0000C6                     _qtdDias_mes:
   418                           	opt stack 0
   419  0000C6                     	ds	26
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	cstackBANK0
   430  000060                     __pcstackBANK0:
   431                           	opt stack 0
   432  000060                     ?_floor:
   433                           	opt stack 0
   434  000060                     floor@x:
   435                           	opt stack 0
   436                           
   437                           ; 3 bytes @ 0x0
   438  000060                     	ds	3
   439  000063                     floor@i:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x3
   443  000063                     	ds	3
   444  000066                     floor@expon:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x6
   448  000066                     	ds	2
   449  000068                     convert_float_to_char@valor:
   450                           	opt stack 0
   451                           
   452                           ; 3 bytes @ 0x8
   453  000068                     	ds	3
   454  00006B                     convert_float_to_char@f2:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0xB
   458  00006B                     	ds	3
   459  00006E                     convert_float_to_char@i1:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0xE
   463  00006E                     	ds	2
   464  000070                     convert_float_to_char@i2:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x10
   468  000070                     	ds	2
   469  000072                     convert_float_to_char@f1:
   470                           	opt stack 0
   471                           
   472                           ; 3 bytes @ 0x12
   473  000072                     	ds	3
   474  000075                     exibir_lcd@Relogio:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x15
   478  000075                     	ds	2
   479  000077                     exibir_lcd@Despertador:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x17
   483  000077                     	ds	2
   484  000079                     exibir_lcd@Calendario:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x19
   488  000079                     	ds	2
   489  00007B                     ??_exibir_lcd:
   490                           
   491                           ; 1 bytes @ 0x1B
   492  00007B                     	ds	2
   493  00007D                     exibir_lcd@str:
   494                           	opt stack 0
   495                           
   496                           ; 16 bytes @ 0x1D
   497  00007D                     	ds	16
   498  00008D                     exibir_lcd@g:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x2D
   502  00008D                     	ds	2
   503  00008F                     exibir_lcd@h:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x2F
   507  00008F                     	ds	2
   508  000091                     exibir_lcd@i:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x31
   512  000091                     	ds	2
   513  000093                     exibir_lcd@j:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x33
   517  000093                     	ds	2
   518  000095                     exibir_lcd@k:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x35
   522  000095                     	ds	2
   523  000097                     exibir_lcd@l:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x37
   527  000097                     	ds	2
   528  000099                     exibir_lcd@a:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x39
   532  000099                     	ds	2
   533  00009B                     exibir_lcd@b:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x3B
   537  00009B                     	ds	2
   538  00009D                     exibir_lcd@c:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x3D
   542  00009D                     	ds	2
   543  00009F                     exibir_lcd@d:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x3F
   547  00009F                     	ds	2
   548  0000A1                     exibir_lcd@e:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x41
   552  0000A1                     	ds	2
   553  0000A3                     exibir_lcd@f:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x43
   557  0000A3                     	ds	2
   558  0000A5                     ??_main:
   559                           
   560                           ; 1 bytes @ 0x45
   561  0000A5                     	ds	2
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           postdec1	equ	0xFE5
   569                           fsr1l	equ	0xFE1
   570                           
   571                           	psect	cstackCOMRAM
   572  000001                     __pcstackCOMRAM:
   573                           	opt stack 0
   574  000001                     ??_pic_isr:
   575                           
   576                           ; 1 bytes @ 0x0
   577  000001                     	ds	14
   578  00000F                     ??_SetChanADC:
   579  00000F                     ??_Delay10KTCYx:
   580  00000F                     ?_ReadADC:
   581                           	opt stack 0
   582  00000F                     ?___awmod:
   583                           	opt stack 0
   584  00000F                     ?___lwdiv:
   585                           	opt stack 0
   586  00000F                     ?___ftpack:
   587                           	opt stack 0
   588  00000F                     ?___ftneg:
   589                           	opt stack 0
   590  00000F                     Delay10TCYx@unit:
   591                           	opt stack 0
   592  00000F                     Delay1KTCYx@unit:
   593                           	opt stack 0
   594  00000F                     tratar_relogio@Relogio:
   595                           	opt stack 0
   596  00000F                     controla_despertador@Despertador:
   597                           	opt stack 0
   598  00000F                     ___awmod@dividend:
   599                           	opt stack 0
   600  00000F                     ___lwdiv@dividend:
   601                           	opt stack 0
   602  00000F                     ___ftpack@arg:
   603                           	opt stack 0
   604  00000F                     frexp@value:
   605                           	opt stack 0
   606  00000F                     ___ftge@ff1:
   607                           	opt stack 0
   608  00000F                     ___ftneg@f1:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0xE
   612  00000F                     	ds	1
   613  000010                     ??_SetDDRamAddr:
   614  000010                     SetChanADC@channel:
   615                           	opt stack 0
   616  000010                     WriteCmdXLCD@cmd:
   617                           	opt stack 0
   618  000010                     WriteDataXLCD@data:
   619                           	opt stack 0
   620  000010                     Delay10KTCYx@unit:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0xF
   624  000010                     	ds	1
   625  000011                     ??_ReadADC:
   626  000011                     tratar_relogio@Calendario:
   627                           	opt stack 0
   628  000011                     putrsXLCD@buffer:
   629                           	opt stack 0
   630  000011                     ___awmod@divisor:
   631                           	opt stack 0
   632  000011                     ___lwdiv@divisor:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x10
   636  000011                     	ds	1
   637  000012                     ___ftpack@exp:
   638                           	opt stack 0
   639  000012                     frexp@eptr:
   640                           	opt stack 0
   641  000012                     ___ftge@ff2:
   642                           	opt stack 0
   643                           
   644                           ; 3 bytes @ 0x11
   645  000012                     	ds	1
   646  000013                     ??_tratar_relogio:
   647  000013                     SetDDRamAddr@DDaddr:
   648                           	opt stack 0
   649  000013                     ___awmod@counter:
   650                           	opt stack 0
   651  000013                     ___ftpack@sign:
   652                           	opt stack 0
   653  000013                     checa_botao@Relogio:
   654                           	opt stack 0
   655  000013                     ___lwdiv@quotient:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x12
   659  000013                     	ds	1
   660  000014                     ??___ftpack:
   661  000014                     ??_frexp:
   662  000014                     OpenXLCD@lcdtype:
   663                           	opt stack 0
   664  000014                     ___awmod@sign:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x13
   668  000014                     	ds	1
   669  000015                     ??___ftge:
   670  000015                     ?___awdiv:
   671                           	opt stack 0
   672  000015                     ___lwdiv@counter:
   673                           	opt stack 0
   674  000015                     checa_botao@Despertador:
   675                           	opt stack 0
   676  000015                     ___awdiv@dividend:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x14
   680  000015                     	ds	1
   681  000016                     ?___lwmod:
   682                           	opt stack 0
   683  000016                     ___lwmod@dividend:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x15
   687  000016                     	ds	1
   688  000017                     ?___ftadd:
   689                           	opt stack 0
   690  000017                     ?___lwtoft:
   691                           	opt stack 0
   692  000017                     checa_botao@Calendario:
   693                           	opt stack 0
   694  000017                     ___awdiv@divisor:
   695                           	opt stack 0
   696  000017                     ___lwtoft@c:
   697                           	opt stack 0
   698  000017                     ___ftadd@f1:
   699                           	opt stack 0
   700                           
   701                           ; 3 bytes @ 0x16
   702  000017                     	ds	1
   703  000018                     ___lwmod@divisor:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x17
   707  000018                     	ds	1
   708  000019                     ??_checa_botao:
   709  000019                     ___awdiv@counter:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x18
   713  000019                     	ds	1
   714  00001A                     ?___ftmul:
   715                           	opt stack 0
   716  00001A                     ___awdiv@sign:
   717                           	opt stack 0
   718  00001A                     ___lwmod@counter:
   719                           	opt stack 0
   720  00001A                     ___ftadd@f2:
   721                           	opt stack 0
   722  00001A                     ___ftmul@f1:
   723                           	opt stack 0
   724                           
   725                           ; 3 bytes @ 0x19
   726  00001A                     	ds	1
   727  00001B                     ?_sprintf:
   728                           	opt stack 0
   729  00001B                     sprintf@sp:
   730                           	opt stack 0
   731  00001B                     ___awdiv@quotient:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x1A
   735  00001B                     	ds	2
   736  00001D                     ??___ftadd:
   737  00001D                     sprintf@f:
   738                           	opt stack 0
   739  00001D                     ___ftmul@f2:
   740                           	opt stack 0
   741                           
   742                           ; 3 bytes @ 0x1C
   743  00001D                     	ds	3
   744  000020                     ??___ftmul:
   745  000020                     ___ftadd@sign:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x1F
   749  000020                     	ds	1
   750  000021                     ___ftadd@exp2:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x20
   754  000021                     	ds	1
   755  000022                     ___ftadd@exp1:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x21
   759  000022                     	ds	1
   760  000023                     ___ftmul@exp:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x22
   764  000023                     	ds	1
   765  000024                     ___ftmul@f3_as_product:
   766                           	opt stack 0
   767                           
   768                           ; 3 bytes @ 0x23
   769  000024                     	ds	3
   770  000027                     ___ftmul@cntr:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x26
   774  000027                     	ds	1
   775  000028                     ___ftmul@sign:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x27
   779  000028                     	ds	1
   780  000029                     ?___ftdiv:
   781                           	opt stack 0
   782  000029                     ?___fttol:
   783                           	opt stack 0
   784  000029                     ___ftdiv@f1:
   785                           	opt stack 0
   786  000029                     ___fttol@f1:
   787                           	opt stack 0
   788                           
   789                           ; 3 bytes @ 0x28
   790  000029                     	ds	2
   791  00002B                     ??_sprintf:
   792                           
   793                           ; 1 bytes @ 0x2A
   794  00002B                     	ds	1
   795  00002C                     sprintf@ap:
   796                           	opt stack 0
   797  00002C                     ___ftdiv@f2:
   798                           	opt stack 0
   799                           
   800                           ; 3 bytes @ 0x2B
   801  00002C                     	ds	1
   802  00002D                     ??___fttol:
   803                           
   804                           ; 1 bytes @ 0x2C
   805  00002D                     	ds	1
   806  00002E                     sprintf@flag:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x2D
   810  00002E                     	ds	1
   811  00002F                     ??___ftdiv:
   812  00002F                     sprintf@prec:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x2E
   816  00002F                     	ds	1
   817  000030                     sprintf@val:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x2F
   821  000030                     	ds	2
   822  000032                     sprintf@c:
   823                           	opt stack 0
   824  000032                     ___ftdiv@cntr:
   825                           	opt stack 0
   826  000032                     ___fttol@sign1:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x31
   830  000032                     	ds	1
   831  000033                     ___ftdiv@f3:
   832                           	opt stack 0
   833  000033                     ___fttol@lval:
   834                           	opt stack 0
   835                           
   836                           ; 4 bytes @ 0x32
   837  000033                     	ds	3
   838  000036                     ___ftdiv@exp:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x35
   842  000036                     	ds	1
   843  000037                     ___ftdiv@sign:
   844                           	opt stack 0
   845  000037                     ___fttol@exp1:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x36
   849  000037                     	ds	1
   850  000038                     ?___altoft:
   851                           	opt stack 0
   852  000038                     convert@i:
   853                           	opt stack 0
   854  000038                     ___altoft@c:
   855                           	opt stack 0
   856                           
   857                           ; 4 bytes @ 0x37
   858  000038                     	ds	4
   859  00003C                     ??___altoft:
   860                           
   861                           ; 1 bytes @ 0x3B
   862  00003C                     	ds	4
   863  000040                     ___altoft@exp:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x3F
   867  000040                     	ds	1
   868  000041                     ___altoft@sign:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x40
   872  000041                     	ds	1
   873  000042                     tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           postdec1	equ	0xFE5
   880                           fsr1l	equ	0xFE1
   881                           
   882                           ; 1 bytes @ 0x41
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 21 in file "exercicio_PIC_LCD_AD.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         0       0       0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0       0       0
   904 ;;      Temps:          0       2       0       0       0       0       0       0       0
   905 ;;      Totals:         0       2       0       0       0       0       0       0       0
   906 ;;Total ram usage:        2 bytes
   907 ;; Hardware stack levels required when called:    6
   908 ;; This function calls:
   909 ;;		_WriteCmdXLCD
   910 ;;		_checa_botao
   911 ;;		_convert
   912 ;;		_exibir_lcd
   913 ;;		_init_ADC
   914 ;;		_init_XLCD
   915 ;;		_pisca_cursor
   916 ;;		_tratar_relogio
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text0
   923  001BC4                     __ptext0:
   924                           	opt stack 0
   925  001BC4                     _main:
   926                           	opt stack 25
   927                           
   928                           ;exercicio_PIC_LCD_AD.c: 23: Relogio.segundo=0;
   929                           
   930                           ; BSR set to: 0
   931                           ;incstack = 0
   932  001BC4  0E00               	movlw	0
   933  001BC6  6E4D               	movwf	_Relogio+3,c
   934  001BC8  0E00               	movlw	0
   935  001BCA  6E4C               	movwf	_Relogio+2,c
   936                           
   937                           ;exercicio_PIC_LCD_AD.c: 24: Relogio.minuto=0;
   938  001BCC  0E00               	movlw	0
   939  001BCE  6E4B               	movwf	_Relogio+1,c
   940  001BD0  0E00               	movlw	0
   941  001BD2  6E4A               	movwf	_Relogio,c
   942                           
   943                           ;exercicio_PIC_LCD_AD.c: 25: Relogio.hora=0;
   944  001BD4  0E00               	movlw	0
   945  001BD6  6E4F               	movwf	_Relogio+5,c
   946  001BD8  0E00               	movlw	0
   947  001BDA  6E4E               	movwf	_Relogio+4,c
   948                           
   949                           ;exercicio_PIC_LCD_AD.c: 27: Despertador.segundo=5;
   950  001BDC  0E00               	movlw	0
   951  001BDE  0100               	movlb	0	; () banked
   952  001BE0  6FC3               	movwf	(_Despertador+3)& (0+255),b
   953  001BE2  0E05               	movlw	5
   954  001BE4  6FC2               	movwf	(_Despertador+2)& (0+255),b
   955                           
   956                           ;exercicio_PIC_LCD_AD.c: 28: Despertador.minuto=0;
   957  001BE6  0E00               	movlw	0
   958  001BE8  0100               	movlb	0	; () banked
   959  001BEA  6FC1               	movwf	(_Despertador+1)& (0+255),b
   960  001BEC  0E00               	movlw	0
   961  001BEE  6FC0               	movwf	_Despertador& (0+255),b
   962                           
   963                           ;exercicio_PIC_LCD_AD.c: 29: Despertador.hora=0;
   964  001BF0  0E00               	movlw	0
   965  001BF2  0100               	movlb	0	; () banked
   966  001BF4  6FC5               	movwf	(_Despertador+5)& (0+255),b
   967  001BF6  0E00               	movlw	0
   968  001BF8  6FC4               	movwf	(_Despertador+4)& (0+255),b
   969                           
   970                           ;exercicio_PIC_LCD_AD.c: 31: Calendario.dia=1;
   971  001BFA  0E00               	movlw	0
   972  001BFC  0100               	movlb	0	; () banked
   973  001BFE  6FBB               	movwf	(_Calendario+1)& (0+255),b
   974  001C00  0E01               	movlw	1
   975  001C02  6FBA               	movwf	_Calendario& (0+255),b
   976                           
   977                           ;exercicio_PIC_LCD_AD.c: 32: Calendario.mes=1;
   978  001C04  0E00               	movlw	0
   979  001C06  0100               	movlb	0	; () banked
   980  001C08  6FBD               	movwf	(_Calendario+3)& (0+255),b
   981  001C0A  0E01               	movlw	1
   982  001C0C  6FBC               	movwf	(_Calendario+2)& (0+255),b
   983                           
   984                           ;exercicio_PIC_LCD_AD.c: 33: Calendario.ano=19;
   985  001C0E  0E00               	movlw	0
   986  001C10  0100               	movlb	0	; () banked
   987  001C12  6FBF               	movwf	(_Calendario+5)& (0+255),b
   988  001C14  0E13               	movlw	19
   989  001C16  6FBE               	movwf	(_Calendario+4)& (0+255),b
   990                           
   991                           ; BSR set to: 0
   992                           ;exercicio_PIC_LCD_AD.c: 35: T0CONbits.TMR0ON=1;
   993  001C18  8ED5               	bsf	4053,7,c	;volatile
   994                           
   995                           ; BSR set to: 0
   996                           ;exercicio_PIC_LCD_AD.c: 37: INTCONbits.TMR0IE=1;
   997  001C1A  8AF2               	bsf	intcon,5,c	;volatile
   998                           
   999                           ; BSR set to: 0
  1000                           ;exercicio_PIC_LCD_AD.c: 38: INTCONbits.TMR0IF=0;
  1001  001C1C  94F2               	bcf	intcon,2,c	;volatile
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;exercicio_PIC_LCD_AD.c: 41: T0CONbits.T08BIT=0;
  1005  001C1E  9CD5               	bcf	4053,6,c	;volatile
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;exercicio_PIC_LCD_AD.c: 42: T0CONbits.PSA=0;
  1009  001C20  96D5               	bcf	4053,3,c	;volatile
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;exercicio_PIC_LCD_AD.c: 43: T0CONbits.T0PS0=1;
  1013  001C22  80D5               	bsf	4053,0,c	;volatile
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;exercicio_PIC_LCD_AD.c: 44: T0CONbits.T0PS1=0;
  1017  001C24  92D5               	bcf	4053,1,c	;volatile
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;exercicio_PIC_LCD_AD.c: 45: T0CONbits.T0PS2=1;
  1021  001C26  84D5               	bsf	4053,2,c	;volatile
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;exercicio_PIC_LCD_AD.c: 46: T0CONbits.T0CS=0;
  1025  001C28  9AD5               	bcf	4053,5,c	;volatile
  1026                           
  1027                           ;exercicio_PIC_LCD_AD.c: 48: TMR0=2535;
  1028  001C2A  0E09               	movlw	9
  1029  001C2C  6ED7               	movwf	4055,c	;volatile
  1030  001C2E  0EE7               	movlw	231
  1031  001C30  6ED6               	movwf	4054,c	;volatile
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;exercicio_PIC_LCD_AD.c: 50: T0CONbits.TMR0ON=1;
  1035  001C32  8ED5               	bsf	4053,7,c	;volatile
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;exercicio_PIC_LCD_AD.c: 53: INTCONbits.GIEH=1;
  1039  001C34  8EF2               	bsf	intcon,7,c	;volatile
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;exercicio_PIC_LCD_AD.c: 54: INTCONbits.GIEL=1;
  1043  001C36  8CF2               	bsf	intcon,6,c	;volatile
  1044                           
  1045                           ;exercicio_PIC_LCD_AD.c: 58: RCSTA = 0b10010000;
  1046  001C38  0E90               	movlw	144
  1047  001C3A  6EAB               	movwf	4011,c	;volatile
  1048                           
  1049                           ;exercicio_PIC_LCD_AD.c: 59: TXSTA = 0b00100000;
  1050  001C3C  0E20               	movlw	32
  1051  001C3E  6EAC               	movwf	4012,c	;volatile
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;exercicio_PIC_LCD_AD.c: 60: TRISCbits.RC6 = 0;
  1055  001C40  9C94               	bcf	3988,6,c	;volatile
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;exercicio_PIC_LCD_AD.c: 61: TRISCbits.RC7 = 1;
  1059  001C42  8E94               	bsf	3988,7,c	;volatile
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;exercicio_PIC_LCD_AD.c: 63: RCIF = 0;
  1063  001C44  9A9E               	bcf	3998,5,c	;volatile
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;exercicio_PIC_LCD_AD.c: 64: RCIP = 0;
  1067  001C46  9A9F               	bcf	3999,5,c	;volatile
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;exercicio_PIC_LCD_AD.c: 65: RCIE = 1;
  1071  001C48  8A9D               	bsf	3997,5,c	;volatile
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;exercicio_PIC_LCD_AD.c: 66: PEIE = 1;
  1075  001C4A  8CF2               	bsf	intcon,6,c	;volatile
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;exercicio_PIC_LCD_AD.c: 69: init_XLCD();
  1079  001C4C  ECB4  F016         	call	_init_XLCD	;wreg free
  1080                           
  1081                           ;exercicio_PIC_LCD_AD.c: 70: init_ADC();
  1082  001C50  ECF6  F016         	call	_init_ADC	;wreg free
  1083                           
  1084                           ;exercicio_PIC_LCD_AD.c: 75: TRISAbits.TRISA1=0;
  1085  001C54  9292               	bcf	3986,1,c	;volatile
  1086                           
  1087                           ;exercicio_PIC_LCD_AD.c: 76: TRISAbits.TRISA2=0;
  1088  001C56  9492               	bcf	3986,2,c	;volatile
  1089                           
  1090                           ;exercicio_PIC_LCD_AD.c: 79: TRISB=0x00;
  1091  001C58  0E00               	movlw	0
  1092  001C5A  6E93               	movwf	3987,c	;volatile
  1093                           
  1094                           ;exercicio_PIC_LCD_AD.c: 82: TRISDbits.TRISD0=1;
  1095  001C5C  8095               	bsf	3989,0,c	;volatile
  1096                           
  1097                           ;exercicio_PIC_LCD_AD.c: 83: TRISDbits.TRISD1=1;
  1098  001C5E  8295               	bsf	3989,1,c	;volatile
  1099                           
  1100                           ;exercicio_PIC_LCD_AD.c: 84: TRISDbits.TRISD2=1;
  1101  001C60  8495               	bsf	3989,2,c	;volatile
  1102                           
  1103                           ;exercicio_PIC_LCD_AD.c: 85: TRISDbits.TRISD3=1;
  1104  001C62  8695               	bsf	3989,3,c	;volatile
  1105  001C64                     l4113:
  1106                           
  1107                           ;exercicio_PIC_LCD_AD.c: 88: checa_botao(&Relogio, &Despertador, &Calendario);
  1108  001C64  0E4A               	movlw	low _Relogio
  1109  001C66  6E13               	movwf	checa_botao@Relogio,c
  1110  001C68  0E00               	movlw	high _Relogio
  1111  001C6A  6E14               	movwf	checa_botao@Relogio+1,c
  1112  001C6C  0EC0               	movlw	low _Despertador
  1113  001C6E  6E15               	movwf	checa_botao@Despertador,c
  1114  001C70  0E00               	movlw	high _Despertador
  1115  001C72  6E16               	movwf	checa_botao@Despertador+1,c
  1116  001C74  0EBA               	movlw	low _Calendario
  1117  001C76  6E17               	movwf	checa_botao@Calendario,c
  1118  001C78  0E00               	movlw	high _Calendario
  1119  001C7A  6E18               	movwf	checa_botao@Calendario+1,c
  1120  001C7C  EC41  F004         	call	_checa_botao	;wreg free
  1121                           
  1122                           ;exercicio_PIC_LCD_AD.c: 89: convert();
  1123  001C80  ECE9  F013         	call	_convert	;wreg free
  1124                           
  1125                           ;exercicio_PIC_LCD_AD.c: 94: if(flag_time==1){
  1126  001C84  0449               	decf	_flag_time,w,c
  1127  001C86  A4D8               	btfss	status,2,c
  1128  001C88  D03B               	goto	l4139
  1129                           
  1130                           ;exercicio_PIC_LCD_AD.c: 95: tratar_relogio(&Relogio, &Calendario);
  1131  001C8A  0E4A               	movlw	low _Relogio
  1132  001C8C  6E0F               	movwf	tratar_relogio@Relogio,c
  1133  001C8E  0E00               	movlw	high _Relogio
  1134  001C90  6E10               	movwf	tratar_relogio@Relogio+1,c
  1135  001C92  0EBA               	movlw	low _Calendario
  1136  001C94  6E11               	movwf	tratar_relogio@Calendario,c
  1137  001C96  0E00               	movlw	high _Calendario
  1138  001C98  6E12               	movwf	tratar_relogio@Calendario+1,c
  1139  001C9A  EC65  F00B         	call	_tratar_relogio	;wreg free
  1140                           
  1141                           ;exercicio_PIC_LCD_AD.c: 98: WriteCmdXLCD(0x0C);
  1142  001C9E  0E0C               	movlw	12
  1143  001CA0  EC35  F016         	call	_WriteCmdXLCD
  1144                           
  1145                           ;exercicio_PIC_LCD_AD.c: 99: exibir_lcd(&Relogio, &Despertador, &Calendario);
  1146  001CA4  0E4A               	movlw	low _Relogio
  1147  001CA6  0100               	movlb	0	; () banked
  1148  001CA8  6F75               	movwf	exibir_lcd@Relogio& (0+255),b
  1149  001CAA  0E00               	movlw	high _Relogio
  1150  001CAC  0100               	movlb	0	; () banked
  1151  001CAE  6F76               	movwf	(exibir_lcd@Relogio+1)& (0+255),b
  1152  001CB0  0EC0               	movlw	low _Despertador
  1153  001CB2  0100               	movlb	0	; () banked
  1154  001CB4  6F77               	movwf	exibir_lcd@Despertador& (0+255),b
  1155  001CB6  0E00               	movlw	high _Despertador
  1156  001CB8  0100               	movlb	0	; () banked
  1157  001CBA  6F78               	movwf	(exibir_lcd@Despertador+1)& (0+255),b
  1158  001CBC  0EBA               	movlw	low _Calendario
  1159  001CBE  0100               	movlb	0	; () banked
  1160  001CC0  6F79               	movwf	exibir_lcd@Calendario& (0+255),b
  1161  001CC2  0E00               	movlw	high _Calendario
  1162  001CC4  0100               	movlb	0	; () banked
  1163  001CC6  6F7A               	movwf	(exibir_lcd@Calendario+1)& (0+255),b
  1164  001CC8  ECDD  F007         	call	_exibir_lcd	;wreg free
  1165                           
  1166                           ;exercicio_PIC_LCD_AD.c: 100: WriteCmdXLCD(0x0F);
  1167  001CCC  0E0F               	movlw	15
  1168  001CCE  EC35  F016         	call	_WriteCmdXLCD
  1169                           
  1170                           ;exercicio_PIC_LCD_AD.c: 102: pisca_cursor();
  1171  001CD2  ECF8  F00F         	call	_pisca_cursor	;wreg free
  1172                           
  1173                           ;exercicio_PIC_LCD_AD.c: 105: PORTAbits.RA2=1;
  1174  001CD6  8480               	bsf	3968,2,c	;volatile
  1175                           
  1176                           ;exercicio_PIC_LCD_AD.c: 106: _delay((unsigned long)((70)*(20000000/4000.0)));
  1177  001CD8  0E02               	movlw	2
  1178  001CDA  0100               	movlb	0	; () banked
  1179  001CDC  6FA6               	movwf	(??_main+1)& (0+255),b
  1180  001CDE  0EC7               	movlw	199
  1181  001CE0  0100               	movlb	0	; () banked
  1182  001CE2  6FA5               	movwf	??_main& (0+255),b
  1183  001CE4  0E88               	movlw	136
  1184  001CE6                     u4907:
  1185  001CE6  2EE8               	decfsz	wreg,f,c
  1186  001CE8  D7FE               	bra	u4907
  1187  001CEA  2FA5               	decfsz	??_main& (0+255),f,b
  1188  001CEC  D7FC               	bra	u4907
  1189  001CEE  2FA6               	decfsz	(??_main+1)& (0+255),f,b
  1190  001CF0  D7FA               	bra	u4907
  1191  001CF2  F000               	nop	
  1192                           
  1193                           ;exercicio_PIC_LCD_AD.c: 107: PORTAbits.RA2=0;
  1194  001CF4  9480               	bcf	3968,2,c	;volatile
  1195                           
  1196                           ;exercicio_PIC_LCD_AD.c: 108: if(despertar==1) controle_tempo_despertar++;
  1197  001CF6  0448               	decf	_despertar,w,c
  1198  001CF8  A4D8               	btfss	status,2,c
  1199  001CFA  D002               	goto	l4139
  1200  001CFC  4A42               	infsnz	_controle_tempo_despertar,f,c
  1201  001CFE  2A43               	incf	_controle_tempo_despertar+1,f,c
  1202  001D00                     l4139:
  1203                           
  1204                           ;exercicio_PIC_LCD_AD.c: 109: }
  1205                           ;exercicio_PIC_LCD_AD.c: 112: if(Relogio.segundo==Despertador.segundo
  1206                           ;exercicio_PIC_LCD_AD.c: 113: && Relogio.minuto==Despertador.minuto
  1207                           ;exercicio_PIC_LCD_AD.c: 114: && Relogio.hora==Despertador.hora){
  1208  001D00  0100               	movlb	0	; () banked
  1209  001D02  51C2               	movf	(_Despertador+2)& (0+255),w,b
  1210  001D04  184C               	xorwf	_Relogio+2,w,c
  1211  001D06  E119               	bnz	l4147
  1212  001D08  0100               	movlb	0	; () banked
  1213  001D0A  51C3               	movf	(_Despertador+3)& (0+255),w,b
  1214  001D0C  184D               	xorwf	_Relogio+3,w,c
  1215  001D0E  A4D8               	btfss	status,2,c
  1216  001D10  D014               	goto	l4147
  1217                           
  1218                           ; BSR set to: 0
  1219  001D12  0100               	movlb	0	; () banked
  1220  001D14  51C0               	movf	_Despertador& (0+255),w,b
  1221  001D16  184A               	xorwf	_Relogio,w,c
  1222  001D18  E110               	bnz	l4147
  1223  001D1A  0100               	movlb	0	; () banked
  1224  001D1C  51C1               	movf	(_Despertador+1)& (0+255),w,b
  1225  001D1E  184B               	xorwf	_Relogio+1,w,c
  1226  001D20  A4D8               	btfss	status,2,c
  1227  001D22  D00B               	goto	l4147
  1228                           
  1229                           ; BSR set to: 0
  1230  001D24  0100               	movlb	0	; () banked
  1231  001D26  51C4               	movf	(_Despertador+4)& (0+255),w,b
  1232  001D28  184E               	xorwf	_Relogio+4,w,c
  1233  001D2A  E107               	bnz	l4147
  1234  001D2C  0100               	movlb	0	; () banked
  1235  001D2E  51C5               	movf	(_Despertador+5)& (0+255),w,b
  1236  001D30  184F               	xorwf	_Relogio+5,w,c
  1237  001D32  A4D8               	btfss	status,2,c
  1238  001D34  D002               	goto	l4147
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;exercicio_PIC_LCD_AD.c: 115: despertar=1;
  1242  001D36  0E01               	movlw	1
  1243  001D38  6E48               	movwf	_despertar,c
  1244  001D3A                     l4147:
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;exercicio_PIC_LCD_AD.c: 116: }
  1248                           ;exercicio_PIC_LCD_AD.c: 117: if(despertar==1 && controle_tempo_despertar<10){
  1249  001D3A  0448               	decf	_despertar,w,c
  1250  001D3C  A4D8               	btfss	status,2,c
  1251  001D3E  D008               	goto	l4153
  1252                           
  1253                           ; BSR set to: 0
  1254  001D40  BE43               	btfsc	_controle_tempo_despertar+1,7,c
  1255  001D42  D005               	goto	l4151
  1256  001D44  5043               	movf	_controle_tempo_despertar+1,w,c
  1257  001D46  E104               	bnz	l4153
  1258  001D48  0E0A               	movlw	10
  1259  001D4A  5C42               	subwf	_controle_tempo_despertar,w,c
  1260  001D4C  A0D8               	btfss	status,0,c
  1261  001D4E                     l4151:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;exercicio_PIC_LCD_AD.c: 118: PORTAbits.RA1=1;
  1265  001D4E  8280               	bsf	3968,1,c	;volatile
  1266  001D50                     l4153:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;exercicio_PIC_LCD_AD.c: 119: }
  1270                           ;exercicio_PIC_LCD_AD.c: 120: if(controle_tempo_despertar==10){
  1271  001D50  0E0A               	movlw	10
  1272  001D52  1842               	xorwf	_controle_tempo_despertar,w,c
  1273  001D54  1043               	iorwf	_controle_tempo_despertar+1,w,c
  1274  001D56  A4D8               	btfss	status,2,c
  1275  001D58  D785               	goto	l4113
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;exercicio_PIC_LCD_AD.c: 121: controle_tempo_despertar=0;
  1279  001D5A  0E00               	movlw	0
  1280  001D5C  6E43               	movwf	_controle_tempo_despertar+1,c
  1281  001D5E  0E00               	movlw	0
  1282  001D60  6E42               	movwf	_controle_tempo_despertar,c
  1283                           
  1284                           ;exercicio_PIC_LCD_AD.c: 122: despertar=0;
  1285  001D62  0E00               	movlw	0
  1286  001D64  6E48               	movwf	_despertar,c
  1287                           
  1288                           ; BSR set to: 0
  1289                           
  1290                           ; BSR set to: 0
  1291  001D66  D77E               	goto	l4113
  1292  001D68                     __end_of_main:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           intcon	equ	0xFF2
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           status	equ	0xFD8
  1304                           
  1305 ;; *************** function _tratar_relogio *****************
  1306 ;; Defined at:
  1307 ;;		line 3 in file "relogio.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  Relogio         2   14[COMRAM] PTR struct .
  1310 ;;		 -> Relogio(6), 
  1311 ;;  Calendario      2   16[COMRAM] PTR struct .
  1312 ;;		 -> Calendario(6), 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1324 ;;      Params:         4       0       0       0       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1326 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1327 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1328 ;;Total ram usage:       11 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text1
  1339  0016CA                     __ptext1:
  1340                           	opt stack 0
  1341  0016CA                     _tratar_relogio:
  1342                           	opt stack 29
  1343                           
  1344                           ;relogio.c: 5: Relogio->segundo++;
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;incstack = 0
  1348  0016CA  EE20 F002          	lfsr	2,2
  1349  0016CE  500F               	movf	tratar_relogio@Relogio,w,c
  1350  0016D0  26D9               	addwf	fsr2l,f,c
  1351  0016D2  5010               	movf	tratar_relogio@Relogio+1,w,c
  1352  0016D4  22DA               	addwfc	fsr2h,f,c
  1353  0016D6  2ADE               	incf	postinc2,f,c
  1354  0016D8  0E00               	movlw	0
  1355  0016DA  22DD               	addwfc	postdec2,f,c
  1356                           
  1357                           ;relogio.c: 7: if(Relogio->segundo>59){
  1358  0016DC  EE20 F002          	lfsr	2,2
  1359  0016E0  500F               	movf	tratar_relogio@Relogio,w,c
  1360  0016E2  26D9               	addwf	fsr2l,f,c
  1361  0016E4  5010               	movf	tratar_relogio@Relogio+1,w,c
  1362  0016E6  22DA               	addwfc	fsr2h,f,c
  1363  0016E8  0E01               	movlw	1
  1364  0016EA  BEDB               	btfsc	plusw2,7,c
  1365  0016EC  D018               	goto	l199
  1366  0016EE  0E01               	movlw	1
  1367  0016F0  50DB               	movf	plusw2,w,c
  1368  0016F2  E104               	bnz	u3950
  1369  0016F4  0E3C               	movlw	60
  1370  0016F6  5CDE               	subwf	postinc2,w,c
  1371  0016F8  A0D8               	btfss	status,0,c
  1372  0016FA  D011               	goto	l199
  1373  0016FC                     u3950:
  1374                           
  1375                           ;relogio.c: 8: Relogio->minuto++;
  1376  0016FC  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1377  001700  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1378  001704  2ADE               	incf	postinc2,f,c
  1379  001706  0E00               	movlw	0
  1380  001708  22DD               	addwfc	postdec2,f,c
  1381                           
  1382                           ;relogio.c: 9: Relogio->segundo=0;
  1383  00170A  EE20 F002          	lfsr	2,2
  1384  00170E  500F               	movf	tratar_relogio@Relogio,w,c
  1385  001710  26D9               	addwf	fsr2l,f,c
  1386  001712  5010               	movf	tratar_relogio@Relogio+1,w,c
  1387  001714  22DA               	addwfc	fsr2h,f,c
  1388  001716  0E00               	movlw	0
  1389  001718  6EDE               	movwf	postinc2,c
  1390  00171A  0E00               	movlw	0
  1391  00171C  6EDD               	movwf	postdec2,c
  1392  00171E                     l199:
  1393                           
  1394                           ;relogio.c: 10: }
  1395                           ;relogio.c: 11: if(Relogio->segundo<0){
  1396  00171E  EE20 F002          	lfsr	2,2
  1397  001722  500F               	movf	tratar_relogio@Relogio,w,c
  1398  001724  26D9               	addwf	fsr2l,f,c
  1399  001726  5010               	movf	tratar_relogio@Relogio+1,w,c
  1400  001728  22DA               	addwfc	fsr2h,f,c
  1401  00172A  0E01               	movlw	1
  1402  00172C  AEDB               	btfss	plusw2,7,c
  1403  00172E  D011               	goto	l200
  1404                           
  1405                           ;relogio.c: 12: Relogio->segundo=59;
  1406  001730  EE20 F002          	lfsr	2,2
  1407  001734  500F               	movf	tratar_relogio@Relogio,w,c
  1408  001736  26D9               	addwf	fsr2l,f,c
  1409  001738  5010               	movf	tratar_relogio@Relogio+1,w,c
  1410  00173A  22DA               	addwfc	fsr2h,f,c
  1411  00173C  0E3B               	movlw	59
  1412  00173E  6EDE               	movwf	postinc2,c
  1413  001740  0E00               	movlw	0
  1414  001742  6EDD               	movwf	postdec2,c
  1415                           
  1416                           ;relogio.c: 13: Relogio->minuto--;
  1417  001744  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1418  001748  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1419  00174C  06DE               	decf	postinc2,f,c
  1420  00174E  0E00               	movlw	0
  1421  001750  5ADD               	subwfb	postdec2,f,c
  1422  001752                     l200:
  1423                           
  1424                           ;relogio.c: 14: }
  1425                           ;relogio.c: 16: if(Relogio->minuto>59){
  1426  001752  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1427  001756  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1428  00175A  0E01               	movlw	1
  1429  00175C  BEDB               	btfsc	plusw2,7,c
  1430  00175E  D018               	goto	l3487
  1431  001760  0E01               	movlw	1
  1432  001762  50DB               	movf	plusw2,w,c
  1433  001764  E104               	bnz	u3970
  1434  001766  0E3C               	movlw	60
  1435  001768  5CDE               	subwf	postinc2,w,c
  1436  00176A  A0D8               	btfss	status,0,c
  1437  00176C  D011               	goto	l3487
  1438  00176E                     u3970:
  1439                           
  1440                           ;relogio.c: 17: Relogio->hora++;
  1441  00176E  EE20 F004          	lfsr	2,4
  1442  001772  500F               	movf	tratar_relogio@Relogio,w,c
  1443  001774  26D9               	addwf	fsr2l,f,c
  1444  001776  5010               	movf	tratar_relogio@Relogio+1,w,c
  1445  001778  22DA               	addwfc	fsr2h,f,c
  1446  00177A  2ADE               	incf	postinc2,f,c
  1447  00177C  0E00               	movlw	0
  1448  00177E  22DD               	addwfc	postdec2,f,c
  1449                           
  1450                           ;relogio.c: 18: Relogio->minuto=0;
  1451  001780  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1452  001784  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1453  001788  0E00               	movlw	0
  1454  00178A  6EDE               	movwf	postinc2,c
  1455  00178C  0E00               	movlw	0
  1456  00178E  6EDD               	movwf	postdec2,c
  1457  001790                     l3487:
  1458                           
  1459                           ;relogio.c: 19: }
  1460                           ;relogio.c: 20: if(Relogio->minuto<0){
  1461  001790  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1462  001794  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1463  001798  0E01               	movlw	1
  1464  00179A  AEDB               	btfss	plusw2,7,c
  1465  00179C  D011               	goto	l3493
  1466                           
  1467                           ;relogio.c: 21: Relogio->minuto=59;
  1468  00179E  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1469  0017A2  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1470  0017A6  0E3B               	movlw	59
  1471  0017A8  6EDE               	movwf	postinc2,c
  1472  0017AA  0E00               	movlw	0
  1473  0017AC  6EDD               	movwf	postdec2,c
  1474                           
  1475                           ;relogio.c: 22: Relogio->hora--;
  1476  0017AE  EE20 F004          	lfsr	2,4
  1477  0017B2  500F               	movf	tratar_relogio@Relogio,w,c
  1478  0017B4  26D9               	addwf	fsr2l,f,c
  1479  0017B6  5010               	movf	tratar_relogio@Relogio+1,w,c
  1480  0017B8  22DA               	addwfc	fsr2h,f,c
  1481  0017BA  06DE               	decf	postinc2,f,c
  1482  0017BC  0E00               	movlw	0
  1483  0017BE  5ADD               	subwfb	postdec2,f,c
  1484  0017C0                     l3493:
  1485                           
  1486                           ;relogio.c: 23: }
  1487                           ;relogio.c: 25: if(Relogio->hora>23){
  1488  0017C0  EE20 F004          	lfsr	2,4
  1489  0017C4  500F               	movf	tratar_relogio@Relogio,w,c
  1490  0017C6  26D9               	addwf	fsr2l,f,c
  1491  0017C8  5010               	movf	tratar_relogio@Relogio+1,w,c
  1492  0017CA  22DA               	addwfc	fsr2h,f,c
  1493  0017CC  0E01               	movlw	1
  1494  0017CE  BEDB               	btfsc	plusw2,7,c
  1495  0017D0  D018               	goto	l203
  1496  0017D2  0E01               	movlw	1
  1497  0017D4  50DB               	movf	plusw2,w,c
  1498  0017D6  E104               	bnz	u3990
  1499  0017D8  0E18               	movlw	24
  1500  0017DA  5CDE               	subwf	postinc2,w,c
  1501  0017DC  A0D8               	btfss	status,0,c
  1502  0017DE  D011               	goto	l203
  1503  0017E0                     u3990:
  1504                           
  1505                           ;relogio.c: 26: Calendario->dia++;
  1506  0017E0  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1507  0017E4  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1508  0017E8  2ADE               	incf	postinc2,f,c
  1509  0017EA  0E00               	movlw	0
  1510  0017EC  22DD               	addwfc	postdec2,f,c
  1511                           
  1512                           ;relogio.c: 27: Relogio->hora=0;
  1513  0017EE  EE20 F004          	lfsr	2,4
  1514  0017F2  500F               	movf	tratar_relogio@Relogio,w,c
  1515  0017F4  26D9               	addwf	fsr2l,f,c
  1516  0017F6  5010               	movf	tratar_relogio@Relogio+1,w,c
  1517  0017F8  22DA               	addwfc	fsr2h,f,c
  1518  0017FA  0E00               	movlw	0
  1519  0017FC  6EDE               	movwf	postinc2,c
  1520  0017FE  0E00               	movlw	0
  1521  001800  6EDD               	movwf	postdec2,c
  1522  001802                     l203:
  1523                           
  1524                           ;relogio.c: 28: }
  1525                           ;relogio.c: 29: if(Relogio->hora<0){
  1526  001802  EE20 F004          	lfsr	2,4
  1527  001806  500F               	movf	tratar_relogio@Relogio,w,c
  1528  001808  26D9               	addwf	fsr2l,f,c
  1529  00180A  5010               	movf	tratar_relogio@Relogio+1,w,c
  1530  00180C  22DA               	addwfc	fsr2h,f,c
  1531  00180E  0E01               	movlw	1
  1532  001810  AEDB               	btfss	plusw2,7,c
  1533  001812  D011               	goto	l3499
  1534                           
  1535                           ;relogio.c: 30: Relogio->hora=23;
  1536  001814  EE20 F004          	lfsr	2,4
  1537  001818  500F               	movf	tratar_relogio@Relogio,w,c
  1538  00181A  26D9               	addwf	fsr2l,f,c
  1539  00181C  5010               	movf	tratar_relogio@Relogio+1,w,c
  1540  00181E  22DA               	addwfc	fsr2h,f,c
  1541  001820  0E17               	movlw	23
  1542  001822  6EDE               	movwf	postinc2,c
  1543  001824  0E00               	movlw	0
  1544  001826  6EDD               	movwf	postdec2,c
  1545                           
  1546                           ;relogio.c: 31: Calendario->dia--;
  1547  001828  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1548  00182C  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1549  001830  06DE               	decf	postinc2,f,c
  1550  001832  0E00               	movlw	0
  1551  001834  5ADD               	subwfb	postdec2,f,c
  1552  001836                     l3499:
  1553                           
  1554                           ;relogio.c: 32: }
  1555                           ;relogio.c: 34: if(Calendario->dia>qtdDias_mes[Calendario->mes]){
  1556  001836  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1557  00183A  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1558  00183E  EE10 F002          	lfsr	1,2
  1559  001842  5011               	movf	tratar_relogio@Calendario,w,c
  1560  001844  26E1               	addwf	fsr1l,f,c
  1561  001846  5012               	movf	tratar_relogio@Calendario+1,w,c
  1562  001848  22E2               	addwfc	fsr1h,f,c
  1563  00184A  CFE6 F015          	movff	postinc1,??_tratar_relogio+2
  1564  00184E  CFE5 F016          	movff	postdec1,??_tratar_relogio+3
  1565  001852  90D8               	bcf	status,0,c
  1566  001854  3615               	rlcf	??_tratar_relogio+2,f,c
  1567  001856  3616               	rlcf	??_tratar_relogio+3,f,c
  1568  001858  0EC6               	movlw	low _qtdDias_mes
  1569  00185A  2415               	addwf	??_tratar_relogio+2,w,c
  1570  00185C  6EE1               	movwf	fsr1l,c
  1571  00185E  0E00               	movlw	high _qtdDias_mes
  1572  001860  2016               	addwfc	??_tratar_relogio+3,w,c
  1573  001862  6EE2               	movwf	fsr1h,c
  1574  001864  50DE               	movf	postinc2,w,c
  1575  001866  5CE6               	subwf	postinc1,w,c
  1576  001868  50E6               	movf	postinc1,w,c
  1577  00186A  0A80               	xorlw	128
  1578  00186C  6E19               	movwf	(??_tratar_relogio+6)& (0+255),c
  1579  00186E  50DE               	movf	postinc2,w,c
  1580  001870  0A80               	xorlw	128
  1581  001872  5819               	subwfb	(??_tratar_relogio+6)& (0+255),w,c
  1582  001874  B0D8               	btfsc	status,0,c
  1583  001876  D011               	goto	l3505
  1584                           
  1585                           ;relogio.c: 35: Calendario->mes++;
  1586  001878  EE20 F002          	lfsr	2,2
  1587  00187C  5011               	movf	tratar_relogio@Calendario,w,c
  1588  00187E  26D9               	addwf	fsr2l,f,c
  1589  001880  5012               	movf	tratar_relogio@Calendario+1,w,c
  1590  001882  22DA               	addwfc	fsr2h,f,c
  1591  001884  2ADE               	incf	postinc2,f,c
  1592  001886  0E00               	movlw	0
  1593  001888  22DD               	addwfc	postdec2,f,c
  1594                           
  1595                           ;relogio.c: 36: Calendario->dia=1;
  1596  00188A  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1597  00188E  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1598  001892  0E01               	movlw	1
  1599  001894  6EDE               	movwf	postinc2,c
  1600  001896  0E00               	movlw	0
  1601  001898  6EDD               	movwf	postdec2,c
  1602  00189A                     l3505:
  1603                           
  1604                           ;relogio.c: 37: }
  1605                           ;relogio.c: 38: if(Calendario->dia<1){
  1606  00189A  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1607  00189E  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1608  0018A2  0E01               	movlw	1
  1609  0018A4  BEDB               	btfsc	plusw2,7,c
  1610  0018A6  D006               	goto	l3507
  1611  0018A8  0E01               	movlw	1
  1612  0018AA  50DB               	movf	plusw2,w,c
  1613  0018AC  E127               	bnz	l3511
  1614  0018AE  04DE               	decf	postinc2,w,c
  1615  0018B0  B0D8               	btfsc	status,0,c
  1616  0018B2  D024               	goto	l3511
  1617  0018B4                     l3507:
  1618                           
  1619                           ;relogio.c: 39: Calendario->mes--;
  1620  0018B4  EE20 F002          	lfsr	2,2
  1621  0018B8  5011               	movf	tratar_relogio@Calendario,w,c
  1622  0018BA  26D9               	addwf	fsr2l,f,c
  1623  0018BC  5012               	movf	tratar_relogio@Calendario+1,w,c
  1624  0018BE  22DA               	addwfc	fsr2h,f,c
  1625  0018C0  06DE               	decf	postinc2,f,c
  1626  0018C2  0E00               	movlw	0
  1627  0018C4  5ADD               	subwfb	postdec2,f,c
  1628                           
  1629                           ;relogio.c: 40: Calendario->dia=qtdDias_mes[Calendario->mes];
  1630  0018C6  EE20 F002          	lfsr	2,2
  1631  0018CA  5011               	movf	tratar_relogio@Calendario,w,c
  1632  0018CC  26D9               	addwf	fsr2l,f,c
  1633  0018CE  5012               	movf	tratar_relogio@Calendario+1,w,c
  1634  0018D0  22DA               	addwfc	fsr2h,f,c
  1635  0018D2  CFDE F013          	movff	postinc2,??_tratar_relogio
  1636  0018D6  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1637  0018DA  90D8               	bcf	status,0,c
  1638  0018DC  3613               	rlcf	??_tratar_relogio,f,c
  1639  0018DE  3614               	rlcf	??_tratar_relogio+1,f,c
  1640  0018E0  0EC6               	movlw	low _qtdDias_mes
  1641  0018E2  2413               	addwf	??_tratar_relogio,w,c
  1642  0018E4  6ED9               	movwf	fsr2l,c
  1643  0018E6  0E00               	movlw	high _qtdDias_mes
  1644  0018E8  2014               	addwfc	??_tratar_relogio+1,w,c
  1645  0018EA  6EDA               	movwf	fsr2h,c
  1646  0018EC  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1647  0018F0  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1648  0018F4  CFDE FFE6          	movff	postinc2,postinc1
  1649  0018F8  CFDD FFE5          	movff	postdec2,postdec1
  1650  0018FC                     l3511:
  1651                           
  1652                           ;relogio.c: 41: }
  1653                           ;relogio.c: 43: if(Calendario->mes>12){
  1654  0018FC  EE20 F002          	lfsr	2,2
  1655  001900  5011               	movf	tratar_relogio@Calendario,w,c
  1656  001902  26D9               	addwf	fsr2l,f,c
  1657  001904  5012               	movf	tratar_relogio@Calendario+1,w,c
  1658  001906  22DA               	addwfc	fsr2h,f,c
  1659  001908  0E01               	movlw	1
  1660  00190A  BEDB               	btfsc	plusw2,7,c
  1661  00190C  D01A               	goto	l207
  1662  00190E  0E01               	movlw	1
  1663  001910  50DB               	movf	plusw2,w,c
  1664  001912  E104               	bnz	u4030
  1665  001914  0E0D               	movlw	13
  1666  001916  5CDE               	subwf	postinc2,w,c
  1667  001918  A0D8               	btfss	status,0,c
  1668  00191A  D013               	goto	l207
  1669  00191C                     u4030:
  1670                           
  1671                           ;relogio.c: 44: Calendario->ano++;
  1672  00191C  EE20 F004          	lfsr	2,4
  1673  001920  5011               	movf	tratar_relogio@Calendario,w,c
  1674  001922  26D9               	addwf	fsr2l,f,c
  1675  001924  5012               	movf	tratar_relogio@Calendario+1,w,c
  1676  001926  22DA               	addwfc	fsr2h,f,c
  1677  001928  2ADE               	incf	postinc2,f,c
  1678  00192A  0E00               	movlw	0
  1679  00192C  22DD               	addwfc	postdec2,f,c
  1680                           
  1681                           ;relogio.c: 45: Calendario->mes=1;
  1682  00192E  EE20 F002          	lfsr	2,2
  1683  001932  5011               	movf	tratar_relogio@Calendario,w,c
  1684  001934  26D9               	addwf	fsr2l,f,c
  1685  001936  5012               	movf	tratar_relogio@Calendario+1,w,c
  1686  001938  22DA               	addwfc	fsr2h,f,c
  1687  00193A  0E01               	movlw	1
  1688  00193C  6EDE               	movwf	postinc2,c
  1689  00193E  0E00               	movlw	0
  1690  001940  6EDD               	movwf	postdec2,c
  1691  001942                     l207:
  1692                           
  1693                           ;relogio.c: 46: }
  1694                           ;relogio.c: 47: if(Calendario->mes<1){
  1695  001942  EE20 F002          	lfsr	2,2
  1696  001946  5011               	movf	tratar_relogio@Calendario,w,c
  1697  001948  26D9               	addwf	fsr2l,f,c
  1698  00194A  5012               	movf	tratar_relogio@Calendario+1,w,c
  1699  00194C  22DA               	addwfc	fsr2h,f,c
  1700  00194E  0E01               	movlw	1
  1701  001950  BEDB               	btfsc	plusw2,7,c
  1702  001952  D006               	goto	l3515
  1703  001954  0E01               	movlw	1
  1704  001956  50DB               	movf	plusw2,w,c
  1705  001958  E131               	bnz	l3521
  1706  00195A  04DE               	decf	postinc2,w,c
  1707  00195C  B0D8               	btfsc	status,0,c
  1708  00195E  D02E               	goto	l3521
  1709  001960                     l3515:
  1710                           
  1711                           ;relogio.c: 48: Calendario->mes=12;
  1712  001960  EE20 F002          	lfsr	2,2
  1713  001964  5011               	movf	tratar_relogio@Calendario,w,c
  1714  001966  26D9               	addwf	fsr2l,f,c
  1715  001968  5012               	movf	tratar_relogio@Calendario+1,w,c
  1716  00196A  22DA               	addwfc	fsr2h,f,c
  1717  00196C  0E0C               	movlw	12
  1718  00196E  6EDE               	movwf	postinc2,c
  1719  001970  0E00               	movlw	0
  1720  001972  6EDD               	movwf	postdec2,c
  1721                           
  1722                           ;relogio.c: 49: Calendario->dia=qtdDias_mes[Calendario->mes];
  1723  001974  EE20 F002          	lfsr	2,2
  1724  001978  5011               	movf	tratar_relogio@Calendario,w,c
  1725  00197A  26D9               	addwf	fsr2l,f,c
  1726  00197C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1727  00197E  22DA               	addwfc	fsr2h,f,c
  1728  001980  CFDE F013          	movff	postinc2,??_tratar_relogio
  1729  001984  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1730  001988  90D8               	bcf	status,0,c
  1731  00198A  3613               	rlcf	??_tratar_relogio,f,c
  1732  00198C  3614               	rlcf	??_tratar_relogio+1,f,c
  1733  00198E  0EC6               	movlw	low _qtdDias_mes
  1734  001990  2413               	addwf	??_tratar_relogio,w,c
  1735  001992  6ED9               	movwf	fsr2l,c
  1736  001994  0E00               	movlw	high _qtdDias_mes
  1737  001996  2014               	addwfc	??_tratar_relogio+1,w,c
  1738  001998  6EDA               	movwf	fsr2h,c
  1739  00199A  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1740  00199E  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1741  0019A2  CFDE FFE6          	movff	postinc2,postinc1
  1742  0019A6  CFDD FFE5          	movff	postdec2,postdec1
  1743                           
  1744                           ;relogio.c: 50: Calendario->ano--;
  1745  0019AA  EE20 F004          	lfsr	2,4
  1746  0019AE  5011               	movf	tratar_relogio@Calendario,w,c
  1747  0019B0  26D9               	addwf	fsr2l,f,c
  1748  0019B2  5012               	movf	tratar_relogio@Calendario+1,w,c
  1749  0019B4  22DA               	addwfc	fsr2h,f,c
  1750  0019B6  06DE               	decf	postinc2,f,c
  1751  0019B8  0E00               	movlw	0
  1752  0019BA  5ADD               	subwfb	postdec2,f,c
  1753  0019BC                     l3521:
  1754                           
  1755                           ;relogio.c: 51: }
  1756                           ;relogio.c: 53: if(Calendario->ano>=100){
  1757  0019BC  EE20 F004          	lfsr	2,4
  1758  0019C0  5011               	movf	tratar_relogio@Calendario,w,c
  1759  0019C2  26D9               	addwf	fsr2l,f,c
  1760  0019C4  5012               	movf	tratar_relogio@Calendario+1,w,c
  1761  0019C6  22DA               	addwfc	fsr2h,f,c
  1762  0019C8  0E01               	movlw	1
  1763  0019CA  BEDB               	btfsc	plusw2,7,c
  1764  0019CC  D011               	goto	l209
  1765  0019CE  0E01               	movlw	1
  1766  0019D0  50DB               	movf	plusw2,w,c
  1767  0019D2  E104               	bnz	u4050
  1768  0019D4  0E64               	movlw	100
  1769  0019D6  5CDE               	subwf	postinc2,w,c
  1770  0019D8  A0D8               	btfss	status,0,c
  1771  0019DA  D00A               	goto	l209
  1772  0019DC                     u4050:
  1773                           
  1774                           ;relogio.c: 54: Calendario->ano=00;
  1775  0019DC  EE20 F004          	lfsr	2,4
  1776  0019E0  5011               	movf	tratar_relogio@Calendario,w,c
  1777  0019E2  26D9               	addwf	fsr2l,f,c
  1778  0019E4  5012               	movf	tratar_relogio@Calendario+1,w,c
  1779  0019E6  22DA               	addwfc	fsr2h,f,c
  1780  0019E8  0E00               	movlw	0
  1781  0019EA  6EDE               	movwf	postinc2,c
  1782  0019EC  0E00               	movlw	0
  1783  0019EE  6EDD               	movwf	postdec2,c
  1784  0019F0                     l209:
  1785                           
  1786                           ;relogio.c: 55: }
  1787                           ;relogio.c: 56: if(Calendario->ano<0){
  1788  0019F0  EE20 F004          	lfsr	2,4
  1789  0019F4  5011               	movf	tratar_relogio@Calendario,w,c
  1790  0019F6  26D9               	addwf	fsr2l,f,c
  1791  0019F8  5012               	movf	tratar_relogio@Calendario+1,w,c
  1792  0019FA  22DA               	addwfc	fsr2h,f,c
  1793  0019FC  0E01               	movlw	1
  1794  0019FE  AEDB               	btfss	plusw2,7,c
  1795  001A00  0012               	return	
  1796                           
  1797                           ;relogio.c: 57: Calendario->ano=99;
  1798  001A02  EE20 F004          	lfsr	2,4
  1799  001A06  5011               	movf	tratar_relogio@Calendario,w,c
  1800  001A08  26D9               	addwf	fsr2l,f,c
  1801  001A0A  5012               	movf	tratar_relogio@Calendario+1,w,c
  1802  001A0C  22DA               	addwfc	fsr2h,f,c
  1803  001A0E  0E63               	movlw	99
  1804  001A10  6EDE               	movwf	postinc2,c
  1805  001A12  0E00               	movlw	0
  1806  001A14  6EDD               	movwf	postdec2,c
  1807  001A16  0012               	return	
  1808  001A18                     __end_of_tratar_relogio:
  1809                           	opt stack 0
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           intcon	equ	0xFF2
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           postinc1	equ	0xFE6
  1818                           postdec1	equ	0xFE5
  1819                           fsr1h	equ	0xFE2
  1820                           fsr1l	equ	0xFE1
  1821                           postinc2	equ	0xFDE
  1822                           postdec2	equ	0xFDD
  1823                           plusw2	equ	0xFDB
  1824                           fsr2h	equ	0xFDA
  1825                           fsr2l	equ	0xFD9
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _pisca_cursor *****************
  1829 ;; Defined at:
  1830 ;;		line 165 in file "display_LCD.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    4
  1851 ;; This function calls:
  1852 ;;		_SetDDRamAddr
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text2
  1859  001FF0                     __ptext2:
  1860                           	opt stack 0
  1861  001FF0                     _pisca_cursor:
  1862                           	opt stack 26
  1863                           
  1864                           ;display_LCD.c: 166: if(tela_exibida==0){
  1865                           
  1866                           ;incstack = 0
  1867  001FF0  0100               	movlb	0	; () banked
  1868  001FF2  51AE               	movf	_tela_exibida& (0+255),w,b
  1869  001FF4  0100               	movlb	0	; () banked
  1870  001FF6  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  1871  001FF8  A4D8               	btfss	status,2,c
  1872  001FFA  D05E               	goto	l3451
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;display_LCD.c: 167: if(cursor==0) SetDDRamAddr(0x06);
  1876  001FFC  5044               	movf	_cursor,w,c
  1877  001FFE  1045               	iorwf	_cursor+1,w,c
  1878  002000  A4D8               	btfss	status,2,c
  1879  002002  D003               	goto	l3407
  1880                           
  1881                           ; BSR set to: 0
  1882  002004  0E06               	movlw	6
  1883  002006  EC9F  F015         	call	_SetDDRamAddr
  1884  00200A                     l3407:
  1885                           
  1886                           ;display_LCD.c: 168: if(cursor==1) SetDDRamAddr(0x07);
  1887  00200A  0444               	decf	_cursor,w,c
  1888  00200C  1045               	iorwf	_cursor+1,w,c
  1889  00200E  A4D8               	btfss	status,2,c
  1890  002010  D003               	goto	l3411
  1891  002012  0E07               	movlw	7
  1892  002014  EC9F  F015         	call	_SetDDRamAddr
  1893  002018                     l3411:
  1894                           
  1895                           ;display_LCD.c: 169: if(cursor==2) SetDDRamAddr(0x09);
  1896  002018  0E02               	movlw	2
  1897  00201A  1844               	xorwf	_cursor,w,c
  1898  00201C  1045               	iorwf	_cursor+1,w,c
  1899  00201E  A4D8               	btfss	status,2,c
  1900  002020  D003               	goto	l3415
  1901  002022  0E09               	movlw	9
  1902  002024  EC9F  F015         	call	_SetDDRamAddr
  1903  002028                     l3415:
  1904                           
  1905                           ;display_LCD.c: 170: if(cursor==3) SetDDRamAddr(0x0A);
  1906  002028  0E03               	movlw	3
  1907  00202A  1844               	xorwf	_cursor,w,c
  1908  00202C  1045               	iorwf	_cursor+1,w,c
  1909  00202E  A4D8               	btfss	status,2,c
  1910  002030  D003               	goto	l3419
  1911  002032  0E0A               	movlw	10
  1912  002034  EC9F  F015         	call	_SetDDRamAddr
  1913  002038                     l3419:
  1914                           
  1915                           ;display_LCD.c: 171: if(cursor==4) SetDDRamAddr(0x0C);
  1916  002038  0E04               	movlw	4
  1917  00203A  1844               	xorwf	_cursor,w,c
  1918  00203C  1045               	iorwf	_cursor+1,w,c
  1919  00203E  A4D8               	btfss	status,2,c
  1920  002040  D003               	goto	l3423
  1921  002042  0E0C               	movlw	12
  1922  002044  EC9F  F015         	call	_SetDDRamAddr
  1923  002048                     l3423:
  1924                           
  1925                           ;display_LCD.c: 172: if(cursor==5) SetDDRamAddr(0x0D);
  1926  002048  0E05               	movlw	5
  1927  00204A  1844               	xorwf	_cursor,w,c
  1928  00204C  1045               	iorwf	_cursor+1,w,c
  1929  00204E  A4D8               	btfss	status,2,c
  1930  002050  D003               	goto	l3427
  1931  002052  0E0D               	movlw	13
  1932  002054  EC9F  F015         	call	_SetDDRamAddr
  1933  002058                     l3427:
  1934                           
  1935                           ;display_LCD.c: 173: if(cursor==6) SetDDRamAddr(0x46);
  1936  002058  0E06               	movlw	6
  1937  00205A  1844               	xorwf	_cursor,w,c
  1938  00205C  1045               	iorwf	_cursor+1,w,c
  1939  00205E  A4D8               	btfss	status,2,c
  1940  002060  D003               	goto	l3431
  1941  002062  0E46               	movlw	70
  1942  002064  EC9F  F015         	call	_SetDDRamAddr
  1943  002068                     l3431:
  1944                           
  1945                           ;display_LCD.c: 174: if(cursor==7) SetDDRamAddr(0x47);
  1946  002068  0E07               	movlw	7
  1947  00206A  1844               	xorwf	_cursor,w,c
  1948  00206C  1045               	iorwf	_cursor+1,w,c
  1949  00206E  A4D8               	btfss	status,2,c
  1950  002070  D003               	goto	l3435
  1951  002072  0E47               	movlw	71
  1952  002074  EC9F  F015         	call	_SetDDRamAddr
  1953  002078                     l3435:
  1954                           
  1955                           ;display_LCD.c: 175: if(cursor==8) SetDDRamAddr(0x49);
  1956  002078  0E08               	movlw	8
  1957  00207A  1844               	xorwf	_cursor,w,c
  1958  00207C  1045               	iorwf	_cursor+1,w,c
  1959  00207E  A4D8               	btfss	status,2,c
  1960  002080  D003               	goto	l3439
  1961  002082  0E49               	movlw	73
  1962  002084  EC9F  F015         	call	_SetDDRamAddr
  1963  002088                     l3439:
  1964                           
  1965                           ;display_LCD.c: 176: if(cursor==9) SetDDRamAddr(0x4A);
  1966  002088  0E09               	movlw	9
  1967  00208A  1844               	xorwf	_cursor,w,c
  1968  00208C  1045               	iorwf	_cursor+1,w,c
  1969  00208E  A4D8               	btfss	status,2,c
  1970  002090  D003               	goto	l3443
  1971  002092  0E4A               	movlw	74
  1972  002094  EC9F  F015         	call	_SetDDRamAddr
  1973  002098                     l3443:
  1974                           
  1975                           ;display_LCD.c: 177: if(cursor==10) SetDDRamAddr(0x4C);
  1976  002098  0E0A               	movlw	10
  1977  00209A  1844               	xorwf	_cursor,w,c
  1978  00209C  1045               	iorwf	_cursor+1,w,c
  1979  00209E  A4D8               	btfss	status,2,c
  1980  0020A0  D003               	goto	l3447
  1981  0020A2  0E4C               	movlw	76
  1982  0020A4  EC9F  F015         	call	_SetDDRamAddr
  1983  0020A8                     l3447:
  1984                           
  1985                           ;display_LCD.c: 178: if(cursor==11) SetDDRamAddr(0x4D);
  1986  0020A8  0E0B               	movlw	11
  1987  0020AA  1844               	xorwf	_cursor,w,c
  1988  0020AC  1045               	iorwf	_cursor+1,w,c
  1989  0020AE  A4D8               	btfss	status,2,c
  1990  0020B0  D003               	goto	l3451
  1991  0020B2  0E4D               	movlw	77
  1992  0020B4  EC9F  F015         	call	_SetDDRamAddr
  1993  0020B8                     l3451:
  1994                           
  1995                           ;display_LCD.c: 179: }
  1996                           ;display_LCD.c: 181: if(tela_exibida==1){
  1997  0020B8  0100               	movlb	0	; () banked
  1998  0020BA  05AE               	decf	_tela_exibida& (0+255),w,b
  1999  0020BC  0100               	movlb	0	; () banked
  2000  0020BE  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  2001  0020C0  A4D8               	btfss	status,2,c
  2002  0020C2  0012               	return	
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;display_LCD.c: 182: if(cursor==0) SetDDRamAddr(0x40);
  2006  0020C4  5044               	movf	_cursor,w,c
  2007  0020C6  1045               	iorwf	_cursor+1,w,c
  2008  0020C8  A4D8               	btfss	status,2,c
  2009  0020CA  D003               	goto	l3457
  2010                           
  2011                           ; BSR set to: 0
  2012  0020CC  0E40               	movlw	64
  2013  0020CE  EC9F  F015         	call	_SetDDRamAddr
  2014  0020D2                     l3457:
  2015                           
  2016                           ;display_LCD.c: 183: if(cursor==1) SetDDRamAddr(0x41);
  2017  0020D2  0444               	decf	_cursor,w,c
  2018  0020D4  1045               	iorwf	_cursor+1,w,c
  2019  0020D6  A4D8               	btfss	status,2,c
  2020  0020D8  D003               	goto	l3461
  2021  0020DA  0E41               	movlw	65
  2022  0020DC  EC9F  F015         	call	_SetDDRamAddr
  2023  0020E0                     l3461:
  2024                           
  2025                           ;display_LCD.c: 184: if(cursor==2) SetDDRamAddr(0x43);
  2026  0020E0  0E02               	movlw	2
  2027  0020E2  1844               	xorwf	_cursor,w,c
  2028  0020E4  1045               	iorwf	_cursor+1,w,c
  2029  0020E6  A4D8               	btfss	status,2,c
  2030  0020E8  D003               	goto	l3465
  2031  0020EA  0E43               	movlw	67
  2032  0020EC  EC9F  F015         	call	_SetDDRamAddr
  2033  0020F0                     l3465:
  2034                           
  2035                           ;display_LCD.c: 185: if(cursor==3) SetDDRamAddr(0x44);
  2036  0020F0  0E03               	movlw	3
  2037  0020F2  1844               	xorwf	_cursor,w,c
  2038  0020F4  1045               	iorwf	_cursor+1,w,c
  2039  0020F6  A4D8               	btfss	status,2,c
  2040  0020F8  D003               	goto	l3469
  2041  0020FA  0E44               	movlw	68
  2042  0020FC  EC9F  F015         	call	_SetDDRamAddr
  2043  002100                     l3469:
  2044                           
  2045                           ;display_LCD.c: 186: if(cursor==4) SetDDRamAddr(0x46);
  2046  002100  0E04               	movlw	4
  2047  002102  1844               	xorwf	_cursor,w,c
  2048  002104  1045               	iorwf	_cursor+1,w,c
  2049  002106  A4D8               	btfss	status,2,c
  2050  002108  D003               	goto	l3473
  2051  00210A  0E46               	movlw	70
  2052  00210C  EC9F  F015         	call	_SetDDRamAddr
  2053  002110                     l3473:
  2054                           
  2055                           ;display_LCD.c: 187: if(cursor==5) SetDDRamAddr(0x47);
  2056  002110  0E05               	movlw	5
  2057  002112  1844               	xorwf	_cursor,w,c
  2058  002114  1045               	iorwf	_cursor+1,w,c
  2059  002116  A4D8               	btfss	status,2,c
  2060  002118  0012               	return	
  2061  00211A  0E47               	movlw	71
  2062  00211C  EC9F  F015         	call	_SetDDRamAddr
  2063  002120  0012               	return	
  2064  002122                     __end_of_pisca_cursor:
  2065                           	opt stack 0
  2066                           tblptru	equ	0xFF8
  2067                           tblptrh	equ	0xFF7
  2068                           tblptrl	equ	0xFF6
  2069                           tablat	equ	0xFF5
  2070                           intcon	equ	0xFF2
  2071                           postinc0	equ	0xFEE
  2072                           wreg	equ	0xFE8
  2073                           postinc1	equ	0xFE6
  2074                           postdec1	equ	0xFE5
  2075                           fsr1h	equ	0xFE2
  2076                           fsr1l	equ	0xFE1
  2077                           postinc2	equ	0xFDE
  2078                           postdec2	equ	0xFDD
  2079                           plusw2	equ	0xFDB
  2080                           fsr2h	equ	0xFDA
  2081                           fsr2l	equ	0xFD9
  2082                           status	equ	0xFD8
  2083                           
  2084 ;; *************** function _init_XLCD *****************
  2085 ;; Defined at:
  2086 ;;		line 18 in file "display_LCD.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2100 ;;      Params:         0       0       0       0       0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2103 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    5
  2107 ;; This function calls:
  2108 ;;		_BusyXLCD
  2109 ;;		_OpenXLCD
  2110 ;;		_WriteCmdXLCD
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text3
  2117  002D68                     __ptext3:
  2118                           	opt stack 0
  2119  002D68                     _init_XLCD:
  2120                           	opt stack 25
  2121                           
  2122                           ;display_LCD.c: 19: OpenXLCD(0b00101100&0b00111000);
  2123                           
  2124                           ;incstack = 0
  2125  002D68  0E28               	movlw	40
  2126  002D6A  EC97  F013         	call	_OpenXLCD
  2127  002D6E                     l3155:
  2128  002D6E  EC73  F016         	call	_BusyXLCD	;wreg free
  2129  002D72  0900               	iorlw	0
  2130  002D74  A4D8               	btfss	status,2,c
  2131  002D76  D7FB               	goto	l3155
  2132                           
  2133                           ;display_LCD.c: 21: WriteCmdXLCD(0x06);
  2134  002D78  0E06               	movlw	6
  2135  002D7A  EC35  F016         	call	_WriteCmdXLCD
  2136                           
  2137                           ;display_LCD.c: 22: WriteCmdXLCD(0x0C);
  2138  002D7E  0E0C               	movlw	12
  2139  002D80  EC35  F016         	call	_WriteCmdXLCD
  2140  002D84  0012               	return		;funcret
  2141  002D86                     __end_of_init_XLCD:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           intcon	equ	0xFF2
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           postinc1	equ	0xFE6
  2151                           postdec1	equ	0xFE5
  2152                           fsr1h	equ	0xFE2
  2153                           fsr1l	equ	0xFE1
  2154                           postinc2	equ	0xFDE
  2155                           postdec2	equ	0xFDD
  2156                           plusw2	equ	0xFDB
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8
  2160                           
  2161 ;; *************** function _OpenXLCD *****************
  2162 ;; Defined at:
  2163 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  lcdtype         1    wreg     unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  lcdtype         1   19[COMRAM] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2177 ;;      Params:         0       0       0       0       0       0       0       0       0
  2178 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2180 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2181 ;;Total ram usage:        1 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    4
  2184 ;; This function calls:
  2185 ;;		_BusyXLCD
  2186 ;;		_Delay10KTCYx
  2187 ;;		_DelayPORXLCD
  2188 ;;		_SetDDRamAddr
  2189 ;;		_WriteCmdXLCD
  2190 ;; This function is called by:
  2191 ;;		_init_XLCD
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text4
  2196  00272E                     __ptext4:
  2197                           	opt stack 0
  2198  00272E                     _OpenXLCD:
  2199                           	opt stack 25
  2200                           
  2201                           ;incstack = 0
  2202                           ;OpenXLCD@lcdtype stored from wreg
  2203  00272E  6E14               	movwf	OpenXLCD@lcdtype,c
  2204  002730  0EF0               	movlw	240
  2205  002732  1681               	andwf	3969,f,c	;volatile
  2206  002734  0EF0               	movlw	240
  2207  002736  1693               	andwf	3987,f,c	;volatile
  2208  002738  9C93               	bcf	3987,6,c	;volatile
  2209  00273A  9A93               	bcf	3987,5,c	;volatile
  2210  00273C  9893               	bcf	3987,4,c	;volatile
  2211  00273E  9C8A               	bcf	3978,6,c	;volatile
  2212  002740  9A8A               	bcf	3978,5,c	;volatile
  2213  002742  988A               	bcf	3978,4,c	;volatile
  2214  002744  EC0A  F017         	call	_DelayPORXLCD	;wreg free
  2215  002748  0E30               	movlw	48
  2216  00274A  EC35  F016         	call	_WriteCmdXLCD
  2217  00274E  0E05               	movlw	5
  2218  002750  ECD0  F016         	call	_Delay10KTCYx
  2219  002754  0E30               	movlw	48
  2220  002756  EC35  F016         	call	_WriteCmdXLCD
  2221  00275A  0E01               	movlw	1
  2222  00275C  ECD0  F016         	call	_Delay10KTCYx
  2223  002760  0E32               	movlw	50
  2224  002762  EC35  F016         	call	_WriteCmdXLCD
  2225  002766                     l2943:
  2226  002766  EC73  F016         	call	_BusyXLCD	;wreg free
  2227  00276A  0900               	iorlw	0
  2228  00276C  A4D8               	btfss	status,2,c
  2229  00276E  D7FB               	goto	l2943
  2230  002770                     l2945:
  2231  002770  EC73  F016         	call	_BusyXLCD	;wreg free
  2232  002774  0900               	iorlw	0
  2233  002776  A4D8               	btfss	status,2,c
  2234  002778  D7FB               	goto	l2945
  2235  00277A  5014               	movf	OpenXLCD@lcdtype,w,c
  2236  00277C  EC35  F016         	call	_WriteCmdXLCD
  2237  002780                     l2949:
  2238  002780  EC73  F016         	call	_BusyXLCD	;wreg free
  2239  002784  0900               	iorlw	0
  2240  002786  A4D8               	btfss	status,2,c
  2241  002788  D7FB               	goto	l2949
  2242  00278A  0E08               	movlw	8
  2243  00278C  EC35  F016         	call	_WriteCmdXLCD
  2244  002790                     l2953:
  2245  002790  EC73  F016         	call	_BusyXLCD	;wreg free
  2246  002794  0900               	iorlw	0
  2247  002796  A4D8               	btfss	status,2,c
  2248  002798  D7FB               	goto	l2953
  2249  00279A  0E0F               	movlw	15
  2250  00279C  EC35  F016         	call	_WriteCmdXLCD
  2251  0027A0                     l2957:
  2252  0027A0  EC73  F016         	call	_BusyXLCD	;wreg free
  2253  0027A4  0900               	iorlw	0
  2254  0027A6  A4D8               	btfss	status,2,c
  2255  0027A8  D7FB               	goto	l2957
  2256  0027AA  0E01               	movlw	1
  2257  0027AC  EC35  F016         	call	_WriteCmdXLCD
  2258  0027B0                     l2961:
  2259  0027B0  EC73  F016         	call	_BusyXLCD	;wreg free
  2260  0027B4  0900               	iorlw	0
  2261  0027B6  A4D8               	btfss	status,2,c
  2262  0027B8  D7FB               	goto	l2961
  2263  0027BA  0E04               	movlw	4
  2264  0027BC  EC35  F016         	call	_WriteCmdXLCD
  2265  0027C0                     l2965:
  2266  0027C0  EC73  F016         	call	_BusyXLCD	;wreg free
  2267  0027C4  0900               	iorlw	0
  2268  0027C6  A4D8               	btfss	status,2,c
  2269  0027C8  D7FB               	goto	l2965
  2270  0027CA  0E80               	movlw	128
  2271  0027CC  EC9F  F015         	call	_SetDDRamAddr
  2272  0027D0  0012               	return	
  2273  0027D2                     __end_of_OpenXLCD:
  2274                           	opt stack 0
  2275                           tblptru	equ	0xFF8
  2276                           tblptrh	equ	0xFF7
  2277                           tblptrl	equ	0xFF6
  2278                           tablat	equ	0xFF5
  2279                           intcon	equ	0xFF2
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           postinc1	equ	0xFE6
  2283                           postdec1	equ	0xFE5
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           postinc2	equ	0xFDE
  2287                           postdec2	equ	0xFDD
  2288                           plusw2	equ	0xFDB
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8
  2292                           
  2293 ;; *************** function _WriteCmdXLCD *****************
  2294 ;; Defined at:
  2295 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  cmd             1    wreg     unsigned char 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  cmd             1   15[COMRAM] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0
  2310 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2312 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2313 ;;Total ram usage:        1 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    3
  2316 ;; This function calls:
  2317 ;;		_DelayFor18TCY
  2318 ;; This function is called by:
  2319 ;;		_init_XLCD
  2320 ;;		_main
  2321 ;;		_OpenXLCD
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text5
  2326  002C6A                     __ptext5:
  2327                           	opt stack 0
  2328  002C6A                     _WriteCmdXLCD:
  2329                           	opt stack 26
  2330                           
  2331                           ;incstack = 0
  2332                           ;WriteCmdXLCD@cmd stored from wreg
  2333  002C6A  6E10               	movwf	WriteCmdXLCD@cmd,c
  2334  002C6C  0EF0               	movlw	240
  2335  002C6E  1693               	andwf	3987,f,c	;volatile
  2336  002C70  0EF0               	movlw	240
  2337  002C72  1681               	andwf	3969,f,c	;volatile
  2338  002C74  3810               	swapf	WriteCmdXLCD@cmd,w,c
  2339  002C76  0B0F               	andlw	15
  2340  002C78  0B0F               	andlw	15
  2341  002C7A  1281               	iorwf	3969,f,c	;volatile
  2342  002C7C  9C8A               	bcf	3978,6,c	;volatile
  2343  002C7E  9A8A               	bcf	3978,5,c	;volatile
  2344  002C80  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  2345  002C84  888A               	bsf	3978,4,c	;volatile
  2346  002C86  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  2347  002C8A  988A               	bcf	3978,4,c	;volatile
  2348  002C8C  0EF0               	movlw	240
  2349  002C8E  1681               	andwf	3969,f,c	;volatile
  2350  002C90  5010               	movf	WriteCmdXLCD@cmd,w,c
  2351  002C92  0B0F               	andlw	15
  2352  002C94  1281               	iorwf	3969,f,c	;volatile
  2353  002C96  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  2354  002C9A  888A               	bsf	3978,4,c	;volatile
  2355  002C9C  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  2356  002CA0  988A               	bcf	3978,4,c	;volatile
  2357  002CA2  0E0F               	movlw	15
  2358  002CA4  1293               	iorwf	3987,f,c	;volatile
  2359  002CA6  0012               	return	
  2360  002CA8                     __end_of_WriteCmdXLCD:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           intcon	equ	0xFF2
  2367                           postinc0	equ	0xFEE
  2368                           wreg	equ	0xFE8
  2369                           postinc1	equ	0xFE6
  2370                           postdec1	equ	0xFE5
  2371                           fsr1h	equ	0xFE2
  2372                           fsr1l	equ	0xFE1
  2373                           postinc2	equ	0xFDE
  2374                           postdec2	equ	0xFDD
  2375                           plusw2	equ	0xFDB
  2376                           fsr2h	equ	0xFDA
  2377                           fsr2l	equ	0xFD9
  2378                           status	equ	0xFD8
  2379                           
  2380 ;; *************** function _DelayPORXLCD *****************
  2381 ;; Defined at:
  2382 ;;		line 7 in file "display_LCD.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0
  2397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2399 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2400 ;;Total ram usage:        0 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    2
  2403 ;; This function calls:
  2404 ;;		_Delay1KTCYx
  2405 ;; This function is called by:
  2406 ;;		_OpenXLCD
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text6
  2411  002E14                     __ptext6:
  2412                           	opt stack 0
  2413  002E14                     _DelayPORXLCD:
  2414                           	opt stack 26
  2415                           
  2416                           ;display_LCD.c: 8: Delay1KTCYx(180);
  2417                           
  2418                           ;incstack = 0
  2419  002E14  0EB4               	movlw	180
  2420  002E16  ECE6  F016         	call	_Delay1KTCYx
  2421  002E1A  0012               	return	
  2422  002E1C                     __end_of_DelayPORXLCD:
  2423                           	opt stack 0
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           intcon	equ	0xFF2
  2429                           postinc0	equ	0xFEE
  2430                           wreg	equ	0xFE8
  2431                           postinc1	equ	0xFE6
  2432                           postdec1	equ	0xFE5
  2433                           fsr1h	equ	0xFE2
  2434                           fsr1l	equ	0xFE1
  2435                           postinc2	equ	0xFDE
  2436                           postdec2	equ	0xFDD
  2437                           plusw2	equ	0xFDB
  2438                           fsr2h	equ	0xFDA
  2439                           fsr2l	equ	0xFD9
  2440                           status	equ	0xFD8
  2441                           
  2442 ;; *************** function _Delay1KTCYx *****************
  2443 ;; Defined at:
  2444 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  unit            1    wreg     unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  unit            1   14[COMRAM] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0
  2459 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2461 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        1 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    1
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_DelayPORXLCD
  2469 ;;		_DelayXLCD
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text7
  2474  002DCC                     __ptext7:
  2475                           	opt stack 0
  2476  002DCC                     _Delay1KTCYx:
  2477                           	opt stack 26
  2478                           
  2479                           ;incstack = 0
  2480                           ;Delay1KTCYx@unit stored from wreg
  2481  002DCC  6E0F               	movwf	Delay1KTCYx@unit,c
  2482  002DCE  0EC8               	movlw	200
  2483  002DD0                     u4917:
  2484  002DD0  D000               	nop2	
  2485  002DD2  2EE8               	decfsz	wreg,f,c
  2486  002DD4  D7FD               	bra	u4917
  2487  002DD6  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  2488  002DD8  D7FA               	goto	l2433
  2489  002DDA  0012               	return	
  2490  002DDC                     __end_of_Delay1KTCYx:
  2491                           	opt stack 0
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           intcon	equ	0xFF2
  2497                           postinc0	equ	0xFEE
  2498                           wreg	equ	0xFE8
  2499                           postinc1	equ	0xFE6
  2500                           postdec1	equ	0xFE5
  2501                           fsr1h	equ	0xFE2
  2502                           fsr1l	equ	0xFE1
  2503                           postinc2	equ	0xFDE
  2504                           postdec2	equ	0xFDD
  2505                           plusw2	equ	0xFDB
  2506                           fsr2h	equ	0xFDA
  2507                           fsr2l	equ	0xFD9
  2508                           status	equ	0xFD8
  2509                           
  2510 ;; *************** function _Delay10KTCYx *****************
  2511 ;; Defined at:
  2512 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  unit            1    wreg     unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  unit            1   15[COMRAM] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2528 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2529 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2530 ;;Total ram usage:        2 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_OpenXLCD
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text8
  2541  002DA0                     __ptext8:
  2542                           	opt stack 0
  2543  002DA0                     _Delay10KTCYx:
  2544                           	opt stack 27
  2545                           
  2546                           ;incstack = 0
  2547                           ;Delay10KTCYx@unit stored from wreg
  2548  002DA0  6E10               	movwf	Delay10KTCYx@unit,c
  2549  002DA2  0E0D               	movlw	13
  2550  002DA4  6E0F               	movwf	??_Delay10KTCYx& (0+255),c
  2551  002DA6  0EFC               	movlw	252
  2552  002DA8                     u4927:
  2553  002DA8  2EE8               	decfsz	wreg,f,c
  2554  002DAA  D7FE               	bra	u4927
  2555  002DAC  2E0F               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2556  002DAE  D7FC               	bra	u4927
  2557  002DB0  2E10               	decfsz	Delay10KTCYx@unit,f,c
  2558  002DB2  D7F7               	goto	l2813
  2559  002DB4  0012               	return	
  2560  002DB6                     __end_of_Delay10KTCYx:
  2561                           	opt stack 0
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           intcon	equ	0xFF2
  2567                           postinc0	equ	0xFEE
  2568                           wreg	equ	0xFE8
  2569                           postinc1	equ	0xFE6
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           postinc2	equ	0xFDE
  2574                           postdec2	equ	0xFDD
  2575                           plusw2	equ	0xFDB
  2576                           fsr2h	equ	0xFDA
  2577                           fsr2l	equ	0xFD9
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function _init_ADC *****************
  2581 ;; Defined at:
  2582 ;;		line 3 in file "ad.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    1
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text9
  2611  002DEC                     __ptext9:
  2612                           	opt stack 0
  2613  002DEC                     _init_ADC:
  2614                           	opt stack 29
  2615                           
  2616                           ;ad.c: 4: ADCON2=0b10101110;
  2617                           
  2618                           ;incstack = 0
  2619  002DEC  0EAE               	movlw	174
  2620  002DEE  6EC0               	movwf	4032,c	;volatile
  2621                           
  2622                           ;ad.c: 5: ADCON0=0b00000011;
  2623  002DF0  0E03               	movlw	3
  2624  002DF2  6EC2               	movwf	4034,c	;volatile
  2625                           
  2626                           ;ad.c: 6: ADCON1=0b00001101;
  2627  002DF4  0E0D               	movlw	13
  2628  002DF6  6EC1               	movwf	4033,c	;volatile
  2629  002DF8  0012               	return		;funcret
  2630  002DFA                     __end_of_init_ADC:
  2631                           	opt stack 0
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           intcon	equ	0xFF2
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           postinc1	equ	0xFE6
  2640                           postdec1	equ	0xFE5
  2641                           fsr1h	equ	0xFE2
  2642                           fsr1l	equ	0xFE1
  2643                           postinc2	equ	0xFDE
  2644                           postdec2	equ	0xFDD
  2645                           plusw2	equ	0xFDB
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _exibir_lcd *****************
  2651 ;; Defined at:
  2652 ;;		line 25 in file "display_LCD.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  Relogio         2   21[BANK0 ] PTR struct .
  2655 ;;		 -> Relogio(6), 
  2656 ;;  Despertador     2   23[BANK0 ] PTR struct .
  2657 ;;		 -> Despertador(6), 
  2658 ;;  Calendario      2   25[BANK0 ] PTR struct .
  2659 ;;		 -> Calendario(6), 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  str            16   29[BANK0 ] unsigned char [16]
  2662 ;;  f               2   67[BANK0 ] int 
  2663 ;;  e               2   65[BANK0 ] int 
  2664 ;;  d               2   63[BANK0 ] int 
  2665 ;;  c               2   61[BANK0 ] int 
  2666 ;;  b               2   59[BANK0 ] int 
  2667 ;;  a               2   57[BANK0 ] int 
  2668 ;;  l               2   55[BANK0 ] int 
  2669 ;;  k               2   53[BANK0 ] int 
  2670 ;;  j               2   51[BANK0 ] int 
  2671 ;;  i               2   49[BANK0 ] int 
  2672 ;;  h               2   47[BANK0 ] int 
  2673 ;;  g               2   45[BANK0 ] int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2683 ;;      Params:         0       6       0       0       0       0       0       0       0
  2684 ;;      Locals:         0      40       0       0       0       0       0       0       0
  2685 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2686 ;;      Totals:         0      48       0       0       0       0       0       0       0
  2687 ;;Total ram usage:       48 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    5
  2690 ;; This function calls:
  2691 ;;		_SetDDRamAddr
  2692 ;;		___awdiv
  2693 ;;		___awmod
  2694 ;;		_convert_float_to_char
  2695 ;;		_putrsXLCD
  2696 ;;		_sprintf
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text10
  2703  000FBA                     __ptext10:
  2704                           	opt stack 0
  2705  000FBA                     _exibir_lcd:
  2706                           	opt stack 25
  2707                           
  2708                           ;display_LCD.c: 27: int a, b, c, d, e, f, g, h, i, j, k, l;
  2709                           ;display_LCD.c: 28: char str[16];
  2710                           ;display_LCD.c: 31: if(tela_exibida==0){
  2711                           
  2712                           ;incstack = 0
  2713  000FBA  0100               	movlb	0	; () banked
  2714  000FBC  51AE               	movf	_tela_exibida& (0+255),w,b
  2715  000FBE  0100               	movlb	0	; () banked
  2716  000FC0  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  2717  000FC2  A4D8               	btfss	status,2,c
  2718  000FC4  D236               	goto	l4031
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;display_LCD.c: 32: a=((Relogio->hora)/10)-(((Relogio->hora)%10)/10);
  2722  000FC6  0100               	movlb	0	; () banked
  2723  000FC8  EE20 F004          	lfsr	2,4
  2724  000FCC  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  2725  000FCE  26D9               	addwf	fsr2l,f,c
  2726  000FD0  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2727  000FD2  22DA               	addwfc	fsr2h,f,c
  2728  000FD4  CFDE F015          	movff	postinc2,___awdiv@dividend
  2729  000FD8  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2730  000FDC  0E00               	movlw	0
  2731  000FDE  6E18               	movwf	___awdiv@divisor+1,c
  2732  000FE0  0E0A               	movlw	10
  2733  000FE2  6E17               	movwf	___awdiv@divisor,c
  2734  000FE4  EC7F  F014         	call	___awdiv	;wreg free
  2735  000FE8  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  2736  000FEC  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  2737  000FF0  0E00               	movlw	0
  2738  000FF2  6E12               	movwf	___awmod@divisor+1,c
  2739  000FF4  0E0A               	movlw	10
  2740  000FF6  6E11               	movwf	___awmod@divisor,c
  2741  000FF8  0100               	movlb	0	; () banked
  2742  000FFA  EE20 F004          	lfsr	2,4
  2743  000FFE  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  2744  001000  26D9               	addwf	fsr2l,f,c
  2745  001002  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2746  001004  22DA               	addwfc	fsr2h,f,c
  2747  001006  CFDE F00F          	movff	postinc2,___awmod@dividend
  2748  00100A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2749  00100E  EC39  F015         	call	___awmod	;wreg free
  2750  001012  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2751  001016  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2752  00101A  0E00               	movlw	0
  2753  00101C  6E18               	movwf	___awdiv@divisor+1,c
  2754  00101E  0E0A               	movlw	10
  2755  001020  6E17               	movwf	___awdiv@divisor,c
  2756  001022  EC7F  F014         	call	___awdiv	;wreg free
  2757  001026  1E15               	comf	?___awdiv,f,c
  2758  001028  1E16               	comf	?___awdiv+1,f,c
  2759  00102A  4A15               	infsnz	?___awdiv,f,c
  2760  00102C  2A16               	incf	?___awdiv+1,f,c
  2761  00102E  5015               	movf	?___awdiv,w,c
  2762  001030  0100               	movlb	0	; () banked
  2763  001032  257B               	addwf	??_exibir_lcd& (0+255),w,b
  2764  001034  0100               	movlb	0	; () banked
  2765  001036  6F99               	movwf	exibir_lcd@a& (0+255),b
  2766  001038  5016               	movf	?___awdiv+1,w,c
  2767  00103A  0100               	movlb	0	; () banked
  2768  00103C  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  2769  00103E  0100               	movlb	0	; () banked
  2770  001040  6F9A               	movwf	(exibir_lcd@a+1)& (0+255),b
  2771                           
  2772                           ;display_LCD.c: 33: b=Relogio->hora%10;
  2773  001042  0100               	movlb	0	; () banked
  2774  001044  EE20 F004          	lfsr	2,4
  2775  001048  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  2776  00104A  26D9               	addwf	fsr2l,f,c
  2777  00104C  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2778  00104E  22DA               	addwfc	fsr2h,f,c
  2779  001050  CFDE F00F          	movff	postinc2,___awmod@dividend
  2780  001054  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2781  001058  0E00               	movlw	0
  2782  00105A  6E12               	movwf	___awmod@divisor+1,c
  2783  00105C  0E0A               	movlw	10
  2784  00105E  6E11               	movwf	___awmod@divisor,c
  2785  001060  EC39  F015         	call	___awmod	;wreg free
  2786  001064  C00F  F09B         	movff	?___awmod,exibir_lcd@b
  2787  001068  C010  F09C         	movff	?___awmod+1,exibir_lcd@b+1
  2788                           
  2789                           ;display_LCD.c: 34: c=((Relogio->minuto)/10)-(((Relogio->minuto)%10)/10);
  2790  00106C  C075  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2791  001070  C076  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2792  001074  CFDE F015          	movff	postinc2,___awdiv@dividend
  2793  001078  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2794  00107C  0E00               	movlw	0
  2795  00107E  6E18               	movwf	___awdiv@divisor+1,c
  2796  001080  0E0A               	movlw	10
  2797  001082  6E17               	movwf	___awdiv@divisor,c
  2798  001084  EC7F  F014         	call	___awdiv	;wreg free
  2799  001088  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  2800  00108C  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  2801  001090  0E00               	movlw	0
  2802  001092  6E12               	movwf	___awmod@divisor+1,c
  2803  001094  0E0A               	movlw	10
  2804  001096  6E11               	movwf	___awmod@divisor,c
  2805  001098  C075  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2806  00109C  C076  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2807  0010A0  CFDE F00F          	movff	postinc2,___awmod@dividend
  2808  0010A4  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2809  0010A8  EC39  F015         	call	___awmod	;wreg free
  2810  0010AC  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2811  0010B0  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2812  0010B4  0E00               	movlw	0
  2813  0010B6  6E18               	movwf	___awdiv@divisor+1,c
  2814  0010B8  0E0A               	movlw	10
  2815  0010BA  6E17               	movwf	___awdiv@divisor,c
  2816  0010BC  EC7F  F014         	call	___awdiv	;wreg free
  2817  0010C0  1E15               	comf	?___awdiv,f,c
  2818  0010C2  1E16               	comf	?___awdiv+1,f,c
  2819  0010C4  4A15               	infsnz	?___awdiv,f,c
  2820  0010C6  2A16               	incf	?___awdiv+1,f,c
  2821  0010C8  5015               	movf	?___awdiv,w,c
  2822  0010CA  0100               	movlb	0	; () banked
  2823  0010CC  257B               	addwf	??_exibir_lcd& (0+255),w,b
  2824  0010CE  0100               	movlb	0	; () banked
  2825  0010D0  6F9D               	movwf	exibir_lcd@c& (0+255),b
  2826  0010D2  5016               	movf	?___awdiv+1,w,c
  2827  0010D4  0100               	movlb	0	; () banked
  2828  0010D6  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  2829  0010D8  0100               	movlb	0	; () banked
  2830  0010DA  6F9E               	movwf	(exibir_lcd@c+1)& (0+255),b
  2831                           
  2832                           ;display_LCD.c: 35: d=Relogio->minuto%10;
  2833  0010DC  C075  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2834  0010E0  C076  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2835  0010E4  CFDE F00F          	movff	postinc2,___awmod@dividend
  2836  0010E8  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2837  0010EC  0E00               	movlw	0
  2838  0010EE  6E12               	movwf	___awmod@divisor+1,c
  2839  0010F0  0E0A               	movlw	10
  2840  0010F2  6E11               	movwf	___awmod@divisor,c
  2841  0010F4  EC39  F015         	call	___awmod	;wreg free
  2842  0010F8  C00F  F09F         	movff	?___awmod,exibir_lcd@d
  2843  0010FC  C010  F0A0         	movff	?___awmod+1,exibir_lcd@d+1
  2844                           
  2845                           ;display_LCD.c: 36: e=((Relogio->segundo)/10)-(((Relogio->segundo)%10)/10);
  2846  001100  0100               	movlb	0	; () banked
  2847  001102  EE20 F002          	lfsr	2,2
  2848  001106  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  2849  001108  26D9               	addwf	fsr2l,f,c
  2850  00110A  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2851  00110C  22DA               	addwfc	fsr2h,f,c
  2852  00110E  CFDE F015          	movff	postinc2,___awdiv@dividend
  2853  001112  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2854  001116  0E00               	movlw	0
  2855  001118  6E18               	movwf	___awdiv@divisor+1,c
  2856  00111A  0E0A               	movlw	10
  2857  00111C  6E17               	movwf	___awdiv@divisor,c
  2858  00111E  EC7F  F014         	call	___awdiv	;wreg free
  2859  001122  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  2860  001126  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  2861  00112A  0E00               	movlw	0
  2862  00112C  6E12               	movwf	___awmod@divisor+1,c
  2863  00112E  0E0A               	movlw	10
  2864  001130  6E11               	movwf	___awmod@divisor,c
  2865  001132  0100               	movlb	0	; () banked
  2866  001134  EE20 F002          	lfsr	2,2
  2867  001138  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  2868  00113A  26D9               	addwf	fsr2l,f,c
  2869  00113C  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2870  00113E  22DA               	addwfc	fsr2h,f,c
  2871  001140  CFDE F00F          	movff	postinc2,___awmod@dividend
  2872  001144  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2873  001148  EC39  F015         	call	___awmod	;wreg free
  2874  00114C  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2875  001150  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2876  001154  0E00               	movlw	0
  2877  001156  6E18               	movwf	___awdiv@divisor+1,c
  2878  001158  0E0A               	movlw	10
  2879  00115A  6E17               	movwf	___awdiv@divisor,c
  2880  00115C  EC7F  F014         	call	___awdiv	;wreg free
  2881  001160  1E15               	comf	?___awdiv,f,c
  2882  001162  1E16               	comf	?___awdiv+1,f,c
  2883  001164  4A15               	infsnz	?___awdiv,f,c
  2884  001166  2A16               	incf	?___awdiv+1,f,c
  2885  001168  5015               	movf	?___awdiv,w,c
  2886  00116A  0100               	movlb	0	; () banked
  2887  00116C  257B               	addwf	??_exibir_lcd& (0+255),w,b
  2888  00116E  0100               	movlb	0	; () banked
  2889  001170  6FA1               	movwf	exibir_lcd@e& (0+255),b
  2890  001172  5016               	movf	?___awdiv+1,w,c
  2891  001174  0100               	movlb	0	; () banked
  2892  001176  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  2893  001178  0100               	movlb	0	; () banked
  2894  00117A  6FA2               	movwf	(exibir_lcd@e+1)& (0+255),b
  2895                           
  2896                           ;display_LCD.c: 37: f=Relogio->segundo%10;
  2897  00117C  0100               	movlb	0	; () banked
  2898  00117E  EE20 F002          	lfsr	2,2
  2899  001182  5175               	movf	exibir_lcd@Relogio& (0+255),w,b
  2900  001184  26D9               	addwf	fsr2l,f,c
  2901  001186  5176               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2902  001188  22DA               	addwfc	fsr2h,f,c
  2903  00118A  CFDE F00F          	movff	postinc2,___awmod@dividend
  2904  00118E  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2905  001192  0E00               	movlw	0
  2906  001194  6E12               	movwf	___awmod@divisor+1,c
  2907  001196  0E0A               	movlw	10
  2908  001198  6E11               	movwf	___awmod@divisor,c
  2909  00119A  EC39  F015         	call	___awmod	;wreg free
  2910  00119E  C00F  F0A3         	movff	?___awmod,exibir_lcd@f
  2911  0011A2  C010  F0A4         	movff	?___awmod+1,exibir_lcd@f+1
  2912                           
  2913                           ;display_LCD.c: 38: sprintf(str, "HORA: %d%d:%d%d:%d%d ", a, b, c, d, e, f);
  2914  0011A6  0E7D               	movlw	low exibir_lcd@str
  2915  0011A8  6E1B               	movwf	sprintf@sp,c
  2916  0011AA  0E00               	movlw	high exibir_lcd@str
  2917  0011AC  6E1C               	movwf	sprintf@sp+1,c
  2918  0011AE  0E22               	movlw	low STR_2
  2919  0011B0  6E1D               	movwf	sprintf@f,c
  2920  0011B2  0E08               	movlw	high STR_2
  2921  0011B4  6E1E               	movwf	sprintf@f+1,c
  2922  0011B6  C099  F01F         	movff	exibir_lcd@a,?_sprintf+4
  2923  0011BA  C09A  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  2924  0011BE  C09B  F021         	movff	exibir_lcd@b,?_sprintf+6
  2925  0011C2  C09C  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  2926  0011C6  C09D  F023         	movff	exibir_lcd@c,?_sprintf+8
  2927  0011CA  C09E  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  2928  0011CE  C09F  F025         	movff	exibir_lcd@d,?_sprintf+10
  2929  0011D2  C0A0  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  2930  0011D6  C0A1  F027         	movff	exibir_lcd@e,?_sprintf+12
  2931  0011DA  C0A2  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  2932  0011DE  C0A3  F029         	movff	exibir_lcd@f,?_sprintf+14
  2933  0011E2  C0A4  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  2934  0011E6  ECB4  F00E         	call	_sprintf	;wreg free
  2935                           
  2936                           ;display_LCD.c: 39: SetDDRamAddr(0x00);
  2937  0011EA  0E00               	movlw	0
  2938  0011EC  EC9F  F015         	call	_SetDDRamAddr
  2939                           
  2940                           ;display_LCD.c: 40: putrsXLCD(str);
  2941  0011F0  0E7D               	movlw	low exibir_lcd@str
  2942  0011F2  6E11               	movwf	putrsXLCD@buffer,c
  2943  0011F4  0E00               	movlw	high exibir_lcd@str
  2944  0011F6  6E12               	movwf	putrsXLCD@buffer+1,c
  2945  0011F8  EC71  F015         	call	_putrsXLCD	;wreg free
  2946                           
  2947                           ;display_LCD.c: 44: g=((Calendario->dia)/10)-(((Calendario->dia)%10)/10);
  2948  0011FC  C079  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2949  001200  C07A  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2950  001204  CFDE F015          	movff	postinc2,___awdiv@dividend
  2951  001208  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2952  00120C  0E00               	movlw	0
  2953  00120E  6E18               	movwf	___awdiv@divisor+1,c
  2954  001210  0E0A               	movlw	10
  2955  001212  6E17               	movwf	___awdiv@divisor,c
  2956  001214  EC7F  F014         	call	___awdiv	;wreg free
  2957  001218  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  2958  00121C  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  2959  001220  0E00               	movlw	0
  2960  001222  6E12               	movwf	___awmod@divisor+1,c
  2961  001224  0E0A               	movlw	10
  2962  001226  6E11               	movwf	___awmod@divisor,c
  2963  001228  C079  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2964  00122C  C07A  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2965  001230  CFDE F00F          	movff	postinc2,___awmod@dividend
  2966  001234  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2967  001238  EC39  F015         	call	___awmod	;wreg free
  2968  00123C  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2969  001240  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2970  001244  0E00               	movlw	0
  2971  001246  6E18               	movwf	___awdiv@divisor+1,c
  2972  001248  0E0A               	movlw	10
  2973  00124A  6E17               	movwf	___awdiv@divisor,c
  2974  00124C  EC7F  F014         	call	___awdiv	;wreg free
  2975  001250  1E15               	comf	?___awdiv,f,c
  2976  001252  1E16               	comf	?___awdiv+1,f,c
  2977  001254  4A15               	infsnz	?___awdiv,f,c
  2978  001256  2A16               	incf	?___awdiv+1,f,c
  2979  001258  5015               	movf	?___awdiv,w,c
  2980  00125A  0100               	movlb	0	; () banked
  2981  00125C  257B               	addwf	??_exibir_lcd& (0+255),w,b
  2982  00125E  0100               	movlb	0	; () banked
  2983  001260  6F8D               	movwf	exibir_lcd@g& (0+255),b
  2984  001262  5016               	movf	?___awdiv+1,w,c
  2985  001264  0100               	movlb	0	; () banked
  2986  001266  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  2987  001268  0100               	movlb	0	; () banked
  2988  00126A  6F8E               	movwf	(exibir_lcd@g+1)& (0+255),b
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;display_LCD.c: 45: h=Calendario->dia%10;
  2992  00126C  C079  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2993  001270  C07A  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2994  001274  CFDE F00F          	movff	postinc2,___awmod@dividend
  2995  001278  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2996  00127C  0E00               	movlw	0
  2997  00127E  6E12               	movwf	___awmod@divisor+1,c
  2998  001280  0E0A               	movlw	10
  2999  001282  6E11               	movwf	___awmod@divisor,c
  3000  001284  EC39  F015         	call	___awmod	;wreg free
  3001  001288  C00F  F08F         	movff	?___awmod,exibir_lcd@h
  3002  00128C  C010  F090         	movff	?___awmod+1,exibir_lcd@h+1
  3003                           
  3004                           ;display_LCD.c: 46: i=((Calendario->mes)/10)-(((Calendario->mes)%10)/10);
  3005  001290  0100               	movlb	0	; () banked
  3006  001292  EE20 F002          	lfsr	2,2
  3007  001296  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3008  001298  26D9               	addwf	fsr2l,f,c
  3009  00129A  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3010  00129C  22DA               	addwfc	fsr2h,f,c
  3011  00129E  CFDE F015          	movff	postinc2,___awdiv@dividend
  3012  0012A2  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3013  0012A6  0E00               	movlw	0
  3014  0012A8  6E18               	movwf	___awdiv@divisor+1,c
  3015  0012AA  0E0A               	movlw	10
  3016  0012AC  6E17               	movwf	___awdiv@divisor,c
  3017  0012AE  EC7F  F014         	call	___awdiv	;wreg free
  3018  0012B2  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3019  0012B6  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3020  0012BA  0E00               	movlw	0
  3021  0012BC  6E12               	movwf	___awmod@divisor+1,c
  3022  0012BE  0E0A               	movlw	10
  3023  0012C0  6E11               	movwf	___awmod@divisor,c
  3024  0012C2  0100               	movlb	0	; () banked
  3025  0012C4  EE20 F002          	lfsr	2,2
  3026  0012C8  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3027  0012CA  26D9               	addwf	fsr2l,f,c
  3028  0012CC  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3029  0012CE  22DA               	addwfc	fsr2h,f,c
  3030  0012D0  CFDE F00F          	movff	postinc2,___awmod@dividend
  3031  0012D4  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3032  0012D8  EC39  F015         	call	___awmod	;wreg free
  3033  0012DC  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3034  0012E0  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3035  0012E4  0E00               	movlw	0
  3036  0012E6  6E18               	movwf	___awdiv@divisor+1,c
  3037  0012E8  0E0A               	movlw	10
  3038  0012EA  6E17               	movwf	___awdiv@divisor,c
  3039  0012EC  EC7F  F014         	call	___awdiv	;wreg free
  3040  0012F0  1E15               	comf	?___awdiv,f,c
  3041  0012F2  1E16               	comf	?___awdiv+1,f,c
  3042  0012F4  4A15               	infsnz	?___awdiv,f,c
  3043  0012F6  2A16               	incf	?___awdiv+1,f,c
  3044  0012F8  5015               	movf	?___awdiv,w,c
  3045  0012FA  0100               	movlb	0	; () banked
  3046  0012FC  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3047  0012FE  0100               	movlb	0	; () banked
  3048  001300  6F91               	movwf	exibir_lcd@i& (0+255),b
  3049  001302  5016               	movf	?___awdiv+1,w,c
  3050  001304  0100               	movlb	0	; () banked
  3051  001306  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3052  001308  0100               	movlb	0	; () banked
  3053  00130A  6F92               	movwf	(exibir_lcd@i+1)& (0+255),b
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;display_LCD.c: 47: j=Calendario->mes%10;
  3057  00130C  0100               	movlb	0	; () banked
  3058  00130E  EE20 F002          	lfsr	2,2
  3059  001312  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3060  001314  26D9               	addwf	fsr2l,f,c
  3061  001316  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3062  001318  22DA               	addwfc	fsr2h,f,c
  3063  00131A  CFDE F00F          	movff	postinc2,___awmod@dividend
  3064  00131E  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3065  001322  0E00               	movlw	0
  3066  001324  6E12               	movwf	___awmod@divisor+1,c
  3067  001326  0E0A               	movlw	10
  3068  001328  6E11               	movwf	___awmod@divisor,c
  3069  00132A  EC39  F015         	call	___awmod	;wreg free
  3070  00132E  C00F  F093         	movff	?___awmod,exibir_lcd@j
  3071  001332  C010  F094         	movff	?___awmod+1,exibir_lcd@j+1
  3072                           
  3073                           ;display_LCD.c: 48: k=((Calendario->ano)/10)-(((Calendario->ano)%10)/10);
  3074  001336  0100               	movlb	0	; () banked
  3075  001338  EE20 F004          	lfsr	2,4
  3076  00133C  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3077  00133E  26D9               	addwf	fsr2l,f,c
  3078  001340  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3079  001342  22DA               	addwfc	fsr2h,f,c
  3080  001344  CFDE F015          	movff	postinc2,___awdiv@dividend
  3081  001348  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3082  00134C  0E00               	movlw	0
  3083  00134E  6E18               	movwf	___awdiv@divisor+1,c
  3084  001350  0E0A               	movlw	10
  3085  001352  6E17               	movwf	___awdiv@divisor,c
  3086  001354  EC7F  F014         	call	___awdiv	;wreg free
  3087  001358  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3088  00135C  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3089  001360  0E00               	movlw	0
  3090  001362  6E12               	movwf	___awmod@divisor+1,c
  3091  001364  0E0A               	movlw	10
  3092  001366  6E11               	movwf	___awmod@divisor,c
  3093  001368  0100               	movlb	0	; () banked
  3094  00136A  EE20 F004          	lfsr	2,4
  3095  00136E  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3096  001370  26D9               	addwf	fsr2l,f,c
  3097  001372  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3098  001374  22DA               	addwfc	fsr2h,f,c
  3099  001376  CFDE F00F          	movff	postinc2,___awmod@dividend
  3100  00137A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3101  00137E  EC39  F015         	call	___awmod	;wreg free
  3102  001382  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3103  001386  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3104  00138A  0E00               	movlw	0
  3105  00138C  6E18               	movwf	___awdiv@divisor+1,c
  3106  00138E  0E0A               	movlw	10
  3107  001390  6E17               	movwf	___awdiv@divisor,c
  3108  001392  EC7F  F014         	call	___awdiv	;wreg free
  3109  001396  1E15               	comf	?___awdiv,f,c
  3110  001398  1E16               	comf	?___awdiv+1,f,c
  3111  00139A  4A15               	infsnz	?___awdiv,f,c
  3112  00139C  2A16               	incf	?___awdiv+1,f,c
  3113  00139E  5015               	movf	?___awdiv,w,c
  3114  0013A0  0100               	movlb	0	; () banked
  3115  0013A2  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3116  0013A4  0100               	movlb	0	; () banked
  3117  0013A6  6F95               	movwf	exibir_lcd@k& (0+255),b
  3118  0013A8  5016               	movf	?___awdiv+1,w,c
  3119  0013AA  0100               	movlb	0	; () banked
  3120  0013AC  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3121  0013AE  0100               	movlb	0	; () banked
  3122  0013B0  6F96               	movwf	(exibir_lcd@k+1)& (0+255),b
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;display_LCD.c: 49: l=Calendario->ano%10;
  3126  0013B2  0100               	movlb	0	; () banked
  3127  0013B4  EE20 F004          	lfsr	2,4
  3128  0013B8  5179               	movf	exibir_lcd@Calendario& (0+255),w,b
  3129  0013BA  26D9               	addwf	fsr2l,f,c
  3130  0013BC  517A               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3131  0013BE  22DA               	addwfc	fsr2h,f,c
  3132  0013C0  CFDE F00F          	movff	postinc2,___awmod@dividend
  3133  0013C4  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3134  0013C8  0E00               	movlw	0
  3135  0013CA  6E12               	movwf	___awmod@divisor+1,c
  3136  0013CC  0E0A               	movlw	10
  3137  0013CE  6E11               	movwf	___awmod@divisor,c
  3138  0013D0  EC39  F015         	call	___awmod	;wreg free
  3139  0013D4  C00F  F097         	movff	?___awmod,exibir_lcd@l
  3140  0013D8  C010  F098         	movff	?___awmod+1,exibir_lcd@l+1
  3141                           
  3142                           ;display_LCD.c: 50: sprintf(str, "DATA: %d%d:%d%d:%d%d ", g, h, i, j, k, l);
  3143  0013DC  0E7D               	movlw	low exibir_lcd@str
  3144  0013DE  6E1B               	movwf	sprintf@sp,c
  3145  0013E0  0E00               	movlw	high exibir_lcd@str
  3146  0013E2  6E1C               	movwf	sprintf@sp+1,c
  3147  0013E4  0E38               	movlw	low STR_3
  3148  0013E6  6E1D               	movwf	sprintf@f,c
  3149  0013E8  0E08               	movlw	high STR_3
  3150  0013EA  6E1E               	movwf	sprintf@f+1,c
  3151  0013EC  C08D  F01F         	movff	exibir_lcd@g,?_sprintf+4
  3152  0013F0  C08E  F020         	movff	exibir_lcd@g+1,?_sprintf+5
  3153  0013F4  C08F  F021         	movff	exibir_lcd@h,?_sprintf+6
  3154  0013F8  C090  F022         	movff	exibir_lcd@h+1,?_sprintf+7
  3155  0013FC  C091  F023         	movff	exibir_lcd@i,?_sprintf+8
  3156  001400  C092  F024         	movff	exibir_lcd@i+1,?_sprintf+9
  3157  001404  C093  F025         	movff	exibir_lcd@j,?_sprintf+10
  3158  001408  C094  F026         	movff	exibir_lcd@j+1,?_sprintf+11
  3159  00140C  C095  F027         	movff	exibir_lcd@k,?_sprintf+12
  3160  001410  C096  F028         	movff	exibir_lcd@k+1,?_sprintf+13
  3161  001414  C097  F029         	movff	exibir_lcd@l,?_sprintf+14
  3162  001418  C098  F02A         	movff	exibir_lcd@l+1,?_sprintf+15
  3163  00141C  ECB4  F00E         	call	_sprintf	;wreg free
  3164                           
  3165                           ;display_LCD.c: 51: SetDDRamAddr(0x40);
  3166  001420  0E40               	movlw	64
  3167  001422  EC9F  F015         	call	_SetDDRamAddr
  3168                           
  3169                           ;display_LCD.c: 52: putrsXLCD(str);
  3170  001426  0E7D               	movlw	low exibir_lcd@str
  3171  001428  6E11               	movwf	putrsXLCD@buffer,c
  3172  00142A  0E00               	movlw	high exibir_lcd@str
  3173  00142C  6E12               	movwf	putrsXLCD@buffer+1,c
  3174  00142E  EC71  F015         	call	_putrsXLCD	;wreg free
  3175  001432                     l4031:
  3176                           
  3177                           ;display_LCD.c: 53: }
  3178                           ;display_LCD.c: 56: if(tela_exibida==1){
  3179  001432  0100               	movlb	0	; () banked
  3180  001434  05AE               	decf	_tela_exibida& (0+255),w,b
  3181  001436  0100               	movlb	0	; () banked
  3182  001438  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3183  00143A  A4D8               	btfss	status,2,c
  3184  00143C  D124               	goto	l4045
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;display_LCD.c: 57: a=((Despertador->hora)/10)-(((Despertador->hora)%10)/10);
  3188  00143E  0100               	movlb	0	; () banked
  3189  001440  EE20 F004          	lfsr	2,4
  3190  001444  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3191  001446  26D9               	addwf	fsr2l,f,c
  3192  001448  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3193  00144A  22DA               	addwfc	fsr2h,f,c
  3194  00144C  CFDE F015          	movff	postinc2,___awdiv@dividend
  3195  001450  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3196  001454  0E00               	movlw	0
  3197  001456  6E18               	movwf	___awdiv@divisor+1,c
  3198  001458  0E0A               	movlw	10
  3199  00145A  6E17               	movwf	___awdiv@divisor,c
  3200  00145C  EC7F  F014         	call	___awdiv	;wreg free
  3201  001460  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3202  001464  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3203  001468  0E00               	movlw	0
  3204  00146A  6E12               	movwf	___awmod@divisor+1,c
  3205  00146C  0E0A               	movlw	10
  3206  00146E  6E11               	movwf	___awmod@divisor,c
  3207  001470  0100               	movlb	0	; () banked
  3208  001472  EE20 F004          	lfsr	2,4
  3209  001476  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3210  001478  26D9               	addwf	fsr2l,f,c
  3211  00147A  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3212  00147C  22DA               	addwfc	fsr2h,f,c
  3213  00147E  CFDE F00F          	movff	postinc2,___awmod@dividend
  3214  001482  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3215  001486  EC39  F015         	call	___awmod	;wreg free
  3216  00148A  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3217  00148E  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3218  001492  0E00               	movlw	0
  3219  001494  6E18               	movwf	___awdiv@divisor+1,c
  3220  001496  0E0A               	movlw	10
  3221  001498  6E17               	movwf	___awdiv@divisor,c
  3222  00149A  EC7F  F014         	call	___awdiv	;wreg free
  3223  00149E  1E15               	comf	?___awdiv,f,c
  3224  0014A0  1E16               	comf	?___awdiv+1,f,c
  3225  0014A2  4A15               	infsnz	?___awdiv,f,c
  3226  0014A4  2A16               	incf	?___awdiv+1,f,c
  3227  0014A6  5015               	movf	?___awdiv,w,c
  3228  0014A8  0100               	movlb	0	; () banked
  3229  0014AA  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3230  0014AC  0100               	movlb	0	; () banked
  3231  0014AE  6F99               	movwf	exibir_lcd@a& (0+255),b
  3232  0014B0  5016               	movf	?___awdiv+1,w,c
  3233  0014B2  0100               	movlb	0	; () banked
  3234  0014B4  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3235  0014B6  0100               	movlb	0	; () banked
  3236  0014B8  6F9A               	movwf	(exibir_lcd@a+1)& (0+255),b
  3237                           
  3238                           ;display_LCD.c: 58: b=Despertador->hora%10;
  3239  0014BA  0100               	movlb	0	; () banked
  3240  0014BC  EE20 F004          	lfsr	2,4
  3241  0014C0  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3242  0014C2  26D9               	addwf	fsr2l,f,c
  3243  0014C4  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3244  0014C6  22DA               	addwfc	fsr2h,f,c
  3245  0014C8  CFDE F00F          	movff	postinc2,___awmod@dividend
  3246  0014CC  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3247  0014D0  0E00               	movlw	0
  3248  0014D2  6E12               	movwf	___awmod@divisor+1,c
  3249  0014D4  0E0A               	movlw	10
  3250  0014D6  6E11               	movwf	___awmod@divisor,c
  3251  0014D8  EC39  F015         	call	___awmod	;wreg free
  3252  0014DC  C00F  F09B         	movff	?___awmod,exibir_lcd@b
  3253  0014E0  C010  F09C         	movff	?___awmod+1,exibir_lcd@b+1
  3254                           
  3255                           ;display_LCD.c: 59: c=((Despertador->minuto)/10)-(((Despertador->minuto)%10)/10);
  3256  0014E4  C077  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3257  0014E8  C078  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3258  0014EC  CFDE F015          	movff	postinc2,___awdiv@dividend
  3259  0014F0  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3260  0014F4  0E00               	movlw	0
  3261  0014F6  6E18               	movwf	___awdiv@divisor+1,c
  3262  0014F8  0E0A               	movlw	10
  3263  0014FA  6E17               	movwf	___awdiv@divisor,c
  3264  0014FC  EC7F  F014         	call	___awdiv	;wreg free
  3265  001500  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3266  001504  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3267  001508  0E00               	movlw	0
  3268  00150A  6E12               	movwf	___awmod@divisor+1,c
  3269  00150C  0E0A               	movlw	10
  3270  00150E  6E11               	movwf	___awmod@divisor,c
  3271  001510  C077  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3272  001514  C078  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3273  001518  CFDE F00F          	movff	postinc2,___awmod@dividend
  3274  00151C  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3275  001520  EC39  F015         	call	___awmod	;wreg free
  3276  001524  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3277  001528  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3278  00152C  0E00               	movlw	0
  3279  00152E  6E18               	movwf	___awdiv@divisor+1,c
  3280  001530  0E0A               	movlw	10
  3281  001532  6E17               	movwf	___awdiv@divisor,c
  3282  001534  EC7F  F014         	call	___awdiv	;wreg free
  3283  001538  1E15               	comf	?___awdiv,f,c
  3284  00153A  1E16               	comf	?___awdiv+1,f,c
  3285  00153C  4A15               	infsnz	?___awdiv,f,c
  3286  00153E  2A16               	incf	?___awdiv+1,f,c
  3287  001540  5015               	movf	?___awdiv,w,c
  3288  001542  0100               	movlb	0	; () banked
  3289  001544  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3290  001546  0100               	movlb	0	; () banked
  3291  001548  6F9D               	movwf	exibir_lcd@c& (0+255),b
  3292  00154A  5016               	movf	?___awdiv+1,w,c
  3293  00154C  0100               	movlb	0	; () banked
  3294  00154E  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3295  001550  0100               	movlb	0	; () banked
  3296  001552  6F9E               	movwf	(exibir_lcd@c+1)& (0+255),b
  3297                           
  3298                           ;display_LCD.c: 60: d=Despertador->minuto%10;
  3299  001554  C077  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3300  001558  C078  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3301  00155C  CFDE F00F          	movff	postinc2,___awmod@dividend
  3302  001560  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3303  001564  0E00               	movlw	0
  3304  001566  6E12               	movwf	___awmod@divisor+1,c
  3305  001568  0E0A               	movlw	10
  3306  00156A  6E11               	movwf	___awmod@divisor,c
  3307  00156C  EC39  F015         	call	___awmod	;wreg free
  3308  001570  C00F  F09F         	movff	?___awmod,exibir_lcd@d
  3309  001574  C010  F0A0         	movff	?___awmod+1,exibir_lcd@d+1
  3310                           
  3311                           ;display_LCD.c: 61: e=((Despertador->segundo)/10)-(((Despertador->segundo)%10)/10);
  3312  001578  0100               	movlb	0	; () banked
  3313  00157A  EE20 F002          	lfsr	2,2
  3314  00157E  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3315  001580  26D9               	addwf	fsr2l,f,c
  3316  001582  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3317  001584  22DA               	addwfc	fsr2h,f,c
  3318  001586  CFDE F015          	movff	postinc2,___awdiv@dividend
  3319  00158A  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3320  00158E  0E00               	movlw	0
  3321  001590  6E18               	movwf	___awdiv@divisor+1,c
  3322  001592  0E0A               	movlw	10
  3323  001594  6E17               	movwf	___awdiv@divisor,c
  3324  001596  EC7F  F014         	call	___awdiv	;wreg free
  3325  00159A  C015  F07B         	movff	?___awdiv,??_exibir_lcd
  3326  00159E  C016  F07C         	movff	?___awdiv+1,??_exibir_lcd+1
  3327  0015A2  0E00               	movlw	0
  3328  0015A4  6E12               	movwf	___awmod@divisor+1,c
  3329  0015A6  0E0A               	movlw	10
  3330  0015A8  6E11               	movwf	___awmod@divisor,c
  3331  0015AA  0100               	movlb	0	; () banked
  3332  0015AC  EE20 F002          	lfsr	2,2
  3333  0015B0  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3334  0015B2  26D9               	addwf	fsr2l,f,c
  3335  0015B4  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3336  0015B6  22DA               	addwfc	fsr2h,f,c
  3337  0015B8  CFDE F00F          	movff	postinc2,___awmod@dividend
  3338  0015BC  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3339  0015C0  EC39  F015         	call	___awmod	;wreg free
  3340  0015C4  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3341  0015C8  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3342  0015CC  0E00               	movlw	0
  3343  0015CE  6E18               	movwf	___awdiv@divisor+1,c
  3344  0015D0  0E0A               	movlw	10
  3345  0015D2  6E17               	movwf	___awdiv@divisor,c
  3346  0015D4  EC7F  F014         	call	___awdiv	;wreg free
  3347  0015D8  1E15               	comf	?___awdiv,f,c
  3348  0015DA  1E16               	comf	?___awdiv+1,f,c
  3349  0015DC  4A15               	infsnz	?___awdiv,f,c
  3350  0015DE  2A16               	incf	?___awdiv+1,f,c
  3351  0015E0  5015               	movf	?___awdiv,w,c
  3352  0015E2  0100               	movlb	0	; () banked
  3353  0015E4  257B               	addwf	??_exibir_lcd& (0+255),w,b
  3354  0015E6  0100               	movlb	0	; () banked
  3355  0015E8  6FA1               	movwf	exibir_lcd@e& (0+255),b
  3356  0015EA  5016               	movf	?___awdiv+1,w,c
  3357  0015EC  0100               	movlb	0	; () banked
  3358  0015EE  217C               	addwfc	(??_exibir_lcd+1)& (0+255),w,b
  3359  0015F0  0100               	movlb	0	; () banked
  3360  0015F2  6FA2               	movwf	(exibir_lcd@e+1)& (0+255),b
  3361                           
  3362                           ;display_LCD.c: 62: f=Despertador->segundo%10;
  3363  0015F4  0100               	movlb	0	; () banked
  3364  0015F6  EE20 F002          	lfsr	2,2
  3365  0015FA  5177               	movf	exibir_lcd@Despertador& (0+255),w,b
  3366  0015FC  26D9               	addwf	fsr2l,f,c
  3367  0015FE  5178               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3368  001600  22DA               	addwfc	fsr2h,f,c
  3369  001602  CFDE F00F          	movff	postinc2,___awmod@dividend
  3370  001606  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3371  00160A  0E00               	movlw	0
  3372  00160C  6E12               	movwf	___awmod@divisor+1,c
  3373  00160E  0E0A               	movlw	10
  3374  001610  6E11               	movwf	___awmod@divisor,c
  3375  001612  EC39  F015         	call	___awmod	;wreg free
  3376  001616  C00F  F0A3         	movff	?___awmod,exibir_lcd@f
  3377  00161A  C010  F0A4         	movff	?___awmod+1,exibir_lcd@f+1
  3378                           
  3379                           ;display_LCD.c: 64: sprintf(str, "%d%d:%d%d:%d%d        ", a, b, c, d, e, f);
  3380  00161E  0E7D               	movlw	low exibir_lcd@str
  3381  001620  6E1B               	movwf	sprintf@sp,c
  3382  001622  0E00               	movlw	high exibir_lcd@str
  3383  001624  6E1C               	movwf	sprintf@sp+1,c
  3384  001626  0E0B               	movlw	low STR_4
  3385  001628  6E1D               	movwf	sprintf@f,c
  3386  00162A  0E08               	movlw	high STR_4
  3387  00162C  6E1E               	movwf	sprintf@f+1,c
  3388  00162E  C099  F01F         	movff	exibir_lcd@a,?_sprintf+4
  3389  001632  C09A  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  3390  001636  C09B  F021         	movff	exibir_lcd@b,?_sprintf+6
  3391  00163A  C09C  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  3392  00163E  C09D  F023         	movff	exibir_lcd@c,?_sprintf+8
  3393  001642  C09E  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  3394  001646  C09F  F025         	movff	exibir_lcd@d,?_sprintf+10
  3395  00164A  C0A0  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  3396  00164E  C0A1  F027         	movff	exibir_lcd@e,?_sprintf+12
  3397  001652  C0A2  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  3398  001656  C0A3  F029         	movff	exibir_lcd@f,?_sprintf+14
  3399  00165A  C0A4  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  3400  00165E  ECB4  F00E         	call	_sprintf	;wreg free
  3401                           
  3402                           ;display_LCD.c: 65: SetDDRamAddr(0x00);
  3403  001662  0E00               	movlw	0
  3404  001664  EC9F  F015         	call	_SetDDRamAddr
  3405                           
  3406                           ;display_LCD.c: 66: putrsXLCD("DESPERTADOR:    ");
  3407  001668  0E5F               	movlw	low STR_5
  3408  00166A  6E11               	movwf	putrsXLCD@buffer,c
  3409  00166C  0E08               	movlw	high STR_5
  3410  00166E  6E12               	movwf	putrsXLCD@buffer+1,c
  3411  001670  EC71  F015         	call	_putrsXLCD	;wreg free
  3412                           
  3413                           ;display_LCD.c: 67: SetDDRamAddr(0x40);
  3414  001674  0E40               	movlw	64
  3415  001676  EC9F  F015         	call	_SetDDRamAddr
  3416                           
  3417                           ;display_LCD.c: 68: putrsXLCD(str);
  3418  00167A  0E7D               	movlw	low exibir_lcd@str
  3419  00167C  6E11               	movwf	putrsXLCD@buffer,c
  3420  00167E  0E00               	movlw	high exibir_lcd@str
  3421  001680  6E12               	movwf	putrsXLCD@buffer+1,c
  3422  001682  EC71  F015         	call	_putrsXLCD	;wreg free
  3423  001686                     l4045:
  3424                           
  3425                           ;display_LCD.c: 69: }
  3426                           ;display_LCD.c: 72: if(tela_exibida==2){
  3427  001686  0E02               	movlw	2
  3428  001688  0100               	movlb	0	; () banked
  3429  00168A  19AE               	xorwf	_tela_exibida& (0+255),w,b
  3430  00168C  0100               	movlb	0	; () banked
  3431  00168E  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  3432  001690  A4D8               	btfss	status,2,c
  3433  001692  0012               	return	
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;display_LCD.c: 73: convert_float_to_char(valor_tensao);
  3437  001694  C0A7  F068         	movff	_valor_tensao,convert_float_to_char@valor
  3438  001698  C0A8  F069         	movff	_valor_tensao+1,convert_float_to_char@valor+1
  3439  00169C  C0A9  F06A         	movff	_valor_tensao+2,convert_float_to_char@valor+2
  3440  0016A0  ECFE  F011         	call	_convert_float_to_char	;wreg free
  3441                           
  3442                           ;display_LCD.c: 74: SetDDRamAddr(0x00);
  3443  0016A4  0E00               	movlw	0
  3444  0016A6  EC9F  F015         	call	_SetDDRamAddr
  3445                           
  3446                           ;display_LCD.c: 75: putrsXLCD("TEMPERATURA:    ");
  3447  0016AA  0E4E               	movlw	low STR_6
  3448  0016AC  6E11               	movwf	putrsXLCD@buffer,c
  3449  0016AE  0E08               	movlw	high STR_6
  3450  0016B0  6E12               	movwf	putrsXLCD@buffer+1,c
  3451  0016B2  EC71  F015         	call	_putrsXLCD	;wreg free
  3452                           
  3453                           ;display_LCD.c: 76: SetDDRamAddr(0x40);
  3454  0016B6  0E40               	movlw	64
  3455  0016B8  EC9F  F015         	call	_SetDDRamAddr
  3456                           
  3457                           ;display_LCD.c: 77: putrsXLCD(temperatura_display);
  3458  0016BC  0EB0               	movlw	low _temperatura_display
  3459  0016BE  6E11               	movwf	putrsXLCD@buffer,c
  3460  0016C0  0E00               	movlw	high _temperatura_display
  3461  0016C2  6E12               	movwf	putrsXLCD@buffer+1,c
  3462  0016C4  EC71  F015         	call	_putrsXLCD	;wreg free
  3463  0016C8  0012               	return	
  3464  0016CA                     __end_of_exibir_lcd:
  3465                           	opt stack 0
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           intcon	equ	0xFF2
  3471                           postinc0	equ	0xFEE
  3472                           wreg	equ	0xFE8
  3473                           postinc1	equ	0xFE6
  3474                           postdec1	equ	0xFE5
  3475                           fsr1h	equ	0xFE2
  3476                           fsr1l	equ	0xFE1
  3477                           postinc2	equ	0xFDE
  3478                           postdec2	equ	0xFDD
  3479                           plusw2	equ	0xFDB
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _putrsXLCD *****************
  3485 ;; Defined at:
  3486 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  buffer          2   16[COMRAM] PTR const unsigned char 
  3489 ;;		 -> STR_6(17), STR_5(17), exibir_lcd@str(16), temperatura_display(10), 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3501 ;;      Params:         2       0       0       0       0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3504 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    4
  3508 ;; This function calls:
  3509 ;;		_BusyXLCD
  3510 ;;		_WriteDataXLCD
  3511 ;; This function is called by:
  3512 ;;		_exibir_lcd
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text11
  3517  002AE2                     __ptext11:
  3518                           	opt stack 0
  3519  002AE2                     _putrsXLCD:
  3520                           	opt stack 25
  3521                           
  3522                           ;incstack = 0
  3523  002AE2  D019               	goto	l2979
  3524  002AE4                     l2973:
  3525  002AE4  EC73  F016         	call	_BusyXLCD	;wreg free
  3526  002AE8  0900               	iorlw	0
  3527  002AEA  A4D8               	btfss	status,2,c
  3528  002AEC  D7FB               	goto	l2973
  3529  002AEE  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3530  002AF2  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3531  002AF6  6AF8               	clrf	tblptru,c
  3532  002AF8  0E07               	movlw	(high __ramtop+-1)
  3533  002AFA  64F7               	cpfsgt	tblptrh,c
  3534  002AFC  D003               	bra	u2897
  3535  002AFE  0008               	tblrd		*
  3536  002B00  50F5               	movf	tablat,w,c
  3537  002B02  D005               	bra	u2890
  3538  002B04                     u2897:
  3539  002B04  CFF6 FFE1          	movff	tblptrl,fsr1l
  3540  002B08  CFF7 FFE2          	movff	tblptrh,fsr1h
  3541  002B0C  50E7               	movf	indf1,w,c
  3542  002B0E                     u2890:
  3543  002B0E  EC54  F016         	call	_WriteDataXLCD
  3544  002B12  4A11               	infsnz	putrsXLCD@buffer,f,c
  3545  002B14  2A12               	incf	putrsXLCD@buffer+1,f,c
  3546  002B16                     l2979:
  3547  002B16  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3548  002B1A  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3549  002B1E  6AF8               	clrf	tblptru,c
  3550  002B20  0E07               	movlw	(high __ramtop+-1)
  3551  002B22  64F7               	cpfsgt	tblptrh,c
  3552  002B24  D003               	bra	u2907
  3553  002B26  0008               	tblrd		*
  3554  002B28  50F5               	movf	tablat,w,c
  3555  002B2A  D005               	bra	u2900
  3556  002B2C                     u2907:
  3557  002B2C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3558  002B30  CFF7 FFE2          	movff	tblptrh,fsr1h
  3559  002B34  50E7               	movf	indf1,w,c
  3560  002B36                     u2900:
  3561  002B36  0900               	iorlw	0
  3562  002B38  B4D8               	btfsc	status,2,c
  3563  002B3A  0012               	return	
  3564  002B3C  D7D3               	goto	l2973
  3565  002B3E                     __end_of_putrsXLCD:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           intcon	equ	0xFF2
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           indf1	equ	0xFE7
  3575                           postinc1	equ	0xFE6
  3576                           postdec1	equ	0xFE5
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           postinc2	equ	0xFDE
  3580                           postdec2	equ	0xFDD
  3581                           plusw2	equ	0xFDB
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function _WriteDataXLCD *****************
  3587 ;; Defined at:
  3588 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  data            1    wreg     unsigned char 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  data            1   15[COMRAM] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0
  3603 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3605 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3606 ;;Total ram usage:        1 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    3
  3609 ;; This function calls:
  3610 ;;		_DelayFor18TCY
  3611 ;; This function is called by:
  3612 ;;		_putrsXLCD
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text12
  3617  002CA8                     __ptext12:
  3618                           	opt stack 0
  3619  002CA8                     _WriteDataXLCD:
  3620                           	opt stack 25
  3621                           
  3622                           ;incstack = 0
  3623                           ;WriteDataXLCD@data stored from wreg
  3624  002CA8  6E10               	movwf	WriteDataXLCD@data,c
  3625  002CAA  0EF0               	movlw	240
  3626  002CAC  1693               	andwf	3987,f,c	;volatile
  3627  002CAE  0EF0               	movlw	240
  3628  002CB0  1681               	andwf	3969,f,c	;volatile
  3629  002CB2  3810               	swapf	WriteDataXLCD@data,w,c
  3630  002CB4  0B0F               	andlw	15
  3631  002CB6  0B0F               	andlw	15
  3632  002CB8  1281               	iorwf	3969,f,c	;volatile
  3633  002CBA  8A8A               	bsf	3978,5,c	;volatile
  3634  002CBC  9C8A               	bcf	3978,6,c	;volatile
  3635  002CBE  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3636  002CC2  888A               	bsf	3978,4,c	;volatile
  3637  002CC4  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3638  002CC8  988A               	bcf	3978,4,c	;volatile
  3639  002CCA  0EF0               	movlw	240
  3640  002CCC  1681               	andwf	3969,f,c	;volatile
  3641  002CCE  5010               	movf	WriteDataXLCD@data,w,c
  3642  002CD0  0B0F               	andlw	15
  3643  002CD2  1281               	iorwf	3969,f,c	;volatile
  3644  002CD4  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3645  002CD8  888A               	bsf	3978,4,c	;volatile
  3646  002CDA  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3647  002CDE  988A               	bcf	3978,4,c	;volatile
  3648  002CE0  0E0F               	movlw	15
  3649  002CE2  1293               	iorwf	3987,f,c	;volatile
  3650  002CE4  0012               	return	
  3651  002CE6                     __end_of_WriteDataXLCD:
  3652                           	opt stack 0
  3653                           tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           intcon	equ	0xFF2
  3658                           postinc0	equ	0xFEE
  3659                           wreg	equ	0xFE8
  3660                           indf1	equ	0xFE7
  3661                           postinc1	equ	0xFE6
  3662                           postdec1	equ	0xFE5
  3663                           fsr1h	equ	0xFE2
  3664                           fsr1l	equ	0xFE1
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           plusw2	equ	0xFDB
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _BusyXLCD *****************
  3673 ;; Defined at:
  3674 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      unsigned char 
  3681 ;; Registers used:
  3682 ;;		wreg, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    3
  3695 ;; This function calls:
  3696 ;;		_DelayFor18TCY
  3697 ;; This function is called by:
  3698 ;;		_init_XLCD
  3699 ;;		_OpenXLCD
  3700 ;;		_putrsXLCD
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text13
  3705  002CE6                     __ptext13:
  3706                           	opt stack 0
  3707  002CE6                     _BusyXLCD:
  3708                           	opt stack 25
  3709                           
  3710                           ;incstack = 0
  3711  002CE6  8C8A               	bsf	3978,6,c	;volatile
  3712  002CE8  9A8A               	bcf	3978,5,c	;volatile
  3713  002CEA  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3714  002CEE  888A               	bsf	3978,4,c	;volatile
  3715  002CF0  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3716  002CF4  A681               	btfss	3969,3,c	;volatile
  3717  002CF6  D00A               	goto	l369
  3718  002CF8  988A               	bcf	3978,4,c	;volatile
  3719  002CFA  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3720  002CFE  888A               	bsf	3978,4,c	;volatile
  3721  002D00  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3722  002D04  988A               	bcf	3978,4,c	;volatile
  3723  002D06  9C8A               	bcf	3978,6,c	;volatile
  3724  002D08  0E01               	movlw	1
  3725  002D0A  0012               	return	
  3726  002D0C                     l369:
  3727  002D0C  988A               	bcf	3978,4,c	;volatile
  3728  002D0E  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3729  002D12  888A               	bsf	3978,4,c	;volatile
  3730  002D14  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  3731  002D18  988A               	bcf	3978,4,c	;volatile
  3732  002D1A  9C8A               	bcf	3978,6,c	;volatile
  3733  002D1C  0E00               	movlw	0
  3734  002D1E  0012               	return	
  3735  002D20                     __end_of_BusyXLCD:
  3736                           	opt stack 0
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           intcon	equ	0xFF2
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           indf1	equ	0xFE7
  3745                           postinc1	equ	0xFE6
  3746                           postdec1	equ	0xFE5
  3747                           fsr1h	equ	0xFE2
  3748                           fsr1l	equ	0xFE1
  3749                           postinc2	equ	0xFDE
  3750                           postdec2	equ	0xFDD
  3751                           plusw2	equ	0xFDB
  3752                           fsr2h	equ	0xFDA
  3753                           fsr2l	equ	0xFD9
  3754                           status	equ	0xFD8
  3755                           
  3756 ;; *************** function _convert_float_to_char *****************
  3757 ;; Defined at:
  3758 ;;		line 22 in file "ad.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  valor           3    8[BANK0 ] float 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  f1              3   18[BANK0 ] float 
  3763 ;;  f2              3   11[BANK0 ] float 
  3764 ;;  i2              2   16[BANK0 ] int 
  3765 ;;  i1              2   14[BANK0 ] int 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3775 ;;      Params:         0       3       0       0       0       0       0       0       0
  3776 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3778 ;;      Totals:         0      13       0       0       0       0       0       0       0
  3779 ;;Total ram usage:       13 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    4
  3782 ;; This function calls:
  3783 ;;		___ftadd
  3784 ;;		___ftmul
  3785 ;;		___ftneg
  3786 ;;		___fttol
  3787 ;;		_floor
  3788 ;;		_sprintf
  3789 ;; This function is called by:
  3790 ;;		_exibir_lcd
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text14
  3795  0023FC                     __ptext14:
  3796                           	opt stack 0
  3797  0023FC                     _convert_float_to_char:
  3798                           	opt stack 25
  3799                           
  3800                           ;ad.c: 23: float f1,f2;
  3801                           ;ad.c: 24: int i1,i2;
  3802                           ;ad.c: 25: valor=valor*100;
  3803                           
  3804                           ;incstack = 0
  3805  0023FC  C068  F01A         	movff	convert_float_to_char@valor,___ftmul@f1
  3806  002400  C069  F01B         	movff	convert_float_to_char@valor+1,___ftmul@f1+1
  3807  002404  C06A  F01C         	movff	convert_float_to_char@valor+2,___ftmul@f1+2
  3808  002408  0E00               	movlw	0
  3809  00240A  6E1D               	movwf	___ftmul@f2,c
  3810  00240C  0EC8               	movlw	200
  3811  00240E  6E1E               	movwf	___ftmul@f2+1,c
  3812  002410  0E42               	movlw	66
  3813  002412  6E1F               	movwf	___ftmul@f2+2,c
  3814  002414  EC0B  F011         	call	___ftmul	;wreg free
  3815  002418  C01A  F068         	movff	?___ftmul,convert_float_to_char@valor
  3816  00241C  C01B  F069         	movff	?___ftmul+1,convert_float_to_char@valor+1
  3817  002420  C01C  F06A         	movff	?___ftmul+2,convert_float_to_char@valor+2
  3818                           
  3819                           ;ad.c: 26: f1=floor(valor);
  3820  002424  C068  F060         	movff	convert_float_to_char@valor,floor@x
  3821  002428  C069  F061         	movff	convert_float_to_char@valor+1,floor@x+1
  3822  00242C  C06A  F062         	movff	convert_float_to_char@valor+2,floor@x+2
  3823  002430  EC85  F011         	call	_floor	;wreg free
  3824  002434  C060  F072         	movff	?_floor,convert_float_to_char@f1
  3825  002438  C061  F073         	movff	?_floor+1,convert_float_to_char@f1+1
  3826  00243C  C062  F074         	movff	?_floor+2,convert_float_to_char@f1+2
  3827                           
  3828                           ;ad.c: 27: f2=valor - f1;
  3829  002440  C072  F00F         	movff	convert_float_to_char@f1,___ftneg@f1
  3830  002444  C073  F010         	movff	convert_float_to_char@f1+1,___ftneg@f1+1
  3831  002448  C074  F011         	movff	convert_float_to_char@f1+2,___ftneg@f1+2
  3832  00244C  EC90  F016         	call	___ftneg	;wreg free
  3833  002450  C00F  F017         	movff	?___ftneg,___ftadd@f1
  3834  002454  C010  F018         	movff	?___ftneg+1,___ftadd@f1+1
  3835  002458  C011  F019         	movff	?___ftneg+2,___ftadd@f1+2
  3836  00245C  C068  F01A         	movff	convert_float_to_char@valor,___ftadd@f2
  3837  002460  C069  F01B         	movff	convert_float_to_char@valor+1,___ftadd@f2+1
  3838  002464  C06A  F01C         	movff	convert_float_to_char@valor+2,___ftadd@f2+2
  3839  002468  EC0C  F00D         	call	___ftadd	;wreg free
  3840  00246C  C017  F06B         	movff	?___ftadd,convert_float_to_char@f2
  3841  002470  C018  F06C         	movff	?___ftadd+1,convert_float_to_char@f2+1
  3842  002474  C019  F06D         	movff	?___ftadd+2,convert_float_to_char@f2+2
  3843                           
  3844                           ;ad.c: 28: i1 = (int)f1;
  3845  002478  C072  F029         	movff	convert_float_to_char@f1,___fttol@f1
  3846  00247C  C073  F02A         	movff	convert_float_to_char@f1+1,___fttol@f1+1
  3847  002480  C074  F02B         	movff	convert_float_to_char@f1+2,___fttol@f1+2
  3848  002484  EC91  F010         	call	___fttol	;wreg free
  3849  002488  C029  F06E         	movff	?___fttol,convert_float_to_char@i1
  3850  00248C  C02A  F06F         	movff	?___fttol+1,convert_float_to_char@i1+1
  3851                           
  3852                           ;ad.c: 29: i2 = (int)(100*f2);
  3853  002490  0E00               	movlw	0
  3854  002492  6E1D               	movwf	___ftmul@f2,c
  3855  002494  0EC8               	movlw	200
  3856  002496  6E1E               	movwf	___ftmul@f2+1,c
  3857  002498  0E42               	movlw	66
  3858  00249A  6E1F               	movwf	___ftmul@f2+2,c
  3859  00249C  C06B  F01A         	movff	convert_float_to_char@f2,___ftmul@f1
  3860  0024A0  C06C  F01B         	movff	convert_float_to_char@f2+1,___ftmul@f1+1
  3861  0024A4  C06D  F01C         	movff	convert_float_to_char@f2+2,___ftmul@f1+2
  3862  0024A8  EC0B  F011         	call	___ftmul	;wreg free
  3863  0024AC  C01A  F029         	movff	?___ftmul,___fttol@f1
  3864  0024B0  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
  3865  0024B4  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
  3866  0024B8  EC91  F010         	call	___fttol	;wreg free
  3867  0024BC  C029  F070         	movff	?___fttol,convert_float_to_char@i2
  3868  0024C0  C02A  F071         	movff	?___fttol+1,convert_float_to_char@i2+1
  3869                           
  3870                           ;ad.c: 30: sprintf(temperatura_display,"%d,%d oC        ", i1,i2);
  3871  0024C4  0EB0               	movlw	low _temperatura_display
  3872  0024C6  6E1B               	movwf	sprintf@sp,c
  3873  0024C8  0E00               	movlw	high _temperatura_display
  3874  0024CA  6E1C               	movwf	sprintf@sp+1,c
  3875  0024CC  0E70               	movlw	low STR_1
  3876  0024CE  6E1D               	movwf	sprintf@f,c
  3877  0024D0  0E08               	movlw	high STR_1
  3878  0024D2  6E1E               	movwf	sprintf@f+1,c
  3879  0024D4  C06E  F01F         	movff	convert_float_to_char@i1,?_sprintf+4
  3880  0024D8  C06F  F020         	movff	convert_float_to_char@i1+1,?_sprintf+5
  3881  0024DC  C070  F021         	movff	convert_float_to_char@i2,?_sprintf+6
  3882  0024E0  C071  F022         	movff	convert_float_to_char@i2+1,?_sprintf+7
  3883  0024E4  ECB4  F00E         	call	_sprintf	;wreg free
  3884  0024E8  0012               	return		;funcret
  3885  0024EA                     __end_of_convert_float_to_char:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           intcon	equ	0xFF2
  3892                           postinc0	equ	0xFEE
  3893                           wreg	equ	0xFE8
  3894                           indf1	equ	0xFE7
  3895                           postinc1	equ	0xFE6
  3896                           postdec1	equ	0xFE5
  3897                           fsr1h	equ	0xFE2
  3898                           fsr1l	equ	0xFE1
  3899                           postinc2	equ	0xFDE
  3900                           postdec2	equ	0xFDD
  3901                           plusw2	equ	0xFDB
  3902                           fsr2h	equ	0xFDA
  3903                           fsr2l	equ	0xFD9
  3904                           status	equ	0xFD8
  3905                           
  3906 ;; *************** function _sprintf *****************
  3907 ;; Defined at:
  3908 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  sp              2   26[COMRAM] PTR unsigned char 
  3911 ;;		 -> exibir_lcd@str(16), temperatura_display(10), 
  3912 ;;  f               2   28[COMRAM] PTR const unsigned char 
  3913 ;;		 -> STR_4(23), STR_3(22), STR_2(22), STR_1(17), 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  tmpval          4    0        struct .
  3916 ;;  cp              3    0        PTR const unsigned char 
  3917 ;;  val             2   47[COMRAM] unsigned int 
  3918 ;;  ap              2   43[COMRAM] PTR void [1]
  3919 ;;		 -> ?_sprintf(2), 
  3920 ;;  len             2    0        unsigned int 
  3921 ;;  c               1   49[COMRAM] char 
  3922 ;;  prec            1   46[COMRAM] char 
  3923 ;;  flag            1   45[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2   26[COMRAM] int 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:        16       0       0       0       0       0       0       0       0
  3934 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3935 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3936 ;;      Totals:        24       0       0       0       0       0       0       0       0
  3937 ;;Total ram usage:       24 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    2
  3940 ;; This function calls:
  3941 ;;		___lwdiv
  3942 ;;		___lwmod
  3943 ;; This function is called by:
  3944 ;;		_convert_float_to_char
  3945 ;;		_exibir_lcd
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text15
  3950  001D68                     __ptext15:
  3951                           	opt stack 0
  3952  001D68                     _sprintf:
  3953                           	opt stack 27
  3954                           
  3955                           ;doprnt.c: 494: va_list ap;
  3956                           ;doprnt.c: 499: signed char c;
  3957                           ;doprnt.c: 506: signed char prec;
  3958                           ;doprnt.c: 508: unsigned char flag;
  3959                           ;doprnt.c: 523: union {
  3960                           ;doprnt.c: 524: unsigned long vd;
  3961                           ;doprnt.c: 525: double integ;
  3962                           ;doprnt.c: 526: } tmpval;
  3963                           ;doprnt.c: 528: unsigned int val;
  3964                           ;doprnt.c: 529: unsigned len;
  3965                           ;doprnt.c: 530: const char * cp;
  3966                           ;doprnt.c: 533: *ap = __va_start();
  3967                           
  3968                           ;incstack = 0
  3969  001D68  0E1F               	movlw	low (?_sprintf+4)
  3970  001D6A  6E2C               	movwf	sprintf@ap,c
  3971  001D6C  0E00               	movlw	high (?_sprintf+4)
  3972  001D6E  6E2D               	movwf	sprintf@ap+1,c
  3973                           
  3974                           ;doprnt.c: 536: while(c = *f++) {
  3975  001D70  D08C               	goto	l2719
  3976  001D72                     l2667:
  3977                           
  3978                           ;doprnt.c: 538: if(c != '%')
  3979  001D72  0E25               	movlw	37
  3980  001D74  1832               	xorwf	sprintf@c,w,c
  3981  001D76  B4D8               	btfsc	status,2,c
  3982  001D78  D009               	goto	l2673
  3983                           
  3984                           ;doprnt.c: 540: {
  3985                           ;doprnt.c: 541: ((*sp++ = (c)));
  3986  001D7A  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3987  001D7E  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3988  001D82  C032  FFDF         	movff	sprintf@c,indf2
  3989  001D86  4A1B               	infsnz	sprintf@sp,f,c
  3990  001D88  2A1C               	incf	sprintf@sp+1,f,c
  3991                           
  3992                           ;doprnt.c: 542: continue;
  3993  001D8A  D07F               	goto	l2719
  3994  001D8C                     l2673:
  3995                           
  3996                           ;doprnt.c: 543: }
  3997                           ;doprnt.c: 548: flag = 0;
  3998  001D8C  0E00               	movlw	0
  3999  001D8E  6E2E               	movwf	sprintf@flag,c
  4000                           
  4001                           ;doprnt.c: 822: }
  4002                           
  4003                           ;doprnt.c: 813: continue;
  4004                           
  4005                           ;doprnt.c: 802: default:
  4006                           
  4007                           ;doprnt.c: 698: case 'i':
  4008                           ;doprnt.c: 699: break;
  4009                           
  4010                           ;doprnt.c: 697: case 'd':
  4011                           
  4012                           ;doprnt.c: 638: goto alldone;
  4013                           
  4014                           ;doprnt.c: 637: case 0:
  4015                           
  4016                           ;doprnt.c: 635: switch(c = *f++) {
  4017  001D90  C01D  FFF6         	movff	sprintf@f,tblptrl
  4018  001D94  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  4019  001D98  4A1D               	infsnz	sprintf@f,f,c
  4020  001D9A  2A1E               	incf	sprintf@f+1,f,c
  4021  001D9C                     	if	0	;tblptru may be non-zero
  4022  001D9C                     	endif
  4023  001D9C                     	if	0	;tblptru may be non-zero
  4024  001D9C                     	endif
  4025  001D9C  0008               	tblrd		*
  4026  001D9E  CFF5 F032          	movff	tablat,sprintf@c
  4027  001DA2  5032               	movf	sprintf@c,w,c
  4028                           
  4029                           ; Switch size 1, requested type "space"
  4030                           ; Number of cases is 3, Range of values is 0 to 105
  4031                           ; switch strategies available:
  4032                           ; Name         Instructions Cycles
  4033                           ; simple_byte           10     6 (average)
  4034                           ;	Chosen strategy is simple_byte
  4035  001DA4  0A00               	xorlw	0	; case 0
  4036  001DA6  B4D8               	btfsc	status,2,c
  4037  001DA8  D07C               	goto	l2721
  4038  001DAA  0A64               	xorlw	100	; case 100
  4039  001DAC  B4D8               	btfsc	status,2,c
  4040  001DAE  D003               	goto	l2679
  4041  001DB0  0A0D               	xorlw	13	; case 105
  4042  001DB2  A4D8               	btfss	status,2,c
  4043  001DB4  D06A               	goto	l2719
  4044  001DB6                     l2679:
  4045                           
  4046                           ;doprnt.c: 1253: {
  4047                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4048  001DB6  C02C  FFD9         	movff	sprintf@ap,fsr2l
  4049  001DBA  C02D  FFDA         	movff	sprintf@ap+1,fsr2h
  4050  001DBE  CFDE F030          	movff	postinc2,sprintf@val
  4051  001DC2  CFDD F031          	movff	postdec2,sprintf@val+1
  4052  001DC6  0E02               	movlw	2
  4053  001DC8  262C               	addwf	sprintf@ap,f,c
  4054  001DCA  0E00               	movlw	0
  4055  001DCC  222D               	addwfc	sprintf@ap+1,f,c
  4056                           
  4057                           ;doprnt.c: 1261: if((int)val < 0) {
  4058  001DCE  AE31               	btfss	sprintf@val+1,7,c
  4059  001DD0  D006               	goto	l2689
  4060                           
  4061                           ;doprnt.c: 1262: flag |= 0x03;
  4062  001DD2  0E03               	movlw	3
  4063  001DD4  122E               	iorwf	sprintf@flag,f,c
  4064                           
  4065                           ;doprnt.c: 1263: val = -val;
  4066  001DD6  6C30               	negf	sprintf@val,c
  4067  001DD8  1E31               	comf	sprintf@val+1,f,c
  4068  001DDA  B0D8               	btfsc	status,0,c
  4069  001DDC  2A31               	incf	sprintf@val+1,f,c
  4070  001DDE                     l2689:
  4071                           
  4072                           ;doprnt.c: 1264: }
  4073                           ;doprnt.c: 1266: }
  4074                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4075  001DDE  0E01               	movlw	1
  4076  001DE0  6E32               	movwf	sprintf@c,c
  4077  001DE2                     l2691:
  4078  001DE2  0E05               	movlw	5
  4079  001DE4  1832               	xorwf	sprintf@c,w,c
  4080  001DE6  B4D8               	btfsc	status,2,c
  4081  001DE8  D012               	goto	l2703
  4082                           
  4083                           ;doprnt.c: 1306: if(val < dpowers[c])
  4084  001DEA  5032               	movf	sprintf@c,w,c
  4085  001DEC  0D02               	mullw	2
  4086  001DEE  0E01               	movlw	low _dpowers
  4087  001DF0  24F3               	addwf	prodl,w,c
  4088  001DF2  6EF6               	movwf	tblptrl,c
  4089  001DF4  0E08               	movlw	high _dpowers
  4090  001DF6  20F4               	addwfc	prodh,w,c
  4091  001DF8  6EF7               	movwf	tblptrh,c
  4092  001DFA                     	if	0	;There are less than 3 active tblptr bytes
  4093  001DFA                     	endif
  4094  001DFA  0009               	tblrd		*+
  4095  001DFC  50F5               	movf	tablat,w,c
  4096  001DFE  5C30               	subwf	sprintf@val,w,c
  4097  001E00  0009               	tblrd		*+
  4098  001E02  50F5               	movf	tablat,w,c
  4099  001E04  5831               	subwfb	sprintf@val+1,w,c
  4100  001E06  A0D8               	btfss	status,0,c
  4101  001E08  D002               	goto	l2703
  4102                           
  4103                           ;doprnt.c: 1307: break;
  4104  001E0A  2A32               	incf	sprintf@c,f,c
  4105  001E0C  D7EA               	goto	l2691
  4106  001E0E                     l2703:
  4107                           
  4108                           ;doprnt.c: 1422: {
  4109                           ;doprnt.c: 1438: if(flag & 0x03)
  4110  001E0E  C02E  F02B         	movff	sprintf@flag,??_sprintf
  4111  001E12  0E03               	movlw	3
  4112  001E14  162B               	andwf	??_sprintf,f,c
  4113  001E16  B4D8               	btfsc	status,2,c
  4114  001E18  D008               	goto	l2709
  4115                           
  4116                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4117  001E1A  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4118  001E1E  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4119  001E22  0E2D               	movlw	45
  4120  001E24  6EDF               	movwf	indf2,c
  4121  001E26  4A1B               	infsnz	sprintf@sp,f,c
  4122  001E28  2A1C               	incf	sprintf@sp+1,f,c
  4123  001E2A                     l2709:
  4124                           
  4125                           ;doprnt.c: 1469: }
  4126                           ;doprnt.c: 1472: prec = c;
  4127  001E2A  C032  F02F         	movff	sprintf@c,sprintf@prec
  4128                           
  4129                           ;doprnt.c: 1474: while(prec--) {
  4130  001E2E  D029               	goto	l2717
  4131  001E30                     l2711:
  4132                           
  4133                           ;doprnt.c: 1478: {
  4134                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4135  001E30  502F               	movf	sprintf@prec,w,c
  4136  001E32  0D02               	mullw	2
  4137  001E34  0E01               	movlw	low _dpowers
  4138  001E36  24F3               	addwf	prodl,w,c
  4139  001E38  6EF6               	movwf	tblptrl,c
  4140  001E3A  0E08               	movlw	high _dpowers
  4141  001E3C  20F4               	addwfc	prodh,w,c
  4142  001E3E  6EF7               	movwf	tblptrh,c
  4143  001E40                     	if	0	;There are less than 3 active tblptr bytes
  4144  001E40                     	endif
  4145  001E40  0009               	tblrd		*+
  4146  001E42  CFF5 F011          	movff	tablat,___lwdiv@divisor
  4147  001E46  000A               	tblrd		*-
  4148  001E48  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  4149  001E4C  C030  F00F         	movff	sprintf@val,___lwdiv@dividend
  4150  001E50  C031  F010         	movff	sprintf@val+1,___lwdiv@dividend+1
  4151  001E54  ECC8  F015         	call	___lwdiv	;wreg free
  4152  001E58  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  4153  001E5C  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  4154  001E60  0E00               	movlw	0
  4155  001E62  6E19               	movwf	___lwmod@divisor+1,c
  4156  001E64  0E0A               	movlw	10
  4157  001E66  6E18               	movwf	___lwmod@divisor,c
  4158  001E68  EC14  F016         	call	___lwmod	;wreg free
  4159  001E6C  5016               	movf	?___lwmod,w,c
  4160  001E6E  0F30               	addlw	48
  4161  001E70  6E32               	movwf	sprintf@c,c
  4162                           
  4163                           ;doprnt.c: 1523: }
  4164                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4165  001E72  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4166  001E76  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4167  001E7A  C032  FFDF         	movff	sprintf@c,indf2
  4168  001E7E  4A1B               	infsnz	sprintf@sp,f,c
  4169  001E80  2A1C               	incf	sprintf@sp+1,f,c
  4170  001E82                     l2717:
  4171  001E82  062F               	decf	sprintf@prec,f,c
  4172  001E84  282F               	incf	sprintf@prec,w,c
  4173  001E86  A4D8               	btfss	status,2,c
  4174  001E88  D7D3               	goto	l2711
  4175  001E8A                     l2719:
  4176  001E8A  C01D  FFF6         	movff	sprintf@f,tblptrl
  4177  001E8E  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  4178  001E92  4A1D               	infsnz	sprintf@f,f,c
  4179  001E94  2A1E               	incf	sprintf@f+1,f,c
  4180  001E96                     	if	0	;tblptru may be non-zero
  4181  001E96                     	endif
  4182  001E96                     	if	0	;tblptru may be non-zero
  4183  001E96                     	endif
  4184  001E96  0008               	tblrd		*
  4185  001E98  CFF5 F032          	movff	tablat,sprintf@c
  4186  001E9C  5032               	movf	sprintf@c,w,c
  4187  001E9E  A4D8               	btfss	status,2,c
  4188  001EA0  D768               	goto	l2667
  4189  001EA2                     l2721:
  4190                           
  4191                           ;doprnt.c: 1538: *sp = 0;
  4192  001EA2  C01B  FFD9         	movff	sprintf@sp,fsr2l
  4193  001EA6  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  4194  001EAA  0E00               	movlw	0
  4195  001EAC  6EDF               	movwf	indf2,c
  4196  001EAE  0012               	return	
  4197  001EB0                     __end_of_sprintf:
  4198                           	opt stack 0
  4199                           tblptru	equ	0xFF8
  4200                           tblptrh	equ	0xFF7
  4201                           tblptrl	equ	0xFF6
  4202                           tablat	equ	0xFF5
  4203                           prodh	equ	0xFF4
  4204                           prodl	equ	0xFF3
  4205                           intcon	equ	0xFF2
  4206                           postinc0	equ	0xFEE
  4207                           wreg	equ	0xFE8
  4208                           indf1	equ	0xFE7
  4209                           postinc1	equ	0xFE6
  4210                           postdec1	equ	0xFE5
  4211                           fsr1h	equ	0xFE2
  4212                           fsr1l	equ	0xFE1
  4213                           indf2	equ	0xFDF
  4214                           postinc2	equ	0xFDE
  4215                           postdec2	equ	0xFDD
  4216                           plusw2	equ	0xFDB
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function ___lwmod *****************
  4222 ;; Defined at:
  4223 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  dividend        2   21[COMRAM] unsigned int 
  4226 ;;  divisor         2   23[COMRAM] unsigned int 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  counter         1   25[COMRAM] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  2   21[COMRAM] unsigned int 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4238 ;;      Params:         4       0       0       0       0       0       0       0       0
  4239 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4241 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4242 ;;Total ram usage:        5 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_sprintf
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text16
  4253  002C28                     __ptext16:
  4254                           	opt stack 0
  4255  002C28                     ___lwmod:
  4256                           	opt stack 27
  4257                           
  4258                           ;incstack = 0
  4259  002C28  5018               	movf	___lwmod@divisor,w,c
  4260  002C2A  1019               	iorwf	___lwmod@divisor+1,w,c
  4261  002C2C  B4D8               	btfsc	status,2,c
  4262  002C2E  D018               	goto	l918
  4263  002C30  0E01               	movlw	1
  4264  002C32  6E1A               	movwf	___lwmod@counter,c
  4265  002C34  D004               	goto	l2631
  4266  002C36                     l2629:
  4267  002C36  90D8               	bcf	status,0,c
  4268  002C38  3618               	rlcf	___lwmod@divisor,f,c
  4269  002C3A  3619               	rlcf	___lwmod@divisor+1,f,c
  4270  002C3C  2A1A               	incf	___lwmod@counter,f,c
  4271  002C3E                     l2631:
  4272  002C3E  AE19               	btfss	___lwmod@divisor+1,7,c
  4273  002C40  D7FA               	goto	l2629
  4274  002C42                     l2633:
  4275  002C42  5018               	movf	___lwmod@divisor,w,c
  4276  002C44  5C16               	subwf	___lwmod@dividend,w,c
  4277  002C46  5019               	movf	___lwmod@divisor+1,w,c
  4278  002C48  5817               	subwfb	___lwmod@dividend+1,w,c
  4279  002C4A  A0D8               	btfss	status,0,c
  4280  002C4C  D004               	goto	l2637
  4281  002C4E  5018               	movf	___lwmod@divisor,w,c
  4282  002C50  5E16               	subwf	___lwmod@dividend,f,c
  4283  002C52  5019               	movf	___lwmod@divisor+1,w,c
  4284  002C54  5A17               	subwfb	___lwmod@dividend+1,f,c
  4285  002C56                     l2637:
  4286  002C56  90D8               	bcf	status,0,c
  4287  002C58  3219               	rrcf	___lwmod@divisor+1,f,c
  4288  002C5A  3218               	rrcf	___lwmod@divisor,f,c
  4289  002C5C  2E1A               	decfsz	___lwmod@counter,f,c
  4290  002C5E  D7F1               	goto	l2633
  4291  002C60                     l918:
  4292  002C60  C016  F016         	movff	___lwmod@dividend,?___lwmod
  4293  002C64  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  4294  002C68  0012               	return		;funcret
  4295  002C6A                     __end_of___lwmod:
  4296                           	opt stack 0
  4297                           tblptru	equ	0xFF8
  4298                           tblptrh	equ	0xFF7
  4299                           tblptrl	equ	0xFF6
  4300                           tablat	equ	0xFF5
  4301                           prodh	equ	0xFF4
  4302                           prodl	equ	0xFF3
  4303                           intcon	equ	0xFF2
  4304                           postinc0	equ	0xFEE
  4305                           wreg	equ	0xFE8
  4306                           indf1	equ	0xFE7
  4307                           postinc1	equ	0xFE6
  4308                           postdec1	equ	0xFE5
  4309                           fsr1h	equ	0xFE2
  4310                           fsr1l	equ	0xFE1
  4311                           indf2	equ	0xFDF
  4312                           postinc2	equ	0xFDE
  4313                           postdec2	equ	0xFDD
  4314                           plusw2	equ	0xFDB
  4315                           fsr2h	equ	0xFDA
  4316                           fsr2l	equ	0xFD9
  4317                           status	equ	0xFD8
  4318                           
  4319 ;; *************** function _floor *****************
  4320 ;; Defined at:
  4321 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\floor.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  x               3    0[BANK0 ] unsigned int 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  i               3    3[BANK0 ] unsigned int 
  4326 ;;  expon           2    6[BANK0 ] int 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  3    0[BANK0 ] int 
  4329 ;; Registers used:
  4330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4336 ;;      Params:         0       3       0       0       0       0       0       0       0
  4337 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4339 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4340 ;;Total ram usage:        8 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    3
  4343 ;; This function calls:
  4344 ;;		___altoft
  4345 ;;		___ftadd
  4346 ;;		___ftge
  4347 ;;		___fttol
  4348 ;;		_frexp
  4349 ;; This function is called by:
  4350 ;;		_convert_float_to_char
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text17
  4355  00230A                     __ptext17:
  4356                           	opt stack 0
  4357  00230A                     _floor:
  4358                           	opt stack 25
  4359                           
  4360                           ;incstack = 0
  4361  00230A  C060  F00F         	movff	floor@x,frexp@value
  4362  00230E  C061  F010         	movff	floor@x+1,frexp@value+1
  4363  002312  C062  F011         	movff	floor@x+2,frexp@value+2
  4364  002316  0E66               	movlw	low floor@expon
  4365  002318  6E12               	movwf	frexp@eptr,c
  4366  00231A  0E00               	movlw	high floor@expon
  4367  00231C  6E13               	movwf	frexp@eptr+1,c
  4368  00231E  ECC1  F014         	call	_frexp	;wreg free
  4369  002322  0100               	movlb	0	; () banked
  4370  002324  AF67               	btfss	(floor@expon+1)& (0+255),7,b
  4371  002326  D017               	goto	l3865
  4372                           
  4373                           ; BSR set to: 0
  4374  002328  0100               	movlb	0	; () banked
  4375  00232A  AF62               	btfss	(floor@x+2)& (0+255),7,b
  4376  00232C  D00A               	goto	l3861
  4377                           
  4378                           ; BSR set to: 0
  4379  00232E  0E00               	movlw	0
  4380  002330  0100               	movlb	0	; () banked
  4381  002332  6F60               	movwf	?_floor& (0+255),b
  4382  002334  0E80               	movlw	128
  4383  002336  0100               	movlb	0	; () banked
  4384  002338  6F61               	movwf	(?_floor+1)& (0+255),b
  4385  00233A  0EBF               	movlw	191
  4386  00233C  0100               	movlb	0	; () banked
  4387  00233E  6F62               	movwf	(?_floor+2)& (0+255),b
  4388                           
  4389                           ; BSR set to: 0
  4390  002340  0012               	return	
  4391  002342                     l3861:
  4392                           
  4393                           ; BSR set to: 0
  4394  002342  0E00               	movlw	0
  4395  002344  0100               	movlb	0	; () banked
  4396  002346  6F60               	movwf	?_floor& (0+255),b
  4397  002348  0E00               	movlw	0
  4398  00234A  0100               	movlb	0	; () banked
  4399  00234C  6F61               	movwf	(?_floor+1)& (0+255),b
  4400  00234E  0E00               	movlw	0
  4401  002350  0100               	movlb	0	; () banked
  4402  002352  6F62               	movwf	(?_floor+2)& (0+255),b
  4403                           
  4404                           ; BSR set to: 0
  4405  002354  0012               	return	
  4406  002356                     l3865:
  4407                           
  4408                           ; BSR set to: 0
  4409  002356  0100               	movlb	0	; () banked
  4410  002358  5167               	movf	(floor@expon+1)& (0+255),w,b
  4411  00235A  E105               	bnz	u4630
  4412  00235C  0E15               	movlw	21
  4413  00235E  0100               	movlb	0	; () banked
  4414  002360  5D66               	subwf	floor@expon& (0+255),w,b
  4415  002362  A0D8               	btfss	status,0,c
  4416  002364  D007               	goto	l3869
  4417  002366                     u4630:
  4418                           
  4419                           ; BSR set to: 0
  4420  002366  C060  F060         	movff	floor@x,?_floor
  4421  00236A  C061  F061         	movff	floor@x+1,?_floor+1
  4422  00236E  C062  F062         	movff	floor@x+2,?_floor+2
  4423  002372  0012               	return	
  4424  002374                     l3869:
  4425                           
  4426                           ; BSR set to: 0
  4427  002374  C060  F029         	movff	floor@x,___fttol@f1
  4428  002378  C061  F02A         	movff	floor@x+1,___fttol@f1+1
  4429  00237C  C062  F02B         	movff	floor@x+2,___fttol@f1+2
  4430  002380  EC91  F010         	call	___fttol	;wreg free
  4431  002384  C029  F038         	movff	?___fttol,___altoft@c
  4432  002388  C02A  F039         	movff	?___fttol+1,___altoft@c+1
  4433  00238C  C02B  F03A         	movff	?___fttol+2,___altoft@c+2
  4434  002390  C02C  F03B         	movff	?___fttol+3,___altoft@c+3
  4435  002394  ECFD  F014         	call	___altoft	;wreg free
  4436  002398  C038  F063         	movff	?___altoft,floor@i
  4437  00239C  C039  F064         	movff	?___altoft+1,floor@i+1
  4438  0023A0  C03A  F065         	movff	?___altoft+2,floor@i+2
  4439  0023A4  C060  F00F         	movff	floor@x,___ftge@ff1
  4440  0023A8  C061  F010         	movff	floor@x+1,___ftge@ff1+1
  4441  0023AC  C062  F011         	movff	floor@x+2,___ftge@ff1+2
  4442  0023B0  C063  F012         	movff	floor@i,___ftge@ff2
  4443  0023B4  C064  F013         	movff	floor@i+1,___ftge@ff2+1
  4444  0023B8  C065  F014         	movff	floor@i+2,___ftge@ff2+2
  4445  0023BC  EC37  F014         	call	___ftge	;wreg free
  4446  0023C0  B0D8               	btfsc	status,0,c
  4447  0023C2  D015               	goto	l716
  4448  0023C4  C063  F017         	movff	floor@i,___ftadd@f1
  4449  0023C8  C064  F018         	movff	floor@i+1,___ftadd@f1+1
  4450  0023CC  C065  F019         	movff	floor@i+2,___ftadd@f1+2
  4451  0023D0  0E00               	movlw	0
  4452  0023D2  6E1A               	movwf	___ftadd@f2,c
  4453  0023D4  0E80               	movlw	128
  4454  0023D6  6E1B               	movwf	___ftadd@f2+1,c
  4455  0023D8  0EBF               	movlw	191
  4456  0023DA  6E1C               	movwf	___ftadd@f2+2,c
  4457  0023DC  EC0C  F00D         	call	___ftadd	;wreg free
  4458  0023E0  C017  F060         	movff	?___ftadd,?_floor
  4459  0023E4  C018  F061         	movff	?___ftadd+1,?_floor+1
  4460  0023E8  C019  F062         	movff	?___ftadd+2,?_floor+2
  4461  0023EC  0012               	return	
  4462  0023EE                     l716:
  4463  0023EE  C063  F060         	movff	floor@i,?_floor
  4464  0023F2  C064  F061         	movff	floor@i+1,?_floor+1
  4465  0023F6  C065  F062         	movff	floor@i+2,?_floor+2
  4466  0023FA  0012               	return		;funcret
  4467  0023FC                     __end_of_floor:
  4468                           	opt stack 0
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           prodh	equ	0xFF4
  4474                           prodl	equ	0xFF3
  4475                           intcon	equ	0xFF2
  4476                           postinc0	equ	0xFEE
  4477                           wreg	equ	0xFE8
  4478                           indf1	equ	0xFE7
  4479                           postinc1	equ	0xFE6
  4480                           postdec1	equ	0xFE5
  4481                           fsr1h	equ	0xFE2
  4482                           fsr1l	equ	0xFE1
  4483                           indf2	equ	0xFDF
  4484                           postinc2	equ	0xFDE
  4485                           postdec2	equ	0xFDD
  4486                           plusw2	equ	0xFDB
  4487                           fsr2h	equ	0xFDA
  4488                           fsr2l	equ	0xFD9
  4489                           status	equ	0xFD8
  4490                           
  4491 ;; *************** function _frexp *****************
  4492 ;; Defined at:
  4493 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\frexp.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  value           3   14[COMRAM] int 
  4496 ;;  eptr            2   17[COMRAM] PTR int 
  4497 ;;		 -> floor@expon(2), 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  3   14[COMRAM] PTR int 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4509 ;;      Params:         5       0       0       0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4511 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4512 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4513 ;;Total ram usage:        7 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_floor
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text18
  4524  002982                     __ptext18:
  4525                           	opt stack 0
  4526  002982                     _frexp:
  4527                           	opt stack 26
  4528                           
  4529                           ;incstack = 0
  4530  002982  500F               	movf	frexp@value,w,c
  4531  002984  1010               	iorwf	frexp@value+1,w,c
  4532  002986  1011               	iorwf	frexp@value+2,w,c
  4533  002988  A4D8               	btfss	status,2,c
  4534  00298A  D009               	goto	l3777
  4535  00298C  C012  FFD9         	movff	frexp@eptr,fsr2l
  4536  002990  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  4537  002994  0E00               	movlw	0
  4538  002996  6EDE               	movwf	postinc2,c
  4539  002998  0E00               	movlw	0
  4540  00299A  6EDD               	movwf	postdec2,c
  4541                           
  4542                           ;	Return value of _frexp is never used
  4543  00299C  0012               	return	
  4544  00299E                     l3777:
  4545  00299E  5011               	movf	frexp@value+2,w,c
  4546  0029A0  0B7F               	andlw	127
  4547  0029A2  6E14               	movwf	??_frexp& (0+255),c
  4548  0029A4  6A15               	clrf	(??_frexp+1)& (0+255),c
  4549  0029A6  90D8               	bcf	status,0,c
  4550  0029A8  3614               	rlcf	??_frexp,f,c
  4551  0029AA  3615               	rlcf	??_frexp+1,f,c
  4552  0029AC  C012  FFD9         	movff	frexp@eptr,fsr2l
  4553  0029B0  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  4554  0029B4  C014  FFDE         	movff	??_frexp,postinc2
  4555  0029B8  C015  FFDD         	movff	??_frexp+1,postdec2
  4556  0029BC  AE10               	btfss	frexp@value+1,7,c
  4557  0029BE  D003               	goto	u4490
  4558  0029C0  6A14               	clrf	??_frexp& (0+255),c
  4559  0029C2  2A14               	incf	??_frexp& (0+255),f,c
  4560  0029C4  D001               	goto	u4498
  4561  0029C6                     u4490:
  4562  0029C6  6A14               	clrf	??_frexp& (0+255),c
  4563  0029C8                     u4498:
  4564  0029C8  5014               	movf	??_frexp,w,c
  4565  0029CA  C012  FFD9         	movff	frexp@eptr,fsr2l
  4566  0029CE  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  4567  0029D2  12DE               	iorwf	postinc2,f,c
  4568  0029D4  0E00               	movlw	0
  4569  0029D6  12DD               	iorwf	postdec2,f,c
  4570  0029D8  C012  FFD9         	movff	frexp@eptr,fsr2l
  4571  0029DC  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  4572  0029E0  0E82               	movlw	130
  4573  0029E2  26DE               	addwf	postinc2,f,c
  4574  0029E4  0EFF               	movlw	255
  4575  0029E6  22DD               	addwfc	postdec2,f,c
  4576  0029E8  8011               	bsf	frexp@value+2,0,c
  4577  0029EA  8211               	bsf	frexp@value+2,1,c
  4578  0029EC  8411               	bsf	frexp@value+2,2,c
  4579  0029EE  8611               	bsf	frexp@value+2,3,c
  4580  0029F0  8811               	bsf	frexp@value+2,4,c
  4581  0029F2  8A11               	bsf	frexp@value+2,5,c
  4582  0029F4  9C11               	bcf	frexp@value+2,6,c
  4583  0029F6  9E10               	bcf	frexp@value+1,7,c
  4584  0029F8  0012               	return	
  4585  0029FA                     __end_of_frexp:
  4586                           	opt stack 0
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           prodh	equ	0xFF4
  4592                           prodl	equ	0xFF3
  4593                           intcon	equ	0xFF2
  4594                           postinc0	equ	0xFEE
  4595                           wreg	equ	0xFE8
  4596                           indf1	equ	0xFE7
  4597                           postinc1	equ	0xFE6
  4598                           postdec1	equ	0xFE5
  4599                           fsr1h	equ	0xFE2
  4600                           fsr1l	equ	0xFE1
  4601                           indf2	equ	0xFDF
  4602                           postinc2	equ	0xFDE
  4603                           postdec2	equ	0xFDD
  4604                           plusw2	equ	0xFDB
  4605                           fsr2h	equ	0xFDA
  4606                           fsr2l	equ	0xFD9
  4607                           status	equ	0xFD8
  4608                           
  4609 ;; *************** function ___fttol *****************
  4610 ;; Defined at:
  4611 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  f1              3   40[COMRAM] float 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  lval            4   50[COMRAM] unsigned long 
  4616 ;;  exp1            1   54[COMRAM] unsigned char 
  4617 ;;  sign1           1   49[COMRAM] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  4   40[COMRAM] long 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4627 ;;      Params:         4       0       0       0       0       0       0       0       0
  4628 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4629 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4630 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4631 ;;Total ram usage:       15 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_convert_float_to_char
  4638 ;;		_floor
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text19
  4643  002122                     __ptext19:
  4644                           	opt stack 0
  4645  002122                     ___fttol:
  4646                           	opt stack 26
  4647                           
  4648                           ;incstack = 0
  4649  002122  C02B  F02D         	movff	___fttol@f1+2,??___fttol
  4650  002126  6A2E               	clrf	(??___fttol+1)& (0+255),c
  4651  002128  6A2F               	clrf	(??___fttol+2)& (0+255),c
  4652  00212A  342A               	rlcf	___fttol@f1+1,w,c
  4653  00212C  362D               	rlcf	??___fttol& (0+255),f,c
  4654  00212E  E301               	bnc	u4531
  4655  002130  802E               	bsf	(??___fttol+1)& (0+255),0,c
  4656  002132                     u4531:
  4657  002132  502D               	movf	??___fttol,w,c
  4658  002134  6E37               	movwf	___fttol@exp1,c
  4659  002136  5037               	movf	___fttol@exp1,w,c
  4660  002138  A4D8               	btfss	status,2,c
  4661  00213A  D009               	goto	l3811
  4662  00213C  0E00               	movlw	0
  4663  00213E  6E29               	movwf	?___fttol,c
  4664  002140  0E00               	movlw	0
  4665  002142  6E2A               	movwf	?___fttol+1,c
  4666  002144  0E00               	movlw	0
  4667  002146  6E2B               	movwf	?___fttol+2,c
  4668  002148  0E00               	movlw	0
  4669  00214A  6E2C               	movwf	?___fttol+3,c
  4670  00214C  0012               	return	
  4671  00214E                     l3811:
  4672  00214E  0E17               	movlw	23
  4673  002150  6E2D               	movwf	??___fttol& (0+255),c
  4674  002152  C029  F02E         	movff	___fttol@f1,??___fttol+1
  4675  002156  C02A  F02F         	movff	___fttol@f1+1,??___fttol+2
  4676  00215A  C02B  F030         	movff	___fttol@f1+2,??___fttol+3
  4677  00215E  282D               	incf	??___fttol,w,c
  4678  002160  6E31               	movwf	(??___fttol+4)& (0+255),c
  4679  002162  D004               	goto	u4550
  4680  002164                     u4555:
  4681  002164  90D8               	bcf	status,0,c
  4682  002166  3230               	rrcf	??___fttol+3,f,c
  4683  002168  322F               	rrcf	??___fttol+2,f,c
  4684  00216A  322E               	rrcf	??___fttol+1,f,c
  4685  00216C                     u4550:
  4686  00216C  2E31               	decfsz	(??___fttol+4)& (0+255),f,c
  4687  00216E  D7FA               	goto	u4555
  4688  002170  502E               	movf	??___fttol+1,w,c
  4689  002172  6E32               	movwf	___fttol@sign1,c
  4690  002174  8E2A               	bsf	___fttol@f1+1,7,c
  4691  002176  0EFF               	movlw	255
  4692  002178  1629               	andwf	___fttol@f1,f,c
  4693  00217A  0EFF               	movlw	255
  4694  00217C  162A               	andwf	___fttol@f1+1,f,c
  4695  00217E  0E00               	movlw	0
  4696  002180  162B               	andwf	___fttol@f1+2,f,c
  4697  002182  5029               	movf	___fttol@f1,w,c
  4698  002184  6E33               	movwf	___fttol@lval,c
  4699  002186  502A               	movf	___fttol@f1+1,w,c
  4700  002188  6E34               	movwf	___fttol@lval+1,c
  4701  00218A  502B               	movf	___fttol@f1+2,w,c
  4702  00218C  6E35               	movwf	___fttol@lval+2,c
  4703  00218E  6A36               	clrf	___fttol@lval+3,c
  4704  002190  0E8E               	movlw	142
  4705  002192  5E37               	subwf	___fttol@exp1,f,c
  4706  002194  AE37               	btfss	___fttol@exp1,7,c
  4707  002196  D016               	goto	l3833
  4708  002198  5037               	movf	___fttol@exp1,w,c
  4709  00219A  0A80               	xorlw	128
  4710  00219C  0F8F               	addlw	143
  4711  00219E  B0D8               	btfsc	status,0,c
  4712  0021A0  D009               	goto	l3829
  4713  0021A2  0E00               	movlw	0
  4714  0021A4  6E29               	movwf	?___fttol,c
  4715  0021A6  0E00               	movlw	0
  4716  0021A8  6E2A               	movwf	?___fttol+1,c
  4717  0021AA  0E00               	movlw	0
  4718  0021AC  6E2B               	movwf	?___fttol+2,c
  4719  0021AE  0E00               	movlw	0
  4720  0021B0  6E2C               	movwf	?___fttol+3,c
  4721  0021B2  0012               	return	
  4722  0021B4                     l3829:
  4723  0021B4  90D8               	bcf	status,0,c
  4724  0021B6  3236               	rrcf	___fttol@lval+3,f,c
  4725  0021B8  3235               	rrcf	___fttol@lval+2,f,c
  4726  0021BA  3234               	rrcf	___fttol@lval+1,f,c
  4727  0021BC  3233               	rrcf	___fttol@lval,f,c
  4728  0021BE  3E37               	incfsz	___fttol@exp1,f,c
  4729  0021C0  D7F9               	goto	l3829
  4730  0021C2  D015               	goto	l3843
  4731  0021C4                     l3833:
  4732  0021C4  0E17               	movlw	23
  4733  0021C6  6437               	cpfsgt	___fttol@exp1,c
  4734  0021C8  D00F               	goto	l3841
  4735  0021CA  0E00               	movlw	0
  4736  0021CC  6E29               	movwf	?___fttol,c
  4737  0021CE  0E00               	movlw	0
  4738  0021D0  6E2A               	movwf	?___fttol+1,c
  4739  0021D2  0E00               	movlw	0
  4740  0021D4  6E2B               	movwf	?___fttol+2,c
  4741  0021D6  0E00               	movlw	0
  4742  0021D8  6E2C               	movwf	?___fttol+3,c
  4743  0021DA  0012               	return	
  4744  0021DC                     l3839:
  4745  0021DC  90D8               	bcf	status,0,c
  4746  0021DE  3633               	rlcf	___fttol@lval,f,c
  4747  0021E0  3634               	rlcf	___fttol@lval+1,f,c
  4748  0021E2  3635               	rlcf	___fttol@lval+2,f,c
  4749  0021E4  3636               	rlcf	___fttol@lval+3,f,c
  4750  0021E6  0637               	decf	___fttol@exp1,f,c
  4751  0021E8                     l3841:
  4752  0021E8  5037               	movf	___fttol@exp1,w,c
  4753  0021EA  A4D8               	btfss	status,2,c
  4754  0021EC  D7F7               	goto	l3839
  4755  0021EE                     l3843:
  4756  0021EE  5032               	movf	___fttol@sign1,w,c
  4757  0021F0  B4D8               	btfsc	status,2,c
  4758  0021F2  D008               	goto	l3847
  4759  0021F4  1E36               	comf	___fttol@lval+3,f,c
  4760  0021F6  1E35               	comf	___fttol@lval+2,f,c
  4761  0021F8  1E34               	comf	___fttol@lval+1,f,c
  4762  0021FA  6C33               	negf	___fttol@lval,c
  4763  0021FC  0E00               	movlw	0
  4764  0021FE  2234               	addwfc	___fttol@lval+1,f,c
  4765  002200  2235               	addwfc	___fttol@lval+2,f,c
  4766  002202  2236               	addwfc	___fttol@lval+3,f,c
  4767  002204                     l3847:
  4768  002204  C033  F029         	movff	___fttol@lval,?___fttol
  4769  002208  C034  F02A         	movff	___fttol@lval+1,?___fttol+1
  4770  00220C  C035  F02B         	movff	___fttol@lval+2,?___fttol+2
  4771  002210  C036  F02C         	movff	___fttol@lval+3,?___fttol+3
  4772  002214  0012               	return	
  4773  002216                     __end_of___fttol:
  4774                           	opt stack 0
  4775                           tblptru	equ	0xFF8
  4776                           tblptrh	equ	0xFF7
  4777                           tblptrl	equ	0xFF6
  4778                           tablat	equ	0xFF5
  4779                           prodh	equ	0xFF4
  4780                           prodl	equ	0xFF3
  4781                           intcon	equ	0xFF2
  4782                           postinc0	equ	0xFEE
  4783                           wreg	equ	0xFE8
  4784                           indf1	equ	0xFE7
  4785                           postinc1	equ	0xFE6
  4786                           postdec1	equ	0xFE5
  4787                           fsr1h	equ	0xFE2
  4788                           fsr1l	equ	0xFE1
  4789                           indf2	equ	0xFDF
  4790                           postinc2	equ	0xFDE
  4791                           postdec2	equ	0xFDD
  4792                           plusw2	equ	0xFDB
  4793                           fsr2h	equ	0xFDA
  4794                           fsr2l	equ	0xFD9
  4795                           status	equ	0xFD8
  4796                           
  4797 ;; *************** function ___ftge *****************
  4798 ;; Defined at:
  4799 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  ff1             3   14[COMRAM] float 
  4802 ;;  ff2             3   17[COMRAM] float 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;		None               void
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4814 ;;      Params:         6       0       0       0       0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4816 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4817 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4818 ;;Total ram usage:        9 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    1
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_floor
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text20
  4829  00286E                     __ptext20:
  4830                           	opt stack 0
  4831  00286E                     ___ftge:
  4832                           	opt stack 26
  4833                           
  4834                           ;incstack = 0
  4835  00286E  AE11               	btfss	___ftge@ff1+2,7,c
  4836  002870  D016               	goto	l3791
  4837  002872  C00F  F015         	movff	___ftge@ff1,??___ftge
  4838  002876  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  4839  00287A  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  4840  00287E  1E15               	comf	??___ftge,f,c
  4841  002880  1E16               	comf	??___ftge+1,f,c
  4842  002882  1E17               	comf	??___ftge+2,f,c
  4843  002884  2A15               	incf	??___ftge,f,c
  4844  002886  0E00               	movlw	0
  4845  002888  2216               	addwfc	??___ftge+1,f,c
  4846  00288A  2217               	addwfc	??___ftge+2,f,c
  4847  00288C  0E00               	movlw	0
  4848  00288E  2415               	addwf	??___ftge,w,c
  4849  002890  6E0F               	movwf	___ftge@ff1,c
  4850  002892  0E00               	movlw	0
  4851  002894  2016               	addwfc	??___ftge+1,w,c
  4852  002896  6E10               	movwf	___ftge@ff1+1,c
  4853  002898  0E80               	movlw	128
  4854  00289A  2017               	addwfc	??___ftge+2,w,c
  4855  00289C  6E11               	movwf	___ftge@ff1+2,c
  4856  00289E                     l3791:
  4857  00289E  AE14               	btfss	___ftge@ff2+2,7,c
  4858  0028A0  D016               	goto	l3795
  4859  0028A2  C012  F015         	movff	___ftge@ff2,??___ftge
  4860  0028A6  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  4861  0028AA  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  4862  0028AE  1E15               	comf	??___ftge,f,c
  4863  0028B0  1E16               	comf	??___ftge+1,f,c
  4864  0028B2  1E17               	comf	??___ftge+2,f,c
  4865  0028B4  2A15               	incf	??___ftge,f,c
  4866  0028B6  0E00               	movlw	0
  4867  0028B8  2216               	addwfc	??___ftge+1,f,c
  4868  0028BA  2217               	addwfc	??___ftge+2,f,c
  4869  0028BC  0E00               	movlw	0
  4870  0028BE  2415               	addwf	??___ftge,w,c
  4871  0028C0  6E12               	movwf	___ftge@ff2,c
  4872  0028C2  0E00               	movlw	0
  4873  0028C4  2016               	addwfc	??___ftge+1,w,c
  4874  0028C6  6E13               	movwf	___ftge@ff2+1,c
  4875  0028C8  0E80               	movlw	128
  4876  0028CA  2017               	addwfc	??___ftge+2,w,c
  4877  0028CC  6E14               	movwf	___ftge@ff2+2,c
  4878  0028CE                     l3795:
  4879  0028CE  0E00               	movlw	0
  4880  0028D0  1A0F               	xorwf	___ftge@ff1,f,c
  4881  0028D2  0E00               	movlw	0
  4882  0028D4  1A10               	xorwf	___ftge@ff1+1,f,c
  4883  0028D6  0E80               	movlw	128
  4884  0028D8  1A11               	xorwf	___ftge@ff1+2,f,c
  4885  0028DA  0E00               	movlw	0
  4886  0028DC  1A12               	xorwf	___ftge@ff2,f,c
  4887  0028DE  0E00               	movlw	0
  4888  0028E0  1A13               	xorwf	___ftge@ff2+1,f,c
  4889  0028E2  0E80               	movlw	128
  4890  0028E4  1A14               	xorwf	___ftge@ff2+2,f,c
  4891  0028E6  5012               	movf	___ftge@ff2,w,c
  4892  0028E8  5C0F               	subwf	___ftge@ff1,w,c
  4893  0028EA  5013               	movf	___ftge@ff2+1,w,c
  4894  0028EC  5810               	subwfb	___ftge@ff1+1,w,c
  4895  0028EE  5014               	movf	___ftge@ff2+2,w,c
  4896  0028F0  5811               	subwfb	___ftge@ff1+2,w,c
  4897  0028F2  B0D8               	btfsc	status,0,c
  4898  0028F4  D002               	goto	l3801
  4899  0028F6  90D8               	bcf	status,0,c
  4900  0028F8  0012               	return	
  4901  0028FA                     l3801:
  4902  0028FA  80D8               	bsf	status,0,c
  4903  0028FC  0012               	return	
  4904  0028FE                     __end_of___ftge:
  4905                           	opt stack 0
  4906                           tblptru	equ	0xFF8
  4907                           tblptrh	equ	0xFF7
  4908                           tblptrl	equ	0xFF6
  4909                           tablat	equ	0xFF5
  4910                           prodh	equ	0xFF4
  4911                           prodl	equ	0xFF3
  4912                           intcon	equ	0xFF2
  4913                           postinc0	equ	0xFEE
  4914                           wreg	equ	0xFE8
  4915                           indf1	equ	0xFE7
  4916                           postinc1	equ	0xFE6
  4917                           postdec1	equ	0xFE5
  4918                           fsr1h	equ	0xFE2
  4919                           fsr1l	equ	0xFE1
  4920                           indf2	equ	0xFDF
  4921                           postinc2	equ	0xFDE
  4922                           postdec2	equ	0xFDD
  4923                           plusw2	equ	0xFDB
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           status	equ	0xFD8
  4927                           
  4928 ;; *************** function ___ftadd *****************
  4929 ;; Defined at:
  4930 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  f1              3   22[COMRAM] float 
  4933 ;;  f2              3   25[COMRAM] float 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  exp1            1   33[COMRAM] unsigned char 
  4936 ;;  exp2            1   32[COMRAM] unsigned char 
  4937 ;;  sign            1   31[COMRAM] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  3   22[COMRAM] float 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4947 ;;      Params:         6       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4949 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4950 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4951 ;;Total ram usage:       12 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    2
  4954 ;; This function calls:
  4955 ;;		___ftpack
  4956 ;; This function is called by:
  4957 ;;		_convert_float_to_char
  4958 ;;		_floor
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text21
  4963  001A18                     __ptext21:
  4964                           	opt stack 0
  4965  001A18                     ___ftadd:
  4966                           	opt stack 25
  4967                           
  4968                           ;incstack = 0
  4969  001A18  C019  F01D         	movff	___ftadd@f1+2,??___ftadd
  4970  001A1C  6A1E               	clrf	(??___ftadd+1)& (0+255),c
  4971  001A1E  6A1F               	clrf	(??___ftadd+2)& (0+255),c
  4972  001A20  3418               	rlcf	___ftadd@f1+1,w,c
  4973  001A22  361D               	rlcf	??___ftadd& (0+255),f,c
  4974  001A24  E301               	bnc	u4271
  4975  001A26  801E               	bsf	(??___ftadd+1)& (0+255),0,c
  4976  001A28                     u4271:
  4977  001A28  501D               	movf	??___ftadd,w,c
  4978  001A2A  6E22               	movwf	___ftadd@exp1,c
  4979  001A2C  C01C  F01D         	movff	___ftadd@f2+2,??___ftadd
  4980  001A30  6A1E               	clrf	(??___ftadd+1)& (0+255),c
  4981  001A32  6A1F               	clrf	(??___ftadd+2)& (0+255),c
  4982  001A34  341B               	rlcf	___ftadd@f2+1,w,c
  4983  001A36  361D               	rlcf	??___ftadd& (0+255),f,c
  4984  001A38  E301               	bnc	u4281
  4985  001A3A  801E               	bsf	(??___ftadd+1)& (0+255),0,c
  4986  001A3C                     u4281:
  4987  001A3C  501D               	movf	??___ftadd,w,c
  4988  001A3E  6E21               	movwf	___ftadd@exp2,c
  4989  001A40  5022               	movf	___ftadd@exp1,w,c
  4990  001A42  B4D8               	btfsc	status,2,c
  4991  001A44  D00B               	goto	l753
  4992  001A46  5021               	movf	___ftadd@exp2,w,c
  4993  001A48  5C22               	subwf	___ftadd@exp1,w,c
  4994  001A4A  B0D8               	btfsc	status,0,c
  4995  001A4C  D00E               	goto	l3709
  4996  001A4E  5022               	movf	___ftadd@exp1,w,c
  4997  001A50  0800               	sublw	0
  4998  001A52  2421               	addwf	___ftadd@exp2,w,c
  4999  001A54  6E1D               	movwf	??___ftadd& (0+255),c
  5000  001A56  0E18               	movlw	24
  5001  001A58  641D               	cpfsgt	??___ftadd,c
  5002  001A5A  D007               	goto	l3709
  5003  001A5C                     l753:
  5004  001A5C  C01A  F017         	movff	___ftadd@f2,?___ftadd
  5005  001A60  C01B  F018         	movff	___ftadd@f2+1,?___ftadd+1
  5006  001A64  C01C  F019         	movff	___ftadd@f2+2,?___ftadd+2
  5007  001A68  0012               	return	
  5008  001A6A                     l3709:
  5009  001A6A  5021               	movf	___ftadd@exp2,w,c
  5010  001A6C  B4D8               	btfsc	status,2,c
  5011  001A6E  D00B               	goto	l757
  5012  001A70  5022               	movf	___ftadd@exp1,w,c
  5013  001A72  5C21               	subwf	___ftadd@exp2,w,c
  5014  001A74  B0D8               	btfsc	status,0,c
  5015  001A76  D00E               	goto	l3715
  5016  001A78  5021               	movf	___ftadd@exp2,w,c
  5017  001A7A  0800               	sublw	0
  5018  001A7C  2422               	addwf	___ftadd@exp1,w,c
  5019  001A7E  6E1D               	movwf	??___ftadd& (0+255),c
  5020  001A80  0E18               	movlw	24
  5021  001A82  641D               	cpfsgt	??___ftadd,c
  5022  001A84  D007               	goto	l3715
  5023  001A86                     l757:
  5024  001A86  C017  F017         	movff	___ftadd@f1,?___ftadd
  5025  001A8A  C018  F018         	movff	___ftadd@f1+1,?___ftadd+1
  5026  001A8E  C019  F019         	movff	___ftadd@f1+2,?___ftadd+2
  5027  001A92  0012               	return	
  5028  001A94                     l3715:
  5029  001A94  0E06               	movlw	6
  5030  001A96  6E20               	movwf	___ftadd@sign,c
  5031  001A98  BE19               	btfsc	___ftadd@f1+2,7,c
  5032  001A9A  8E20               	bsf	___ftadd@sign,7,c
  5033  001A9C  BE1C               	btfsc	___ftadd@f2+2,7,c
  5034  001A9E  8C20               	bsf	___ftadd@sign,6,c
  5035  001AA0  8E18               	bsf	___ftadd@f1+1,7,c
  5036  001AA2  0EFF               	movlw	255
  5037  001AA4  1617               	andwf	___ftadd@f1,f,c
  5038  001AA6  0EFF               	movlw	255
  5039  001AA8  1618               	andwf	___ftadd@f1+1,f,c
  5040  001AAA  0E00               	movlw	0
  5041  001AAC  1619               	andwf	___ftadd@f1+2,f,c
  5042  001AAE  8E1B               	bsf	___ftadd@f2+1,7,c
  5043  001AB0  0EFF               	movlw	255
  5044  001AB2  161A               	andwf	___ftadd@f2,f,c
  5045  001AB4  0EFF               	movlw	255
  5046  001AB6  161B               	andwf	___ftadd@f2+1,f,c
  5047  001AB8  0E00               	movlw	0
  5048  001ABA  161C               	andwf	___ftadd@f2+2,f,c
  5049  001ABC  5021               	movf	___ftadd@exp2,w,c
  5050  001ABE  5C22               	subwf	___ftadd@exp1,w,c
  5051  001AC0  B0D8               	btfsc	status,0,c
  5052  001AC2  D01B               	goto	l3741
  5053  001AC4                     l3731:
  5054  001AC4  90D8               	bcf	status,0,c
  5055  001AC6  361A               	rlcf	___ftadd@f2,f,c
  5056  001AC8  361B               	rlcf	___ftadd@f2+1,f,c
  5057  001ACA  361C               	rlcf	___ftadd@f2+2,f,c
  5058  001ACC  0621               	decf	___ftadd@exp2,f,c
  5059  001ACE  5022               	movf	___ftadd@exp1,w,c
  5060  001AD0  1821               	xorwf	___ftadd@exp2,w,c
  5061  001AD2  B4D8               	btfsc	status,2,c
  5062  001AD4  D00D               	goto	l3739
  5063  001AD6  0620               	decf	___ftadd@sign,f,c
  5064  001AD8  C020  F01D         	movff	___ftadd@sign,??___ftadd
  5065  001ADC  0E07               	movlw	7
  5066  001ADE  161D               	andwf	??___ftadd,f,c
  5067  001AE0  B4D8               	btfsc	status,2,c
  5068  001AE2  D006               	goto	l3739
  5069  001AE4  D7EF               	goto	l3731
  5070  001AE6                     l3737:
  5071  001AE6  90D8               	bcf	status,0,c
  5072  001AE8  3219               	rrcf	___ftadd@f1+2,f,c
  5073  001AEA  3218               	rrcf	___ftadd@f1+1,f,c
  5074  001AEC  3217               	rrcf	___ftadd@f1,f,c
  5075  001AEE  2A22               	incf	___ftadd@exp1,f,c
  5076  001AF0                     l3739:
  5077  001AF0  5021               	movf	___ftadd@exp2,w,c
  5078  001AF2  1822               	xorwf	___ftadd@exp1,w,c
  5079  001AF4  B4D8               	btfsc	status,2,c
  5080  001AF6  D01F               	goto	l768
  5081  001AF8  D7F6               	goto	l3737
  5082  001AFA                     l3741:
  5083  001AFA  5022               	movf	___ftadd@exp1,w,c
  5084  001AFC  5C21               	subwf	___ftadd@exp2,w,c
  5085  001AFE  B0D8               	btfsc	status,0,c
  5086  001B00  D01A               	goto	l768
  5087  001B02                     l3743:
  5088  001B02  90D8               	bcf	status,0,c
  5089  001B04  3617               	rlcf	___ftadd@f1,f,c
  5090  001B06  3618               	rlcf	___ftadd@f1+1,f,c
  5091  001B08  3619               	rlcf	___ftadd@f1+2,f,c
  5092  001B0A  0622               	decf	___ftadd@exp1,f,c
  5093  001B0C  5022               	movf	___ftadd@exp1,w,c
  5094  001B0E  1821               	xorwf	___ftadd@exp2,w,c
  5095  001B10  B4D8               	btfsc	status,2,c
  5096  001B12  D00D               	goto	l3751
  5097  001B14  0620               	decf	___ftadd@sign,f,c
  5098  001B16  C020  F01D         	movff	___ftadd@sign,??___ftadd
  5099  001B1A  0E07               	movlw	7
  5100  001B1C  161D               	andwf	??___ftadd,f,c
  5101  001B1E  B4D8               	btfsc	status,2,c
  5102  001B20  D006               	goto	l3751
  5103  001B22  D7EF               	goto	l3743
  5104  001B24                     l3749:
  5105  001B24  90D8               	bcf	status,0,c
  5106  001B26  321C               	rrcf	___ftadd@f2+2,f,c
  5107  001B28  321B               	rrcf	___ftadd@f2+1,f,c
  5108  001B2A  321A               	rrcf	___ftadd@f2,f,c
  5109  001B2C  2A21               	incf	___ftadd@exp2,f,c
  5110  001B2E                     l3751:
  5111  001B2E  5021               	movf	___ftadd@exp2,w,c
  5112  001B30  1822               	xorwf	___ftadd@exp1,w,c
  5113  001B32  A4D8               	btfss	status,2,c
  5114  001B34  D7F7               	goto	l3749
  5115  001B36                     l768:
  5116  001B36  AE20               	btfss	___ftadd@sign,7,c
  5117  001B38  D00C               	goto	l777
  5118  001B3A  0EFF               	movlw	255
  5119  001B3C  1A17               	xorwf	___ftadd@f1,f,c
  5120  001B3E  0EFF               	movlw	255
  5121  001B40  1A18               	xorwf	___ftadd@f1+1,f,c
  5122  001B42  0EFF               	movlw	255
  5123  001B44  1A19               	xorwf	___ftadd@f1+2,f,c
  5124  001B46  0E01               	movlw	1
  5125  001B48  2617               	addwf	___ftadd@f1,f,c
  5126  001B4A  0E00               	movlw	0
  5127  001B4C  2218               	addwfc	___ftadd@f1+1,f,c
  5128  001B4E  0E00               	movlw	0
  5129  001B50  2219               	addwfc	___ftadd@f1+2,f,c
  5130  001B52                     l777:
  5131  001B52  AC20               	btfss	___ftadd@sign,6,c
  5132  001B54  D00C               	goto	l3757
  5133  001B56  0EFF               	movlw	255
  5134  001B58  1A1A               	xorwf	___ftadd@f2,f,c
  5135  001B5A  0EFF               	movlw	255
  5136  001B5C  1A1B               	xorwf	___ftadd@f2+1,f,c
  5137  001B5E  0EFF               	movlw	255
  5138  001B60  1A1C               	xorwf	___ftadd@f2+2,f,c
  5139  001B62  0E01               	movlw	1
  5140  001B64  261A               	addwf	___ftadd@f2,f,c
  5141  001B66  0E00               	movlw	0
  5142  001B68  221B               	addwfc	___ftadd@f2+1,f,c
  5143  001B6A  0E00               	movlw	0
  5144  001B6C  221C               	addwfc	___ftadd@f2+2,f,c
  5145  001B6E                     l3757:
  5146  001B6E  0E00               	movlw	0
  5147  001B70  6E20               	movwf	___ftadd@sign,c
  5148  001B72  5017               	movf	___ftadd@f1,w,c
  5149  001B74  261A               	addwf	___ftadd@f2,f,c
  5150  001B76  5018               	movf	___ftadd@f1+1,w,c
  5151  001B78  221B               	addwfc	___ftadd@f2+1,f,c
  5152  001B7A  5019               	movf	___ftadd@f1+2,w,c
  5153  001B7C  221C               	addwfc	___ftadd@f2+2,f,c
  5154  001B7E  AE1C               	btfss	___ftadd@f2+2,7,c
  5155  001B80  D00E               	goto	l3767
  5156  001B82  0EFF               	movlw	255
  5157  001B84  1A1A               	xorwf	___ftadd@f2,f,c
  5158  001B86  0EFF               	movlw	255
  5159  001B88  1A1B               	xorwf	___ftadd@f2+1,f,c
  5160  001B8A  0EFF               	movlw	255
  5161  001B8C  1A1C               	xorwf	___ftadd@f2+2,f,c
  5162  001B8E  0E01               	movlw	1
  5163  001B90  261A               	addwf	___ftadd@f2,f,c
  5164  001B92  0E00               	movlw	0
  5165  001B94  221B               	addwfc	___ftadd@f2+1,f,c
  5166  001B96  0E00               	movlw	0
  5167  001B98  221C               	addwfc	___ftadd@f2+2,f,c
  5168  001B9A  0E01               	movlw	1
  5169  001B9C  6E20               	movwf	___ftadd@sign,c
  5170  001B9E                     l3767:
  5171  001B9E  C01A  F00F         	movff	___ftadd@f2,___ftpack@arg
  5172  001BA2  C01B  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  5173  001BA6  C01C  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  5174  001BAA  C022  F012         	movff	___ftadd@exp1,___ftpack@exp
  5175  001BAE  C020  F013         	movff	___ftadd@sign,___ftpack@sign
  5176  001BB2  EC40  F013         	call	___ftpack	;wreg free
  5177  001BB6  C00F  F017         	movff	?___ftpack,?___ftadd
  5178  001BBA  C010  F018         	movff	?___ftpack+1,?___ftadd+1
  5179  001BBE  C011  F019         	movff	?___ftpack+2,?___ftadd+2
  5180  001BC2  0012               	return	
  5181  001BC4                     __end_of___ftadd:
  5182                           	opt stack 0
  5183                           tblptru	equ	0xFF8
  5184                           tblptrh	equ	0xFF7
  5185                           tblptrl	equ	0xFF6
  5186                           tablat	equ	0xFF5
  5187                           prodh	equ	0xFF4
  5188                           prodl	equ	0xFF3
  5189                           intcon	equ	0xFF2
  5190                           postinc0	equ	0xFEE
  5191                           wreg	equ	0xFE8
  5192                           indf1	equ	0xFE7
  5193                           postinc1	equ	0xFE6
  5194                           postdec1	equ	0xFE5
  5195                           fsr1h	equ	0xFE2
  5196                           fsr1l	equ	0xFE1
  5197                           indf2	equ	0xFDF
  5198                           postinc2	equ	0xFDE
  5199                           postdec2	equ	0xFDD
  5200                           plusw2	equ	0xFDB
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function ___altoft *****************
  5206 ;; Defined at:
  5207 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\altoft.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  c               4   55[COMRAM] long 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  sign            1   64[COMRAM] unsigned char 
  5212 ;;  exp             1   63[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  3   55[COMRAM] float 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5222 ;;      Params:         4       0       0       0       0       0       0       0       0
  5223 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5224 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5225 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5226 ;;Total ram usage:       10 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    2
  5229 ;; This function calls:
  5230 ;;		___ftpack
  5231 ;; This function is called by:
  5232 ;;		_floor
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text22
  5237  0029FA                     __ptext22:
  5238                           	opt stack 0
  5239  0029FA                     ___altoft:
  5240                           	opt stack 25
  5241                           
  5242                           ;incstack = 0
  5243  0029FA  0E00               	movlw	0
  5244  0029FC  6E41               	movwf	___altoft@sign,c
  5245  0029FE  0E8E               	movlw	142
  5246  002A00  6E40               	movwf	___altoft@exp,c
  5247  002A02  AE3B               	btfss	___altoft@c+3,7,c
  5248  002A04  D011               	goto	l3695
  5249  002A06  1E3B               	comf	___altoft@c+3,f,c
  5250  002A08  1E3A               	comf	___altoft@c+2,f,c
  5251  002A0A  1E39               	comf	___altoft@c+1,f,c
  5252  002A0C  6C38               	negf	___altoft@c,c
  5253  002A0E  0E00               	movlw	0
  5254  002A10  2239               	addwfc	___altoft@c+1,f,c
  5255  002A12  223A               	addwfc	___altoft@c+2,f,c
  5256  002A14  223B               	addwfc	___altoft@c+3,f,c
  5257  002A16  0E01               	movlw	1
  5258  002A18  6E41               	movwf	___altoft@sign,c
  5259  002A1A  D006               	goto	l3695
  5260  002A1C                     l3693:
  5261  002A1C  90D8               	bcf	status,0,c
  5262  002A1E  323B               	rrcf	___altoft@c+3,f,c
  5263  002A20  323A               	rrcf	___altoft@c+2,f,c
  5264  002A22  3239               	rrcf	___altoft@c+1,f,c
  5265  002A24  3238               	rrcf	___altoft@c,f,c
  5266  002A26  2A40               	incf	___altoft@exp,f,c
  5267  002A28                     l3695:
  5268  002A28  0E00               	movlw	0
  5269  002A2A  1438               	andwf	___altoft@c,w,c
  5270  002A2C  6E3C               	movwf	??___altoft& (0+255),c
  5271  002A2E  0E00               	movlw	0
  5272  002A30  1439               	andwf	___altoft@c+1,w,c
  5273  002A32  6E3D               	movwf	(??___altoft+1)& (0+255),c
  5274  002A34  0E00               	movlw	0
  5275  002A36  143A               	andwf	___altoft@c+2,w,c
  5276  002A38  6E3E               	movwf	(??___altoft+2)& (0+255),c
  5277  002A3A  0EFF               	movlw	255
  5278  002A3C  143B               	andwf	___altoft@c+3,w,c
  5279  002A3E  6E3F               	movwf	(??___altoft+3)& (0+255),c
  5280  002A40  503C               	movf	??___altoft,w,c
  5281  002A42  103D               	iorwf	??___altoft+1,w,c
  5282  002A44  103E               	iorwf	??___altoft+2,w,c
  5283  002A46  103F               	iorwf	??___altoft+3,w,c
  5284  002A48  A4D8               	btfss	status,2,c
  5285  002A4A  D7E8               	goto	l3693
  5286  002A4C  C038  F00F         	movff	___altoft@c,___ftpack@arg
  5287  002A50  C039  F010         	movff	___altoft@c+1,___ftpack@arg+1
  5288  002A54  C03A  F011         	movff	___altoft@c+2,___ftpack@arg+2
  5289  002A58  C040  F012         	movff	___altoft@exp,___ftpack@exp
  5290  002A5C  C041  F013         	movff	___altoft@sign,___ftpack@sign
  5291  002A60  EC40  F013         	call	___ftpack	;wreg free
  5292  002A64  C00F  F038         	movff	?___ftpack,?___altoft
  5293  002A68  C010  F039         	movff	?___ftpack+1,?___altoft+1
  5294  002A6C  C011  F03A         	movff	?___ftpack+2,?___altoft+2
  5295  002A70  0012               	return	
  5296  002A72                     __end_of___altoft:
  5297                           	opt stack 0
  5298                           tblptru	equ	0xFF8
  5299                           tblptrh	equ	0xFF7
  5300                           tblptrl	equ	0xFF6
  5301                           tablat	equ	0xFF5
  5302                           prodh	equ	0xFF4
  5303                           prodl	equ	0xFF3
  5304                           intcon	equ	0xFF2
  5305                           postinc0	equ	0xFEE
  5306                           wreg	equ	0xFE8
  5307                           indf1	equ	0xFE7
  5308                           postinc1	equ	0xFE6
  5309                           postdec1	equ	0xFE5
  5310                           fsr1h	equ	0xFE2
  5311                           fsr1l	equ	0xFE1
  5312                           indf2	equ	0xFDF
  5313                           postinc2	equ	0xFDE
  5314                           postdec2	equ	0xFDD
  5315                           plusw2	equ	0xFDB
  5316                           fsr2h	equ	0xFDA
  5317                           fsr2l	equ	0xFD9
  5318                           status	equ	0xFD8
  5319                           
  5320 ;; *************** function ___ftneg *****************
  5321 ;; Defined at:
  5322 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  f1              3   14[COMRAM] float 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  3   14[COMRAM] float 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5336 ;;      Params:         3       0       0       0       0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5339 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5340 ;;Total ram usage:        3 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_convert_float_to_char
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text23
  5351  002D20                     __ptext23:
  5352                           	opt stack 0
  5353  002D20                     ___ftneg:
  5354                           	opt stack 27
  5355                           
  5356                           ;incstack = 0
  5357  002D20  500F               	movf	___ftneg@f1,w,c
  5358  002D22  1010               	iorwf	___ftneg@f1+1,w,c
  5359  002D24  1011               	iorwf	___ftneg@f1+2,w,c
  5360  002D26  B4D8               	btfsc	status,2,c
  5361  002D28  D006               	goto	l810
  5362  002D2A  0E00               	movlw	0
  5363  002D2C  1A0F               	xorwf	___ftneg@f1,f,c
  5364  002D2E  0E00               	movlw	0
  5365  002D30  1A10               	xorwf	___ftneg@f1+1,f,c
  5366  002D32  0E80               	movlw	128
  5367  002D34  1A11               	xorwf	___ftneg@f1+2,f,c
  5368  002D36                     l810:
  5369  002D36  C00F  F00F         	movff	___ftneg@f1,?___ftneg
  5370  002D3A  C010  F010         	movff	___ftneg@f1+1,?___ftneg+1
  5371  002D3E  C011  F011         	movff	___ftneg@f1+2,?___ftneg+2
  5372  002D42  0012               	return		;funcret
  5373  002D44                     __end_of___ftneg:
  5374                           	opt stack 0
  5375                           tblptru	equ	0xFF8
  5376                           tblptrh	equ	0xFF7
  5377                           tblptrl	equ	0xFF6
  5378                           tablat	equ	0xFF5
  5379                           prodh	equ	0xFF4
  5380                           prodl	equ	0xFF3
  5381                           intcon	equ	0xFF2
  5382                           postinc0	equ	0xFEE
  5383                           wreg	equ	0xFE8
  5384                           indf1	equ	0xFE7
  5385                           postinc1	equ	0xFE6
  5386                           postdec1	equ	0xFE5
  5387                           fsr1h	equ	0xFE2
  5388                           fsr1l	equ	0xFE1
  5389                           indf2	equ	0xFDF
  5390                           postinc2	equ	0xFDE
  5391                           postdec2	equ	0xFDD
  5392                           plusw2	equ	0xFDB
  5393                           fsr2h	equ	0xFDA
  5394                           fsr2l	equ	0xFD9
  5395                           status	equ	0xFD8
  5396                           
  5397 ;; *************** function ___awmod *****************
  5398 ;; Defined at:
  5399 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  dividend        2   14[COMRAM] int 
  5402 ;;  divisor         2   16[COMRAM] int 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  sign            1   19[COMRAM] unsigned char 
  5405 ;;  counter         1   18[COMRAM] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  2   14[COMRAM] int 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5415 ;;      Params:         4       0       0       0       0       0       0       0       0
  5416 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5418 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5419 ;;Total ram usage:        6 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    1
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_exibir_lcd
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text24
  5430  002A72                     __ptext24:
  5431                           	opt stack 0
  5432  002A72                     ___awmod:
  5433                           	opt stack 28
  5434                           
  5435                           ;incstack = 0
  5436  002A72  0E00               	movlw	0
  5437  002A74  6E14               	movwf	___awmod@sign,c
  5438  002A76  AE10               	btfss	___awmod@dividend+1,7,c
  5439  002A78  D006               	goto	l3101
  5440  002A7A  6C0F               	negf	___awmod@dividend,c
  5441  002A7C  1E10               	comf	___awmod@dividend+1,f,c
  5442  002A7E  B0D8               	btfsc	status,0,c
  5443  002A80  2A10               	incf	___awmod@dividend+1,f,c
  5444  002A82  0E01               	movlw	1
  5445  002A84  6E14               	movwf	___awmod@sign,c
  5446  002A86                     l3101:
  5447  002A86  AE12               	btfss	___awmod@divisor+1,7,c
  5448  002A88  D004               	goto	l3105
  5449  002A8A  6C11               	negf	___awmod@divisor,c
  5450  002A8C  1E12               	comf	___awmod@divisor+1,f,c
  5451  002A8E  B0D8               	btfsc	status,0,c
  5452  002A90  2A12               	incf	___awmod@divisor+1,f,c
  5453  002A92                     l3105:
  5454  002A92  5011               	movf	___awmod@divisor,w,c
  5455  002A94  1012               	iorwf	___awmod@divisor+1,w,c
  5456  002A96  B4D8               	btfsc	status,2,c
  5457  002A98  D018               	goto	l3121
  5458  002A9A  0E01               	movlw	1
  5459  002A9C  6E13               	movwf	___awmod@counter,c
  5460  002A9E  D004               	goto	l3111
  5461  002AA0                     l3109:
  5462  002AA0  90D8               	bcf	status,0,c
  5463  002AA2  3611               	rlcf	___awmod@divisor,f,c
  5464  002AA4  3612               	rlcf	___awmod@divisor+1,f,c
  5465  002AA6  2A13               	incf	___awmod@counter,f,c
  5466  002AA8                     l3111:
  5467  002AA8  AE12               	btfss	___awmod@divisor+1,7,c
  5468  002AAA  D7FA               	goto	l3109
  5469  002AAC                     l3113:
  5470  002AAC  5011               	movf	___awmod@divisor,w,c
  5471  002AAE  5C0F               	subwf	___awmod@dividend,w,c
  5472  002AB0  5012               	movf	___awmod@divisor+1,w,c
  5473  002AB2  5810               	subwfb	___awmod@dividend+1,w,c
  5474  002AB4  A0D8               	btfss	status,0,c
  5475  002AB6  D004               	goto	l3117
  5476  002AB8  5011               	movf	___awmod@divisor,w,c
  5477  002ABA  5E0F               	subwf	___awmod@dividend,f,c
  5478  002ABC  5012               	movf	___awmod@divisor+1,w,c
  5479  002ABE  5A10               	subwfb	___awmod@dividend+1,f,c
  5480  002AC0                     l3117:
  5481  002AC0  90D8               	bcf	status,0,c
  5482  002AC2  3212               	rrcf	___awmod@divisor+1,f,c
  5483  002AC4  3211               	rrcf	___awmod@divisor,f,c
  5484  002AC6  2E13               	decfsz	___awmod@counter,f,c
  5485  002AC8  D7F1               	goto	l3113
  5486  002ACA                     l3121:
  5487  002ACA  5014               	movf	___awmod@sign,w,c
  5488  002ACC  B4D8               	btfsc	status,2,c
  5489  002ACE  D004               	goto	l3125
  5490  002AD0  6C0F               	negf	___awmod@dividend,c
  5491  002AD2  1E10               	comf	___awmod@dividend+1,f,c
  5492  002AD4  B0D8               	btfsc	status,0,c
  5493  002AD6  2A10               	incf	___awmod@dividend+1,f,c
  5494  002AD8                     l3125:
  5495  002AD8  C00F  F00F         	movff	___awmod@dividend,?___awmod
  5496  002ADC  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  5497  002AE0  0012               	return	
  5498  002AE2                     __end_of___awmod:
  5499                           	opt stack 0
  5500                           tblptru	equ	0xFF8
  5501                           tblptrh	equ	0xFF7
  5502                           tblptrl	equ	0xFF6
  5503                           tablat	equ	0xFF5
  5504                           prodh	equ	0xFF4
  5505                           prodl	equ	0xFF3
  5506                           intcon	equ	0xFF2
  5507                           postinc0	equ	0xFEE
  5508                           wreg	equ	0xFE8
  5509                           indf1	equ	0xFE7
  5510                           postinc1	equ	0xFE6
  5511                           postdec1	equ	0xFE5
  5512                           fsr1h	equ	0xFE2
  5513                           fsr1l	equ	0xFE1
  5514                           indf2	equ	0xFDF
  5515                           postinc2	equ	0xFDE
  5516                           postdec2	equ	0xFDD
  5517                           plusw2	equ	0xFDB
  5518                           fsr2h	equ	0xFDA
  5519                           fsr2l	equ	0xFD9
  5520                           status	equ	0xFD8
  5521                           
  5522 ;; *************** function ___awdiv *****************
  5523 ;; Defined at:
  5524 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  dividend        2   20[COMRAM] int 
  5527 ;;  divisor         2   22[COMRAM] int 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  quotient        2   26[COMRAM] int 
  5530 ;;  sign            1   25[COMRAM] unsigned char 
  5531 ;;  counter         1   24[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  2   20[COMRAM] int 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5541 ;;      Params:         4       0       0       0       0       0       0       0       0
  5542 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5544 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5545 ;;Total ram usage:        8 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    1
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_exibir_lcd
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text25
  5556  0028FE                     __ptext25:
  5557                           	opt stack 0
  5558  0028FE                     ___awdiv:
  5559                           	opt stack 28
  5560                           
  5561                           ;incstack = 0
  5562  0028FE  0E00               	movlw	0
  5563  002900  6E1A               	movwf	___awdiv@sign,c
  5564  002902  AE18               	btfss	___awdiv@divisor+1,7,c
  5565  002904  D006               	goto	l3057
  5566  002906  6C17               	negf	___awdiv@divisor,c
  5567  002908  1E18               	comf	___awdiv@divisor+1,f,c
  5568  00290A  B0D8               	btfsc	status,0,c
  5569  00290C  2A18               	incf	___awdiv@divisor+1,f,c
  5570  00290E  0E01               	movlw	1
  5571  002910  6E1A               	movwf	___awdiv@sign,c
  5572  002912                     l3057:
  5573  002912  AE16               	btfss	___awdiv@dividend+1,7,c
  5574  002914  D006               	goto	l3063
  5575  002916  6C15               	negf	___awdiv@dividend,c
  5576  002918  1E16               	comf	___awdiv@dividend+1,f,c
  5577  00291A  B0D8               	btfsc	status,0,c
  5578  00291C  2A16               	incf	___awdiv@dividend+1,f,c
  5579  00291E  0E01               	movlw	1
  5580  002920  1A1A               	xorwf	___awdiv@sign,f,c
  5581  002922                     l3063:
  5582  002922  0E00               	movlw	0
  5583  002924  6E1C               	movwf	___awdiv@quotient+1,c
  5584  002926  0E00               	movlw	0
  5585  002928  6E1B               	movwf	___awdiv@quotient,c
  5586  00292A  5017               	movf	___awdiv@divisor,w,c
  5587  00292C  1018               	iorwf	___awdiv@divisor+1,w,c
  5588  00292E  B4D8               	btfsc	status,2,c
  5589  002930  D01C               	goto	l3085
  5590  002932  0E01               	movlw	1
  5591  002934  6E19               	movwf	___awdiv@counter,c
  5592  002936  D004               	goto	l3071
  5593  002938                     l3069:
  5594  002938  90D8               	bcf	status,0,c
  5595  00293A  3617               	rlcf	___awdiv@divisor,f,c
  5596  00293C  3618               	rlcf	___awdiv@divisor+1,f,c
  5597  00293E  2A19               	incf	___awdiv@counter,f,c
  5598  002940                     l3071:
  5599  002940  AE18               	btfss	___awdiv@divisor+1,7,c
  5600  002942  D7FA               	goto	l3069
  5601  002944                     l3073:
  5602  002944  90D8               	bcf	status,0,c
  5603  002946  361B               	rlcf	___awdiv@quotient,f,c
  5604  002948  361C               	rlcf	___awdiv@quotient+1,f,c
  5605  00294A  5017               	movf	___awdiv@divisor,w,c
  5606  00294C  5C15               	subwf	___awdiv@dividend,w,c
  5607  00294E  5018               	movf	___awdiv@divisor+1,w,c
  5608  002950  5816               	subwfb	___awdiv@dividend+1,w,c
  5609  002952  A0D8               	btfss	status,0,c
  5610  002954  D005               	goto	l3081
  5611  002956  5017               	movf	___awdiv@divisor,w,c
  5612  002958  5E15               	subwf	___awdiv@dividend,f,c
  5613  00295A  5018               	movf	___awdiv@divisor+1,w,c
  5614  00295C  5A16               	subwfb	___awdiv@dividend+1,f,c
  5615  00295E  801B               	bsf	___awdiv@quotient,0,c
  5616  002960                     l3081:
  5617  002960  90D8               	bcf	status,0,c
  5618  002962  3218               	rrcf	___awdiv@divisor+1,f,c
  5619  002964  3217               	rrcf	___awdiv@divisor,f,c
  5620  002966  2E19               	decfsz	___awdiv@counter,f,c
  5621  002968  D7ED               	goto	l3073
  5622  00296A                     l3085:
  5623  00296A  501A               	movf	___awdiv@sign,w,c
  5624  00296C  B4D8               	btfsc	status,2,c
  5625  00296E  D004               	goto	l3089
  5626  002970  6C1B               	negf	___awdiv@quotient,c
  5627  002972  1E1C               	comf	___awdiv@quotient+1,f,c
  5628  002974  B0D8               	btfsc	status,0,c
  5629  002976  2A1C               	incf	___awdiv@quotient+1,f,c
  5630  002978                     l3089:
  5631  002978  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5632  00297C  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5633  002980  0012               	return	
  5634  002982                     __end_of___awdiv:
  5635                           	opt stack 0
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           postinc0	equ	0xFEE
  5644                           wreg	equ	0xFE8
  5645                           indf1	equ	0xFE7
  5646                           postinc1	equ	0xFE6
  5647                           postdec1	equ	0xFE5
  5648                           fsr1h	equ	0xFE2
  5649                           fsr1l	equ	0xFE1
  5650                           indf2	equ	0xFDF
  5651                           postinc2	equ	0xFDE
  5652                           postdec2	equ	0xFDD
  5653                           plusw2	equ	0xFDB
  5654                           fsr2h	equ	0xFDA
  5655                           fsr2l	equ	0xFD9
  5656                           status	equ	0xFD8
  5657                           
  5658 ;; *************** function _SetDDRamAddr *****************
  5659 ;; Defined at:
  5660 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  DDaddr          1    wreg     unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  DDaddr          1   18[COMRAM] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0
  5675 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5676 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5677 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5678 ;;Total ram usage:        4 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    3
  5681 ;; This function calls:
  5682 ;;		_DelayFor18TCY
  5683 ;; This function is called by:
  5684 ;;		_exibir_lcd
  5685 ;;		_pisca_cursor
  5686 ;;		_OpenXLCD
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text26
  5691  002B3E                     __ptext26:
  5692                           	opt stack 0
  5693  002B3E                     _SetDDRamAddr:
  5694                           	opt stack 26
  5695                           
  5696                           ;incstack = 0
  5697                           ;SetDDRamAddr@DDaddr stored from wreg
  5698  002B3E  6E13               	movwf	SetDDRamAddr@DDaddr,c
  5699  002B40  0EF0               	movlw	240
  5700  002B42  1693               	andwf	3987,f,c	;volatile
  5701  002B44  0EF0               	movlw	240
  5702  002B46  1681               	andwf	3969,f,c	;volatile
  5703  002B48  5013               	movf	SetDDRamAddr@DDaddr,w,c
  5704  002B4A  6E10               	movwf	??_SetDDRamAddr& (0+255),c
  5705  002B4C  6A11               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  5706  002B4E  8E10               	bsf	??_SetDDRamAddr,7,c
  5707  002B50  0E04               	movlw	4
  5708  002B52  6E12               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  5709  002B54                     u2725:
  5710  002B54  3411               	rlcf	??_SetDDRamAddr+1,w,c
  5711  002B56  3211               	rrcf	??_SetDDRamAddr+1,f,c
  5712  002B58  3210               	rrcf	??_SetDDRamAddr,f,c
  5713  002B5A  2E12               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  5714  002B5C  D7FB               	goto	u2725
  5715  002B5E  5010               	movf	??_SetDDRamAddr,w,c
  5716  002B60  0B0F               	andlw	15
  5717  002B62  1281               	iorwf	3969,f,c	;volatile
  5718  002B64  9C8A               	bcf	3978,6,c	;volatile
  5719  002B66  9A8A               	bcf	3978,5,c	;volatile
  5720  002B68  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  5721  002B6C  888A               	bsf	3978,4,c	;volatile
  5722  002B6E  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  5723  002B72  988A               	bcf	3978,4,c	;volatile
  5724  002B74  0EF0               	movlw	240
  5725  002B76  1681               	andwf	3969,f,c	;volatile
  5726  002B78  5013               	movf	SetDDRamAddr@DDaddr,w,c
  5727  002B7A  0B0F               	andlw	15
  5728  002B7C  1281               	iorwf	3969,f,c	;volatile
  5729  002B7E  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  5730  002B82  888A               	bsf	3978,4,c	;volatile
  5731  002B84  EC0E  F017         	call	_DelayFor18TCY	;wreg free
  5732  002B88  988A               	bcf	3978,4,c	;volatile
  5733  002B8A  0E0F               	movlw	15
  5734  002B8C  1293               	iorwf	3987,f,c	;volatile
  5735  002B8E  0012               	return	
  5736  002B90                     __end_of_SetDDRamAddr:
  5737                           	opt stack 0
  5738                           tblptru	equ	0xFF8
  5739                           tblptrh	equ	0xFF7
  5740                           tblptrl	equ	0xFF6
  5741                           tablat	equ	0xFF5
  5742                           prodh	equ	0xFF4
  5743                           prodl	equ	0xFF3
  5744                           intcon	equ	0xFF2
  5745                           postinc0	equ	0xFEE
  5746                           wreg	equ	0xFE8
  5747                           indf1	equ	0xFE7
  5748                           postinc1	equ	0xFE6
  5749                           postdec1	equ	0xFE5
  5750                           fsr1h	equ	0xFE2
  5751                           fsr1l	equ	0xFE1
  5752                           indf2	equ	0xFDF
  5753                           postinc2	equ	0xFDE
  5754                           postdec2	equ	0xFDD
  5755                           plusw2	equ	0xFDB
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function _DelayFor18TCY *****************
  5761 ;; Defined at:
  5762 ;;		line 3 in file "display_LCD.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    2
  5783 ;; This function calls:
  5784 ;;		_Delay10TCYx
  5785 ;; This function is called by:
  5786 ;;		_BusyXLCD
  5787 ;;		_SetDDRamAddr
  5788 ;;		_WriteCmdXLCD
  5789 ;;		_WriteDataXLCD
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text27
  5794  002E1C                     __ptext27:
  5795                           	opt stack 0
  5796  002E1C                     _DelayFor18TCY:
  5797                           	opt stack 26
  5798                           
  5799                           ;display_LCD.c: 4: Delay10TCYx(120);
  5800                           
  5801                           ;incstack = 0
  5802  002E1C  0E78               	movlw	120
  5803  002E1E  ECEE  F016         	call	_Delay10TCYx
  5804  002E22  0012               	return		;funcret
  5805  002E24                     __end_of_DelayFor18TCY:
  5806                           	opt stack 0
  5807                           tblptru	equ	0xFF8
  5808                           tblptrh	equ	0xFF7
  5809                           tblptrl	equ	0xFF6
  5810                           tablat	equ	0xFF5
  5811                           prodh	equ	0xFF4
  5812                           prodl	equ	0xFF3
  5813                           intcon	equ	0xFF2
  5814                           postinc0	equ	0xFEE
  5815                           wreg	equ	0xFE8
  5816                           indf1	equ	0xFE7
  5817                           postinc1	equ	0xFE6
  5818                           postdec1	equ	0xFE5
  5819                           fsr1h	equ	0xFE2
  5820                           fsr1l	equ	0xFE1
  5821                           indf2	equ	0xFDF
  5822                           postinc2	equ	0xFDE
  5823                           postdec2	equ	0xFDD
  5824                           plusw2	equ	0xFDB
  5825                           fsr2h	equ	0xFDA
  5826                           fsr2l	equ	0xFD9
  5827                           status	equ	0xFD8
  5828                           
  5829 ;; *************** function _Delay10TCYx *****************
  5830 ;; Defined at:
  5831 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  unit            1    wreg     unsigned char 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  unit            1   14[COMRAM] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0
  5846 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5848 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5849 ;;Total ram usage:        1 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_DelayFor18TCY
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text28
  5860  002DDC                     __ptext28:
  5861                           	opt stack 0
  5862  002DDC                     _Delay10TCYx:
  5863                           	opt stack 26
  5864                           
  5865                           ;incstack = 0
  5866                           ;Delay10TCYx@unit stored from wreg
  5867  002DDC  6E0F               	movwf	Delay10TCYx@unit,c
  5868  002DDE  0E03               	movlw	3
  5869  002DE0                     u4937:
  5870  002DE0  2EE8               	decfsz	wreg,f,c
  5871  002DE2  D7FE               	bra	u4937
  5872  002DE4  F000               	nop	
  5873  002DE6  2E0F               	decfsz	Delay10TCYx@unit,f,c
  5874  002DE8  D7FA               	goto	l2391
  5875  002DEA  0012               	return	
  5876  002DEC                     __end_of_Delay10TCYx:
  5877                           	opt stack 0
  5878                           tblptru	equ	0xFF8
  5879                           tblptrh	equ	0xFF7
  5880                           tblptrl	equ	0xFF6
  5881                           tablat	equ	0xFF5
  5882                           prodh	equ	0xFF4
  5883                           prodl	equ	0xFF3
  5884                           intcon	equ	0xFF2
  5885                           postinc0	equ	0xFEE
  5886                           wreg	equ	0xFE8
  5887                           indf1	equ	0xFE7
  5888                           postinc1	equ	0xFE6
  5889                           postdec1	equ	0xFE5
  5890                           fsr1h	equ	0xFE2
  5891                           fsr1l	equ	0xFE1
  5892                           indf2	equ	0xFDF
  5893                           postinc2	equ	0xFDE
  5894                           postdec2	equ	0xFDD
  5895                           plusw2	equ	0xFDB
  5896                           fsr2h	equ	0xFDA
  5897                           fsr2l	equ	0xFD9
  5898                           status	equ	0xFD8
  5899                           
  5900 ;; *************** function _convert *****************
  5901 ;; Defined at:
  5902 ;;		line 9 in file "ad.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  i               1   55[COMRAM] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0
  5917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5919 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5920 ;;Total ram usage:        1 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    3
  5923 ;; This function calls:
  5924 ;;		_BusyADC
  5925 ;;		_ConvertADC
  5926 ;;		_ReadADC
  5927 ;;		_SetChanADC
  5928 ;;		___ftdiv
  5929 ;;		___ftmul
  5930 ;;		___lwdiv
  5931 ;;		___lwtoft
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text29
  5938  0027D2                     __ptext29:
  5939                           	opt stack 0
  5940  0027D2                     _convert:
  5941                           	opt stack 27
  5942                           
  5943                           ;ad.c: 10: ADCResult = 0;
  5944                           
  5945                           ;incstack = 0
  5946  0027D2  0E00               	movlw	0
  5947  0027D4  6E47               	movwf	_ADCResult+1,c
  5948  0027D6  0E00               	movlw	0
  5949  0027D8  6E46               	movwf	_ADCResult,c
  5950                           
  5951                           ;ad.c: 12: for(unsigned char i=0;i<=2;i++){
  5952  0027DA  0E00               	movlw	0
  5953  0027DC  6E38               	movwf	convert@i,c
  5954  0027DE                     l3987:
  5955  0027DE  0E02               	movlw	2
  5956  0027E0  6438               	cpfsgt	convert@i,c
  5957  0027E2  D001               	goto	l3991
  5958  0027E4  0012               	return	
  5959  0027E6                     l3991:
  5960                           
  5961                           ;ad.c: 13: SetChanADC(0b10000111);
  5962  0027E6  0E87               	movlw	135
  5963  0027E8  ECDB  F016         	call	_SetChanADC
  5964                           
  5965                           ;ad.c: 15: ConvertADC();
  5966  0027EC  EC12  F017         	call	_ConvertADC	;wreg free
  5967  0027F0                     l3995:
  5968  0027F0  EC04  F017         	call	_BusyADC	;wreg free
  5969  0027F4  0900               	iorlw	0
  5970  0027F6  A4D8               	btfss	status,2,c
  5971  0027F8  D7FB               	goto	l3995
  5972                           
  5973                           ;ad.c: 17: ADCResult += (unsigned int) ReadADC();
  5974  0027FA  ECFD  F016         	call	_ReadADC	;wreg free
  5975  0027FE  500F               	movf	?_ReadADC,w,c
  5976  002800  2646               	addwf	_ADCResult,f,c
  5977  002802  5010               	movf	?_ReadADC+1,w,c
  5978  002804  2247               	addwfc	_ADCResult+1,f,c
  5979                           
  5980                           ;ad.c: 18: valor_tensao=((ADCResult/3)*5.0)/1023;
  5981  002806  0E00               	movlw	0
  5982  002808  6E1D               	movwf	___ftmul@f2,c
  5983  00280A  0EA0               	movlw	160
  5984  00280C  6E1E               	movwf	___ftmul@f2+1,c
  5985  00280E  0E40               	movlw	64
  5986  002810  6E1F               	movwf	___ftmul@f2+2,c
  5987  002812  0E00               	movlw	0
  5988  002814  6E12               	movwf	___lwdiv@divisor+1,c
  5989  002816  0E03               	movlw	3
  5990  002818  6E11               	movwf	___lwdiv@divisor,c
  5991  00281A  C046  F00F         	movff	_ADCResult,___lwdiv@dividend
  5992  00281E  C047  F010         	movff	_ADCResult+1,___lwdiv@dividend+1
  5993  002822  ECC8  F015         	call	___lwdiv	;wreg free
  5994  002826  C00F  F017         	movff	?___lwdiv,___lwtoft@c
  5995  00282A  C010  F018         	movff	?___lwdiv+1,___lwtoft@c+1
  5996  00282E  ECA2  F016         	call	___lwtoft	;wreg free
  5997  002832  C017  F01A         	movff	?___lwtoft,___ftmul@f1
  5998  002836  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
  5999  00283A  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
  6000  00283E  EC0B  F011         	call	___ftmul	;wreg free
  6001  002842  C01A  F029         	movff	?___ftmul,___ftdiv@f1
  6002  002846  C01B  F02A         	movff	?___ftmul+1,___ftdiv@f1+1
  6003  00284A  C01C  F02B         	movff	?___ftmul+2,___ftdiv@f1+2
  6004  00284E  0EC0               	movlw	192
  6005  002850  6E2C               	movwf	___ftdiv@f2,c
  6006  002852  0E7F               	movlw	127
  6007  002854  6E2D               	movwf	___ftdiv@f2+1,c
  6008  002856  0E44               	movlw	68
  6009  002858  6E2E               	movwf	___ftdiv@f2+2,c
  6010  00285A  EC75  F012         	call	___ftdiv	;wreg free
  6011  00285E  C029  F0A7         	movff	?___ftdiv,_valor_tensao
  6012  002862  C02A  F0A8         	movff	?___ftdiv+1,_valor_tensao+1
  6013  002866  C02B  F0A9         	movff	?___ftdiv+2,_valor_tensao+2
  6014  00286A  2A38               	incf	convert@i,f,c
  6015  00286C  D7B8               	goto	l3987
  6016  00286E                     __end_of_convert:
  6017                           	opt stack 0
  6018                           tblptru	equ	0xFF8
  6019                           tblptrh	equ	0xFF7
  6020                           tblptrl	equ	0xFF6
  6021                           tablat	equ	0xFF5
  6022                           prodh	equ	0xFF4
  6023                           prodl	equ	0xFF3
  6024                           intcon	equ	0xFF2
  6025                           postinc0	equ	0xFEE
  6026                           wreg	equ	0xFE8
  6027                           indf1	equ	0xFE7
  6028                           postinc1	equ	0xFE6
  6029                           postdec1	equ	0xFE5
  6030                           fsr1h	equ	0xFE2
  6031                           fsr1l	equ	0xFE1
  6032                           indf2	equ	0xFDF
  6033                           postinc2	equ	0xFDE
  6034                           postdec2	equ	0xFDD
  6035                           plusw2	equ	0xFDB
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function ___lwtoft *****************
  6041 ;; Defined at:
  6042 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  c               2   22[COMRAM] unsigned int 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  3   22[COMRAM] float 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6056 ;;      Params:         3       0       0       0       0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6059 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6060 ;;Total ram usage:        3 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    2
  6063 ;; This function calls:
  6064 ;;		___ftpack
  6065 ;; This function is called by:
  6066 ;;		_convert
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text30
  6071  002D44                     __ptext30:
  6072                           	opt stack 0
  6073  002D44                     ___lwtoft:
  6074                           	opt stack 27
  6075                           
  6076                           ;incstack = 0
  6077  002D44  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  6078  002D48  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  6079  002D4C  6A11               	clrf	___ftpack@arg+2,c
  6080  002D4E  0E8E               	movlw	142
  6081  002D50  6E12               	movwf	___ftpack@exp,c
  6082  002D52  0E00               	movlw	0
  6083  002D54  6E13               	movwf	___ftpack@sign,c
  6084  002D56  EC40  F013         	call	___ftpack	;wreg free
  6085  002D5A  C00F  F017         	movff	?___ftpack,?___lwtoft
  6086  002D5E  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  6087  002D62  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  6088  002D66  0012               	return	
  6089  002D68                     __end_of___lwtoft:
  6090                           	opt stack 0
  6091                           tblptru	equ	0xFF8
  6092                           tblptrh	equ	0xFF7
  6093                           tblptrl	equ	0xFF6
  6094                           tablat	equ	0xFF5
  6095                           prodh	equ	0xFF4
  6096                           prodl	equ	0xFF3
  6097                           intcon	equ	0xFF2
  6098                           postinc0	equ	0xFEE
  6099                           wreg	equ	0xFE8
  6100                           indf1	equ	0xFE7
  6101                           postinc1	equ	0xFE6
  6102                           postdec1	equ	0xFE5
  6103                           fsr1h	equ	0xFE2
  6104                           fsr1l	equ	0xFE1
  6105                           indf2	equ	0xFDF
  6106                           postinc2	equ	0xFDE
  6107                           postdec2	equ	0xFDD
  6108                           plusw2	equ	0xFDB
  6109                           fsr2h	equ	0xFDA
  6110                           fsr2l	equ	0xFD9
  6111                           status	equ	0xFD8
  6112                           
  6113 ;; *************** function ___lwdiv *****************
  6114 ;; Defined at:
  6115 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  dividend        2   14[COMRAM] unsigned int 
  6118 ;;  divisor         2   16[COMRAM] unsigned int 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  quotient        2   18[COMRAM] unsigned int 
  6121 ;;  counter         1   20[COMRAM] unsigned char 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  2   14[COMRAM] unsigned int 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2, status,0
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6131 ;;      Params:         4       0       0       0       0       0       0       0       0
  6132 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6134 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6135 ;;Total ram usage:        7 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    1
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_convert
  6142 ;;		_sprintf
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text31
  6147  002B90                     __ptext31:
  6148                           	opt stack 0
  6149  002B90                     ___lwdiv:
  6150                           	opt stack 27
  6151                           
  6152                           ;incstack = 0
  6153  002B90  0E00               	movlw	0
  6154  002B92  6E14               	movwf	___lwdiv@quotient+1,c
  6155  002B94  0E00               	movlw	0
  6156  002B96  6E13               	movwf	___lwdiv@quotient,c
  6157  002B98  5011               	movf	___lwdiv@divisor,w,c
  6158  002B9A  1012               	iorwf	___lwdiv@divisor+1,w,c
  6159  002B9C  B4D8               	btfsc	status,2,c
  6160  002B9E  D01C               	goto	l908
  6161  002BA0  0E01               	movlw	1
  6162  002BA2  6E15               	movwf	___lwdiv@counter,c
  6163  002BA4  D004               	goto	l2611
  6164  002BA6                     l2609:
  6165  002BA6  90D8               	bcf	status,0,c
  6166  002BA8  3611               	rlcf	___lwdiv@divisor,f,c
  6167  002BAA  3612               	rlcf	___lwdiv@divisor+1,f,c
  6168  002BAC  2A15               	incf	___lwdiv@counter,f,c
  6169  002BAE                     l2611:
  6170  002BAE  AE12               	btfss	___lwdiv@divisor+1,7,c
  6171  002BB0  D7FA               	goto	l2609
  6172  002BB2                     l2613:
  6173  002BB2  90D8               	bcf	status,0,c
  6174  002BB4  3613               	rlcf	___lwdiv@quotient,f,c
  6175  002BB6  3614               	rlcf	___lwdiv@quotient+1,f,c
  6176  002BB8  5011               	movf	___lwdiv@divisor,w,c
  6177  002BBA  5C0F               	subwf	___lwdiv@dividend,w,c
  6178  002BBC  5012               	movf	___lwdiv@divisor+1,w,c
  6179  002BBE  5810               	subwfb	___lwdiv@dividend+1,w,c
  6180  002BC0  A0D8               	btfss	status,0,c
  6181  002BC2  D005               	goto	l2621
  6182  002BC4  5011               	movf	___lwdiv@divisor,w,c
  6183  002BC6  5E0F               	subwf	___lwdiv@dividend,f,c
  6184  002BC8  5012               	movf	___lwdiv@divisor+1,w,c
  6185  002BCA  5A10               	subwfb	___lwdiv@dividend+1,f,c
  6186  002BCC  8013               	bsf	___lwdiv@quotient,0,c
  6187  002BCE                     l2621:
  6188  002BCE  90D8               	bcf	status,0,c
  6189  002BD0  3212               	rrcf	___lwdiv@divisor+1,f,c
  6190  002BD2  3211               	rrcf	___lwdiv@divisor,f,c
  6191  002BD4  2E15               	decfsz	___lwdiv@counter,f,c
  6192  002BD6  D7ED               	goto	l2613
  6193  002BD8                     l908:
  6194  002BD8  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6195  002BDC  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6196  002BE0  0012               	return		;funcret
  6197  002BE2                     __end_of___lwdiv:
  6198                           	opt stack 0
  6199                           tblptru	equ	0xFF8
  6200                           tblptrh	equ	0xFF7
  6201                           tblptrl	equ	0xFF6
  6202                           tablat	equ	0xFF5
  6203                           prodh	equ	0xFF4
  6204                           prodl	equ	0xFF3
  6205                           intcon	equ	0xFF2
  6206                           postinc0	equ	0xFEE
  6207                           wreg	equ	0xFE8
  6208                           indf1	equ	0xFE7
  6209                           postinc1	equ	0xFE6
  6210                           postdec1	equ	0xFE5
  6211                           fsr1h	equ	0xFE2
  6212                           fsr1l	equ	0xFE1
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           plusw2	equ	0xFDB
  6217                           fsr2h	equ	0xFDA
  6218                           fsr2l	equ	0xFD9
  6219                           status	equ	0xFD8
  6220                           
  6221 ;; *************** function ___ftmul *****************
  6222 ;; Defined at:
  6223 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  f1              3   25[COMRAM] float 
  6226 ;;  f2              3   28[COMRAM] float 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;  f3_as_produc    3   35[COMRAM] unsigned um
  6229 ;;  sign            1   39[COMRAM] unsigned char 
  6230 ;;  cntr            1   38[COMRAM] unsigned char 
  6231 ;;  exp             1   34[COMRAM] unsigned char 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  3   25[COMRAM] float 
  6234 ;; Registers used:
  6235 ;;		wreg, status,2, status,0, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6241 ;;      Params:         6       0       0       0       0       0       0       0       0
  6242 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6243 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6244 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6245 ;;Total ram usage:       15 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    2
  6248 ;; This function calls:
  6249 ;;		___ftpack
  6250 ;; This function is called by:
  6251 ;;		_convert
  6252 ;;		_convert_float_to_char
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text32
  6257  002216                     __ptext32:
  6258                           	opt stack 0
  6259  002216                     ___ftmul:
  6260                           	opt stack 26
  6261                           
  6262                           ;incstack = 0
  6263  002216  C01C  F020         	movff	___ftmul@f1+2,??___ftmul
  6264  00221A  6A21               	clrf	(??___ftmul+1)& (0+255),c
  6265  00221C  6A22               	clrf	(??___ftmul+2)& (0+255),c
  6266  00221E  341B               	rlcf	___ftmul@f1+1,w,c
  6267  002220  3620               	rlcf	??___ftmul& (0+255),f,c
  6268  002222  E301               	bnc	u4651
  6269  002224  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  6270  002226                     u4651:
  6271  002226  5020               	movf	??___ftmul,w,c
  6272  002228  6E23               	movwf	___ftmul@exp,c
  6273  00222A  5023               	movf	___ftmul@exp,w,c
  6274  00222C  A4D8               	btfss	status,2,c
  6275  00222E  D007               	goto	l3881
  6276  002230  0E00               	movlw	0
  6277  002232  6E1A               	movwf	?___ftmul,c
  6278  002234  0E00               	movlw	0
  6279  002236  6E1B               	movwf	?___ftmul+1,c
  6280  002238  0E00               	movlw	0
  6281  00223A  6E1C               	movwf	?___ftmul+2,c
  6282  00223C  0012               	return	
  6283  00223E                     l3881:
  6284  00223E  C01F  F020         	movff	___ftmul@f2+2,??___ftmul
  6285  002242  6A21               	clrf	(??___ftmul+1)& (0+255),c
  6286  002244  6A22               	clrf	(??___ftmul+2)& (0+255),c
  6287  002246  341E               	rlcf	___ftmul@f2+1,w,c
  6288  002248  3620               	rlcf	??___ftmul& (0+255),f,c
  6289  00224A  E301               	bnc	u4671
  6290  00224C  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  6291  00224E                     u4671:
  6292  00224E  5020               	movf	??___ftmul,w,c
  6293  002250  6E28               	movwf	___ftmul@sign,c
  6294  002252  5028               	movf	___ftmul@sign,w,c
  6295  002254  A4D8               	btfss	status,2,c
  6296  002256  D007               	goto	l3887
  6297  002258  0E00               	movlw	0
  6298  00225A  6E1A               	movwf	?___ftmul,c
  6299  00225C  0E00               	movlw	0
  6300  00225E  6E1B               	movwf	?___ftmul+1,c
  6301  002260  0E00               	movlw	0
  6302  002262  6E1C               	movwf	?___ftmul+2,c
  6303  002264  0012               	return	
  6304  002266                     l3887:
  6305  002266  5028               	movf	___ftmul@sign,w,c
  6306  002268  0F7B               	addlw	123
  6307  00226A  2623               	addwf	___ftmul@exp,f,c
  6308  00226C  C01C  F028         	movff	___ftmul@f1+2,___ftmul@sign
  6309  002270  501F               	movf	___ftmul@f2+2,w,c
  6310  002272  1A28               	xorwf	___ftmul@sign,f,c
  6311  002274  0E80               	movlw	128
  6312  002276  1628               	andwf	___ftmul@sign,f,c
  6313  002278  8E1B               	bsf	___ftmul@f1+1,7,c
  6314  00227A  8E1E               	bsf	___ftmul@f2+1,7,c
  6315  00227C  0EFF               	movlw	255
  6316  00227E  161D               	andwf	___ftmul@f2,f,c
  6317  002280  0EFF               	movlw	255
  6318  002282  161E               	andwf	___ftmul@f2+1,f,c
  6319  002284  0E00               	movlw	0
  6320  002286  161F               	andwf	___ftmul@f2+2,f,c
  6321  002288  0E00               	movlw	0
  6322  00228A  6E24               	movwf	___ftmul@f3_as_product,c
  6323  00228C  0E00               	movlw	0
  6324  00228E  6E25               	movwf	___ftmul@f3_as_product+1,c
  6325  002290  0E00               	movlw	0
  6326  002292  6E26               	movwf	___ftmul@f3_as_product+2,c
  6327  002294  0E07               	movlw	7
  6328  002296  6E27               	movwf	___ftmul@cntr,c
  6329  002298                     l3901:
  6330  002298  A01A               	btfss	___ftmul@f1,0,c
  6331  00229A  D006               	goto	l3905
  6332  00229C  501D               	movf	___ftmul@f2,w,c
  6333  00229E  2624               	addwf	___ftmul@f3_as_product,f,c
  6334  0022A0  501E               	movf	___ftmul@f2+1,w,c
  6335  0022A2  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  6336  0022A4  501F               	movf	___ftmul@f2+2,w,c
  6337  0022A6  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  6338  0022A8                     l3905:
  6339  0022A8  90D8               	bcf	status,0,c
  6340  0022AA  321C               	rrcf	___ftmul@f1+2,f,c
  6341  0022AC  321B               	rrcf	___ftmul@f1+1,f,c
  6342  0022AE  321A               	rrcf	___ftmul@f1,f,c
  6343  0022B0  90D8               	bcf	status,0,c
  6344  0022B2  361D               	rlcf	___ftmul@f2,f,c
  6345  0022B4  361E               	rlcf	___ftmul@f2+1,f,c
  6346  0022B6  361F               	rlcf	___ftmul@f2+2,f,c
  6347  0022B8  2E27               	decfsz	___ftmul@cntr,f,c
  6348  0022BA  D7EE               	goto	l3901
  6349  0022BC  0E09               	movlw	9
  6350  0022BE  6E27               	movwf	___ftmul@cntr,c
  6351  0022C0                     l3911:
  6352  0022C0  A01A               	btfss	___ftmul@f1,0,c
  6353  0022C2  D006               	goto	l3915
  6354  0022C4  501D               	movf	___ftmul@f2,w,c
  6355  0022C6  2624               	addwf	___ftmul@f3_as_product,f,c
  6356  0022C8  501E               	movf	___ftmul@f2+1,w,c
  6357  0022CA  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  6358  0022CC  501F               	movf	___ftmul@f2+2,w,c
  6359  0022CE  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  6360  0022D0                     l3915:
  6361  0022D0  90D8               	bcf	status,0,c
  6362  0022D2  321C               	rrcf	___ftmul@f1+2,f,c
  6363  0022D4  321B               	rrcf	___ftmul@f1+1,f,c
  6364  0022D6  321A               	rrcf	___ftmul@f1,f,c
  6365  0022D8  90D8               	bcf	status,0,c
  6366  0022DA  3226               	rrcf	___ftmul@f3_as_product+2,f,c
  6367  0022DC  3225               	rrcf	___ftmul@f3_as_product+1,f,c
  6368  0022DE  3224               	rrcf	___ftmul@f3_as_product,f,c
  6369  0022E0  2E27               	decfsz	___ftmul@cntr,f,c
  6370  0022E2  D7EE               	goto	l3911
  6371  0022E4  C024  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  6372  0022E8  C025  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6373  0022EC  C026  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6374  0022F0  C023  F012         	movff	___ftmul@exp,___ftpack@exp
  6375  0022F4  C028  F013         	movff	___ftmul@sign,___ftpack@sign
  6376  0022F8  EC40  F013         	call	___ftpack	;wreg free
  6377  0022FC  C00F  F01A         	movff	?___ftpack,?___ftmul
  6378  002300  C010  F01B         	movff	?___ftpack+1,?___ftmul+1
  6379  002304  C011  F01C         	movff	?___ftpack+2,?___ftmul+2
  6380  002308  0012               	return	
  6381  00230A                     __end_of___ftmul:
  6382                           	opt stack 0
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           intcon	equ	0xFF2
  6390                           postinc0	equ	0xFEE
  6391                           wreg	equ	0xFE8
  6392                           indf1	equ	0xFE7
  6393                           postinc1	equ	0xFE6
  6394                           postdec1	equ	0xFE5
  6395                           fsr1h	equ	0xFE2
  6396                           fsr1l	equ	0xFE1
  6397                           indf2	equ	0xFDF
  6398                           postinc2	equ	0xFDE
  6399                           postdec2	equ	0xFDD
  6400                           plusw2	equ	0xFDB
  6401                           fsr2h	equ	0xFDA
  6402                           fsr2l	equ	0xFD9
  6403                           status	equ	0xFD8
  6404                           
  6405 ;; *************** function ___ftdiv *****************
  6406 ;; Defined at:
  6407 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  f1              3   40[COMRAM] float 
  6410 ;;  f2              3   43[COMRAM] float 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  f3              3   50[COMRAM] float 
  6413 ;;  sign            1   54[COMRAM] unsigned char 
  6414 ;;  exp             1   53[COMRAM] unsigned char 
  6415 ;;  cntr            1   49[COMRAM] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  3   40[COMRAM] float 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6425 ;;      Params:         6       0       0       0       0       0       0       0       0
  6426 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6427 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6428 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6429 ;;Total ram usage:       15 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    2
  6432 ;; This function calls:
  6433 ;;		___ftpack
  6434 ;; This function is called by:
  6435 ;;		_convert
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text33
  6440  0024EA                     __ptext33:
  6441                           	opt stack 0
  6442  0024EA                     ___ftdiv:
  6443                           	opt stack 27
  6444                           
  6445                           ;incstack = 0
  6446  0024EA  C02B  F02F         	movff	___ftdiv@f1+2,??___ftdiv
  6447  0024EE  6A30               	clrf	(??___ftdiv+1)& (0+255),c
  6448  0024F0  6A31               	clrf	(??___ftdiv+2)& (0+255),c
  6449  0024F2  342A               	rlcf	___ftdiv@f1+1,w,c
  6450  0024F4  362F               	rlcf	??___ftdiv& (0+255),f,c
  6451  0024F6  E301               	bnc	u4711
  6452  0024F8  8030               	bsf	(??___ftdiv+1)& (0+255),0,c
  6453  0024FA                     u4711:
  6454  0024FA  502F               	movf	??___ftdiv,w,c
  6455  0024FC  6E36               	movwf	___ftdiv@exp,c
  6456  0024FE  5036               	movf	___ftdiv@exp,w,c
  6457  002500  A4D8               	btfss	status,2,c
  6458  002502  D007               	goto	l3941
  6459  002504  0E00               	movlw	0
  6460  002506  6E29               	movwf	?___ftdiv,c
  6461  002508  0E00               	movlw	0
  6462  00250A  6E2A               	movwf	?___ftdiv+1,c
  6463  00250C  0E00               	movlw	0
  6464  00250E  6E2B               	movwf	?___ftdiv+2,c
  6465  002510  0012               	return	
  6466  002512                     l3941:
  6467  002512  C02E  F02F         	movff	___ftdiv@f2+2,??___ftdiv
  6468  002516  6A30               	clrf	(??___ftdiv+1)& (0+255),c
  6469  002518  6A31               	clrf	(??___ftdiv+2)& (0+255),c
  6470  00251A  342D               	rlcf	___ftdiv@f2+1,w,c
  6471  00251C  362F               	rlcf	??___ftdiv& (0+255),f,c
  6472  00251E  E301               	bnc	u4731
  6473  002520  8030               	bsf	(??___ftdiv+1)& (0+255),0,c
  6474  002522                     u4731:
  6475  002522  502F               	movf	??___ftdiv,w,c
  6476  002524  6E37               	movwf	___ftdiv@sign,c
  6477  002526  5037               	movf	___ftdiv@sign,w,c
  6478  002528  A4D8               	btfss	status,2,c
  6479  00252A  D007               	goto	l3947
  6480  00252C  0E00               	movlw	0
  6481  00252E  6E29               	movwf	?___ftdiv,c
  6482  002530  0E00               	movlw	0
  6483  002532  6E2A               	movwf	?___ftdiv+1,c
  6484  002534  0E00               	movlw	0
  6485  002536  6E2B               	movwf	?___ftdiv+2,c
  6486  002538  0012               	return	
  6487  00253A                     l3947:
  6488  00253A  0E00               	movlw	0
  6489  00253C  6E33               	movwf	___ftdiv@f3,c
  6490  00253E  0E00               	movlw	0
  6491  002540  6E34               	movwf	___ftdiv@f3+1,c
  6492  002542  0E00               	movlw	0
  6493  002544  6E35               	movwf	___ftdiv@f3+2,c
  6494  002546  5037               	movf	___ftdiv@sign,w,c
  6495  002548  0F89               	addlw	137
  6496  00254A  5E36               	subwf	___ftdiv@exp,f,c
  6497  00254C  C02B  F037         	movff	___ftdiv@f1+2,___ftdiv@sign
  6498  002550  502E               	movf	___ftdiv@f2+2,w,c
  6499  002552  1A37               	xorwf	___ftdiv@sign,f,c
  6500  002554  0E80               	movlw	128
  6501  002556  1637               	andwf	___ftdiv@sign,f,c
  6502  002558  8E2A               	bsf	___ftdiv@f1+1,7,c
  6503  00255A  0EFF               	movlw	255
  6504  00255C  1629               	andwf	___ftdiv@f1,f,c
  6505  00255E  0EFF               	movlw	255
  6506  002560  162A               	andwf	___ftdiv@f1+1,f,c
  6507  002562  0E00               	movlw	0
  6508  002564  162B               	andwf	___ftdiv@f1+2,f,c
  6509  002566  8E2D               	bsf	___ftdiv@f2+1,7,c
  6510  002568  0EFF               	movlw	255
  6511  00256A  162C               	andwf	___ftdiv@f2,f,c
  6512  00256C  0EFF               	movlw	255
  6513  00256E  162D               	andwf	___ftdiv@f2+1,f,c
  6514  002570  0E00               	movlw	0
  6515  002572  162E               	andwf	___ftdiv@f2+2,f,c
  6516  002574  0E18               	movlw	24
  6517  002576  6E32               	movwf	___ftdiv@cntr,c
  6518  002578                     l3967:
  6519  002578  90D8               	bcf	status,0,c
  6520  00257A  3633               	rlcf	___ftdiv@f3,f,c
  6521  00257C  3634               	rlcf	___ftdiv@f3+1,f,c
  6522  00257E  3635               	rlcf	___ftdiv@f3+2,f,c
  6523  002580  502C               	movf	___ftdiv@f2,w,c
  6524  002582  5C29               	subwf	___ftdiv@f1,w,c
  6525  002584  502D               	movf	___ftdiv@f2+1,w,c
  6526  002586  582A               	subwfb	___ftdiv@f1+1,w,c
  6527  002588  502E               	movf	___ftdiv@f2+2,w,c
  6528  00258A  582B               	subwfb	___ftdiv@f1+2,w,c
  6529  00258C  A0D8               	btfss	status,0,c
  6530  00258E  D007               	goto	l788
  6531  002590  502C               	movf	___ftdiv@f2,w,c
  6532  002592  5E29               	subwf	___ftdiv@f1,f,c
  6533  002594  502D               	movf	___ftdiv@f2+1,w,c
  6534  002596  5A2A               	subwfb	___ftdiv@f1+1,f,c
  6535  002598  502E               	movf	___ftdiv@f2+2,w,c
  6536  00259A  5A2B               	subwfb	___ftdiv@f1+2,f,c
  6537  00259C  8033               	bsf	___ftdiv@f3,0,c
  6538  00259E                     l788:
  6539  00259E  90D8               	bcf	status,0,c
  6540  0025A0  3629               	rlcf	___ftdiv@f1,f,c
  6541  0025A2  362A               	rlcf	___ftdiv@f1+1,f,c
  6542  0025A4  362B               	rlcf	___ftdiv@f1+2,f,c
  6543  0025A6  2E32               	decfsz	___ftdiv@cntr,f,c
  6544  0025A8  D7E7               	goto	l3967
  6545  0025AA  C033  F00F         	movff	___ftdiv@f3,___ftpack@arg
  6546  0025AE  C034  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6547  0025B2  C035  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6548  0025B6  C036  F012         	movff	___ftdiv@exp,___ftpack@exp
  6549  0025BA  C037  F013         	movff	___ftdiv@sign,___ftpack@sign
  6550  0025BE  EC40  F013         	call	___ftpack	;wreg free
  6551  0025C2  C00F  F029         	movff	?___ftpack,?___ftdiv
  6552  0025C6  C010  F02A         	movff	?___ftpack+1,?___ftdiv+1
  6553  0025CA  C011  F02B         	movff	?___ftpack+2,?___ftdiv+2
  6554  0025CE  0012               	return	
  6555  0025D0                     __end_of___ftdiv:
  6556                           	opt stack 0
  6557                           tblptru	equ	0xFF8
  6558                           tblptrh	equ	0xFF7
  6559                           tblptrl	equ	0xFF6
  6560                           tablat	equ	0xFF5
  6561                           prodh	equ	0xFF4
  6562                           prodl	equ	0xFF3
  6563                           intcon	equ	0xFF2
  6564                           postinc0	equ	0xFEE
  6565                           wreg	equ	0xFE8
  6566                           indf1	equ	0xFE7
  6567                           postinc1	equ	0xFE6
  6568                           postdec1	equ	0xFE5
  6569                           fsr1h	equ	0xFE2
  6570                           fsr1l	equ	0xFE1
  6571                           indf2	equ	0xFDF
  6572                           postinc2	equ	0xFDE
  6573                           postdec2	equ	0xFDD
  6574                           plusw2	equ	0xFDB
  6575                           fsr2h	equ	0xFDA
  6576                           fsr2l	equ	0xFD9
  6577                           status	equ	0xFD8
  6578                           
  6579 ;; *************** function ___ftpack *****************
  6580 ;; Defined at:
  6581 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  arg             3   14[COMRAM] unsigned um
  6584 ;;  exp             1   17[COMRAM] unsigned char 
  6585 ;;  sign            1   18[COMRAM] unsigned char 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  3   14[COMRAM] float 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2, status,0
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6597 ;;      Params:         5       0       0       0       0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6599 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6600 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6601 ;;Total ram usage:        8 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    1
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		___altoft
  6608 ;;		___ftadd
  6609 ;;		___ftdiv
  6610 ;;		___ftmul
  6611 ;;		___lwtoft
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text34
  6616  002680                     __ptext34:
  6617                           	opt stack 0
  6618  002680                     ___ftpack:
  6619                           	opt stack 25
  6620                           
  6621                           ;incstack = 0
  6622  002680  5012               	movf	___ftpack@exp,w,c
  6623  002682  B4D8               	btfsc	status,2,c
  6624  002684  D005               	goto	l3653
  6625  002686  500F               	movf	___ftpack@arg,w,c
  6626  002688  1010               	iorwf	___ftpack@arg+1,w,c
  6627  00268A  1011               	iorwf	___ftpack@arg+2,w,c
  6628  00268C  A4D8               	btfss	status,2,c
  6629  00268E  D00C               	goto	l3659
  6630  002690                     l3653:
  6631  002690  0E00               	movlw	0
  6632  002692  6E0F               	movwf	?___ftpack,c
  6633  002694  0E00               	movlw	0
  6634  002696  6E10               	movwf	?___ftpack+1,c
  6635  002698  0E00               	movlw	0
  6636  00269A  6E11               	movwf	?___ftpack+2,c
  6637  00269C  0012               	return	
  6638  00269E                     l3657:
  6639  00269E  2A12               	incf	___ftpack@exp,f,c
  6640  0026A0  90D8               	bcf	status,0,c
  6641  0026A2  3211               	rrcf	___ftpack@arg+2,f,c
  6642  0026A4  3210               	rrcf	___ftpack@arg+1,f,c
  6643  0026A6  320F               	rrcf	___ftpack@arg,f,c
  6644  0026A8                     l3659:
  6645  0026A8  0E00               	movlw	0
  6646  0026AA  140F               	andwf	___ftpack@arg,w,c
  6647  0026AC  6E14               	movwf	??___ftpack& (0+255),c
  6648  0026AE  0E00               	movlw	0
  6649  0026B0  1410               	andwf	___ftpack@arg+1,w,c
  6650  0026B2  6E15               	movwf	(??___ftpack+1)& (0+255),c
  6651  0026B4  0EFE               	movlw	254
  6652  0026B6  1411               	andwf	___ftpack@arg+2,w,c
  6653  0026B8  6E16               	movwf	(??___ftpack+2)& (0+255),c
  6654  0026BA  5014               	movf	??___ftpack,w,c
  6655  0026BC  1015               	iorwf	??___ftpack+1,w,c
  6656  0026BE  1016               	iorwf	??___ftpack+2,w,c
  6657  0026C0  B4D8               	btfsc	status,2,c
  6658  0026C2  D00C               	goto	l3665
  6659  0026C4  D7EC               	goto	l3657
  6660  0026C6                     l3661:
  6661  0026C6  2A12               	incf	___ftpack@exp,f,c
  6662  0026C8  0E01               	movlw	1
  6663  0026CA  260F               	addwf	___ftpack@arg,f,c
  6664  0026CC  0E00               	movlw	0
  6665  0026CE  2210               	addwfc	___ftpack@arg+1,f,c
  6666  0026D0  0E00               	movlw	0
  6667  0026D2  2211               	addwfc	___ftpack@arg+2,f,c
  6668  0026D4  90D8               	bcf	status,0,c
  6669  0026D6  3211               	rrcf	___ftpack@arg+2,f,c
  6670  0026D8  3210               	rrcf	___ftpack@arg+1,f,c
  6671  0026DA  320F               	rrcf	___ftpack@arg,f,c
  6672  0026DC                     l3665:
  6673  0026DC  0E00               	movlw	0
  6674  0026DE  140F               	andwf	___ftpack@arg,w,c
  6675  0026E0  6E14               	movwf	??___ftpack& (0+255),c
  6676  0026E2  0E00               	movlw	0
  6677  0026E4  1410               	andwf	___ftpack@arg+1,w,c
  6678  0026E6  6E15               	movwf	(??___ftpack+1)& (0+255),c
  6679  0026E8  0EFF               	movlw	255
  6680  0026EA  1411               	andwf	___ftpack@arg+2,w,c
  6681  0026EC  6E16               	movwf	(??___ftpack+2)& (0+255),c
  6682  0026EE  5014               	movf	??___ftpack,w,c
  6683  0026F0  1015               	iorwf	??___ftpack+1,w,c
  6684  0026F2  1016               	iorwf	??___ftpack+2,w,c
  6685  0026F4  B4D8               	btfsc	status,2,c
  6686  0026F6  D006               	goto	l3669
  6687  0026F8  D7E6               	goto	l3661
  6688  0026FA                     l3667:
  6689  0026FA  0612               	decf	___ftpack@exp,f,c
  6690  0026FC  90D8               	bcf	status,0,c
  6691  0026FE  360F               	rlcf	___ftpack@arg,f,c
  6692  002700  3610               	rlcf	___ftpack@arg+1,f,c
  6693  002702  3611               	rlcf	___ftpack@arg+2,f,c
  6694  002704                     l3669:
  6695  002704  BE10               	btfsc	___ftpack@arg+1,7,c
  6696  002706  D003               	goto	l705
  6697  002708  0E02               	movlw	2
  6698  00270A  6012               	cpfslt	___ftpack@exp,c
  6699  00270C  D7F6               	goto	l3667
  6700  00270E                     l705:
  6701  00270E  A012               	btfss	___ftpack@exp,0,c
  6702  002710  9E10               	bcf	___ftpack@arg+1,7,c
  6703  002712  90D8               	bcf	status,0,c
  6704  002714  3212               	rrcf	___ftpack@exp,f,c
  6705  002716  5012               	movf	___ftpack@exp,w,c
  6706  002718  1211               	iorwf	___ftpack@arg+2,f,c
  6707  00271A  5013               	movf	___ftpack@sign,w,c
  6708  00271C  A4D8               	btfss	status,2,c
  6709  00271E  8E11               	bsf	___ftpack@arg+2,7,c
  6710  002720  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  6711  002724  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  6712  002728  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  6713  00272C  0012               	return	
  6714  00272E                     __end_of___ftpack:
  6715                           	opt stack 0
  6716                           tblptru	equ	0xFF8
  6717                           tblptrh	equ	0xFF7
  6718                           tblptrl	equ	0xFF6
  6719                           tablat	equ	0xFF5
  6720                           prodh	equ	0xFF4
  6721                           prodl	equ	0xFF3
  6722                           intcon	equ	0xFF2
  6723                           postinc0	equ	0xFEE
  6724                           wreg	equ	0xFE8
  6725                           indf1	equ	0xFE7
  6726                           postinc1	equ	0xFE6
  6727                           postdec1	equ	0xFE5
  6728                           fsr1h	equ	0xFE2
  6729                           fsr1l	equ	0xFE1
  6730                           indf2	equ	0xFDF
  6731                           postinc2	equ	0xFDE
  6732                           postdec2	equ	0xFDD
  6733                           plusw2	equ	0xFDB
  6734                           fsr2h	equ	0xFDA
  6735                           fsr2l	equ	0xFD9
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function _SetChanADC *****************
  6739 ;; Defined at:
  6740 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcsetch.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  channel         1    wreg     unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  channel         1   15[COMRAM] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      void 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0
  6755 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6756 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6757 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6758 ;;Total ram usage:        2 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    1
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_convert
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text35
  6769  002DB6                     __ptext35:
  6770                           	opt stack 0
  6771  002DB6                     _SetChanADC:
  6772                           	opt stack 28
  6773                           
  6774                           ;incstack = 0
  6775                           ;SetChanADC@channel stored from wreg
  6776  002DB6  6E10               	movwf	SetChanADC@channel,c
  6777  002DB8  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  6778  002DBC  0EC3               	movlw	195
  6779  002DBE  160F               	andwf	??_SetChanADC,f,c
  6780  002DC0  90D8               	bcf	status,0,c
  6781  002DC2  3010               	rrcf	SetChanADC@channel,w,c
  6782  002DC4  0B3C               	andlw	60
  6783  002DC6  100F               	iorwf	??_SetChanADC,w,c
  6784  002DC8  6EC2               	movwf	4034,c	;volatile
  6785  002DCA  0012               	return		;funcret
  6786  002DCC                     __end_of_SetChanADC:
  6787                           	opt stack 0
  6788                           tblptru	equ	0xFF8
  6789                           tblptrh	equ	0xFF7
  6790                           tblptrl	equ	0xFF6
  6791                           tablat	equ	0xFF5
  6792                           prodh	equ	0xFF4
  6793                           prodl	equ	0xFF3
  6794                           intcon	equ	0xFF2
  6795                           postinc0	equ	0xFEE
  6796                           wreg	equ	0xFE8
  6797                           indf1	equ	0xFE7
  6798                           postinc1	equ	0xFE6
  6799                           postdec1	equ	0xFE5
  6800                           fsr1h	equ	0xFE2
  6801                           fsr1l	equ	0xFE1
  6802                           indf2	equ	0xFDF
  6803                           postinc2	equ	0xFDE
  6804                           postdec2	equ	0xFDD
  6805                           plusw2	equ	0xFDB
  6806                           fsr2h	equ	0xFDA
  6807                           fsr2l	equ	0xFD9
  6808                           status	equ	0xFD8
  6809                           
  6810 ;; *************** function _ReadADC *****************
  6811 ;; Defined at:
  6812 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcread.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  2   14[COMRAM] int 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6826 ;;      Params:         2       0       0       0       0       0       0       0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6828 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6829 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6830 ;;Total ram usage:        4 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    1
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_convert
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text36
  6841  002DFA                     __ptext36:
  6842                           	opt stack 0
  6843  002DFA                     _ReadADC:
  6844                           	opt stack 28
  6845                           
  6846                           ;incstack = 0
  6847  002DFA  50C4               	movf	4036,w,c	;volatile
  6848  002DFC  6E11               	movwf	??_ReadADC& (0+255),c
  6849  002DFE  50C3               	movf	4035,w,c	;volatile
  6850  002E00  6E0F               	movwf	?_ReadADC,c
  6851  002E02  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  6852  002E06  0012               	return	
  6853  002E08                     __end_of_ReadADC:
  6854                           	opt stack 0
  6855                           tblptru	equ	0xFF8
  6856                           tblptrh	equ	0xFF7
  6857                           tblptrl	equ	0xFF6
  6858                           tablat	equ	0xFF5
  6859                           prodh	equ	0xFF4
  6860                           prodl	equ	0xFF3
  6861                           intcon	equ	0xFF2
  6862                           postinc0	equ	0xFEE
  6863                           wreg	equ	0xFE8
  6864                           indf1	equ	0xFE7
  6865                           postinc1	equ	0xFE6
  6866                           postdec1	equ	0xFE5
  6867                           fsr1h	equ	0xFE2
  6868                           fsr1l	equ	0xFE1
  6869                           indf2	equ	0xFDF
  6870                           postinc2	equ	0xFDE
  6871                           postdec2	equ	0xFDD
  6872                           plusw2	equ	0xFDB
  6873                           fsr2h	equ	0xFDA
  6874                           fsr2l	equ	0xFD9
  6875                           status	equ	0xFD8
  6876                           
  6877 ;; *************** function _ConvertADC *****************
  6878 ;; Defined at:
  6879 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcconv.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;		None
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;		None
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		None
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6893 ;;      Params:         0       0       0       0       0       0       0       0       0
  6894 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6896 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6897 ;;Total ram usage:        0 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    1
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_convert
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text37
  6908  002E24                     __ptext37:
  6909                           	opt stack 0
  6910  002E24                     _ConvertADC:
  6911                           	opt stack 28
  6912                           
  6913                           ;incstack = 0
  6914  002E24  82C2               	bsf	4034,1,c	;volatile
  6915  002E26  0012               	return		;funcret
  6916  002E28                     __end_of_ConvertADC:
  6917                           	opt stack 0
  6918                           tblptru	equ	0xFF8
  6919                           tblptrh	equ	0xFF7
  6920                           tblptrl	equ	0xFF6
  6921                           tablat	equ	0xFF5
  6922                           prodh	equ	0xFF4
  6923                           prodl	equ	0xFF3
  6924                           intcon	equ	0xFF2
  6925                           postinc0	equ	0xFEE
  6926                           wreg	equ	0xFE8
  6927                           indf1	equ	0xFE7
  6928                           postinc1	equ	0xFE6
  6929                           postdec1	equ	0xFE5
  6930                           fsr1h	equ	0xFE2
  6931                           fsr1l	equ	0xFE1
  6932                           indf2	equ	0xFDF
  6933                           postinc2	equ	0xFDE
  6934                           postdec2	equ	0xFDD
  6935                           plusw2	equ	0xFDB
  6936                           fsr2h	equ	0xFDA
  6937                           fsr2l	equ	0xFD9
  6938                           status	equ	0xFD8
  6939                           
  6940 ;; *************** function _BusyADC *****************
  6941 ;; Defined at:
  6942 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\ADC\adcbusy.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      unsigned char 
  6949 ;; Registers used:
  6950 ;;		wreg
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6956 ;;      Params:         0       0       0       0       0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6960 ;;Total ram usage:        0 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:    1
  6963 ;; This function calls:
  6964 ;;		Nothing
  6965 ;; This function is called by:
  6966 ;;		_convert
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           	psect	text38
  6971  002E08                     __ptext38:
  6972                           	opt stack 0
  6973  002E08                     _BusyADC:
  6974                           	opt stack 28
  6975                           
  6976                           ;incstack = 0
  6977  002E08  A2C2               	btfss	4034,1,c	;volatile
  6978  002E0A  D002               	goto	u2800
  6979  002E0C  0E01               	movlw	1
  6980  002E0E  0012               	return	
  6981  002E10                     u2800:
  6982  002E10  0E00               	movlw	0
  6983  002E12  0012               	return	
  6984  002E14                     __end_of_BusyADC:
  6985                           	opt stack 0
  6986                           tblptru	equ	0xFF8
  6987                           tblptrh	equ	0xFF7
  6988                           tblptrl	equ	0xFF6
  6989                           tablat	equ	0xFF5
  6990                           prodh	equ	0xFF4
  6991                           prodl	equ	0xFF3
  6992                           intcon	equ	0xFF2
  6993                           postinc0	equ	0xFEE
  6994                           wreg	equ	0xFE8
  6995                           indf1	equ	0xFE7
  6996                           postinc1	equ	0xFE6
  6997                           postdec1	equ	0xFE5
  6998                           fsr1h	equ	0xFE2
  6999                           fsr1l	equ	0xFE1
  7000                           indf2	equ	0xFDF
  7001                           postinc2	equ	0xFDE
  7002                           postdec2	equ	0xFDD
  7003                           plusw2	equ	0xFDB
  7004                           fsr2h	equ	0xFDA
  7005                           fsr2l	equ	0xFD9
  7006                           status	equ	0xFD8
  7007                           
  7008 ;; *************** function _checa_botao *****************
  7009 ;; Defined at:
  7010 ;;		line 81 in file "display_LCD.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  Relogio         2   18[COMRAM] PTR struct .
  7013 ;;		 -> Relogio(6), 
  7014 ;;  Despertador     2   20[COMRAM] PTR struct .
  7015 ;;		 -> Despertador(6), 
  7016 ;;  Calendario      2   22[COMRAM] PTR struct .
  7017 ;;		 -> Calendario(6), 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;		None
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7029 ;;      Params:         6       0       0       0       0       0       0       0       0
  7030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7031 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7032 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7033 ;;Total ram usage:       10 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; Hardware stack levels required when called:    2
  7036 ;; This function calls:
  7037 ;;		_controla_despertador
  7038 ;; This function is called by:
  7039 ;;		_main
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           	psect	text39
  7044  000882                     __ptext39:
  7045                           	opt stack 0
  7046  000882                     _checa_botao:
  7047                           	opt stack 28
  7048                           
  7049                           ;display_LCD.c: 84: if(PORTDbits.RD0==1){
  7050                           
  7051                           ;incstack = 0
  7052  000882  A083               	btfss	3971,0,c	;volatile
  7053  000884  D014               	goto	l3221
  7054                           
  7055                           ;display_LCD.c: 85: _delay((unsigned long)((180)*(20000000/4000.0)));
  7056  000886  0E05               	movlw	5
  7057  000888  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7058  00088A  0E91               	movlw	145
  7059  00088C  6E19               	movwf	??_checa_botao& (0+255),c
  7060  00088E  0ED0               	movlw	208
  7061  000890                     u4947:
  7062  000890  2EE8               	decfsz	wreg,f,c
  7063  000892  D7FE               	bra	u4947
  7064  000894  2E19               	decfsz	??_checa_botao& (0+255),f,c
  7065  000896  D7FC               	bra	u4947
  7066  000898  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  7067  00089A  D7FA               	bra	u4947
  7068                           
  7069                           ;display_LCD.c: 86: tela_exibida++;
  7070  00089C  0100               	movlb	0	; () banked
  7071  00089E  4BAE               	infsnz	_tela_exibida& (0+255),f,b
  7072  0008A0  2BAF               	incf	(_tela_exibida+1)& (0+255),f,b
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;display_LCD.c: 87: cursor=0;
  7076  0008A2  0E00               	movlw	0
  7077  0008A4  6E45               	movwf	_cursor+1,c
  7078  0008A6  0E00               	movlw	0
  7079  0008A8  6E44               	movwf	_cursor,c
  7080  0008AA                     l113:
  7081  0008AA  B083               	btfsc	3971,0,c	;volatile
  7082  0008AC  D7FE               	goto	l113
  7083  0008AE                     l3221:
  7084                           
  7085                           ;display_LCD.c: 89: }
  7086                           ;display_LCD.c: 90: if(tela_exibida>2) tela_exibida=0;
  7087  0008AE  0100               	movlb	0	; () banked
  7088  0008B0  BFAF               	btfsc	(_tela_exibida+1)& (0+255),7,b
  7089  0008B2  D00D               	goto	l3225
  7090  0008B4  0100               	movlb	0	; () banked
  7091  0008B6  51AF               	movf	(_tela_exibida+1)& (0+255),w,b
  7092  0008B8  E105               	bnz	u3240
  7093  0008BA  0E03               	movlw	3
  7094  0008BC  0100               	movlb	0	; () banked
  7095  0008BE  5DAE               	subwf	_tela_exibida& (0+255),w,b
  7096  0008C0  A0D8               	btfss	status,0,c
  7097  0008C2  D005               	goto	l3225
  7098  0008C4                     u3240:
  7099                           
  7100                           ; BSR set to: 0
  7101  0008C4  0E00               	movlw	0
  7102  0008C6  0100               	movlb	0	; () banked
  7103  0008C8  6FAF               	movwf	(_tela_exibida+1)& (0+255),b
  7104  0008CA  0E00               	movlw	0
  7105  0008CC  6FAE               	movwf	_tela_exibida& (0+255),b
  7106  0008CE                     l3225:
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;display_LCD.c: 93: if(PORTDbits.RD1==1){
  7110  0008CE  A283               	btfss	3971,1,c	;volatile
  7111  0008D0  D18C               	goto	l117
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;display_LCD.c: 94: _delay((unsigned long)((180)*(20000000/4000.0)));
  7115  0008D2  0E05               	movlw	5
  7116  0008D4  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7117  0008D6  0E91               	movlw	145
  7118  0008D8  6E19               	movwf	??_checa_botao& (0+255),c
  7119  0008DA  0ED0               	movlw	208
  7120  0008DC                     u4957:
  7121  0008DC  2EE8               	decfsz	wreg,f,c
  7122  0008DE  D7FE               	bra	u4957
  7123  0008E0  2E19               	decfsz	??_checa_botao& (0+255),f,c
  7124  0008E2  D7FC               	bra	u4957
  7125  0008E4  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  7126  0008E6  D7FA               	bra	u4957
  7127                           
  7128                           ;display_LCD.c: 96: if(tela_exibida==0){
  7129  0008E8  0100               	movlb	0	; () banked
  7130  0008EA  51AE               	movf	_tela_exibida& (0+255),w,b
  7131  0008EC  0100               	movlb	0	; () banked
  7132  0008EE  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  7133  0008F0  A4D8               	btfss	status,2,c
  7134  0008F2  D0F4               	goto	l3279
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;display_LCD.c: 97: if(cursor==0) Relogio->hora=Relogio->hora+10;
  7138  0008F4  5044               	movf	_cursor,w,c
  7139  0008F6  1045               	iorwf	_cursor+1,w,c
  7140  0008F8  A4D8               	btfss	status,2,c
  7141  0008FA  D018               	goto	l3235
  7142                           
  7143                           ; BSR set to: 0
  7144  0008FC  EE20 F004          	lfsr	2,4
  7145  000900  5013               	movf	checa_botao@Relogio,w,c
  7146  000902  26D9               	addwf	fsr2l,f,c
  7147  000904  5014               	movf	checa_botao@Relogio+1,w,c
  7148  000906  22DA               	addwfc	fsr2h,f,c
  7149  000908  CFDE F019          	movff	postinc2,??_checa_botao
  7150  00090C  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7151  000910  0E0A               	movlw	10
  7152  000912  2619               	addwf	??_checa_botao,f,c
  7153  000914  0E00               	movlw	0
  7154  000916  221A               	addwfc	??_checa_botao+1,f,c
  7155  000918  EE20 F004          	lfsr	2,4
  7156  00091C  5013               	movf	checa_botao@Relogio,w,c
  7157  00091E  26D9               	addwf	fsr2l,f,c
  7158  000920  5014               	movf	checa_botao@Relogio+1,w,c
  7159  000922  22DA               	addwfc	fsr2h,f,c
  7160  000924  C019  FFDE         	movff	??_checa_botao,postinc2
  7161  000928  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7162  00092C                     l3235:
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;display_LCD.c: 98: if(cursor==1) Relogio->hora++;
  7166  00092C  0444               	decf	_cursor,w,c
  7167  00092E  1045               	iorwf	_cursor+1,w,c
  7168  000930  A4D8               	btfss	status,2,c
  7169  000932  D009               	goto	l3239
  7170                           
  7171                           ; BSR set to: 0
  7172  000934  EE20 F004          	lfsr	2,4
  7173  000938  5013               	movf	checa_botao@Relogio,w,c
  7174  00093A  26D9               	addwf	fsr2l,f,c
  7175  00093C  5014               	movf	checa_botao@Relogio+1,w,c
  7176  00093E  22DA               	addwfc	fsr2h,f,c
  7177  000940  2ADE               	incf	postinc2,f,c
  7178  000942  0E00               	movlw	0
  7179  000944  22DD               	addwfc	postdec2,f,c
  7180  000946                     l3239:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;display_LCD.c: 99: if(cursor==2) Relogio->minuto=Relogio->minuto+10;
  7184  000946  0E02               	movlw	2
  7185  000948  1844               	xorwf	_cursor,w,c
  7186  00094A  1045               	iorwf	_cursor+1,w,c
  7187  00094C  A4D8               	btfss	status,2,c
  7188  00094E  D014               	goto	l3243
  7189                           
  7190                           ; BSR set to: 0
  7191  000950  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7192  000954  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7193  000958  CFDE F019          	movff	postinc2,??_checa_botao
  7194  00095C  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7195  000960  0E0A               	movlw	10
  7196  000962  2619               	addwf	??_checa_botao,f,c
  7197  000964  0E00               	movlw	0
  7198  000966  221A               	addwfc	??_checa_botao+1,f,c
  7199  000968  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7200  00096C  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7201  000970  C019  FFDE         	movff	??_checa_botao,postinc2
  7202  000974  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7203  000978                     l3243:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;display_LCD.c: 100: if(cursor==3) Relogio->minuto++;
  7207  000978  0E03               	movlw	3
  7208  00097A  1844               	xorwf	_cursor,w,c
  7209  00097C  1045               	iorwf	_cursor+1,w,c
  7210  00097E  A4D8               	btfss	status,2,c
  7211  000980  D007               	goto	l3247
  7212                           
  7213                           ; BSR set to: 0
  7214  000982  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7215  000986  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7216  00098A  2ADE               	incf	postinc2,f,c
  7217  00098C  0E00               	movlw	0
  7218  00098E  22DD               	addwfc	postdec2,f,c
  7219  000990                     l3247:
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;display_LCD.c: 101: if(cursor==4) Relogio->segundo=Relogio->segundo+10;
  7223  000990  0E04               	movlw	4
  7224  000992  1844               	xorwf	_cursor,w,c
  7225  000994  1045               	iorwf	_cursor+1,w,c
  7226  000996  A4D8               	btfss	status,2,c
  7227  000998  D018               	goto	l3251
  7228                           
  7229                           ; BSR set to: 0
  7230  00099A  EE20 F002          	lfsr	2,2
  7231  00099E  5013               	movf	checa_botao@Relogio,w,c
  7232  0009A0  26D9               	addwf	fsr2l,f,c
  7233  0009A2  5014               	movf	checa_botao@Relogio+1,w,c
  7234  0009A4  22DA               	addwfc	fsr2h,f,c
  7235  0009A6  CFDE F019          	movff	postinc2,??_checa_botao
  7236  0009AA  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7237  0009AE  0E0A               	movlw	10
  7238  0009B0  2619               	addwf	??_checa_botao,f,c
  7239  0009B2  0E00               	movlw	0
  7240  0009B4  221A               	addwfc	??_checa_botao+1,f,c
  7241  0009B6  EE20 F002          	lfsr	2,2
  7242  0009BA  5013               	movf	checa_botao@Relogio,w,c
  7243  0009BC  26D9               	addwf	fsr2l,f,c
  7244  0009BE  5014               	movf	checa_botao@Relogio+1,w,c
  7245  0009C0  22DA               	addwfc	fsr2h,f,c
  7246  0009C2  C019  FFDE         	movff	??_checa_botao,postinc2
  7247  0009C6  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7248  0009CA                     l3251:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;display_LCD.c: 102: if(cursor==5) Relogio->segundo++;
  7252  0009CA  0E05               	movlw	5
  7253  0009CC  1844               	xorwf	_cursor,w,c
  7254  0009CE  1045               	iorwf	_cursor+1,w,c
  7255  0009D0  A4D8               	btfss	status,2,c
  7256  0009D2  D009               	goto	l3255
  7257                           
  7258                           ; BSR set to: 0
  7259  0009D4  EE20 F002          	lfsr	2,2
  7260  0009D8  5013               	movf	checa_botao@Relogio,w,c
  7261  0009DA  26D9               	addwf	fsr2l,f,c
  7262  0009DC  5014               	movf	checa_botao@Relogio+1,w,c
  7263  0009DE  22DA               	addwfc	fsr2h,f,c
  7264  0009E0  2ADE               	incf	postinc2,f,c
  7265  0009E2  0E00               	movlw	0
  7266  0009E4  22DD               	addwfc	postdec2,f,c
  7267  0009E6                     l3255:
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;display_LCD.c: 103: if(cursor==6) Calendario->dia=Calendario->dia+10;
  7271  0009E6  0E06               	movlw	6
  7272  0009E8  1844               	xorwf	_cursor,w,c
  7273  0009EA  1045               	iorwf	_cursor+1,w,c
  7274  0009EC  A4D8               	btfss	status,2,c
  7275  0009EE  D014               	goto	l3259
  7276                           
  7277                           ; BSR set to: 0
  7278  0009F0  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7279  0009F4  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7280  0009F8  CFDE F019          	movff	postinc2,??_checa_botao
  7281  0009FC  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7282  000A00  0E0A               	movlw	10
  7283  000A02  2619               	addwf	??_checa_botao,f,c
  7284  000A04  0E00               	movlw	0
  7285  000A06  221A               	addwfc	??_checa_botao+1,f,c
  7286  000A08  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7287  000A0C  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7288  000A10  C019  FFDE         	movff	??_checa_botao,postinc2
  7289  000A14  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7290  000A18                     l3259:
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;display_LCD.c: 104: if(cursor==7) Calendario->dia++;
  7294  000A18  0E07               	movlw	7
  7295  000A1A  1844               	xorwf	_cursor,w,c
  7296  000A1C  1045               	iorwf	_cursor+1,w,c
  7297  000A1E  A4D8               	btfss	status,2,c
  7298  000A20  D007               	goto	l3263
  7299                           
  7300                           ; BSR set to: 0
  7301  000A22  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7302  000A26  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7303  000A2A  2ADE               	incf	postinc2,f,c
  7304  000A2C  0E00               	movlw	0
  7305  000A2E  22DD               	addwfc	postdec2,f,c
  7306  000A30                     l3263:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;display_LCD.c: 105: if(cursor==8) Calendario->mes=Calendario->mes+10;
  7310  000A30  0E08               	movlw	8
  7311  000A32  1844               	xorwf	_cursor,w,c
  7312  000A34  1045               	iorwf	_cursor+1,w,c
  7313  000A36  A4D8               	btfss	status,2,c
  7314  000A38  D018               	goto	l3267
  7315                           
  7316                           ; BSR set to: 0
  7317  000A3A  EE20 F002          	lfsr	2,2
  7318  000A3E  5017               	movf	checa_botao@Calendario,w,c
  7319  000A40  26D9               	addwf	fsr2l,f,c
  7320  000A42  5018               	movf	checa_botao@Calendario+1,w,c
  7321  000A44  22DA               	addwfc	fsr2h,f,c
  7322  000A46  CFDE F019          	movff	postinc2,??_checa_botao
  7323  000A4A  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7324  000A4E  0E0A               	movlw	10
  7325  000A50  2619               	addwf	??_checa_botao,f,c
  7326  000A52  0E00               	movlw	0
  7327  000A54  221A               	addwfc	??_checa_botao+1,f,c
  7328  000A56  EE20 F002          	lfsr	2,2
  7329  000A5A  5017               	movf	checa_botao@Calendario,w,c
  7330  000A5C  26D9               	addwf	fsr2l,f,c
  7331  000A5E  5018               	movf	checa_botao@Calendario+1,w,c
  7332  000A60  22DA               	addwfc	fsr2h,f,c
  7333  000A62  C019  FFDE         	movff	??_checa_botao,postinc2
  7334  000A66  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7335  000A6A                     l3267:
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;display_LCD.c: 106: if(cursor==9) Calendario->mes++;
  7339  000A6A  0E09               	movlw	9
  7340  000A6C  1844               	xorwf	_cursor,w,c
  7341  000A6E  1045               	iorwf	_cursor+1,w,c
  7342  000A70  A4D8               	btfss	status,2,c
  7343  000A72  D009               	goto	l3271
  7344                           
  7345                           ; BSR set to: 0
  7346  000A74  EE20 F002          	lfsr	2,2
  7347  000A78  5017               	movf	checa_botao@Calendario,w,c
  7348  000A7A  26D9               	addwf	fsr2l,f,c
  7349  000A7C  5018               	movf	checa_botao@Calendario+1,w,c
  7350  000A7E  22DA               	addwfc	fsr2h,f,c
  7351  000A80  2ADE               	incf	postinc2,f,c
  7352  000A82  0E00               	movlw	0
  7353  000A84  22DD               	addwfc	postdec2,f,c
  7354  000A86                     l3271:
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;display_LCD.c: 107: if(cursor==10) Calendario->ano=Calendario->ano+10;
  7358  000A86  0E0A               	movlw	10
  7359  000A88  1844               	xorwf	_cursor,w,c
  7360  000A8A  1045               	iorwf	_cursor+1,w,c
  7361  000A8C  A4D8               	btfss	status,2,c
  7362  000A8E  D018               	goto	l3275
  7363                           
  7364                           ; BSR set to: 0
  7365  000A90  EE20 F004          	lfsr	2,4
  7366  000A94  5017               	movf	checa_botao@Calendario,w,c
  7367  000A96  26D9               	addwf	fsr2l,f,c
  7368  000A98  5018               	movf	checa_botao@Calendario+1,w,c
  7369  000A9A  22DA               	addwfc	fsr2h,f,c
  7370  000A9C  CFDE F019          	movff	postinc2,??_checa_botao
  7371  000AA0  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7372  000AA4  0E0A               	movlw	10
  7373  000AA6  2619               	addwf	??_checa_botao,f,c
  7374  000AA8  0E00               	movlw	0
  7375  000AAA  221A               	addwfc	??_checa_botao+1,f,c
  7376  000AAC  EE20 F004          	lfsr	2,4
  7377  000AB0  5017               	movf	checa_botao@Calendario,w,c
  7378  000AB2  26D9               	addwf	fsr2l,f,c
  7379  000AB4  5018               	movf	checa_botao@Calendario+1,w,c
  7380  000AB6  22DA               	addwfc	fsr2h,f,c
  7381  000AB8  C019  FFDE         	movff	??_checa_botao,postinc2
  7382  000ABC  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7383  000AC0                     l3275:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;display_LCD.c: 108: if(cursor==11) Calendario->ano++;
  7387  000AC0  0E0B               	movlw	11
  7388  000AC2  1844               	xorwf	_cursor,w,c
  7389  000AC4  1045               	iorwf	_cursor+1,w,c
  7390  000AC6  A4D8               	btfss	status,2,c
  7391  000AC8  D009               	goto	l3279
  7392                           
  7393                           ; BSR set to: 0
  7394  000ACA  EE20 F004          	lfsr	2,4
  7395  000ACE  5017               	movf	checa_botao@Calendario,w,c
  7396  000AD0  26D9               	addwf	fsr2l,f,c
  7397  000AD2  5018               	movf	checa_botao@Calendario+1,w,c
  7398  000AD4  22DA               	addwfc	fsr2h,f,c
  7399  000AD6  2ADE               	incf	postinc2,f,c
  7400  000AD8  0E00               	movlw	0
  7401  000ADA  22DD               	addwfc	postdec2,f,c
  7402  000ADC                     l3279:
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;display_LCD.c: 109: }
  7406                           ;display_LCD.c: 111: if(tela_exibida==1){
  7407  000ADC  0100               	movlb	0	; () banked
  7408  000ADE  05AE               	decf	_tela_exibida& (0+255),w,b
  7409  000AE0  0100               	movlb	0	; () banked
  7410  000AE2  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  7411  000AE4  A4D8               	btfss	status,2,c
  7412  000AE6  D07F               	goto	l138
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;display_LCD.c: 112: if(cursor==0) Despertador->hora=Despertador->hora+10;
  7416  000AE8  5044               	movf	_cursor,w,c
  7417  000AEA  1045               	iorwf	_cursor+1,w,c
  7418  000AEC  A4D8               	btfss	status,2,c
  7419  000AEE  D018               	goto	l3285
  7420                           
  7421                           ; BSR set to: 0
  7422  000AF0  EE20 F004          	lfsr	2,4
  7423  000AF4  5015               	movf	checa_botao@Despertador,w,c
  7424  000AF6  26D9               	addwf	fsr2l,f,c
  7425  000AF8  5016               	movf	checa_botao@Despertador+1,w,c
  7426  000AFA  22DA               	addwfc	fsr2h,f,c
  7427  000AFC  CFDE F019          	movff	postinc2,??_checa_botao
  7428  000B00  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7429  000B04  0E0A               	movlw	10
  7430  000B06  2619               	addwf	??_checa_botao,f,c
  7431  000B08  0E00               	movlw	0
  7432  000B0A  221A               	addwfc	??_checa_botao+1,f,c
  7433  000B0C  EE20 F004          	lfsr	2,4
  7434  000B10  5015               	movf	checa_botao@Despertador,w,c
  7435  000B12  26D9               	addwf	fsr2l,f,c
  7436  000B14  5016               	movf	checa_botao@Despertador+1,w,c
  7437  000B16  22DA               	addwfc	fsr2h,f,c
  7438  000B18  C019  FFDE         	movff	??_checa_botao,postinc2
  7439  000B1C  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7440  000B20                     l3285:
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;display_LCD.c: 113: if(cursor==1) Despertador->hora++;
  7444  000B20  0444               	decf	_cursor,w,c
  7445  000B22  1045               	iorwf	_cursor+1,w,c
  7446  000B24  A4D8               	btfss	status,2,c
  7447  000B26  D009               	goto	l3289
  7448                           
  7449                           ; BSR set to: 0
  7450  000B28  EE20 F004          	lfsr	2,4
  7451  000B2C  5015               	movf	checa_botao@Despertador,w,c
  7452  000B2E  26D9               	addwf	fsr2l,f,c
  7453  000B30  5016               	movf	checa_botao@Despertador+1,w,c
  7454  000B32  22DA               	addwfc	fsr2h,f,c
  7455  000B34  2ADE               	incf	postinc2,f,c
  7456  000B36  0E00               	movlw	0
  7457  000B38  22DD               	addwfc	postdec2,f,c
  7458  000B3A                     l3289:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;display_LCD.c: 114: if(cursor==2) Despertador->minuto=Despertador->minuto+10;
  7462  000B3A  0E02               	movlw	2
  7463  000B3C  1844               	xorwf	_cursor,w,c
  7464  000B3E  1045               	iorwf	_cursor+1,w,c
  7465  000B40  A4D8               	btfss	status,2,c
  7466  000B42  D014               	goto	l3293
  7467                           
  7468                           ; BSR set to: 0
  7469  000B44  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  7470  000B48  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  7471  000B4C  CFDE F019          	movff	postinc2,??_checa_botao
  7472  000B50  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7473  000B54  0E0A               	movlw	10
  7474  000B56  2619               	addwf	??_checa_botao,f,c
  7475  000B58  0E00               	movlw	0
  7476  000B5A  221A               	addwfc	??_checa_botao+1,f,c
  7477  000B5C  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  7478  000B60  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  7479  000B64  C019  FFDE         	movff	??_checa_botao,postinc2
  7480  000B68  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7481  000B6C                     l3293:
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;display_LCD.c: 115: if(cursor==3) Despertador->minuto++;
  7485  000B6C  0E03               	movlw	3
  7486  000B6E  1844               	xorwf	_cursor,w,c
  7487  000B70  1045               	iorwf	_cursor+1,w,c
  7488  000B72  A4D8               	btfss	status,2,c
  7489  000B74  D007               	goto	l3297
  7490                           
  7491                           ; BSR set to: 0
  7492  000B76  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  7493  000B7A  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  7494  000B7E  2ADE               	incf	postinc2,f,c
  7495  000B80  0E00               	movlw	0
  7496  000B82  22DD               	addwfc	postdec2,f,c
  7497  000B84                     l3297:
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;display_LCD.c: 116: if(cursor==4) Despertador->segundo=Despertador->segundo+10;
  7501  000B84  0E04               	movlw	4
  7502  000B86  1844               	xorwf	_cursor,w,c
  7503  000B88  1045               	iorwf	_cursor+1,w,c
  7504  000B8A  A4D8               	btfss	status,2,c
  7505  000B8C  D018               	goto	l3301
  7506                           
  7507                           ; BSR set to: 0
  7508  000B8E  EE20 F002          	lfsr	2,2
  7509  000B92  5015               	movf	checa_botao@Despertador,w,c
  7510  000B94  26D9               	addwf	fsr2l,f,c
  7511  000B96  5016               	movf	checa_botao@Despertador+1,w,c
  7512  000B98  22DA               	addwfc	fsr2h,f,c
  7513  000B9A  CFDE F019          	movff	postinc2,??_checa_botao
  7514  000B9E  CFDD F01A          	movff	postdec2,??_checa_botao+1
  7515  000BA2  0E0A               	movlw	10
  7516  000BA4  2619               	addwf	??_checa_botao,f,c
  7517  000BA6  0E00               	movlw	0
  7518  000BA8  221A               	addwfc	??_checa_botao+1,f,c
  7519  000BAA  EE20 F002          	lfsr	2,2
  7520  000BAE  5015               	movf	checa_botao@Despertador,w,c
  7521  000BB0  26D9               	addwf	fsr2l,f,c
  7522  000BB2  5016               	movf	checa_botao@Despertador+1,w,c
  7523  000BB4  22DA               	addwfc	fsr2h,f,c
  7524  000BB6  C019  FFDE         	movff	??_checa_botao,postinc2
  7525  000BBA  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  7526  000BBE                     l3301:
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;display_LCD.c: 117: if(cursor==5) Despertador->segundo++;
  7530  000BBE  0E05               	movlw	5
  7531  000BC0  1844               	xorwf	_cursor,w,c
  7532  000BC2  1045               	iorwf	_cursor+1,w,c
  7533  000BC4  A4D8               	btfss	status,2,c
  7534  000BC6  D009               	goto	l3305
  7535                           
  7536                           ; BSR set to: 0
  7537  000BC8  EE20 F002          	lfsr	2,2
  7538  000BCC  5015               	movf	checa_botao@Despertador,w,c
  7539  000BCE  26D9               	addwf	fsr2l,f,c
  7540  000BD0  5016               	movf	checa_botao@Despertador+1,w,c
  7541  000BD2  22DA               	addwfc	fsr2h,f,c
  7542  000BD4  2ADE               	incf	postinc2,f,c
  7543  000BD6  0E00               	movlw	0
  7544  000BD8  22DD               	addwfc	postdec2,f,c
  7545  000BDA                     l3305:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;display_LCD.c: 118: controla_despertador(Despertador);
  7549  000BDA  C015  F00F         	movff	checa_botao@Despertador,controla_despertador@Despertador
  7550  000BDE  C016  F010         	movff	checa_botao@Despertador+1,controla_despertador@Despertador+1
  7551  000BE2  EC58  F00F         	call	_controla_despertador	;wreg free
  7552  000BE6                     l138:
  7553  000BE6  B283               	btfsc	3971,1,c	;volatile
  7554  000BE8  D7FE               	goto	l138
  7555  000BEA                     l117:
  7556                           
  7557                           ;display_LCD.c: 122: }
  7558                           ;display_LCD.c: 125: if(PORTDbits.RD2==1){
  7559  000BEA  A483               	btfss	3971,2,c	;volatile
  7560  000BEC  D1B0               	goto	l141
  7561                           
  7562                           ;display_LCD.c: 126: _delay((unsigned long)((180)*(20000000/4000.0)));
  7563  000BEE  0E05               	movlw	5
  7564  000BF0  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7565  000BF2  0E91               	movlw	145
  7566  000BF4  6E19               	movwf	??_checa_botao& (0+255),c
  7567  000BF6  0ED0               	movlw	208
  7568  000BF8                     u4967:
  7569  000BF8  2EE8               	decfsz	wreg,f,c
  7570  000BFA  D7FE               	bra	u4967
  7571  000BFC  2E19               	decfsz	??_checa_botao& (0+255),f,c
  7572  000BFE  D7FC               	bra	u4967
  7573  000C00  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  7574  000C02  D7FA               	bra	u4967
  7575                           
  7576                           ;display_LCD.c: 128: if(tela_exibida==0){
  7577  000C04  0100               	movlb	0	; () banked
  7578  000C06  51AE               	movf	_tela_exibida& (0+255),w,b
  7579  000C08  0100               	movlb	0	; () banked
  7580  000C0A  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  7581  000C0C  A4D8               	btfss	status,2,c
  7582  000C0E  D10C               	goto	l3359
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;display_LCD.c: 129: if(cursor==0) Relogio->hora=Relogio->hora-10;
  7586  000C10  5044               	movf	_cursor,w,c
  7587  000C12  1045               	iorwf	_cursor+1,w,c
  7588  000C14  A4D8               	btfss	status,2,c
  7589  000C16  D01C               	goto	l3315
  7590                           
  7591                           ; BSR set to: 0
  7592  000C18  0EF6               	movlw	246
  7593  000C1A  6E19               	movwf	??_checa_botao& (0+255),c
  7594  000C1C  0EFF               	movlw	255
  7595  000C1E  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7596  000C20  EE20 F004          	lfsr	2,4
  7597  000C24  5013               	movf	checa_botao@Relogio,w,c
  7598  000C26  26D9               	addwf	fsr2l,f,c
  7599  000C28  5014               	movf	checa_botao@Relogio+1,w,c
  7600  000C2A  22DA               	addwfc	fsr2h,f,c
  7601  000C2C  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7602  000C30  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7603  000C34  5019               	movf	??_checa_botao,w,c
  7604  000C36  261B               	addwf	??_checa_botao+2,f,c
  7605  000C38  501A               	movf	??_checa_botao+1,w,c
  7606  000C3A  221C               	addwfc	??_checa_botao+3,f,c
  7607  000C3C  EE20 F004          	lfsr	2,4
  7608  000C40  5013               	movf	checa_botao@Relogio,w,c
  7609  000C42  26D9               	addwf	fsr2l,f,c
  7610  000C44  5014               	movf	checa_botao@Relogio+1,w,c
  7611  000C46  22DA               	addwfc	fsr2h,f,c
  7612  000C48  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  7613  000C4C  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  7614  000C50                     l3315:
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;display_LCD.c: 130: if(cursor==1) Relogio->hora--;
  7618  000C50  0444               	decf	_cursor,w,c
  7619  000C52  1045               	iorwf	_cursor+1,w,c
  7620  000C54  A4D8               	btfss	status,2,c
  7621  000C56  D009               	goto	l3319
  7622                           
  7623                           ; BSR set to: 0
  7624  000C58  EE20 F004          	lfsr	2,4
  7625  000C5C  5013               	movf	checa_botao@Relogio,w,c
  7626  000C5E  26D9               	addwf	fsr2l,f,c
  7627  000C60  5014               	movf	checa_botao@Relogio+1,w,c
  7628  000C62  22DA               	addwfc	fsr2h,f,c
  7629  000C64  06DE               	decf	postinc2,f,c
  7630  000C66  0E00               	movlw	0
  7631  000C68  5ADD               	subwfb	postdec2,f,c
  7632  000C6A                     l3319:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;display_LCD.c: 131: if(cursor==2) Relogio->minuto=Relogio->minuto-10;
  7636  000C6A  0E02               	movlw	2
  7637  000C6C  1844               	xorwf	_cursor,w,c
  7638  000C6E  1045               	iorwf	_cursor+1,w,c
  7639  000C70  A4D8               	btfss	status,2,c
  7640  000C72  D018               	goto	l3323
  7641                           
  7642                           ; BSR set to: 0
  7643  000C74  0EF6               	movlw	246
  7644  000C76  6E19               	movwf	??_checa_botao& (0+255),c
  7645  000C78  0EFF               	movlw	255
  7646  000C7A  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7647  000C7C  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7648  000C80  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7649  000C84  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7650  000C88  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7651  000C8C  5019               	movf	??_checa_botao,w,c
  7652  000C8E  261B               	addwf	??_checa_botao+2,f,c
  7653  000C90  501A               	movf	??_checa_botao+1,w,c
  7654  000C92  221C               	addwfc	??_checa_botao+3,f,c
  7655  000C94  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7656  000C98  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7657  000C9C  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  7658  000CA0  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  7659  000CA4                     l3323:
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;display_LCD.c: 132: if(cursor==3) Relogio->minuto--;
  7663  000CA4  0E03               	movlw	3
  7664  000CA6  1844               	xorwf	_cursor,w,c
  7665  000CA8  1045               	iorwf	_cursor+1,w,c
  7666  000CAA  A4D8               	btfss	status,2,c
  7667  000CAC  D007               	goto	l3327
  7668                           
  7669                           ; BSR set to: 0
  7670  000CAE  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  7671  000CB2  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  7672  000CB6  06DE               	decf	postinc2,f,c
  7673  000CB8  0E00               	movlw	0
  7674  000CBA  5ADD               	subwfb	postdec2,f,c
  7675  000CBC                     l3327:
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;display_LCD.c: 133: if(cursor==4) Relogio->segundo=Relogio->segundo-10;
  7679  000CBC  0E04               	movlw	4
  7680  000CBE  1844               	xorwf	_cursor,w,c
  7681  000CC0  1045               	iorwf	_cursor+1,w,c
  7682  000CC2  A4D8               	btfss	status,2,c
  7683  000CC4  D01C               	goto	l3331
  7684                           
  7685                           ; BSR set to: 0
  7686  000CC6  0EF6               	movlw	246
  7687  000CC8  6E19               	movwf	??_checa_botao& (0+255),c
  7688  000CCA  0EFF               	movlw	255
  7689  000CCC  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7690  000CCE  EE20 F002          	lfsr	2,2
  7691  000CD2  5013               	movf	checa_botao@Relogio,w,c
  7692  000CD4  26D9               	addwf	fsr2l,f,c
  7693  000CD6  5014               	movf	checa_botao@Relogio+1,w,c
  7694  000CD8  22DA               	addwfc	fsr2h,f,c
  7695  000CDA  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7696  000CDE  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7697  000CE2  5019               	movf	??_checa_botao,w,c
  7698  000CE4  261B               	addwf	??_checa_botao+2,f,c
  7699  000CE6  501A               	movf	??_checa_botao+1,w,c
  7700  000CE8  221C               	addwfc	??_checa_botao+3,f,c
  7701  000CEA  EE20 F002          	lfsr	2,2
  7702  000CEE  5013               	movf	checa_botao@Relogio,w,c
  7703  000CF0  26D9               	addwf	fsr2l,f,c
  7704  000CF2  5014               	movf	checa_botao@Relogio+1,w,c
  7705  000CF4  22DA               	addwfc	fsr2h,f,c
  7706  000CF6  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  7707  000CFA  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  7708  000CFE                     l3331:
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;display_LCD.c: 134: if(cursor==5) Relogio->segundo--;
  7712  000CFE  0E05               	movlw	5
  7713  000D00  1844               	xorwf	_cursor,w,c
  7714  000D02  1045               	iorwf	_cursor+1,w,c
  7715  000D04  A4D8               	btfss	status,2,c
  7716  000D06  D009               	goto	l3335
  7717                           
  7718                           ; BSR set to: 0
  7719  000D08  EE20 F002          	lfsr	2,2
  7720  000D0C  5013               	movf	checa_botao@Relogio,w,c
  7721  000D0E  26D9               	addwf	fsr2l,f,c
  7722  000D10  5014               	movf	checa_botao@Relogio+1,w,c
  7723  000D12  22DA               	addwfc	fsr2h,f,c
  7724  000D14  06DE               	decf	postinc2,f,c
  7725  000D16  0E00               	movlw	0
  7726  000D18  5ADD               	subwfb	postdec2,f,c
  7727  000D1A                     l3335:
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;display_LCD.c: 135: if(cursor==6) Calendario->dia=Calendario->dia-10;
  7731  000D1A  0E06               	movlw	6
  7732  000D1C  1844               	xorwf	_cursor,w,c
  7733  000D1E  1045               	iorwf	_cursor+1,w,c
  7734  000D20  A4D8               	btfss	status,2,c
  7735  000D22  D018               	goto	l3339
  7736                           
  7737                           ; BSR set to: 0
  7738  000D24  0EF6               	movlw	246
  7739  000D26  6E19               	movwf	??_checa_botao& (0+255),c
  7740  000D28  0EFF               	movlw	255
  7741  000D2A  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7742  000D2C  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7743  000D30  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7744  000D34  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7745  000D38  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7746  000D3C  5019               	movf	??_checa_botao,w,c
  7747  000D3E  261B               	addwf	??_checa_botao+2,f,c
  7748  000D40  501A               	movf	??_checa_botao+1,w,c
  7749  000D42  221C               	addwfc	??_checa_botao+3,f,c
  7750  000D44  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7751  000D48  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7752  000D4C  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  7753  000D50  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  7754  000D54                     l3339:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;display_LCD.c: 136: if(cursor==7) Calendario->dia--;
  7758  000D54  0E07               	movlw	7
  7759  000D56  1844               	xorwf	_cursor,w,c
  7760  000D58  1045               	iorwf	_cursor+1,w,c
  7761  000D5A  A4D8               	btfss	status,2,c
  7762  000D5C  D007               	goto	l3343
  7763                           
  7764                           ; BSR set to: 0
  7765  000D5E  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  7766  000D62  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  7767  000D66  06DE               	decf	postinc2,f,c
  7768  000D68  0E00               	movlw	0
  7769  000D6A  5ADD               	subwfb	postdec2,f,c
  7770  000D6C                     l3343:
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;display_LCD.c: 137: if(cursor==8) Calendario->mes=Calendario->mes-10;
  7774  000D6C  0E08               	movlw	8
  7775  000D6E  1844               	xorwf	_cursor,w,c
  7776  000D70  1045               	iorwf	_cursor+1,w,c
  7777  000D72  A4D8               	btfss	status,2,c
  7778  000D74  D01C               	goto	l3347
  7779                           
  7780                           ; BSR set to: 0
  7781  000D76  0EF6               	movlw	246
  7782  000D78  6E19               	movwf	??_checa_botao& (0+255),c
  7783  000D7A  0EFF               	movlw	255
  7784  000D7C  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7785  000D7E  EE20 F002          	lfsr	2,2
  7786  000D82  5017               	movf	checa_botao@Calendario,w,c
  7787  000D84  26D9               	addwf	fsr2l,f,c
  7788  000D86  5018               	movf	checa_botao@Calendario+1,w,c
  7789  000D88  22DA               	addwfc	fsr2h,f,c
  7790  000D8A  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7791  000D8E  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7792  000D92  5019               	movf	??_checa_botao,w,c
  7793  000D94  261B               	addwf	??_checa_botao+2,f,c
  7794  000D96  501A               	movf	??_checa_botao+1,w,c
  7795  000D98  221C               	addwfc	??_checa_botao+3,f,c
  7796  000D9A  EE20 F002          	lfsr	2,2
  7797  000D9E  5017               	movf	checa_botao@Calendario,w,c
  7798  000DA0  26D9               	addwf	fsr2l,f,c
  7799  000DA2  5018               	movf	checa_botao@Calendario+1,w,c
  7800  000DA4  22DA               	addwfc	fsr2h,f,c
  7801  000DA6  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  7802  000DAA  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  7803  000DAE                     l3347:
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;display_LCD.c: 138: if(cursor==9) Calendario->mes--;
  7807  000DAE  0E09               	movlw	9
  7808  000DB0  1844               	xorwf	_cursor,w,c
  7809  000DB2  1045               	iorwf	_cursor+1,w,c
  7810  000DB4  A4D8               	btfss	status,2,c
  7811  000DB6  D009               	goto	l3351
  7812                           
  7813                           ; BSR set to: 0
  7814  000DB8  EE20 F002          	lfsr	2,2
  7815  000DBC  5017               	movf	checa_botao@Calendario,w,c
  7816  000DBE  26D9               	addwf	fsr2l,f,c
  7817  000DC0  5018               	movf	checa_botao@Calendario+1,w,c
  7818  000DC2  22DA               	addwfc	fsr2h,f,c
  7819  000DC4  06DE               	decf	postinc2,f,c
  7820  000DC6  0E00               	movlw	0
  7821  000DC8  5ADD               	subwfb	postdec2,f,c
  7822  000DCA                     l3351:
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;display_LCD.c: 139: if(cursor==10) Calendario->ano=Calendario->ano-10;
  7826  000DCA  0E0A               	movlw	10
  7827  000DCC  1844               	xorwf	_cursor,w,c
  7828  000DCE  1045               	iorwf	_cursor+1,w,c
  7829  000DD0  A4D8               	btfss	status,2,c
  7830  000DD2  D01C               	goto	l3355
  7831                           
  7832                           ; BSR set to: 0
  7833  000DD4  0EF6               	movlw	246
  7834  000DD6  6E19               	movwf	??_checa_botao& (0+255),c
  7835  000DD8  0EFF               	movlw	255
  7836  000DDA  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7837  000DDC  EE20 F004          	lfsr	2,4
  7838  000DE0  5017               	movf	checa_botao@Calendario,w,c
  7839  000DE2  26D9               	addwf	fsr2l,f,c
  7840  000DE4  5018               	movf	checa_botao@Calendario+1,w,c
  7841  000DE6  22DA               	addwfc	fsr2h,f,c
  7842  000DE8  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7843  000DEC  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7844  000DF0  5019               	movf	??_checa_botao,w,c
  7845  000DF2  261B               	addwf	??_checa_botao+2,f,c
  7846  000DF4  501A               	movf	??_checa_botao+1,w,c
  7847  000DF6  221C               	addwfc	??_checa_botao+3,f,c
  7848  000DF8  EE20 F004          	lfsr	2,4
  7849  000DFC  5017               	movf	checa_botao@Calendario,w,c
  7850  000DFE  26D9               	addwf	fsr2l,f,c
  7851  000E00  5018               	movf	checa_botao@Calendario+1,w,c
  7852  000E02  22DA               	addwfc	fsr2h,f,c
  7853  000E04  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  7854  000E08  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  7855  000E0C                     l3355:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;display_LCD.c: 140: if(cursor==11) Calendario->ano--;
  7859  000E0C  0E0B               	movlw	11
  7860  000E0E  1844               	xorwf	_cursor,w,c
  7861  000E10  1045               	iorwf	_cursor+1,w,c
  7862  000E12  A4D8               	btfss	status,2,c
  7863  000E14  D009               	goto	l3359
  7864                           
  7865                           ; BSR set to: 0
  7866  000E16  EE20 F004          	lfsr	2,4
  7867  000E1A  5017               	movf	checa_botao@Calendario,w,c
  7868  000E1C  26D9               	addwf	fsr2l,f,c
  7869  000E1E  5018               	movf	checa_botao@Calendario+1,w,c
  7870  000E20  22DA               	addwfc	fsr2h,f,c
  7871  000E22  06DE               	decf	postinc2,f,c
  7872  000E24  0E00               	movlw	0
  7873  000E26  5ADD               	subwfb	postdec2,f,c
  7874  000E28                     l3359:
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;display_LCD.c: 141: }
  7878                           ;display_LCD.c: 143: if(tela_exibida==1){
  7879  000E28  0100               	movlb	0	; () banked
  7880  000E2A  05AE               	decf	_tela_exibida& (0+255),w,b
  7881  000E2C  0100               	movlb	0	; () banked
  7882  000E2E  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  7883  000E30  A4D8               	btfss	status,2,c
  7884  000E32  D08B               	goto	l162
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;display_LCD.c: 144: if(cursor==0) Despertador->hora=Despertador->hora-10;
  7888  000E34  5044               	movf	_cursor,w,c
  7889  000E36  1045               	iorwf	_cursor+1,w,c
  7890  000E38  A4D8               	btfss	status,2,c
  7891  000E3A  D01C               	goto	l3365
  7892                           
  7893                           ; BSR set to: 0
  7894  000E3C  0EF6               	movlw	246
  7895  000E3E  6E19               	movwf	??_checa_botao& (0+255),c
  7896  000E40  0EFF               	movlw	255
  7897  000E42  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7898  000E44  EE20 F004          	lfsr	2,4
  7899  000E48  5015               	movf	checa_botao@Despertador,w,c
  7900  000E4A  26D9               	addwf	fsr2l,f,c
  7901  000E4C  5016               	movf	checa_botao@Despertador+1,w,c
  7902  000E4E  22DA               	addwfc	fsr2h,f,c
  7903  000E50  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7904  000E54  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7905  000E58  5019               	movf	??_checa_botao,w,c
  7906  000E5A  261B               	addwf	??_checa_botao+2,f,c
  7907  000E5C  501A               	movf	??_checa_botao+1,w,c
  7908  000E5E  221C               	addwfc	??_checa_botao+3,f,c
  7909  000E60  EE20 F004          	lfsr	2,4
  7910  000E64  5015               	movf	checa_botao@Despertador,w,c
  7911  000E66  26D9               	addwf	fsr2l,f,c
  7912  000E68  5016               	movf	checa_botao@Despertador+1,w,c
  7913  000E6A  22DA               	addwfc	fsr2h,f,c
  7914  000E6C  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  7915  000E70  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  7916  000E74                     l3365:
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;display_LCD.c: 145: if(cursor==1) Despertador->hora--;
  7920  000E74  0444               	decf	_cursor,w,c
  7921  000E76  1045               	iorwf	_cursor+1,w,c
  7922  000E78  A4D8               	btfss	status,2,c
  7923  000E7A  D009               	goto	l3369
  7924                           
  7925                           ; BSR set to: 0
  7926  000E7C  EE20 F004          	lfsr	2,4
  7927  000E80  5015               	movf	checa_botao@Despertador,w,c
  7928  000E82  26D9               	addwf	fsr2l,f,c
  7929  000E84  5016               	movf	checa_botao@Despertador+1,w,c
  7930  000E86  22DA               	addwfc	fsr2h,f,c
  7931  000E88  06DE               	decf	postinc2,f,c
  7932  000E8A  0E00               	movlw	0
  7933  000E8C  5ADD               	subwfb	postdec2,f,c
  7934  000E8E                     l3369:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;display_LCD.c: 146: if(cursor==2) Despertador->minuto=Despertador->minuto-10;
  7938  000E8E  0E02               	movlw	2
  7939  000E90  1844               	xorwf	_cursor,w,c
  7940  000E92  1045               	iorwf	_cursor+1,w,c
  7941  000E94  A4D8               	btfss	status,2,c
  7942  000E96  D018               	goto	l3373
  7943                           
  7944                           ; BSR set to: 0
  7945  000E98  0EF6               	movlw	246
  7946  000E9A  6E19               	movwf	??_checa_botao& (0+255),c
  7947  000E9C  0EFF               	movlw	255
  7948  000E9E  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7949  000EA0  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  7950  000EA4  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  7951  000EA8  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7952  000EAC  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7953  000EB0  5019               	movf	??_checa_botao,w,c
  7954  000EB2  261B               	addwf	??_checa_botao+2,f,c
  7955  000EB4  501A               	movf	??_checa_botao+1,w,c
  7956  000EB6  221C               	addwfc	??_checa_botao+3,f,c
  7957  000EB8  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  7958  000EBC  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  7959  000EC0  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  7960  000EC4  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  7961  000EC8                     l3373:
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;display_LCD.c: 147: if(cursor==3) Despertador->minuto--;
  7965  000EC8  0E03               	movlw	3
  7966  000ECA  1844               	xorwf	_cursor,w,c
  7967  000ECC  1045               	iorwf	_cursor+1,w,c
  7968  000ECE  A4D8               	btfss	status,2,c
  7969  000ED0  D007               	goto	l3377
  7970                           
  7971                           ; BSR set to: 0
  7972  000ED2  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  7973  000ED6  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  7974  000EDA  06DE               	decf	postinc2,f,c
  7975  000EDC  0E00               	movlw	0
  7976  000EDE  5ADD               	subwfb	postdec2,f,c
  7977  000EE0                     l3377:
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;display_LCD.c: 148: if(cursor==4) Despertador->segundo=Despertador->segundo-10;
  7981  000EE0  0E04               	movlw	4
  7982  000EE2  1844               	xorwf	_cursor,w,c
  7983  000EE4  1045               	iorwf	_cursor+1,w,c
  7984  000EE6  A4D8               	btfss	status,2,c
  7985  000EE8  D01C               	goto	l3381
  7986                           
  7987                           ; BSR set to: 0
  7988  000EEA  0EF6               	movlw	246
  7989  000EEC  6E19               	movwf	??_checa_botao& (0+255),c
  7990  000EEE  0EFF               	movlw	255
  7991  000EF0  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  7992  000EF2  EE20 F002          	lfsr	2,2
  7993  000EF6  5015               	movf	checa_botao@Despertador,w,c
  7994  000EF8  26D9               	addwf	fsr2l,f,c
  7995  000EFA  5016               	movf	checa_botao@Despertador+1,w,c
  7996  000EFC  22DA               	addwfc	fsr2h,f,c
  7997  000EFE  CFDE F01B          	movff	postinc2,??_checa_botao+2
  7998  000F02  CFDD F01C          	movff	postdec2,??_checa_botao+3
  7999  000F06  5019               	movf	??_checa_botao,w,c
  8000  000F08  261B               	addwf	??_checa_botao+2,f,c
  8001  000F0A  501A               	movf	??_checa_botao+1,w,c
  8002  000F0C  221C               	addwfc	??_checa_botao+3,f,c
  8003  000F0E  EE20 F002          	lfsr	2,2
  8004  000F12  5015               	movf	checa_botao@Despertador,w,c
  8005  000F14  26D9               	addwf	fsr2l,f,c
  8006  000F16  5016               	movf	checa_botao@Despertador+1,w,c
  8007  000F18  22DA               	addwfc	fsr2h,f,c
  8008  000F1A  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  8009  000F1E  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  8010  000F22                     l3381:
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;display_LCD.c: 149: if(cursor==5) Despertador->segundo--;
  8014  000F22  0E05               	movlw	5
  8015  000F24  1844               	xorwf	_cursor,w,c
  8016  000F26  1045               	iorwf	_cursor+1,w,c
  8017  000F28  A4D8               	btfss	status,2,c
  8018  000F2A  D009               	goto	l3385
  8019                           
  8020                           ; BSR set to: 0
  8021  000F2C  EE20 F002          	lfsr	2,2
  8022  000F30  5015               	movf	checa_botao@Despertador,w,c
  8023  000F32  26D9               	addwf	fsr2l,f,c
  8024  000F34  5016               	movf	checa_botao@Despertador+1,w,c
  8025  000F36  22DA               	addwfc	fsr2h,f,c
  8026  000F38  06DE               	decf	postinc2,f,c
  8027  000F3A  0E00               	movlw	0
  8028  000F3C  5ADD               	subwfb	postdec2,f,c
  8029  000F3E                     l3385:
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;display_LCD.c: 150: controla_despertador(Despertador);
  8033  000F3E  C015  F00F         	movff	checa_botao@Despertador,controla_despertador@Despertador
  8034  000F42  C016  F010         	movff	checa_botao@Despertador+1,controla_despertador@Despertador+1
  8035  000F46  EC58  F00F         	call	_controla_despertador	;wreg free
  8036  000F4A                     l162:
  8037  000F4A  B483               	btfsc	3971,2,c	;volatile
  8038  000F4C  D7FE               	goto	l162
  8039  000F4E                     l141:
  8040                           
  8041                           ;display_LCD.c: 153: }
  8042                           ;display_LCD.c: 156: if(PORTDbits.RD3==1){
  8043  000F4E  A683               	btfss	3971,3,c	;volatile
  8044  000F50  0012               	return	
  8045                           
  8046                           ;display_LCD.c: 157: _delay((unsigned long)((180)*(20000000/4000.0)));
  8047  000F52  0E05               	movlw	5
  8048  000F54  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  8049  000F56  0E91               	movlw	145
  8050  000F58  6E19               	movwf	??_checa_botao& (0+255),c
  8051  000F5A  0ED0               	movlw	208
  8052  000F5C                     u4977:
  8053  000F5C  2EE8               	decfsz	wreg,f,c
  8054  000F5E  D7FE               	bra	u4977
  8055  000F60  2E19               	decfsz	??_checa_botao& (0+255),f,c
  8056  000F62  D7FC               	bra	u4977
  8057  000F64  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  8058  000F66  D7FA               	bra	u4977
  8059                           
  8060                           ;display_LCD.c: 158: cursor++;
  8061  000F68  4A44               	infsnz	_cursor,f,c
  8062  000F6A  2A45               	incf	_cursor+1,f,c
  8063                           
  8064                           ;display_LCD.c: 159: if(cursor>11 && tela_exibida==0) cursor=0;
  8065  000F6C  BE45               	btfsc	_cursor+1,7,c
  8066  000F6E  D010               	goto	l3395
  8067  000F70  5045               	movf	_cursor+1,w,c
  8068  000F72  E104               	bnz	u3700
  8069  000F74  0E0C               	movlw	12
  8070  000F76  5C44               	subwf	_cursor,w,c
  8071  000F78  A0D8               	btfss	status,0,c
  8072  000F7A  D00A               	goto	l3395
  8073  000F7C                     u3700:
  8074  000F7C  0100               	movlb	0	; () banked
  8075  000F7E  51AE               	movf	_tela_exibida& (0+255),w,b
  8076  000F80  0100               	movlb	0	; () banked
  8077  000F82  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  8078  000F84  A4D8               	btfss	status,2,c
  8079  000F86  D004               	goto	l3395
  8080                           
  8081                           ; BSR set to: 0
  8082  000F88  0E00               	movlw	0
  8083  000F8A  6E45               	movwf	_cursor+1,c
  8084  000F8C  0E00               	movlw	0
  8085  000F8E  6E44               	movwf	_cursor,c
  8086  000F90                     l3395:
  8087                           
  8088                           ;display_LCD.c: 160: if(cursor>5 && tela_exibida==1) cursor=0;
  8089  000F90  BE45               	btfsc	_cursor+1,7,c
  8090  000F92  D010               	goto	l168
  8091  000F94  5045               	movf	_cursor+1,w,c
  8092  000F96  E104               	bnz	u3720
  8093  000F98  0E06               	movlw	6
  8094  000F9A  5C44               	subwf	_cursor,w,c
  8095  000F9C  A0D8               	btfss	status,0,c
  8096  000F9E  D00A               	goto	l168
  8097  000FA0                     u3720:
  8098  000FA0  0100               	movlb	0	; () banked
  8099  000FA2  05AE               	decf	_tela_exibida& (0+255),w,b
  8100  000FA4  0100               	movlb	0	; () banked
  8101  000FA6  11AF               	iorwf	(_tela_exibida+1)& (0+255),w,b
  8102  000FA8  A4D8               	btfss	status,2,c
  8103  000FAA  D004               	goto	l168
  8104                           
  8105                           ; BSR set to: 0
  8106  000FAC  0E00               	movlw	0
  8107  000FAE  6E45               	movwf	_cursor+1,c
  8108  000FB0  0E00               	movlw	0
  8109  000FB2  6E44               	movwf	_cursor,c
  8110  000FB4                     l168:
  8111  000FB4  A683               	btfss	3971,3,c	;volatile
  8112  000FB6  0012               	return	
  8113  000FB8  D7FD               	goto	l168
  8114  000FBA                     __end_of_checa_botao:
  8115                           	opt stack 0
  8116                           tblptru	equ	0xFF8
  8117                           tblptrh	equ	0xFF7
  8118                           tblptrl	equ	0xFF6
  8119                           tablat	equ	0xFF5
  8120                           prodh	equ	0xFF4
  8121                           prodl	equ	0xFF3
  8122                           intcon	equ	0xFF2
  8123                           postinc0	equ	0xFEE
  8124                           wreg	equ	0xFE8
  8125                           indf1	equ	0xFE7
  8126                           postinc1	equ	0xFE6
  8127                           postdec1	equ	0xFE5
  8128                           fsr1h	equ	0xFE2
  8129                           fsr1l	equ	0xFE1
  8130                           indf2	equ	0xFDF
  8131                           postinc2	equ	0xFDE
  8132                           postdec2	equ	0xFDD
  8133                           plusw2	equ	0xFDB
  8134                           fsr2h	equ	0xFDA
  8135                           fsr2l	equ	0xFD9
  8136                           status	equ	0xFD8
  8137                           
  8138 ;; *************** function _controla_despertador *****************
  8139 ;; Defined at:
  8140 ;;		line 61 in file "relogio.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  Despertador     2   14[COMRAM] PTR struct .
  8143 ;;		 -> Despertador(6), 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      void 
  8148 ;; Registers used:
  8149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8155 ;;      Params:         2       0       0       0       0       0       0       0       0
  8156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8157 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8158 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8159 ;;Total ram usage:        4 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    1
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_checa_botao
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text40
  8170  001EB0                     __ptext40:
  8171                           	opt stack 0
  8172  001EB0                     _controla_despertador:
  8173                           	opt stack 28
  8174                           
  8175                           ;relogio.c: 62: if(Despertador->segundo>59){
  8176                           
  8177                           ;incstack = 0
  8178  001EB0  EE20 F002          	lfsr	2,2
  8179  001EB4  500F               	movf	controla_despertador@Despertador,w,c
  8180  001EB6  26D9               	addwf	fsr2l,f,c
  8181  001EB8  5010               	movf	controla_despertador@Despertador+1,w,c
  8182  001EBA  22DA               	addwfc	fsr2h,f,c
  8183  001EBC  0E01               	movlw	1
  8184  001EBE  BEDB               	btfsc	plusw2,7,c
  8185  001EC0  D018               	goto	l214
  8186  001EC2  0E01               	movlw	1
  8187  001EC4  50DB               	movf	plusw2,w,c
  8188  001EC6  E104               	bnz	u2920
  8189  001EC8  0E3C               	movlw	60
  8190  001ECA  5CDE               	subwf	postinc2,w,c
  8191  001ECC  A0D8               	btfss	status,0,c
  8192  001ECE  D011               	goto	l214
  8193  001ED0                     u2920:
  8194                           
  8195                           ;relogio.c: 63: Despertador->minuto++;
  8196  001ED0  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8197  001ED4  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8198  001ED8  2ADE               	incf	postinc2,f,c
  8199  001EDA  0E00               	movlw	0
  8200  001EDC  22DD               	addwfc	postdec2,f,c
  8201                           
  8202                           ;relogio.c: 64: Despertador->segundo=0;
  8203  001EDE  EE20 F002          	lfsr	2,2
  8204  001EE2  500F               	movf	controla_despertador@Despertador,w,c
  8205  001EE4  26D9               	addwf	fsr2l,f,c
  8206  001EE6  5010               	movf	controla_despertador@Despertador+1,w,c
  8207  001EE8  22DA               	addwfc	fsr2h,f,c
  8208  001EEA  0E00               	movlw	0
  8209  001EEC  6EDE               	movwf	postinc2,c
  8210  001EEE  0E00               	movlw	0
  8211  001EF0  6EDD               	movwf	postdec2,c
  8212  001EF2                     l214:
  8213                           
  8214                           ;relogio.c: 65: }
  8215                           ;relogio.c: 66: if(Despertador->segundo<0){
  8216  001EF2  EE20 F002          	lfsr	2,2
  8217  001EF6  500F               	movf	controla_despertador@Despertador,w,c
  8218  001EF8  26D9               	addwf	fsr2l,f,c
  8219  001EFA  5010               	movf	controla_despertador@Despertador+1,w,c
  8220  001EFC  22DA               	addwfc	fsr2h,f,c
  8221  001EFE  0E01               	movlw	1
  8222  001F00  AEDB               	btfss	plusw2,7,c
  8223  001F02  D011               	goto	l215
  8224                           
  8225                           ;relogio.c: 67: Despertador->segundo=59;
  8226  001F04  EE20 F002          	lfsr	2,2
  8227  001F08  500F               	movf	controla_despertador@Despertador,w,c
  8228  001F0A  26D9               	addwf	fsr2l,f,c
  8229  001F0C  5010               	movf	controla_despertador@Despertador+1,w,c
  8230  001F0E  22DA               	addwfc	fsr2h,f,c
  8231  001F10  0E3B               	movlw	59
  8232  001F12  6EDE               	movwf	postinc2,c
  8233  001F14  0E00               	movlw	0
  8234  001F16  6EDD               	movwf	postdec2,c
  8235                           
  8236                           ;relogio.c: 68: Despertador->minuto--;
  8237  001F18  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8238  001F1C  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8239  001F20  06DE               	decf	postinc2,f,c
  8240  001F22  0E00               	movlw	0
  8241  001F24  5ADD               	subwfb	postdec2,f,c
  8242  001F26                     l215:
  8243                           
  8244                           ;relogio.c: 69: }
  8245                           ;relogio.c: 71: if(Despertador->minuto>59){
  8246  001F26  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8247  001F2A  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8248  001F2E  0E01               	movlw	1
  8249  001F30  BEDB               	btfsc	plusw2,7,c
  8250  001F32  D018               	goto	l2991
  8251  001F34  0E01               	movlw	1
  8252  001F36  50DB               	movf	plusw2,w,c
  8253  001F38  E104               	bnz	u2940
  8254  001F3A  0E3C               	movlw	60
  8255  001F3C  5CDE               	subwf	postinc2,w,c
  8256  001F3E  A0D8               	btfss	status,0,c
  8257  001F40  D011               	goto	l2991
  8258  001F42                     u2940:
  8259                           
  8260                           ;relogio.c: 72: Despertador->hora++;
  8261  001F42  EE20 F004          	lfsr	2,4
  8262  001F46  500F               	movf	controla_despertador@Despertador,w,c
  8263  001F48  26D9               	addwf	fsr2l,f,c
  8264  001F4A  5010               	movf	controla_despertador@Despertador+1,w,c
  8265  001F4C  22DA               	addwfc	fsr2h,f,c
  8266  001F4E  2ADE               	incf	postinc2,f,c
  8267  001F50  0E00               	movlw	0
  8268  001F52  22DD               	addwfc	postdec2,f,c
  8269                           
  8270                           ;relogio.c: 73: Despertador->minuto=0;
  8271  001F54  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8272  001F58  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8273  001F5C  0E00               	movlw	0
  8274  001F5E  6EDE               	movwf	postinc2,c
  8275  001F60  0E00               	movlw	0
  8276  001F62  6EDD               	movwf	postdec2,c
  8277  001F64                     l2991:
  8278                           
  8279                           ;relogio.c: 74: }
  8280                           ;relogio.c: 75: if(Despertador->minuto<0){
  8281  001F64  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8282  001F68  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8283  001F6C  0E01               	movlw	1
  8284  001F6E  AEDB               	btfss	plusw2,7,c
  8285  001F70  D011               	goto	l2997
  8286                           
  8287                           ;relogio.c: 76: Despertador->minuto=59;
  8288  001F72  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  8289  001F76  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  8290  001F7A  0E3B               	movlw	59
  8291  001F7C  6EDE               	movwf	postinc2,c
  8292  001F7E  0E00               	movlw	0
  8293  001F80  6EDD               	movwf	postdec2,c
  8294                           
  8295                           ;relogio.c: 77: Despertador->hora--;
  8296  001F82  EE20 F004          	lfsr	2,4
  8297  001F86  500F               	movf	controla_despertador@Despertador,w,c
  8298  001F88  26D9               	addwf	fsr2l,f,c
  8299  001F8A  5010               	movf	controla_despertador@Despertador+1,w,c
  8300  001F8C  22DA               	addwfc	fsr2h,f,c
  8301  001F8E  06DE               	decf	postinc2,f,c
  8302  001F90  0E00               	movlw	0
  8303  001F92  5ADD               	subwfb	postdec2,f,c
  8304  001F94                     l2997:
  8305                           
  8306                           ;relogio.c: 78: }
  8307                           ;relogio.c: 80: if(Despertador->hora>23){
  8308  001F94  EE20 F004          	lfsr	2,4
  8309  001F98  500F               	movf	controla_despertador@Despertador,w,c
  8310  001F9A  26D9               	addwf	fsr2l,f,c
  8311  001F9C  5010               	movf	controla_despertador@Despertador+1,w,c
  8312  001F9E  22DA               	addwfc	fsr2h,f,c
  8313  001FA0  0E01               	movlw	1
  8314  001FA2  BEDB               	btfsc	plusw2,7,c
  8315  001FA4  D011               	goto	l218
  8316  001FA6  0E01               	movlw	1
  8317  001FA8  50DB               	movf	plusw2,w,c
  8318  001FAA  E104               	bnz	u2960
  8319  001FAC  0E18               	movlw	24
  8320  001FAE  5CDE               	subwf	postinc2,w,c
  8321  001FB0  A0D8               	btfss	status,0,c
  8322  001FB2  D00A               	goto	l218
  8323  001FB4                     u2960:
  8324                           
  8325                           ;relogio.c: 81: Despertador->hora=0;
  8326  001FB4  EE20 F004          	lfsr	2,4
  8327  001FB8  500F               	movf	controla_despertador@Despertador,w,c
  8328  001FBA  26D9               	addwf	fsr2l,f,c
  8329  001FBC  5010               	movf	controla_despertador@Despertador+1,w,c
  8330  001FBE  22DA               	addwfc	fsr2h,f,c
  8331  001FC0  0E00               	movlw	0
  8332  001FC2  6EDE               	movwf	postinc2,c
  8333  001FC4  0E00               	movlw	0
  8334  001FC6  6EDD               	movwf	postdec2,c
  8335  001FC8                     l218:
  8336                           
  8337                           ;relogio.c: 82: }
  8338                           ;relogio.c: 83: if(Despertador->hora<0){
  8339  001FC8  EE20 F004          	lfsr	2,4
  8340  001FCC  500F               	movf	controla_despertador@Despertador,w,c
  8341  001FCE  26D9               	addwf	fsr2l,f,c
  8342  001FD0  5010               	movf	controla_despertador@Despertador+1,w,c
  8343  001FD2  22DA               	addwfc	fsr2h,f,c
  8344  001FD4  0E01               	movlw	1
  8345  001FD6  AEDB               	btfss	plusw2,7,c
  8346  001FD8  0012               	return	
  8347                           
  8348                           ;relogio.c: 84: Despertador->hora=23;
  8349  001FDA  EE20 F004          	lfsr	2,4
  8350  001FDE  500F               	movf	controla_despertador@Despertador,w,c
  8351  001FE0  26D9               	addwf	fsr2l,f,c
  8352  001FE2  5010               	movf	controla_despertador@Despertador+1,w,c
  8353  001FE4  22DA               	addwfc	fsr2h,f,c
  8354  001FE6  0E17               	movlw	23
  8355  001FE8  6EDE               	movwf	postinc2,c
  8356  001FEA  0E00               	movlw	0
  8357  001FEC  6EDD               	movwf	postdec2,c
  8358  001FEE  0012               	return	
  8359  001FF0                     __end_of_controla_despertador:
  8360                           	opt stack 0
  8361                           tblptru	equ	0xFF8
  8362                           tblptrh	equ	0xFF7
  8363                           tblptrl	equ	0xFF6
  8364                           tablat	equ	0xFF5
  8365                           prodh	equ	0xFF4
  8366                           prodl	equ	0xFF3
  8367                           intcon	equ	0xFF2
  8368                           postinc0	equ	0xFEE
  8369                           wreg	equ	0xFE8
  8370                           indf1	equ	0xFE7
  8371                           postinc1	equ	0xFE6
  8372                           postdec1	equ	0xFE5
  8373                           fsr1h	equ	0xFE2
  8374                           fsr1l	equ	0xFE1
  8375                           indf2	equ	0xFDF
  8376                           postinc2	equ	0xFDE
  8377                           postdec2	equ	0xFDD
  8378                           plusw2	equ	0xFDB
  8379                           fsr2h	equ	0xFDA
  8380                           fsr2l	equ	0xFD9
  8381                           status	equ	0xFD8
  8382                           
  8383 ;; *************** function _pic_isr *****************
  8384 ;; Defined at:
  8385 ;;		line 128 in file "exercicio_PIC_LCD_AD.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8399 ;;      Params:         0       0       0       0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8401 ;;      Temps:         14       0       0       0       0       0       0       0       0
  8402 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8403 ;;Total ram usage:       14 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		Interrupt level 2
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	intcode
  8413  000008                     __pintcode:
  8414                           	opt stack 0
  8415  000008                     _pic_isr:
  8416                           	opt stack 25
  8417                           
  8418                           ;incstack = 0
  8419  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8420  00000A  EDE8  F012         	call	int_func,f	;refresh shadow registers
  8421                           tblptru	equ	0xFF8
  8422                           tblptrh	equ	0xFF7
  8423                           tblptrl	equ	0xFF6
  8424                           tablat	equ	0xFF5
  8425                           prodh	equ	0xFF4
  8426                           prodl	equ	0xFF3
  8427                           intcon	equ	0xFF2
  8428                           postinc0	equ	0xFEE
  8429                           wreg	equ	0xFE8
  8430                           indf1	equ	0xFE7
  8431                           postinc1	equ	0xFE6
  8432                           postdec1	equ	0xFE5
  8433                           fsr1h	equ	0xFE2
  8434                           fsr1l	equ	0xFE1
  8435                           indf2	equ	0xFDF
  8436                           postinc2	equ	0xFDE
  8437                           postdec2	equ	0xFDD
  8438                           plusw2	equ	0xFDB
  8439                           fsr2h	equ	0xFDA
  8440                           fsr2l	equ	0xFD9
  8441                           status	equ	0xFD8
  8442                           
  8443                           	psect	intcode_body
  8444  0025D0                     __pintcode_body:
  8445                           	opt stack 25
  8446  0025D0                     int_func:
  8447                           	opt stack 25
  8448  0025D0  0006               	pop		; remove dummy address from shadow register refresh
  8449  0025D2  CFFA F001          	movff	pclath,??_pic_isr
  8450  0025D6  CFFB F002          	movff	pclatu,??_pic_isr+1
  8451  0025DA  CFE9 F003          	movff	fsr0l,??_pic_isr+2
  8452  0025DE  CFEA F004          	movff	fsr0h,??_pic_isr+3
  8453  0025E2  CFE1 F005          	movff	fsr1l,??_pic_isr+4
  8454  0025E6  CFE2 F006          	movff	fsr1h,??_pic_isr+5
  8455  0025EA  CFD9 F007          	movff	fsr2l,??_pic_isr+6
  8456  0025EE  CFDA F008          	movff	fsr2h,??_pic_isr+7
  8457  0025F2  CFF3 F009          	movff	prodl,??_pic_isr+8
  8458  0025F6  CFF4 F00A          	movff	prodh,??_pic_isr+9
  8459  0025FA  CFF6 F00B          	movff	tblptrl,??_pic_isr+10
  8460  0025FE  CFF7 F00C          	movff	tblptrh,??_pic_isr+11
  8461  002602  CFF8 F00D          	movff	tblptru,??_pic_isr+12
  8462  002606  CFF5 F00E          	movff	tablat,??_pic_isr+13
  8463                           
  8464                           ;exercicio_PIC_LCD_AD.c: 129: if(TMR0IF){
  8465  00260A  A4F2               	btfss	intcon,2,c	;volatile
  8466  00260C  D00A               	goto	i2l3641
  8467                           
  8468                           ;exercicio_PIC_LCD_AD.c: 130: TMR0=2535;
  8469  00260E  0E09               	movlw	9
  8470  002610  6ED7               	movwf	4055,c	;volatile
  8471  002612  0EE7               	movlw	231
  8472  002614  6ED6               	movwf	4054,c	;volatile
  8473                           
  8474                           ;exercicio_PIC_LCD_AD.c: 131: INTCONbits.TMR0IF=0;
  8475  002616  94F2               	bcf	intcon,2,c	;volatile
  8476                           
  8477                           ;exercicio_PIC_LCD_AD.c: 132: contador++;
  8478  002618  0100               	movlb	0	; () banked
  8479  00261A  4BAC               	infsnz	_contador& (0+255),f,b
  8480  00261C  2BAD               	incf	(_contador+1)& (0+255),f,b
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;exercicio_PIC_LCD_AD.c: 133: flag_time=0;
  8484  00261E  0E00               	movlw	0
  8485  002620  6E49               	movwf	_flag_time,c
  8486  002622                     i2l3641:
  8487                           
  8488                           ;exercicio_PIC_LCD_AD.c: 134: }
  8489                           ;exercicio_PIC_LCD_AD.c: 136: if(contador>0){
  8490  002622  0100               	movlb	0	; () banked
  8491  002624  BFAD               	btfsc	(_contador+1)& (0+255),7,b
  8492  002626  D00E               	goto	i2l310
  8493  002628  0100               	movlb	0	; () banked
  8494  00262A  51AD               	movf	(_contador+1)& (0+255),w,b
  8495  00262C  E104               	bnz	i2u416_40
  8496  00262E  0100               	movlb	0	; () banked
  8497  002630  05AC               	decf	_contador& (0+255),w,b
  8498  002632  A0D8               	btfss	status,0,c
  8499  002634  D007               	goto	i2l310
  8500  002636                     i2u416_40:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;exercicio_PIC_LCD_AD.c: 137: flag_time=1;
  8504  002636  0E01               	movlw	1
  8505  002638  6E49               	movwf	_flag_time,c
  8506                           
  8507                           ;exercicio_PIC_LCD_AD.c: 138: contador=0;
  8508  00263A  0E00               	movlw	0
  8509  00263C  0100               	movlb	0	; () banked
  8510  00263E  6FAD               	movwf	(_contador+1)& (0+255),b
  8511  002640  0E00               	movlw	0
  8512  002642  6FAC               	movwf	_contador& (0+255),b
  8513  002644                     i2l310:
  8514                           
  8515                           ; BSR set to: 0
  8516  002644  C00E  FFF5         	movff	??_pic_isr+13,tablat
  8517  002648  C00D  FFF8         	movff	??_pic_isr+12,tblptru
  8518  00264C  C00C  FFF7         	movff	??_pic_isr+11,tblptrh
  8519  002650  C00B  FFF6         	movff	??_pic_isr+10,tblptrl
  8520  002654  C00A  FFF4         	movff	??_pic_isr+9,prodh
  8521  002658  C009  FFF3         	movff	??_pic_isr+8,prodl
  8522  00265C  C008  FFDA         	movff	??_pic_isr+7,fsr2h
  8523  002660  C007  FFD9         	movff	??_pic_isr+6,fsr2l
  8524  002664  C006  FFE2         	movff	??_pic_isr+5,fsr1h
  8525  002668  C005  FFE1         	movff	??_pic_isr+4,fsr1l
  8526  00266C  C004  FFEA         	movff	??_pic_isr+3,fsr0h
  8527  002670  C003  FFE9         	movff	??_pic_isr+2,fsr0l
  8528  002674  C002  FFFB         	movff	??_pic_isr+1,pclatu
  8529  002678  C001  FFFA         	movff	??_pic_isr,pclath
  8530  00267C  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8531  00267E  0011               	retfie		f
  8532  002680                     __end_of_pic_isr:
  8533                           	opt stack 0
  8534                           pclatu	equ	0xFFB
  8535                           pclath	equ	0xFFA
  8536                           tblptru	equ	0xFF8
  8537                           tblptrh	equ	0xFF7
  8538                           tblptrl	equ	0xFF6
  8539                           tablat	equ	0xFF5
  8540                           prodh	equ	0xFF4
  8541                           prodl	equ	0xFF3
  8542                           intcon	equ	0xFF2
  8543                           postinc0	equ	0xFEE
  8544                           fsr0h	equ	0xFEA
  8545                           fsr0l	equ	0xFE9
  8546                           wreg	equ	0xFE8
  8547                           indf1	equ	0xFE7
  8548                           postinc1	equ	0xFE6
  8549                           postdec1	equ	0xFE5
  8550                           fsr1h	equ	0xFE2
  8551                           fsr1l	equ	0xFE1
  8552                           indf2	equ	0xFDF
  8553                           postinc2	equ	0xFDE
  8554                           postdec2	equ	0xFDD
  8555                           plusw2	equ	0xFDB
  8556                           fsr2h	equ	0xFDA
  8557                           fsr2l	equ	0xFD9
  8558                           status	equ	0xFD8
  8559                           pclatu	equ	0xFFB
  8560                           pclath	equ	0xFFA
  8561                           tblptru	equ	0xFF8
  8562                           tblptrh	equ	0xFF7
  8563                           tblptrl	equ	0xFF6
  8564                           tablat	equ	0xFF5
  8565                           prodh	equ	0xFF4
  8566                           prodl	equ	0xFF3
  8567                           intcon	equ	0xFF2
  8568                           postinc0	equ	0xFEE
  8569                           fsr0h	equ	0xFEA
  8570                           fsr0l	equ	0xFE9
  8571                           wreg	equ	0xFE8
  8572                           indf1	equ	0xFE7
  8573                           postinc1	equ	0xFE6
  8574                           postdec1	equ	0xFE5
  8575                           fsr1h	equ	0xFE2
  8576                           fsr1l	equ	0xFE1
  8577                           indf2	equ	0xFDF
  8578                           postinc2	equ	0xFDE
  8579                           postdec2	equ	0xFDD
  8580                           plusw2	equ	0xFDB
  8581                           fsr2h	equ	0xFDA
  8582                           fsr2l	equ	0xFD9
  8583                           status	equ	0xFD8
  8584                           
  8585                           	psect	rparam
  8586  0000                     pclatu	equ	0xFFB
  8587                           pclath	equ	0xFFA
  8588                           tblptru	equ	0xFF8
  8589                           tblptrh	equ	0xFF7
  8590                           tblptrl	equ	0xFF6
  8591                           tablat	equ	0xFF5
  8592                           prodh	equ	0xFF4
  8593                           prodl	equ	0xFF3
  8594                           intcon	equ	0xFF2
  8595                           postinc0	equ	0xFEE
  8596                           fsr0h	equ	0xFEA
  8597                           fsr0l	equ	0xFE9
  8598                           wreg	equ	0xFE8
  8599                           indf1	equ	0xFE7
  8600                           postinc1	equ	0xFE6
  8601                           postdec1	equ	0xFE5
  8602                           fsr1h	equ	0xFE2
  8603                           fsr1l	equ	0xFE1
  8604                           indf2	equ	0xFDF
  8605                           postinc2	equ	0xFDE
  8606                           postdec2	equ	0xFDD
  8607                           plusw2	equ	0xFDB
  8608                           fsr2h	equ	0xFDA
  8609                           fsr2l	equ	0xFD9
  8610                           status	equ	0xFD8
  8611                           
  8612                           	psect	temp
  8613  000050                     btemp:
  8614                           	opt stack 0
  8615  000050                     	ds	1
  8616  0000                     int$flags	set	btemp
  8617                           pclatu	equ	0xFFB
  8618                           pclath	equ	0xFFA
  8619                           tblptru	equ	0xFF8
  8620                           tblptrh	equ	0xFF7
  8621                           tblptrl	equ	0xFF6
  8622                           tablat	equ	0xFF5
  8623                           prodh	equ	0xFF4
  8624                           prodl	equ	0xFF3
  8625                           intcon	equ	0xFF2
  8626                           postinc0	equ	0xFEE
  8627                           fsr0h	equ	0xFEA
  8628                           fsr0l	equ	0xFE9
  8629                           wreg	equ	0xFE8
  8630                           indf1	equ	0xFE7
  8631                           postinc1	equ	0xFE6
  8632                           postdec1	equ	0xFE5
  8633                           fsr1h	equ	0xFE2
  8634                           fsr1l	equ	0xFE1
  8635                           indf2	equ	0xFDF
  8636                           postinc2	equ	0xFDE
  8637                           postdec2	equ	0xFDD
  8638                           plusw2	equ	0xFDB
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8


Data Sizes:
    Strings     118
    Constant    10
    Data        26
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      79
    BANK0           160     71     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[17]), exibir_lcd@str(BANK0[16]), temperatura_display(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[22]), STR_2(CODE[22]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> exibir_lcd@str(BANK0[16]), temperatura_display(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    controla_despertador@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(BANK0[6]), 

    tratar_relogio@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(BANK0[6]), 

    tratar_relogio@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 

    checa_botao@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(BANK0[6]), 

    checa_botao@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(BANK0[6]), 

    checa_botao@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 

    exibir_lcd@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(BANK0[6]), 

    exibir_lcd@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(BANK0[6]), 

    exibir_lcd@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _pisca_cursor->_SetDDRamAddr
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _putrsXLCD->_WriteDataXLCD
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _floor->___altoft
    ___fttol->___ftmul
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___awdiv->___awmod
    _DelayFor18TCY->_Delay10TCYx
    _convert->___ftdiv
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _checa_botao->_controla_despertador

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_exibir_lcd
    _exibir_lcd->_convert_float_to_char
    _convert_float_to_char->_floor

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   40982
                                             69 BANK0      2     2      0
                       _WriteCmdXLCD
                        _checa_botao
                            _convert
                         _exibir_lcd
                           _init_ADC
                          _init_XLCD
                       _pisca_cursor
                     _tratar_relogio
 ---------------------------------------------------------------------------------
 (1) _tratar_relogio                                      11     7      4     986
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _pisca_cursor                                         0     0      0      66
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     308
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     220
                                             19 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _exibir_lcd                                          48    42      6   27712
                                             21 BANK0     48    42      6
                       _SetDDRamAddr
                            ___awdiv
                            ___awmod
              _convert_float_to_char
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     517
                                             16 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _convert_float_to_char                               13    10      3   19559
                                              8 BANK0     13    10      3
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                              _floor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    17     16    1694
                                             26 COMRAM    24     8     16
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                8     5      3    8941
                                              0 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     452
                                             14 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     602
                                             40 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     352
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4285
                                             22 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2805
                                             55 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1988
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1992
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      66
                                             15 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _convert                                              1     1      0    9940
                                             55 COMRAM     1     1      0
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
                            ___ftdiv
                            ___ftmul
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2632
                                             22 COMRAM     3     0      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3588
                                             25 COMRAM    15     9      6
                           ___ftpack
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3212
                                             40 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2524
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checa_botao                                         10     4      6    1904
                                             18 COMRAM    10     4      6
               _controla_despertador
 ---------------------------------------------------------------------------------
 (2) _controla_despertador                                 4     2      2     480
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _pic_isr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCmdXLCD
     _DelayFor18TCY
       _Delay10TCYx
   _checa_botao
     _controla_despertador
   _convert
     _BusyADC
     _ConvertADC
     _ReadADC
     _SetChanADC
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
     ___ftmul
       ___ftpack
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
     ___lwdiv
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
   _exibir_lcd
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _convert_float_to_char
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___ftpack
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
         ___ftadd
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
         _frexp
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_ADC
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _pisca_cursor
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
   _tratar_relogio

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      4F       1       84.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF      20        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Nov 12 22:08:46 2019

                   ___altoft@exp 0040                    ___altoft@sign 0041  
                   ___awdiv@sign 001A    __size_of_controla_despertador 0140  
                   ___ftadd@exp1 0022                     ___ftadd@exp2 0021  
                   ___ftadd@sign 0020                              l200 1752  
                            l113 08AA                              l203 1802  
                            l141 0F4E                              l117 0BEA  
                            l214 1EF2                              l215 1F26  
                            l207 1942                              l209 19F0  
                            l218 1FC8                              l162 0F4A  
                            l138 0BE6                              l168 0FB4  
                            l199 171E                              l705 270E  
                            l369 2D0C                              l810 2D36  
                            l716 23EE                              l753 1A5C  
                            l908 2BD8                              l757 1A86  
                            l918 2C60                              l768 1B36  
                            l777 1B52                              l788 259E  
          __size_of_WriteCmdXLCD 003E                     ___awmod@sign 0014  
                            wreg 000FE8                       _Calendario 00BA  
                   ___ftdiv@cntr 0032                     ___ftdiv@sign 0037  
                   __CFG_WDT$OFF 000000                             l3101 2A86  
                           l3111 2AA8                             l3113 2AAC  
                           l3121 2ACA                             l3105 2A92  
                           l3301 0BBE                             l3221 08AE  
                           l3125 2AD8                             l3117 2AC0  
                           l3109 2AA0                             l3071 2940  
                           l3063 2922                             l4031 1432  
                           l3305 0BDA                             l3225 08CE  
                           l3081 2960                             l3073 2944  
                           l3057 2912                             l2433 2DCE  
                           l4113 1C64                             l3331 0CFE  
                           l3323 0CA4                             l3315 0C50  
                           l3251 09CA                             l3243 0978  
                           l3235 092C                             l2611 2BAE  
                           l3155 2D6E                             l3411 2018  
                           l2621 2BCE                             l2613 2BB2  
                           l3069 2938                             l3085 296A  
                           l4045 1686                             l3351 0DCA  
                           l3343 0D6C                             l3335 0D1A  
                           l3327 0CBC                             l3319 0C6A  
                           l3271 0A86                             l3263 0A30  
                           l3255 09E6                             l3247 0990  
                           l3239 0946                             l2391 2DDE  
                           l2631 2C3E                             l2711 1E30  
                           l2703 1E0E                             l3431 2068  
                           l3423 2048                             l3415 2028  
                           l3407 200A                             l3511 18FC  
                           l4151 1D4E                             l2609 2BA6  
                           l3089 2978                             l2633 2C42  
                           l2721 1EA2                             l3521 19BC  
                           l3505 189A                             l4153 1D50  
                           l3355 0E0C                             l3347 0DAE  
                           l3339 0D54                             l3275 0AC0  
                           l3267 0A6A                             l3259 0A18  
                           l3443 2098                             l3435 2078  
                           l3427 2058                             l3419 2038  
                           l3451 20B8                             l3515 1960  
                           l3507 18B4                             l4147 1D3A  
                           l4139 1D00                             l3381 0F22  
                           l3373 0EC8                             l3365 0E74  
                           l3293 0B6C                             l3285 0B20  
                           l2637 2C56                             l2629 2C36  
                           l2717 1E82                             l2709 1E2A  
                           l2813 2DA2                             l3461 20E0  
                           l3359 0E28                             l3279 0ADC  
                           l2719 1E8A                             l3447 20A8  
                           l3439 2088                             l3385 0F3E  
                           l3377 0EE0                             l3369 0E8E  
                           l3297 0B84                             l3289 0B3A  
                           l3801 28FA                             l2673 1D8C  
                           l3473 2110                             l3465 20F0  
                           l3457 20D2                             l3395 0F90  
                           l3731 1AC4                             l3715 1A94  
                           l3811 214E                             l2691 1DE2  
                           l2667 1D72                             l3661 26C6  
                           l3653 2690                             l3901 2298  
                           l3741 1AFA                             l3709 1A6A  
                           l3469 2100                             l3493 17C0  
                           l3911 22C0                             l3751 1B2E  
                           l3743 1B02                             l2679 1DB6  
                           l2943 2766                             l3487 1790  
                           l3665 26DC                             l3657 269E  
                           l3905 22A8                             l3737 1AE6  
                           l3841 21E8                             l3833 21C4  
                           l2689 1DDE                             l2961 27B0  
                           l2953 2790                             l2945 2770  
                           l3667 26FA                             l3659 26A8  
                           l3915 22D0                             l3739 1AF0  
                           l3843 21EE                             l3499 1836  
                           l3669 2704                             l3941 2512  
                           l3693 2A1C                             l3757 1B6E  
                           l3749 1B24                             l3829 21B4  
                           l3861 2342                             l2973 2AE4  
                           l2965 27C0                             l2957 27A0  
                           l2949 2780                             l2991 1F64  
                           l3695 2A28                             l3767 1B9E  
                           l3791 289E                             l3847 2204  
                           l3839 21DC                             l3881 223E  
                           l3777 299E                             l3865 2356  
                           l3947 253A                             l3795 28CE  
                           l2979 2B16                             l2997 1F94  
                           l3869 2374                             l3967 2578  
                           l3887 2266                             l3991 27E6  
                           l3995 27F0                             l3987 27DE  
                           STR_1 0870                             STR_2 0822  
                           STR_3 0838                             STR_4 080B  
                           STR_5 085F                             STR_6 084E  
                           u4030 191C                             u3240 08C4  
                           u4050 19DC                             u2800 2E10  
                           u3700 0F7C                             u2900 2B36  
                           u2725 2B54                             u4271 1A28  
                           u2920 1ED0                             u3720 0FA0  
                           u4281 1A3C                             u4531 2132  
                           u2907 2B2C                             _PEIE 007F96  
                           u2940 1F42                             u4550 216C  
                           u4630 2366                             u4711 24FA  
                           u2960 1FB4                             u4490 29C6  
                           u2890 2B0E                             u4731 2522  
                           u4651 2226                             u4555 2164  
                           _RCIE 007CED                             _RCIF 007CF5  
                           u3950 16FC                             u4671 224E  
                           u2897 2B04                             u4498 29C8  
                           u3970 176E                             u4907 1CE6  
                           u4917 2DD0                             u3990 17E0  
                           _RCIP 007CFD                             u4927 2DA8  
                           u4937 2DE0                             u4947 0890  
                           u4957 08DC                             u4967 0BF8  
                           u4977 0F5C                             _TMR0 000FD6  
                           _main 1BC4                     ___ftpack@arg 000F  
                   ___ftpack@exp 0012           checa_botao@Despertador 0015  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0050           __size_of_WriteDataXLCD 003E  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                     ___ftmul@cntr 0027  
                   ___param_bank 000000                     ___ftmul@sign 0028  
                __end_of_BusyADC 2E14                  __end_of_ReadADC 2E08  
                    _Delay10TCYx 2DDC                     ___fttol@exp1 0037  
          tratar_relogio@Relogio 000F                     ___fttol@lval 0033  
                   _WriteCmdXLCD 2C6A                      _Delay1KTCYx 2DCC  
                  ?_SetDDRamAddr 0001                            ?_main 0001  
                __end_of___awdiv 2982                  __end_of___ftadd 1BC4  
                __end_of___awmod 2AE2                  __end_of___ftdiv 25D0  
                __end_of___ftneg 2D44                  __end_of___ftmul 230A  
                ___awdiv@divisor 0017                  __end_of___fttol 2216  
                __end_of___lwdiv 2BE2                  __end_of___lwmod 2C6A  
                          i2l310 2644                  ___awdiv@counter 0019  
                          _RCSTA 000FAB             __size_of_checa_botao 0738  
                          _PORTB 000F81                            _TRISB 000F93  
          __size_of_Delay10KTCYx 0016                            _TXSTA 000FAC  
                __end_of_convert 286E                  __end_of_dpowers 080B  
                          _floor 230A                            _frexp 2982  
                          _errno 00AA                  __end_of_pic_isr 2680  
                  ___ftpack@sign 0013                       _ConvertADC 2E24  
                          pclath 000FFA                            tablat 000FF5  
                          plusw2 000FDB                            status 000FD8  
                __end_of_sprintf 1EB0                  __initialization 2BE2  
                   __end_of_main 1D68                 __end_of_BusyXLCD 2D20  
                 _tratar_relogio 16CA                     _Delay10KTCYx 2DA0  
          __size_of_DelayPORXLCD 0008                   ??_SetDDRamAddr 0010  
               __end_of_OpenXLCD 27D2                           ??_main 00A5  
                  ___fttol@sign1 0032                    __activetblptr 000002  
                  _WriteDataXLCD 2CA8                       _SetChanADC 2DB6  
 __size_of_convert_float_to_char 00EE    __end_of_convert_float_to_char 24EA  
                    _Despertador 00C0                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_floor 0060                           ?_frexp 000F  
               __end_of___altoft 2A72                           _ADRESH 000FC4  
                         _ADRESL 000FC3                 ___awdiv@dividend 0015  
               __end_of___ftpack 272E                           i2l3641 2622  
               __end_of___lwtoft 2D68                           _TMR0IF 007F92  
                      ??_BusyADC 000F                        ??_ReadADC 0011  
                   _DelayPORXLCD 2E14           __end_of_tratar_relogio 1A18  
                    exibir_lcd@a 0099                      exibir_lcd@b 009B  
                    exibir_lcd@c 009D                      exibir_lcd@d 009F  
                    exibir_lcd@e 00A1                      exibir_lcd@f 00A3  
                    exibir_lcd@g 008D                      exibir_lcd@h 008F  
                    exibir_lcd@i 0091                      exibir_lcd@j 0093  
                    exibir_lcd@k 0095                      exibir_lcd@l 0097  
                         ___ftge 286E                        ??___awdiv 0019  
                      ??___ftadd 001D                        ??___awmod 0013  
                      ??___ftdiv 002F                        ??___ftneg 0012  
                      ??___ftmul 0020                        ??___fttol 002D  
               __end_of_init_ADC 2DFA                        ??___lwdiv 0013  
                      ??___lwmod 001A                           _cursor 0044  
                         clear_0 2C08                           clear_1 2C14  
               ___awdiv@quotient 001B                  ___awmod@divisor 0011  
                ___awmod@counter 0013                   ?_WriteDataXLCD 0001  
          exibir_lcd@Despertador 0077                           floor@i 0063  
                         floor@x 0060            ___ftmul@f3_as_product 0024  
                      ??_convert 0038                        ??_pic_isr 0001  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ??_sprintf 002B                      ?_ConvertADC 0001  
                     __accesstop 0060          __end_of__initialization 2C1A  
                     ___altoft@c 0038                  __CFG_PBADEN$OFF 000000  
                     ___ftadd@f1 0017                       ___ftadd@f2 001A  
                     ___ftge@ff1 000F                       ___ftge@ff2 0012  
                  ___rparam_used 000001                       ___ftdiv@f1 0029  
                     ___ftdiv@f2 002C                       ___ftdiv@f3 0033  
                     ___ftneg@f1 000F                       ___ftmul@f1 001A  
                     ___ftmul@f2 001D                  ?_tratar_relogio 000F  
                     ___fttol@f1 0029                   __pcstackCOMRAM 0001  
                   __pidataBANK0 2D86                    __end_of_floor 23FC  
                  __end_of_frexp 29FA                       ___lwtoft@c 0017  
                    ?_SetChanADC 0001                          ??_floor 0042  
                        ??_frexp 0014           __size_of_DelayFor18TCY 0008  
                     __pbssBANK0 00A7                        ?_BusyXLCD 0001  
   __end_of_controla_despertador 1FF0                  WriteCmdXLCD@cmd 0010  
           __end_of_SetDDRamAddr 2B90               __size_of_init_XLCD 001E  
                      ?_OpenXLCD 0001                          ?___ftge 000F  
              WriteDataXLCD@data 0010                     ?_Delay10TCYx 0001  
                  ?_pisca_cursor 0001                  ??_WriteDataXLCD 0010  
                   ?_Delay1KTCYx 0001                        ?___altoft 0038  
            __size_of_ConvertADC 0004                        ?___ftpack 000F  
                      ?___lwtoft 0017               __size_of_putrsXLCD 005C  
                     ??_BusyXLCD 0010                        ?_init_ADC 0001  
                        _BusyADC 2E08                          _ReadADC 2DFA  
                     ??_OpenXLCD 0014                        _ADCResult 0046  
                        __Hparam 0000              __size_of_SetChanADC 0016  
                        _Relogio 004A                          __Lparam 0000  
                __size_of___ftge 0090                          ___awdiv 28FE  
                  _DelayFor18TCY 2E1C                          ___ftadd 1A18  
                        ___awmod 2A72                   ??_pisca_cursor 0014  
                        ___ftdiv 24EA                          ___ftneg 2D20  
                        ___ftmul 2216                       _exibir_lcd 0FBA  
                        ___fttol 2122                          ___lwdiv 2B90  
                        ___lwmod 2C28                     __psmallconst 0800  
                     ??___altoft 003C                    ??_checa_botao 0019  
                        __pcinit 2BE2                       ??___ftpack 0014  
                putrsXLCD@buffer 0011                  Delay10TCYx@unit 000F  
                        __ramtop 0800                          __ptext0 1BC4  
                        __ptext1 16CA                          __ptext2 1FF0  
                        __ptext3 2D68                          __ptext4 272E  
                        __ptext5 2C6A                          __ptext6 2E14  
                        __ptext7 2DCC                          __ptext8 2DA0  
                        __ptext9 2DEC                __end_of_init_XLCD 2D86  
                     ??___lwtoft 001A                        _T0CONbits 000FD5  
                        _convert 27D2                          _dpowers 0801  
                        _pic_isr 0008                 ___awmod@dividend 000F  
                        _sprintf 1D68                   __pintcode_body 25D0  
           end_of_initialization 2C1A                       ??_init_ADC 000F  
                  __Lmediumconst 0000                          int_func 25D0  
       tratar_relogio@Calendario 0011                   ?_DelayFor18TCY 0001  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                __end_of_putrsXLCD 2B3E  
           _controla_despertador 1EB0                        _PORTAbits 000F80  
                      _PORTDbits 000F83  controla_despertador@Despertador 000F  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94              __end_of_checa_botao 0FBA  
                      _TRISDbits 000F95            _convert_float_to_char 23FC  
          __size_of_SetDDRamAddr 0052                     ??_ConvertADC 000F  
             checa_botao@Relogio 0013                 ??_tratar_relogio 0013  
                    ___ftdiv@exp 0036                      ___ftmul@exp 0023  
                    ?_exibir_lcd 0075                   __end_of___ftge 28FE  
           __size_of_Delay10TCYx 0010            ?_controla_despertador 000F  
             __end_of_ConvertADC 2E28                     _SetDDRamAddr 2B3E  
           __size_of_Delay1KTCYx 0010                       floor@expon 0066  
                   ??_SetChanADC 000F             exibir_lcd@Calendario 0079  
             SetDDRamAddr@DDaddr 0013              start_initialization 2BE2  
     convert_float_to_char@valor 0068             __end_of_pisca_cursor 2122  
                     frexp@value 000F                __size_of_BusyXLCD 003A  
                ??_DelayFor18TCY 0010          convert_float_to_char@f1 0072  
        convert_float_to_char@f2 006B          convert_float_to_char@i1 006E  
        convert_float_to_char@i2 0070               __end_of_SetChanADC 2DCC  
              __size_of_OpenXLCD 00A4                         ??___ftge 0015  
                  ?_WriteCmdXLCD 0001                      __pdataBANK0 00C6  
                    _checa_botao 0882                __size_of___altoft 0078  
              __size_of___ftpack 00AE                      __pbssCOMRAM 0042  
              __size_of___lwtoft 0024                    __pcstackBANK0 0060  
         ?_convert_float_to_char 0068                  Delay1KTCYx@unit 000F  
            __size_of_exibir_lcd 0710                      sprintf@flag 002E  
                    sprintf@prec 002F                         ?_BusyADC 0001  
                       ?_ReadADC 000F                __size_of_init_ADC 000E  
               ___lwdiv@dividend 000F                        __pintcode 0008  
                 ??_WriteCmdXLCD 0010                         ?___awdiv 0015  
                       ?___ftadd 0017                         ?___awmod 000F  
                       ?___ftdiv 0029                         ?___ftneg 000F  
                       ?___ftmul 001A                         ?___fttol 0029  
                  ?_Delay10KTCYx 0001                        _flag_time 0049  
                       ?___lwdiv 000F           ??_controla_despertador 0011  
                       ?___lwmod 0016                        _despertar 0048  
          __end_of_WriteDataXLCD 2CE6                         ?_convert 0001  
                    __smallconst 0800                         ?_pic_isr 0001  
            _temperatura_display 00B0                        _init_XLCD 2D68  
               ___lwdiv@quotient 0013                         ?_sprintf 001B  
                 __size_of_floor 00F2                   __size_of_frexp 0078  
                       _LATBbits 000F8A                    ?_DelayPORXLCD 0001  
                       i2u416_40 2636                  OpenXLCD@lcdtype 0014  
                 ??_Delay10KTCYx 000F                       _ADCON0bits 000FC2  
                      _putrsXLCD 2AE2            __size_of_pisca_cursor 0132  
               Delay10KTCYx@unit 0010                       ?_init_XLCD 0001  
                      copy_data0 2BF6                         _BusyXLCD 2CE6  
                 ??_DelayPORXLCD 0010                        frexp@eptr 0012  
                       _OpenXLCD 272E                 __size_of_BusyADC 000C  
               __size_of_ReadADC 000E                         __Hrparam 0000  
                       __Lrparam 0000                    exibir_lcd@str 007D  
                   ??_exibir_lcd 007B                 __size_of___awdiv 0084  
               __size_of___ftadd 01AC                 __size_of___awmod 0070  
               __size_of___ftdiv 00E6                 __size_of___ftneg 0024  
                   _pisca_cursor 1FF0                         ___altoft 29FA  
               __size_of___ftmul 00F4                 __size_of___fttol 00F4  
               __size_of___lwdiv 0052                 __size_of___lwmod 0042  
                       ___ftpack 2680                     _tela_exibida 00AE  
                       ___lwtoft 2D44                       sprintf@val 0030  
                     ?_putrsXLCD 0011                 __size_of_convert 009C  
               __size_of_pic_isr 2678                  ___lwdiv@divisor 0011  
                ___lwdiv@counter 0015                         __ptext10 0FBA  
                       __ptext11 2AE2                         __ptext20 286E  
                       __ptext12 2CA8                         __ptext21 1A18  
                       __ptext13 2CE6                         __ptext30 2D44  
                       __ptext22 29FA                         __ptext14 23FC  
                       __ptext31 2B90                         __ptext23 2D20  
                       __ptext15 1D68                         __ptext40 1EB0  
                       __ptext32 2216                         __ptext24 2A72  
                       __ptext16 2C28                         __ptext33 24EA  
                       __ptext25 28FE                         __ptext17 230A  
                       __ptext34 2680                         __ptext26 2B3E  
                       __ptext18 2982                         __ptext35 2DB6  
                       __ptext27 2E1C                         __ptext19 2122  
                       __ptext36 2DFA                         __ptext28 2DDC  
                       __ptext37 2E24                         __ptext29 27D2  
                       __ptext38 2E08                         __ptext39 0882  
              exibir_lcd@Relogio 0075             __end_of_WriteCmdXLCD 2CA8  
                       _contador 00AC                 __size_of_sprintf 0148  
                       _init_ADC 2DEC               __end_of_exibir_lcd 16CA  
                  __size_of_main 01A4                    ??_Delay10TCYx 000F  
                       int$flags 0050                    ??_Delay1KTCYx 000F  
                   ?_checa_botao 0013                         convert@i 0038  
        ??_convert_float_to_char 0042                       _INTCONbits 000FF2  
                    _qtdDias_mes 00C6                      ??_init_XLCD 0015  
           __end_of_Delay10KTCYx 2DB6                     _valor_tensao 00A7  
                       intlevel2 0000                        sprintf@ap 002C  
                      sprintf@sp 001B                 ___lwmod@dividend 0016  
              SetChanADC@channel 0010            __end_of_DelayFor18TCY 2E24  
        __size_of_tratar_relogio 034E              __end_of_Delay10TCYx 2DEC  
                       sprintf@c 0032                         sprintf@f 001D  
           __end_of_DelayPORXLCD 2E1C                      ??_putrsXLCD 0013  
                ___lwmod@divisor 0018              __end_of_Delay1KTCYx 2DDC  
                ___lwmod@counter 001A            checa_botao@Calendario 0017  
       _controle_tempo_despertar 0042  
